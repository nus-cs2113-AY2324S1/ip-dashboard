[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"# Zran project template","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"    hello! I\u0027m Zran, your personal assistant:)! ","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"    Type in your to dos for the day and press enter! ","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"    Type \u0027help\u0027 to view to list of commands the bot accepts! ","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NaychiMin":6,"-":17}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"# User Guide: Zran","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"Zran acts as your personal assistant and keeps track of your task list through the command line interface!","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"* Quick Start","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"* Features","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"* Command Summary","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":"# Quick Start","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"1. Ensure you have Java 11 or above installed in your computer","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"2. Download the latest IP.jar from [here](https://github.com/NaychiMin/ip/releases).","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"3. Copy the file to the folder you want to use as the home folder for Zran.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use `java -jar IP.jar` command to run the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":"5. If the setup is correct, the output should look similar to the following: ","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":"    hello! I\u0027m Zran, your personal assistant:)!","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":"    Type in your to dos for the day and press enter!","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"    Type \u0027help\u0027 to view to list of commands the bot accepts!","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"# Features","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"### Adding a ToDo Task: `todo`","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"Adds a todo task to the task list.  ","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"Format: `todo TASK_DESCRIPTION`  ","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"Expected Output:","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"todo Cook lunch","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"    Noted! Task added: Cook lunch [ ]","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"    Number of Tasks: 1","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"    List of Tasks:","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"    1. [T][ ] Cook lunch","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":38,"author":{"gitId":"NaychiMin"},"content":"### Adding a Deadline Task: `deadline`","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"NaychiMin"},"content":"Adds a deadline task to the task list.  ","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"NaychiMin"},"content":"For the deadline to be displayed in a DD MMM YYYY format, key in the TASK_DEADLINE as yyyy-mm-dd.   ","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"NaychiMin"},"content":"Otherwise, proceed to key in the TASK_DEADLINE in any desired format.  ","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"NaychiMin"},"content":"Format: `deadline TASK_DESCRIPTION /by TASK_DEADLINE`   ","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"NaychiMin"},"content":"Expected Output:","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"NaychiMin"},"content":"deadline Submit ST2334 quiz /by 2023-10-04","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"NaychiMin"},"content":"    Noted! Task added: Submit ST2334 quiz [ ]","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"NaychiMin"},"content":"    Number of Tasks: 2","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"NaychiMin"},"content":"    List of Tasks:","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"NaychiMin"},"content":"    1. [T][ ] Cook lunch","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"NaychiMin"},"content":"    2. [D][ ] Submit ST2334 quiz (by: 04 Oct 2023)","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":57,"author":{"gitId":"NaychiMin"},"content":"### Adding an Event Task: `event`","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"NaychiMin"},"content":"Adds an event task to the task list.   ","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"NaychiMin"},"content":"For the dates to be displayed in a DD MMM YYYY format, key in the START_OF_EVENT and END_OF_EVENT as yyyy-mm-dd.   ","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"NaychiMin"},"content":"Otherwise, proceed to key in the START_OF_EVENT and END_OF_EVENT in any desired format.   ","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"NaychiMin"},"content":"Format: `event EVENT_DESCRIPTION /from START_OF_EVENT /to END_OF_EVENT`   ","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"NaychiMin"},"content":"Expected Output:","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"NaychiMin"},"content":"event Rugby competition /from 2023-10-14 /to 2023-10-15","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"NaychiMin"},"content":"    Noted! Task added: Rugby competition [ ]","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"NaychiMin"},"content":"    Number of Tasks: 3","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"NaychiMin"},"content":"    List of Tasks:","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"NaychiMin"},"content":"    1. [T][ ] Cook lunch","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"NaychiMin"},"content":"    2. [D][ ] Submit ST2334 quiz (by: 04 Oct 2023)","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"NaychiMin"},"content":"    3. [E][ ] Rugby competition (from: 14 Oct 2023 to: 15 Oct 2023)","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"NaychiMin"},"content":"### List all Tasks: `list`","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"NaychiMin"},"content":"Lists all tasks in the task list.   ","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"NaychiMin"},"content":"Format: `list`   ","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"NaychiMin"},"content":"Expected Output:","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"NaychiMin"},"content":"list","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"NaychiMin"},"content":"    List of Tasks:","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"NaychiMin"},"content":"    1. [T][ ] Cook lunch","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"NaychiMin"},"content":"    2. [D][ ] Submit ST2334 quiz (by: 04 Oct 2023)","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"NaychiMin"},"content":"    3. [E][ ] Rugby competition (from: 14 Oct 2023 to: 15 Oct 2023)","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"NaychiMin"},"content":"### Marking a Task: `mark`","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"NaychiMin"},"content":"Marks the task corresponding to provided task index as done on the task list.  ","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"NaychiMin"},"content":"Format: `mark TASK_INDEX`   ","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"NaychiMin"},"content":"Expected Output:","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"NaychiMin"},"content":"mark 1","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"NaychiMin"},"content":"    Congrats! :D Task marked as done: Cook lunch [X]","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"NaychiMin"},"content":"### Unmarking a Task: `unmark`","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"NaychiMin"},"content":"Marks the task corresponding to provided task index as NOT done on the task list.   ","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"NaychiMin"},"content":"Format: `unmark TASK_INDEX`   ","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"NaychiMin"},"content":"Expected Output:","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"NaychiMin"},"content":"unmark 1","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"NaychiMin"},"content":"    Oopsies! Task unmarked: Cook lunch [ ]","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"NaychiMin"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":118,"author":{"gitId":"NaychiMin"},"content":"Removes the task corresponding to provided task index from the task list.   ","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"NaychiMin"},"content":"Format: `delete TASK_INDEX`   ","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"NaychiMin"},"content":"Expected Output:","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":122,"author":{"gitId":"NaychiMin"},"content":"delete 1","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"NaychiMin"},"content":"    Noted! Task deleted: Cook lunch","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"NaychiMin"},"content":"    Number of Tasks: 2","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"NaychiMin"},"content":"    List of Tasks:","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"NaychiMin"},"content":"    1. [D][ ] Submit ST2334 quiz (by: 04 Oct 2023)","lastModifiedDate":"2023-10-04"},{"lineNumber":129,"author":{"gitId":"NaychiMin"},"content":"    2. [E][ ] Rugby competition (from: 14 Oct 2023 to: 15 Oct 2023)","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"NaychiMin"},"content":"### Finding Tasks: `find`","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"NaychiMin"},"content":"Filters out tasks containing user\u0027s input of choice/keyword.   ","lastModifiedDate":"2023-10-04"},{"lineNumber":136,"author":{"gitId":"NaychiMin"},"content":"Format: `find KEYWORD`   ","lastModifiedDate":"2023-10-04"},{"lineNumber":137,"author":{"gitId":"NaychiMin"},"content":"Expected Output:","lastModifiedDate":"2023-10-04"},{"lineNumber":138,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"NaychiMin"},"content":"find quiz","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":141,"author":{"gitId":"NaychiMin"},"content":"    List of Tasks:","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"NaychiMin"},"content":"    1. [D][ ] Submit ST2334 quiz (by: 04 Oct 2023)","lastModifiedDate":"2023-10-04"},{"lineNumber":143,"author":{"gitId":"NaychiMin"},"content":"    2. [D][ ] Submit IE quiz (by: 08 Oct 2023)","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":147,"author":{"gitId":"NaychiMin"},"content":"### Help: `help`","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"NaychiMin"},"content":"Outputs a list of commands and its format of usage.   ","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"NaychiMin"},"content":"Format: `help`   ","lastModifiedDate":"2023-10-04"},{"lineNumber":151,"author":{"gitId":"NaychiMin"},"content":"Expected Output:","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"NaychiMin"},"content":"help","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"NaychiMin"},"content":"    Help is here! :) ","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"NaychiMin"},"content":"    Listed below are the valid commands: ","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"NaychiMin"},"content":"    - todo ","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"NaychiMin"},"content":"    - deadline ","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"NaychiMin"},"content":"    - event ","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"NaychiMin"},"content":"    - mark ","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"NaychiMin"},"content":"    - unmark ","lastModifiedDate":"2023-10-04"},{"lineNumber":162,"author":{"gitId":"NaychiMin"},"content":"    - delete ","lastModifiedDate":"2023-10-04"},{"lineNumber":163,"author":{"gitId":"NaychiMin"},"content":"    - find ","lastModifiedDate":"2023-10-04"},{"lineNumber":164,"author":{"gitId":"NaychiMin"},"content":"    - help ","lastModifiedDate":"2023-10-04"},{"lineNumber":165,"author":{"gitId":"NaychiMin"},"content":"    - bye ","lastModifiedDate":"2023-10-04"},{"lineNumber":166,"author":{"gitId":"NaychiMin"},"content":"    For the formats below, replace *field* with your input ","lastModifiedDate":"2023-10-04"},{"lineNumber":167,"author":{"gitId":"NaychiMin"},"content":"    TODO: todo *task name* ","lastModifiedDate":"2023-10-04"},{"lineNumber":168,"author":{"gitId":"NaychiMin"},"content":"    DEADLINE: deadline *task name* /by *deadline* ","lastModifiedDate":"2023-10-04"},{"lineNumber":169,"author":{"gitId":"NaychiMin"},"content":"    EVENT: event *event name* /from *start date* /to *end date* ","lastModifiedDate":"2023-10-04"},{"lineNumber":170,"author":{"gitId":"NaychiMin"},"content":"    LIST: list","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"NaychiMin"},"content":"    MARK: mark *existing task index* ","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"NaychiMin"},"content":"    UNMARK: unmark *existing task index* ","lastModifiedDate":"2023-10-04"},{"lineNumber":173,"author":{"gitId":"NaychiMin"},"content":"    DELETE: delete *existing task index* ","lastModifiedDate":"2023-10-04"},{"lineNumber":174,"author":{"gitId":"NaychiMin"},"content":"    FIND: find *keyword*","lastModifiedDate":"2023-10-04"},{"lineNumber":175,"author":{"gitId":"NaychiMin"},"content":"    HELP: help","lastModifiedDate":"2023-10-04"},{"lineNumber":176,"author":{"gitId":"NaychiMin"},"content":"    BYE: bye","lastModifiedDate":"2023-10-04"},{"lineNumber":177,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":178,"author":{"gitId":"NaychiMin"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":180,"author":{"gitId":"NaychiMin"},"content":"### Exit: `bye`","lastModifiedDate":"2023-10-04"},{"lineNumber":181,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":182,"author":{"gitId":"NaychiMin"},"content":"Exits the chatbot.   ","lastModifiedDate":"2023-10-04"},{"lineNumber":183,"author":{"gitId":"NaychiMin"},"content":"Format: `bye`   ","lastModifiedDate":"2023-10-04"},{"lineNumber":184,"author":{"gitId":"NaychiMin"},"content":"Expected Output:","lastModifiedDate":"2023-10-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":186,"author":{"gitId":"NaychiMin"},"content":"bye","lastModifiedDate":"2023-10-04"},{"lineNumber":187,"author":{"gitId":"NaychiMin"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":188,"author":{"gitId":"NaychiMin"},"content":"    Goodbye \u003c3 Have a great day ahead!","lastModifiedDate":"2023-10-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-10-04"},{"lineNumber":190,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":191,"author":{"gitId":"NaychiMin"},"content":"## Command Summary","lastModifiedDate":"2023-10-04"},{"lineNumber":192,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":193,"author":{"gitId":"NaychiMin"},"content":"| Action       | Format, Examples                                              |","lastModifiedDate":"2023-10-04"},{"lineNumber":194,"author":{"gitId":"NaychiMin"},"content":"|--------------|---------------------------------------------------------------|","lastModifiedDate":"2023-10-06"},{"lineNumber":195,"author":{"gitId":"NaychiMin"},"content":"| Add todo     | `todo TASK_DESCRIPTION`\u003cbr\u003eExample: `todo Cook lunch`         |","lastModifiedDate":"2023-10-06"},{"lineNumber":196,"author":{"gitId":"NaychiMin"},"content":"| Add deadline | `deadline TASK_DESCRIPTION /by TASK_DEADLINE`\u003cbr\u003eExample: `deadline Submit ST2334 quiz /by 2023-10-04` |","lastModifiedDate":"2023-10-06"},{"lineNumber":197,"author":{"gitId":"NaychiMin"},"content":"| Add event    | `event EVENT_DESCRIPTION /from START_OF_EVENT /to END_OF_EVENT`\u003cbr\u003eExample: `event Rugby competition /from 2023-10-14 /to 2023-10-15`|","lastModifiedDate":"2023-10-06"},{"lineNumber":198,"author":{"gitId":"NaychiMin"},"content":"| List         | `list`\u003cbr\u003eExample: `list`                                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":199,"author":{"gitId":"NaychiMin"},"content":"| Mark task    | `mark TASK_INDEX`\u003cbr\u003eExample: `mark 1`                          |","lastModifiedDate":"2023-10-06"},{"lineNumber":200,"author":{"gitId":"NaychiMin"},"content":"| Unmark task  | `unmark TASK_INDEX`\u003cbr\u003eExample: `unmark 1`                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":201,"author":{"gitId":"NaychiMin"},"content":"| Delete task  | `delete TASK_INDEX`\u003cbr\u003eExample: `delete 1`                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":202,"author":{"gitId":"NaychiMin"},"content":"| Find         | `find KEYWORD`\u003cbr\u003eExample: `find quiz`                          |","lastModifiedDate":"2023-10-06"},{"lineNumber":203,"author":{"gitId":"NaychiMin"},"content":"| Help         | `help`\u003cbr\u003eExample: `help`                                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":204,"author":{"gitId":"NaychiMin"},"content":"| Exit         | `bye`\u003cbr\u003eExample: `bye`                                        |","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"NaychiMin":181,"-":23}},{"path":"src/main/java/app/Zran.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package app;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"import commands.Commands;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.TaskList;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Storage;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":"import userinputs.Parser;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":"import userinputs.Ui;","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":" * The entry point of the Zran application.","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":"public class Zran {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"     * Creates a Zran object using the provided file path.","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"     * @param filePath The file path for storing and loading tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"    public Zran(String filePath) {","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"NaychiMin"},"content":"     * Executes the Zran application, handles user commands and saves","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"NaychiMin"},"content":"     * tasks before exiting the application","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"NaychiMin"},"content":"     * @throws IOException If an I/O error occurs during the execution.","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"NaychiMin"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"NaychiMin"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"NaychiMin"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"NaychiMin"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"NaychiMin"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"NaychiMin"},"content":"            ui.showLine();","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"NaychiMin"},"content":"            Commands c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"NaychiMin"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"NaychiMin"},"content":"            isExit \u003d c.isExitCommand(fullCommand);","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":57,"author":{"gitId":"NaychiMin"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-09-29"},{"lineNumber":58,"author":{"gitId":"NaychiMin"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-09-29"},{"lineNumber":59,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":61,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"NaychiMin"},"content":"     * The primary method to initiate the Zran application.","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"NaychiMin"},"content":"     * @throws IOException If an I/O error interrupts the execution process.","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"NaychiMin"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-09-29"},{"lineNumber":67,"author":{"gitId":"NaychiMin"},"content":"        new Zran(\"./data/tasks.txt\").run();","lastModifiedDate":"2023-09-29"},{"lineNumber":68,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":69,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-29"},{"lineNumber":70,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"NaychiMin":70}},{"path":"src/main/java/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package commands;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"import exceptions.UserInputValidation;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"import exceptions.ZranErrorMessages;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"import exceptions.ZranExceptions;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.*;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":"import userinputs.Ui;","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":" * Add a task to the task list in the Zran application.","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":" * Extends the abstract Commands class.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":"public class AddTaskCommand extends Commands {","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"     * Constructs an AddTaskCommand instance with the given input.","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"     * @param input User\u0027s input into the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"    public AddTaskCommand(String input) {","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"        super(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"     * Executes the add task command by calling the \u0027addTask\u0027 function.","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"     * @param tasks   The task list of class \u0027TaskList\u0027 where the task is to be added.","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"     * @param ui      The ui component of class \u0027UI\u0027 for displaying messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"     * @param storage The storage component of class \u0027Storage\u0027 for saving task data.","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"    @Override","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"        addTask(tasks, ui);","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"NaychiMin"},"content":"     * Adds a task to the task list based on the user\u0027s input by calling","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"NaychiMin"},"content":"     * the \u0027createTaskFromInput\u0027 function.","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"NaychiMin"},"content":"     * @param tasks The task list of class \u0027TaskList\u0027 where the task is to be added.","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"NaychiMin"},"content":"     * @param ui    The ui component of class \u0027UI\u0027 for displaying messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"NaychiMin"},"content":"    private void addTask(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"NaychiMin"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"NaychiMin"},"content":"            Task task \u003d createTaskFromInput(input);","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"NaychiMin"},"content":"            tasks.listItems.add(task);","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"NaychiMin"},"content":"            Ui.echo(tasks.listItems, task, input);","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"NaychiMin"},"content":"        } catch (ZranExceptions e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"NaychiMin"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"NaychiMin"},"content":"     * Creates a task object based on the user\u0027s input and command type.","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"NaychiMin"},"content":"     * @param input User\u0027s input into the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"NaychiMin"},"content":"     * @return A Task object of the created task.","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"NaychiMin"},"content":"     * @throws ZranExceptions If an error occurs during task creation.","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"NaychiMin"},"content":"    private Task createTaskFromInput(String input) throws ZranExceptions {","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"NaychiMin"},"content":"        if (input.toLowerCase().startsWith(Commands.TODO_TASK_COMMAND)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"NaychiMin"},"content":"            return createTodoTask(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":65,"author":{"gitId":"NaychiMin"},"content":"        } else if (input.toLowerCase().startsWith(Commands.DEADLINE_TASK_COMMAND)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"NaychiMin"},"content":"            return createDeadlineTask(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":67,"author":{"gitId":"NaychiMin"},"content":"        } else if (input.toLowerCase().startsWith(Commands.EVENT_TASK_COMMAND)){","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"NaychiMin"},"content":"            return createEventTask(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":69,"author":{"gitId":"NaychiMin"},"content":"        } else {","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"NaychiMin"},"content":"            throw new ZranExceptions(ZranErrorMessages.UNRECOGNISED_COMMAND.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":71,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":72,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":73,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":74,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"NaychiMin"},"content":"     * Generates a \u0027ToDos\u0027 task object based on user input.","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"NaychiMin"},"content":"     * This function validates user inputs, ensuring they are in the correct format.","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"NaychiMin"},"content":"     * @param input User\u0027s input provided to the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"NaychiMin"},"content":"     * @return An instance of the \u0027ToDos\u0027 class.","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"NaychiMin"},"content":"     * @throws ZranExceptions If an error arises during the creation of a \u0027ToDos\u0027 object.","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"NaychiMin"},"content":"    private Task createTodoTask(String input) throws ZranExceptions {","lastModifiedDate":"2023-09-29"},{"lineNumber":84,"author":{"gitId":"NaychiMin"},"content":"        String description \u003d UserInputValidation.validateAddTodoCommand(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":85,"author":{"gitId":"NaychiMin"},"content":"        return new ToDos(description);","lastModifiedDate":"2023-09-29"},{"lineNumber":86,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":87,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":88,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"NaychiMin"},"content":"     * Generates a \u0027Deadline\u0027 task object based on user input.","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"NaychiMin"},"content":"     * Validates the user\u0027s input, ensuring it is in the correct format.","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"NaychiMin"},"content":"     * @param input User\u0027s input provided to the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"NaychiMin"},"content":"     * @return An instance of the \u0027Deadline\u0027 class.","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"NaychiMin"},"content":"     * @throws ZranExceptions If an error occurs during the creation of a \u0027Deadline\u0027 object.","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"NaychiMin"},"content":"    private Task createDeadlineTask(String input) throws ZranExceptions {","lastModifiedDate":"2023-09-29"},{"lineNumber":97,"author":{"gitId":"NaychiMin"},"content":"        String[] taskInfo \u003d UserInputValidation.validateAddDeadlineCommand(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":98,"author":{"gitId":"NaychiMin"},"content":"        String description \u003d UserInputValidation.validateDeadlineDescription(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":99,"author":{"gitId":"NaychiMin"},"content":"        String by;","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"NaychiMin"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"NaychiMin"},"content":"            by \u003d UserInputValidation.validateDate(taskInfo[1]).toString();","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"NaychiMin"},"content":"        } catch (ZranExceptions e){","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"NaychiMin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"NaychiMin"},"content":"            by \u003d taskInfo[1];","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"NaychiMin"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2023-09-29"},{"lineNumber":108,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":109,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":110,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"NaychiMin"},"content":"     * Produces an \u0027Event\u0027 task object based on user input.","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"NaychiMin"},"content":"     * Validates the user\u0027s input, ensuring it is in the correct format.","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"NaychiMin"},"content":"     * @param input User\u0027s input provided to the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"NaychiMin"},"content":"     * @return An instance of the \u0027Event\u0027 class.","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"NaychiMin"},"content":"     * @throws ZranExceptions If an error occurs during the creation of an \u0027Event\u0027 object.","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"NaychiMin"},"content":"    private Task createEventTask(String input) throws ZranExceptions {","lastModifiedDate":"2023-09-29"},{"lineNumber":119,"author":{"gitId":"NaychiMin"},"content":"        String[] taskInfo \u003d UserInputValidation.validateAddEventCommand(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":120,"author":{"gitId":"NaychiMin"},"content":"        String from;","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"NaychiMin"},"content":"        String to;","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"NaychiMin"},"content":"        String description \u003d UserInputValidation.validateEventDescription(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":123,"author":{"gitId":"NaychiMin"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"NaychiMin"},"content":"            from \u003d UserInputValidation.validateDate(taskInfo[1]).toString();","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"NaychiMin"},"content":"            to \u003d UserInputValidation.validateDate(taskInfo[2]).toString();","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"NaychiMin"},"content":"        } catch (ZranExceptions e){","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"NaychiMin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"NaychiMin"},"content":"            from \u003d taskInfo[1];","lastModifiedDate":"2023-10-04"},{"lineNumber":129,"author":{"gitId":"NaychiMin"},"content":"            to \u003d taskInfo[2];","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"NaychiMin"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2023-09-29"},{"lineNumber":132,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":133,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":134,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-29"},{"lineNumber":135,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"NaychiMin":135}},{"path":"src/main/java/commands/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package commands;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Task;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Storage;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.TaskList;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":"import userinputs.Ui;","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":" * The base class for all command classes in the Zran application.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":" * Commands perform operations on the task list.","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":" *","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":" * \u003cp\u003e Each command class that extends this base class implements","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":" * the execute method to carry out its specific functionality.","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":" *","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":" * \u003cp\u003e The class also defines constants for different command types","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"public class Commands {","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"    public static final String DELETE_TASK_COMMAND \u003d \"delete \";","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"    public static final String MARK_TASK_COMMAND \u003d \"mark \";","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"    public static final String UNMARK_TASK_COMMAND \u003d \"unmark \";","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"    public static final String LIST_TASK_COMMAND \u003d \"list\";","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"    public static final String EXIT_BOT_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"    public static final String TODO_TASK_COMMAND \u003d \"todo\";","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"    public static final String DEADLINE_TASK_COMMAND \u003d \"deadline\";","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"    public static final String DEADLINE_DATE_COMMAND \u003d \"/by \";","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"    public static final String EVENT_TASK_COMMAND \u003d \"event\";","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"    public static final String EVENT_TASK_START \u003d \"/from \";","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"    public static final String EVENT_TASK_END \u003d \"/to \";","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"    public static final String USER_HELP_COMMAND \u003d \"help\";","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"    public static final String USER_FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"    protected String input;","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"NaychiMin"},"content":"    public Commands(String input) {","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"NaychiMin"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"NaychiMin"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {}","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"NaychiMin"},"content":"     * Determines if the provided user\u0027s input is an exit command.","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"NaychiMin"},"content":"     * @param input User\u0027s input provided to the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"NaychiMin"},"content":"     * @return true if the input is an exit command, false otherwise.","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"NaychiMin"},"content":"    public boolean isExitCommand(String input) {","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"NaychiMin"},"content":"        return input.equalsIgnoreCase(Commands.EXIT_BOT_COMMAND);","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"NaychiMin":52}},{"path":"src/main/java/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package commands;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"import exceptions.UserInputValidation;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"import exceptions.ZranErrorMessages;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"import exceptions.ZranExceptions;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Task;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.TaskList;","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Storage;","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"import userinputs.Ui;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":" * Deletes a task from the task list in the Zran application.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":" * Extends the abstract Commands class.","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"public class DeleteTaskCommand extends Commands {","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"     * Constructs a DeleteTaskCommand instance with the given input.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"     * @param input User\u0027s input into the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"    public DeleteTaskCommand(String input) {","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"        super(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"     * Executes the delete task command by removing a task from the task list.","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"     * @param tasks   The task list of class \u0027TaskList\u0027 where the task is to be deleted.","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"     * @param ui      The ui component of class \u0027UI\u0027 for displaying messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"     * @param storage The storage component of class \u0027Storage\u0027 for saving task data.","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"    @Override","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"        deleteTask(tasks, ui);","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"NaychiMin"},"content":"     * Removes a task from the task list based on the provided user input.","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"NaychiMin"},"content":"     * This function validates user inputs, ensuring they are in the correct format.","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"NaychiMin"},"content":"     * @param tasks The task list of class \u0027TaskList\u0027 where the task is to be deleted.","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"NaychiMin"},"content":"     * @param ui    The ui component of class \u0027UI\u0027 for displaying messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"NaychiMin"},"content":"    private void deleteTask(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"NaychiMin"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"NaychiMin"},"content":"            int deleteIndex \u003d UserInputValidation.validateTaskIndex(input, tasks, Commands.DELETE_TASK_COMMAND);","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"NaychiMin"},"content":"            Task deletedTask \u003d tasks.listItems.remove(deleteIndex);","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"NaychiMin"},"content":"            Ui.echo(tasks.listItems, deletedTask, input);","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"NaychiMin"},"content":"        } catch (ZranExceptions e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"NaychiMin"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":56,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"NaychiMin":56}},{"path":"src/main/java/commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package commands;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"import exceptions.UserInputValidation;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"import exceptions.ZranExceptions;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Event;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Storage;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Task;","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.TaskList;","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"import userinputs.Ui;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":" * Find tasks in the task list that match a given keyword.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":" * Extends the abstract Commands class.","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"public class FindTaskCommand extends Commands{","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"    public FindTaskCommand(String input) {","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"        super(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"     * Executes the find task command, by calling the findTask function.","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"     * @param tasks   The task list of class \u0027TaskList\u0027 where the task is to be deleted.","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"     * @param ui      The ui component of class \u0027UI\u0027 for displaying messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"     * @param storage The storage component of class \u0027Storage\u0027 for saving task data.","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"    @Override","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"        String key \u003d input.substring(Commands.USER_FIND_COMMAND.length()).trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"        filteredTasks \u003d findTask(key, tasks.listItems.toArray(new Task[0]));","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"        if(!filteredTasks.isEmpty()){","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"            Ui.echo(filteredTasks);","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"        } else{","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"NaychiMin"},"content":"            System.out.println(\"    Oopsies! Looks like there are no tasks with \" +","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"NaychiMin"},"content":"                    key + \"!\");","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"NaychiMin"},"content":"            Ui.showLine();","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"NaychiMin"},"content":"     * Filters tasks in the task list by a keyword.","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"NaychiMin"},"content":"     * @param key   The keyword to search for in task descriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"NaychiMin"},"content":"     * @param items The array of tasks to search within.","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"NaychiMin"},"content":"     * @return An ArrayList of tasks matching the given keyword.","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"NaychiMin"},"content":"    public static ArrayList\u003cTask\u003e findTask(String key, Task... items) {","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"NaychiMin"},"content":"        // decided to experiment with the use of Varargs","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"NaychiMin"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"NaychiMin"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"NaychiMin"},"content":"        for (Task item : items) {","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"NaychiMin"},"content":"            if (item !\u003d null \u0026\u0026 item.getDescription().contains(key)) {","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"NaychiMin"},"content":"                filteredTasks.add(item);","lastModifiedDate":"2023-09-29"},{"lineNumber":56,"author":{"gitId":"NaychiMin"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":57,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":58,"author":{"gitId":"NaychiMin"},"content":"        return filteredTasks;","lastModifiedDate":"2023-09-29"},{"lineNumber":59,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":60,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"NaychiMin":60}},{"path":"src/main/java/commands/HelpTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package commands;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Task;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Storage;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.TaskList;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":"import userinputs.Ui;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":" * Command to display help information in the Zran application","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":" * Extends the abstract Commands class.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":"public class HelpTaskCommand extends Commands {","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"     * Constructs a HelpTaskCommand instance with the given input.","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"     * @param input User\u0027s input into the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"    public HelpTaskCommand(String input) {","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"        super(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"     *  Executes the help task command by showing help information.","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"     * @param tasks   The task list of class \u0027TaskList\u0027. (Not used in this function)","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"     * @param ui      The ui component of class \u0027UI\u0027 for displaying messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"     * @param storage The storage component of class \u0027Storage\u0027 for saving task data. (Not used in this function)","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"    @Override","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"        Ui.showHelp();","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"NaychiMin":37}},{"path":"src/main/java/commands/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package commands;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Task;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Storage;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.TaskList;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":"import userinputs.Ui;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":" * Lists all tasks from the task list in the Zran application.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":" * Extends the abstract Commands class.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":"public class ListTaskCommand extends Commands {","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":"     * Constructs a ListTaskCommand instance with the given input.","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"     * @param input User\u0027s input into the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"    public ListTaskCommand(String input) {","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"        super(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"     * Executes the list task command by displaying the list of tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"     * @param tasks   The task list of class \u0027TaskList\u0027 to be displayed.","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"     * @param ui      The ui component of class \u0027UI\u0027 for displaying messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"     * @param storage The storage component of class \u0027Storage\u0027 for saving task data. (Not used in this function)","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"    @Override","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"        Ui.echo(tasks.listItems);","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"NaychiMin":35}},{"path":"src/main/java/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package commands;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"import exceptions.UserInputValidation;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"import exceptions.ZranErrorMessages;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"import exceptions.ZranExceptions;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Task;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.TaskList;","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Storage;","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"import userinputs.Ui;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":" * Marks a task as done from the task list in the Zran application.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":" * Extends the abstract Commands class.","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":"public class MarkTaskCommand extends Commands{","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"     * Constructs a MarkTaskCommand instance with the given input.","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"     * @param input User\u0027s input into the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"    public MarkTaskCommand(String input){","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"        super(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"     * Executes the mark task command by calling the \u0027markTask\u0027 function.","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"     * @param tasks   The task list of class \u0027TaskList\u0027 where the task is to be added.","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"     * @param ui      The ui component of class \u0027UI\u0027 for displaying messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"     * @param storage The storage component of class \u0027Storage\u0027 for saving task data. (Not used in this function)","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"    @Override","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"        markTask(tasks, ui);","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"NaychiMin"},"content":"     * Marks a task from the task list as done based on the provided user input.","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"NaychiMin"},"content":"     * This function validates user inputs, ensuring they are in the correct format.","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"NaychiMin"},"content":"     * @param tasks The task list of class \u0027TaskList\u0027 where the task is to be added.","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"NaychiMin"},"content":"     * @param ui    The ui component of class \u0027UI\u0027 for displaying messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"NaychiMin"},"content":"    private void markTask(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"NaychiMin"},"content":"        try{","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"NaychiMin"},"content":"            int taskIndex \u003d UserInputValidation.validateTaskIndex(input, tasks, Commands.MARK_TASK_COMMAND);","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"NaychiMin"},"content":"            Task task \u003d tasks.listItems.get(taskIndex);","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"NaychiMin"},"content":"            task.setAsDone();","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"NaychiMin"},"content":"            Ui.echo(task, task.isDone);","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"NaychiMin"},"content":"        } catch (ZranExceptions e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"NaychiMin"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"NaychiMin":55}},{"path":"src/main/java/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package commands;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"import exceptions.UserInputValidation;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"import exceptions.ZranErrorMessages;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"import exceptions.ZranExceptions;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Task;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.TaskList;","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Storage;","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"import userinputs.Ui;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":" * Marks a task as not done from the task list in the Zran application.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":" * Extends the abstract Commands class.","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"public class UnmarkTaskCommand extends Commands {","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"     * Constructs an UnmarkTaskCommand instance with the given input.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"     * @param input User\u0027s input into the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"    public UnmarkTaskCommand(String input) {","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"        super(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"     * Executes the unmark task command by calling the \u0027unmarkTask\u0027 function.","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"     * @param tasks   The task list of class \u0027TaskList\u0027 where the task is to be added.","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"     * @param ui      The ui component of class \u0027UI\u0027 for displaying messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"     * @param storage The storage component of class \u0027Storage\u0027 for saving task data. (Not used in this function)","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"    @Override","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"        unmarkTask(tasks, ui);","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"NaychiMin"},"content":"     * Marks a task from the task list as not done based on the provided user input.","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"NaychiMin"},"content":"     * This function validates user inputs, ensuring they are in the correct format.","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"NaychiMin"},"content":"     * @param tasks The task list of class \u0027TaskList\u0027 where the task is to be added.","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"NaychiMin"},"content":"     * @param ui    The ui component of class \u0027UI\u0027 for displaying messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"NaychiMin"},"content":"    private void unmarkTask(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"NaychiMin"},"content":"        int taskIndex;","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"NaychiMin"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"NaychiMin"},"content":"            taskIndex \u003d UserInputValidation.validateTaskIndex(input, tasks, Commands.UNMARK_TASK_COMMAND);","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"NaychiMin"},"content":"            Task task \u003d tasks.listItems.get(taskIndex);","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"NaychiMin"},"content":"            task.setAsNotDone();","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"NaychiMin"},"content":"            Ui.echo(task, task.isDone);","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"NaychiMin"},"content":"        } catch (ZranExceptions e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"NaychiMin"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":56,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":57,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":58,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"NaychiMin":58}},{"path":"src/main/java/exceptions/UserInputValidation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package exceptions;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"import commands.Commands;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.TaskList;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":" * Class for validating user inputs in the Zran application.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":" * Provides methods for validating task indices, user input descriptions, and date formats.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":" * Throws ZranExceptions with specific error messages when validation fails.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":"public class UserInputValidation {","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"     * Validates and extracts the task index from user input.","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"     * @param input User\u0027s input into the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"     * @param tasks   The task list of class \u0027TaskList\u0027.","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"     * @param command The command associated with the input.","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"     * @return The validated task index.","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"     * @throws ZranExceptions If validation fails with specific error messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"    public static int validateTaskIndex(String input, TaskList tasks, String command) throws ZranExceptions {","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"        String taskIndex \u003d extractTaskIndex(input, command);","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"        return parseIndex(taskIndex, tasks.listItems.size());","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"    private static String extractTaskIndex(String input, String command) throws ZranExceptions {","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"        String taskIndex \u003d input.substring(command.length()).trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"        if (taskIndex.isEmpty()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"            throw new ZranExceptions(ZranErrorMessages.EMPTY_TASK_INDEX.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"        return taskIndex;","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"NaychiMin"},"content":"    private static int parseIndex(String indexStr, int listSize) throws ZranExceptions {","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"NaychiMin"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"NaychiMin"},"content":"            int index \u003d Integer.parseInt(indexStr) - 1;","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"NaychiMin"},"content":"            if (index \u003c 0 || index \u003e\u003d listSize) {","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"NaychiMin"},"content":"                throw new ZranExceptions(ZranErrorMessages.INVALID_TASK_INDEX.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"NaychiMin"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"NaychiMin"},"content":"            return index;","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"NaychiMin"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"NaychiMin"},"content":"            throw new ZranExceptions(ZranErrorMessages.INVALID_TASK_INDEX.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"NaychiMin"},"content":"     * Validates and extracts the task description for a task of class \u0027ToDos\u0027 from user\u0027s input.","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"NaychiMin"},"content":"     * @param input   The user input to extract the task description from.","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"NaychiMin"},"content":"     * @return The validated task description.","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"NaychiMin"},"content":"     * @throws ZranExceptions If validation fails with specific error messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"NaychiMin"},"content":"    public static String validateAddTodoCommand(String input) throws ZranExceptions {","lastModifiedDate":"2023-09-29"},{"lineNumber":58,"author":{"gitId":"NaychiMin"},"content":"        return validateTaskDescription(input, Commands.TODO_TASK_COMMAND);","lastModifiedDate":"2023-09-29"},{"lineNumber":59,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":60,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":61,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"NaychiMin"},"content":"     * Validates and extracts the task description for a task of class \u0027Deadline\u0027 from user\u0027s input.","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"NaychiMin"},"content":"     * @param input   The user input to extract the task description from.","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"NaychiMin"},"content":"     * @return The validated task description.","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"NaychiMin"},"content":"     * @throws ZranExceptions If validation fails with specific error messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"NaychiMin"},"content":"    public static String[] validateAddDeadlineCommand(String input) throws ZranExceptions {","lastModifiedDate":"2023-09-29"},{"lineNumber":69,"author":{"gitId":"NaychiMin"},"content":"        String[] taskInfo \u003d new String[]{ \"\", \"\"};","lastModifiedDate":"2023-09-29"},{"lineNumber":70,"author":{"gitId":"NaychiMin"},"content":"        taskInfo[0] \u003d validateTaskDescription(input, Commands.DEADLINE_TASK_COMMAND);","lastModifiedDate":"2023-09-29"},{"lineNumber":71,"author":{"gitId":"NaychiMin"},"content":"        taskInfo[1] \u003d validateDeadlineDate(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":72,"author":{"gitId":"NaychiMin"},"content":"        return taskInfo;","lastModifiedDate":"2023-09-29"},{"lineNumber":73,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":74,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":75,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"NaychiMin"},"content":"     * Validates and extracts the task description for a task of class \u0027Event\u0027 from user\u0027s input.","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"NaychiMin"},"content":"     * @param input   The user input to extract the task description from.","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"NaychiMin"},"content":"     * @return The validated task description.","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"NaychiMin"},"content":"     * @throws ZranExceptions If validation fails with specific error messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"NaychiMin"},"content":"    public static String[] validateAddEventCommand(String input) throws ZranExceptions {","lastModifiedDate":"2023-09-29"},{"lineNumber":83,"author":{"gitId":"NaychiMin"},"content":"        String[] taskInfo \u003d new String[]{ \"\", \"\", \"\"};","lastModifiedDate":"2023-09-29"},{"lineNumber":84,"author":{"gitId":"NaychiMin"},"content":"        taskInfo[0] \u003d validateTaskDescription(input, Commands.EVENT_TASK_COMMAND);","lastModifiedDate":"2023-09-29"},{"lineNumber":85,"author":{"gitId":"NaychiMin"},"content":"        return validateEventDuration(input, taskInfo);","lastModifiedDate":"2023-09-29"},{"lineNumber":86,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":87,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":88,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"NaychiMin"},"content":"     * Validates the task description extracted from user input by ensuring that it is not empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"NaychiMin"},"content":"     * @param input   The user input to extract the task description from.","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"NaychiMin"},"content":"     * @param command The command associated with the input.","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"NaychiMin"},"content":"     * @return The validated task description.","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"NaychiMin"},"content":"     * @throws ZranExceptions If validation fails with specific error messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"NaychiMin"},"content":"    private static String validateTaskDescription(String input, String command) throws ZranExceptions {","lastModifiedDate":"2023-09-29"},{"lineNumber":97,"author":{"gitId":"NaychiMin"},"content":"        String description \u003d extractTaskDescription(input, command);","lastModifiedDate":"2023-09-29"},{"lineNumber":98,"author":{"gitId":"NaychiMin"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-29"},{"lineNumber":99,"author":{"gitId":"NaychiMin"},"content":"            throw new ZranExceptions(ZranErrorMessages.INVALID_TASK_DESCRIPTION.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":100,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":101,"author":{"gitId":"NaychiMin"},"content":"        return description;","lastModifiedDate":"2023-09-29"},{"lineNumber":102,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":103,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":104,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"NaychiMin"},"content":"     * Validates and extracts the task description from user input.","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"NaychiMin"},"content":"     * @param input   The user input to extract the task description from.","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"NaychiMin"},"content":"     * @param command The command associated with the input.","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"NaychiMin"},"content":"     * @return The validated task description.","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"NaychiMin"},"content":"     * @throws ZranExceptions If validation fails with specific error messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"NaychiMin"},"content":"    private static String extractTaskDescription(String input, String command) throws ZranExceptions {","lastModifiedDate":"2023-09-29"},{"lineNumber":113,"author":{"gitId":"NaychiMin"},"content":"        int descriptionIndex \u003d input.indexOf(command) + command.length();","lastModifiedDate":"2023-09-29"},{"lineNumber":114,"author":{"gitId":"NaychiMin"},"content":"        if (descriptionIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-29"},{"lineNumber":115,"author":{"gitId":"NaychiMin"},"content":"            throw new ZranExceptions(ZranErrorMessages.INVALID_TASK_DESCRIPTION.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":116,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":117,"author":{"gitId":"NaychiMin"},"content":"        return input.substring(descriptionIndex).trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":118,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":119,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":120,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"NaychiMin"},"content":"     * Validates and extracts the deadline date for a Deadline task from user input.","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"NaychiMin"},"content":"     * @param input The user input to extract the deadline date from.","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"NaychiMin"},"content":"     * @return The validated deadline date.","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"NaychiMin"},"content":"     * @throws ZranExceptions If validation fails with specific error messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"NaychiMin"},"content":"    private static String validateDeadlineDate(String input) throws ZranExceptions {","lastModifiedDate":"2023-09-29"},{"lineNumber":128,"author":{"gitId":"NaychiMin"},"content":"        int byIndex \u003d input.indexOf(Commands.DEADLINE_DATE_COMMAND);","lastModifiedDate":"2023-09-29"},{"lineNumber":129,"author":{"gitId":"NaychiMin"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-29"},{"lineNumber":130,"author":{"gitId":"NaychiMin"},"content":"            throw new ZranExceptions(ZranErrorMessages.INVALID_DEADLINE_FORMAT.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":131,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":132,"author":{"gitId":"NaychiMin"},"content":"        String by \u003d input.substring(byIndex + Commands.DEADLINE_DATE_COMMAND.length()).trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":133,"author":{"gitId":"NaychiMin"},"content":"        if (by.isEmpty()) {","lastModifiedDate":"2023-09-29"},{"lineNumber":134,"author":{"gitId":"NaychiMin"},"content":"            throw new ZranExceptions(ZranErrorMessages.EMPTY_DEADLINE.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":135,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":136,"author":{"gitId":"NaychiMin"},"content":"        return by;","lastModifiedDate":"2023-09-29"},{"lineNumber":137,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":138,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":139,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"NaychiMin"},"content":"     * Validates the deadline task description extracted from user input by ensuring that it is not empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":141,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"NaychiMin"},"content":"     * @param input   The user input to extract the task description from.","lastModifiedDate":"2023-10-04"},{"lineNumber":143,"author":{"gitId":"NaychiMin"},"content":"     * @return The validated task description.","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"NaychiMin"},"content":"     * @throws ZranExceptions If validation fails with specific error messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"NaychiMin"},"content":"    public static String validateDeadlineDescription(String input) throws ZranExceptions {","lastModifiedDate":"2023-09-29"},{"lineNumber":147,"author":{"gitId":"NaychiMin"},"content":"        int byIndex \u003d input.indexOf(Commands.DEADLINE_DATE_COMMAND);","lastModifiedDate":"2023-09-29"},{"lineNumber":148,"author":{"gitId":"NaychiMin"},"content":"        String description \u003d input.substring(Commands.DEADLINE_TASK_COMMAND.length(), byIndex).trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":149,"author":{"gitId":"NaychiMin"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-29"},{"lineNumber":150,"author":{"gitId":"NaychiMin"},"content":"            throw new ZranExceptions(ZranErrorMessages.INVALID_TASK_DESCRIPTION.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":151,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":152,"author":{"gitId":"NaychiMin"},"content":"        return description;","lastModifiedDate":"2023-09-29"},{"lineNumber":153,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":154,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":155,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"NaychiMin"},"content":"     * Validates and extracts the event duration for an Event task from user input.","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"NaychiMin"},"content":"     * @param input     The user input to extract the event duration from.","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"NaychiMin"},"content":"     * @param taskInfo  An array to store the validated event duration information.","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"NaychiMin"},"content":"     * @return The validated task information array.","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"NaychiMin"},"content":"     * @throws ZranExceptions If validation fails with specific error messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":162,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":163,"author":{"gitId":"NaychiMin"},"content":"    private static String[] validateEventDuration(String input, String[] taskInfo) throws ZranExceptions {","lastModifiedDate":"2023-09-29"},{"lineNumber":164,"author":{"gitId":"NaychiMin"},"content":"        int fromIndex \u003d input.indexOf(Commands.EVENT_TASK_START);","lastModifiedDate":"2023-09-29"},{"lineNumber":165,"author":{"gitId":"NaychiMin"},"content":"        int toIndex \u003d input.indexOf(Commands.EVENT_TASK_END);","lastModifiedDate":"2023-09-29"},{"lineNumber":166,"author":{"gitId":"NaychiMin"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-29"},{"lineNumber":167,"author":{"gitId":"NaychiMin"},"content":"            throw new ZranExceptions(ZranErrorMessages.INVALID_EVENT_FORMAT.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":168,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":169,"author":{"gitId":"NaychiMin"},"content":"        String from \u003d input.substring(fromIndex + Commands.EVENT_TASK_START.length(), toIndex).trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":170,"author":{"gitId":"NaychiMin"},"content":"        String to \u003d input.substring(toIndex + Commands.EVENT_TASK_END.length()).trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":171,"author":{"gitId":"NaychiMin"},"content":"        if (from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2023-09-29"},{"lineNumber":172,"author":{"gitId":"NaychiMin"},"content":"            throw new ZranExceptions(ZranErrorMessages.EMPTY_EVENT_DURATION.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":173,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":174,"author":{"gitId":"NaychiMin"},"content":"        taskInfo[1] \u003d from;","lastModifiedDate":"2023-09-29"},{"lineNumber":175,"author":{"gitId":"NaychiMin"},"content":"        taskInfo[2] \u003d to;","lastModifiedDate":"2023-09-29"},{"lineNumber":176,"author":{"gitId":"NaychiMin"},"content":"        return taskInfo;","lastModifiedDate":"2023-09-29"},{"lineNumber":177,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":178,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":179,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":180,"author":{"gitId":"NaychiMin"},"content":"     * Validates the event task description extracted from user input by","lastModifiedDate":"2023-10-04"},{"lineNumber":181,"author":{"gitId":"NaychiMin"},"content":"     * ensuring that it is not empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":182,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":183,"author":{"gitId":"NaychiMin"},"content":"     * @param input   The user input to extract the task description from.","lastModifiedDate":"2023-10-04"},{"lineNumber":184,"author":{"gitId":"NaychiMin"},"content":"     * @return The validated task description.","lastModifiedDate":"2023-10-04"},{"lineNumber":185,"author":{"gitId":"NaychiMin"},"content":"     * @throws ZranExceptions If validation fails with specific error messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":186,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":187,"author":{"gitId":"NaychiMin"},"content":"    public static String validateEventDescription(String input) throws ZranExceptions {","lastModifiedDate":"2023-09-29"},{"lineNumber":188,"author":{"gitId":"NaychiMin"},"content":"        int fromIndex \u003d input.indexOf(Commands.EVENT_TASK_START);","lastModifiedDate":"2023-09-29"},{"lineNumber":189,"author":{"gitId":"NaychiMin"},"content":"        String description \u003d input.substring(Commands.EVENT_TASK_COMMAND.length(), fromIndex).trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":190,"author":{"gitId":"NaychiMin"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-29"},{"lineNumber":191,"author":{"gitId":"NaychiMin"},"content":"            throw new ZranExceptions(ZranErrorMessages.INVALID_TASK_DESCRIPTION.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":192,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":193,"author":{"gitId":"NaychiMin"},"content":"        return description;","lastModifiedDate":"2023-09-29"},{"lineNumber":194,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":195,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":196,"author":{"gitId":"NaychiMin"},"content":"    public static LocalDate validateDate(String input) throws ZranExceptions {","lastModifiedDate":"2023-09-29"},{"lineNumber":197,"author":{"gitId":"NaychiMin"},"content":"        LocalDate parsedDate;","lastModifiedDate":"2023-09-29"},{"lineNumber":198,"author":{"gitId":"NaychiMin"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":199,"author":{"gitId":"NaychiMin"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-09-29"},{"lineNumber":200,"author":{"gitId":"NaychiMin"},"content":"            parsedDate \u003d LocalDate.parse(input, formatter);","lastModifiedDate":"2023-09-29"},{"lineNumber":201,"author":{"gitId":"NaychiMin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":202,"author":{"gitId":"NaychiMin"},"content":"            throw new ZranExceptions(ZranErrorMessages.INVALID_DATE_FORMAT.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":203,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":204,"author":{"gitId":"NaychiMin"},"content":"        return parsedDate;","lastModifiedDate":"2023-09-29"},{"lineNumber":205,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":206,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"NaychiMin":206}},{"path":"src/main/java/exceptions/ZranErrorMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package exceptions;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":" * Enumerates error messages for Zran application exceptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":" * Each constant is an error scenario, paired with its respective error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":"public enum ZranErrorMessages {","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"    INVALID_TASK_DESCRIPTION(\"    Invalid task command: Empty name of the task. \\n\" +","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"            \"    Please key in the description of the task or type help :)\"),","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"    INVALID_DEADLINE_FORMAT(\"    Invalid deadline command: missing \u0027/by\u0027. \\n\" +","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"            \"    Please key in the deadline after \u0027/by\u0027 or type help :)\"),","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":"    EMPTY_DEADLINE(\"    Invalid event command: Empty deadline of the task. \\n\" +","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":"            \"    Please key in the deadline of the task or type help :)\"),","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":"    INVALID_EVENT_FORMAT(\"    Invalid event command: missing \u0027/from\u0027 or \u0027/to\u0027. \\n\" +","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":"            \"    Please key in the duration of the event using \u0027/from\u0027 and \u0027/to\u0027 or type help :)\"),","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":"    EMPTY_EVENT_DURATION(\"    Invalid event command: Empty duration of the event. \\n\" +","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"            \"    Please key in the duration of the event or type help :)\"),","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"    UNRECOGNISED_COMMAND(\"    Invalid command: Unknown command type. \\n\" +","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"            \"    Please use a valid command or type help :)\"),","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"    EMPTY_TASK_INDEX(\"    Invalid (un)mark command: Missing task index to (un)mark/delete. \\n \" +","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"            \"   Please enter an existing index to (un)mark/delete or type help :)\"),","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"    INVALID_TASK_INDEX(\"    Invalid command: Invalid task index to (un)mark/delete. \\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"            \"    Please enter an existing task index to (un)mark/delete or type help :)\"),","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"    INVALID_DATE_FORMAT(\"    You can also enter a date in the format yyyy-MM-dd (e.g 2023-01-01) \\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"            \"    to display it in dd MMM yyyy format (e.g 1 JAN 2023) \" +","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"            \"or type help :)\");","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"    public final String message;","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"    ZranErrorMessages(String message) {","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"NaychiMin":33}},{"path":"src/main/java/exceptions/ZranExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package exceptions;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":" * Exception class for Zran application-specific exceptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":" * Extends the standard Exception class.","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":"public class ZranExceptions extends Exception{","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"    public ZranExceptions(String message) {","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"        super(message);","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"NaychiMin":11}},{"path":"src/main/java/taskmanagement/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package taskmanagement;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":" * Deadline class in Zran application.","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":" * It represents a task of class \u0027Deadline\u0027 which consists of an additional variable \u0027by\u0027.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":" * Extends the base Task class.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":"    protected String by;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":"     * Constructs an instance of \u0027Deadline\u0027 with the given description and deadline.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"     * @param by          The deadline for the task.","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"        super(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"        taskType \u003d \"D\";","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"     * Constructs an instance of \u0027Deadline\u0027 with the given description and deadline.","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"     * @param by          The deadline for the task.","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"        super(description);","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"        taskType \u003d \"D\";","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"NaychiMin"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"NaychiMin"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"NaychiMin"},"content":"        LocalDate displayedBy;","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"NaychiMin"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"NaychiMin"},"content":"            displayedBy \u003d LocalDate.parse(by);","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"NaychiMin"},"content":"            return \"[\" + taskType + \"]\" + \"[\" + getStatusIcon() + \"] \" + description + \" (by: \" + displayedBy.format(formatter)  + \")\";","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"NaychiMin"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"NaychiMin"},"content":"            return \"[\" + taskType + \"]\" + \"[\" + getStatusIcon() + \"] \" + description + \" (by: \" + by + \")\";","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"NaychiMin"},"content":"    public String getBy(){  return by;  }","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"NaychiMin":50}},{"path":"src/main/java/taskmanagement/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package taskmanagement;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":" * Event class in Zran application.","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":" * It represents a task of class \u0027Event\u0027 which consists of two additional variables, \u0027to\u0027 and \u0027from\u0027.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":" * Extends the base Task class.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":"    protected String from;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":"    protected String to;","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":"    ","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":"     /**","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":"     * Constructs an instance of \u0027Event\u0027 with the given description and deadline.","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"     * @param from        The start date of the event.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"     * @param to          The end date of the event.","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"        super(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"        taskType \u003d \"E\";","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"     * Constructs an instance of \u0027Event\u0027 with the given description and deadline.","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"     * @param from        The start date of the event.","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"     * @param to          The end date of the event.","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"NaychiMin"},"content":"    public Event(String description, String from, String to, Boolean isDone) {","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"NaychiMin"},"content":"        super(description);","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"NaychiMin"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"NaychiMin"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"NaychiMin"},"content":"        taskType \u003d \"E\";","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"NaychiMin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"NaychiMin"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"NaychiMin"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"NaychiMin"},"content":"        LocalDate displayedFrom;","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"NaychiMin"},"content":"        LocalDate displayedTo;","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"NaychiMin"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"NaychiMin"},"content":"            displayedFrom \u003d LocalDate.parse(from);","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"NaychiMin"},"content":"            displayedTo \u003d LocalDate.parse(to);","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"NaychiMin"},"content":"            return \"[\" + taskType + \"]\" + \"[\" + getStatusIcon() + \"] \" + description + \" (from: \" + displayedFrom.format(formatter) + \" to: \" + displayedTo.format(formatter) + \")\";","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"NaychiMin"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"NaychiMin"},"content":"            return \"[\" + taskType + \"]\" + \"[\" + getStatusIcon() + \"] \" + description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"NaychiMin"},"content":"    public String getTo(){ return to; }","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"NaychiMin"},"content":"    public String getFrom(){ return from; }","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"NaychiMin":58}},{"path":"src/main/java/taskmanagement/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package taskmanagement;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"import java.io.File;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":" * Handles the storing of tasks in the Zran application.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":" * Manages the initialization, loading, and saving of tasks to a user specified file.","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"public class Storage {","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"     * The default folder path for storing data files.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"    private static final String FOLDER_PATH \u003d \"./data\";","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"    private String filePath;","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"     * Constructs an instance of Storage with the user specified file path.","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"     * @param filePath The file path for saving and loading of tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"     * Creates the necessary folder and file if they do not exist.","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"     * @throws IOException If an I/O error occurs during initialization.","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"NaychiMin"},"content":"    public void init() throws IOException {","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"NaychiMin"},"content":"        File folder \u003d new File(FOLDER_PATH);","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"NaychiMin"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"NaychiMin"},"content":"            folder.mkdirs();","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"NaychiMin"},"content":"        File data \u003d new File(filePath);","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"NaychiMin"},"content":"        if (!data.exists()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"NaychiMin"},"content":"            if (!data.createNewFile()) {","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"NaychiMin"},"content":"                throw new IOException(\"Unable to create a new file.\");","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"NaychiMin"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"NaychiMin"},"content":"     * Loads tasks from user specified file.","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"NaychiMin"},"content":"     * @return An ArrayList of tasks loaded from the storage file.","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"NaychiMin"},"content":"     * @throws IOException If an I/O error occurs during loading.","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"NaychiMin"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2023-09-29"},{"lineNumber":59,"author":{"gitId":"NaychiMin"},"content":"        init();","lastModifiedDate":"2023-09-29"},{"lineNumber":60,"author":{"gitId":"NaychiMin"},"content":"        ArrayList\u003cTask\u003e storedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"NaychiMin"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2023-09-29"},{"lineNumber":62,"author":{"gitId":"NaychiMin"},"content":"        try (Scanner scanner \u003d new Scanner(dataFile);) {","lastModifiedDate":"2023-09-29"},{"lineNumber":63,"author":{"gitId":"NaychiMin"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-09-29"},{"lineNumber":64,"author":{"gitId":"NaychiMin"},"content":"                String data \u003d scanner.nextLine();","lastModifiedDate":"2023-09-29"},{"lineNumber":65,"author":{"gitId":"NaychiMin"},"content":"                Task task \u003d parseData(data);","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"NaychiMin"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"NaychiMin"},"content":"                    storedTasks.add(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"NaychiMin"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"NaychiMin"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"NaychiMin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":71,"author":{"gitId":"NaychiMin"},"content":"            throw new IOException(\"File not found: \" + filePath, e);","lastModifiedDate":"2023-09-29"},{"lineNumber":72,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":73,"author":{"gitId":"NaychiMin"},"content":"        return storedTasks;","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"NaychiMin"},"content":"     * Parses data from a string and creates a Task object.","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"NaychiMin"},"content":"     * Used in loading stored tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"NaychiMin"},"content":"     * @param data The string containing task data.","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"NaychiMin"},"content":"     * @return A Task object created from the parsed data.","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"NaychiMin"},"content":"    private Task parseData(String data) {","lastModifiedDate":"2023-09-29"},{"lineNumber":84,"author":{"gitId":"NaychiMin"},"content":"        String[] taskData \u003d data.split(\"\\\\|\");","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"NaychiMin"},"content":"        String taskType \u003d taskData[0].trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"NaychiMin"},"content":"        String description \u003d taskData[2].trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"NaychiMin"},"content":"        boolean isDone \u003d \"1\".equals(taskData[1].trim());","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"NaychiMin"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"NaychiMin"},"content":"        switch (taskType) {","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"NaychiMin"},"content":"        case \"T\":","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"NaychiMin"},"content":"            task \u003d new ToDos(description, isDone);","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"NaychiMin"},"content":"            break;","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"NaychiMin"},"content":"        case \"D\":","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"NaychiMin"},"content":"            String by \u003d taskData[3].trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"NaychiMin"},"content":"            task \u003d new Deadline(description, by, isDone);","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"NaychiMin"},"content":"            break;","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"NaychiMin"},"content":"        case \"E\":","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"NaychiMin"},"content":"            String from \u003d taskData[3].trim();","lastModifiedDate":"2023-09-27"},{"lineNumber":100,"author":{"gitId":"NaychiMin"},"content":"            String to \u003d taskData[4].trim();","lastModifiedDate":"2023-09-27"},{"lineNumber":101,"author":{"gitId":"NaychiMin"},"content":"            task \u003d new Event(description, from, to, isDone);","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"NaychiMin"},"content":"            break;","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"NaychiMin"},"content":"        default:","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"NaychiMin"},"content":"            break;","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"NaychiMin"},"content":"        return task;","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"NaychiMin"},"content":"     * Saves tasks to user specified storage file.","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"NaychiMin"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"NaychiMin"},"content":"     * @throws IOException If an I/O error occurs during saving.","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"NaychiMin"},"content":"    public void saveTasks(TaskList tasks) throws IOException {","lastModifiedDate":"2023-09-29"},{"lineNumber":116,"author":{"gitId":"NaychiMin"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath)) {","lastModifiedDate":"2023-09-29"},{"lineNumber":117,"author":{"gitId":"NaychiMin"},"content":"            for (Task task : tasks.listItems) {","lastModifiedDate":"2023-09-29"},{"lineNumber":118,"author":{"gitId":"NaychiMin"},"content":"                String line \u003d toString(task);","lastModifiedDate":"2023-09-27"},{"lineNumber":119,"author":{"gitId":"NaychiMin"},"content":"                fw.write(line + System.lineSeparator());","lastModifiedDate":"2023-09-29"},{"lineNumber":120,"author":{"gitId":"NaychiMin"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":121,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"NaychiMin"},"content":"    private String toString(Task task) {","lastModifiedDate":"2023-09-29"},{"lineNumber":125,"author":{"gitId":"NaychiMin"},"content":"        if (task instanceof ToDos) {","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"NaychiMin"},"content":"            ToDos todo \u003d (ToDos) task;","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"NaychiMin"},"content":"            return todo.getTaskType() + \" | \" + task.getStatus() + \" | \" + task.getDescription();","lastModifiedDate":"2023-09-29"},{"lineNumber":128,"author":{"gitId":"NaychiMin"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"NaychiMin"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"NaychiMin"},"content":"            return deadline.getTaskType() + \" | \" + deadline.getStatus() + \" | \" +","lastModifiedDate":"2023-09-29"},{"lineNumber":131,"author":{"gitId":"NaychiMin"},"content":"                    task.getDescription() + \" | \" + deadline.getBy();","lastModifiedDate":"2023-09-29"},{"lineNumber":132,"author":{"gitId":"NaychiMin"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"NaychiMin"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"NaychiMin"},"content":"            return event.getTaskType() + \" | \" + event.getStatus() + \" | \" +","lastModifiedDate":"2023-09-29"},{"lineNumber":135,"author":{"gitId":"NaychiMin"},"content":"                    task.getDescription() + \" | \" + event.getFrom() + \" | \" + event.getTo();","lastModifiedDate":"2023-09-29"},{"lineNumber":136,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"NaychiMin"},"content":"        return \"\";","lastModifiedDate":"2023-09-29"},{"lineNumber":138,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"NaychiMin":139}},{"path":"src/main/java/taskmanagement/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package taskmanagement;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":" * The base class for all task classes in the Zran application.","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":" * Represents a task in the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"public class Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"    protected String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"    protected String taskType;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"    public boolean isDone;","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":"     * Default constructor for the Task class.","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":"     * Enables the class to be used as a superclass.","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"    public Task(){","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"     * Constructs an instance of Task with the given description.","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"    public Task(String description){","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"        return (isDone? \"X\" : \" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"    public String getStatus(){ return (isDone? \"1\" : \"0\");  }","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"NaychiMin"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"NaychiMin"},"content":"        return (taskType);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"NaychiMin"},"content":"    public void setAsDone(){","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"NaychiMin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"NaychiMin"},"content":"    public void setAsNotDone(){","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"NaychiMin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"NaychiMin"},"content":"    public String getDescription() {return (description);}","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"NaychiMin":51}},{"path":"src/main/java/taskmanagement/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package taskmanagement;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":" * Represents a list of tasks in the Zran application.","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":" * Manages a collection of Task objects.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"public class TaskList {","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"    public ArrayList\u003cTask\u003e listItems;","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":"     * Default constructor for TaskList.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":"    public TaskList(){","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"        this.listItems \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"     * Constructs a TaskList instance with the given list of tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"     * @param items The initial list of tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"    public TaskList(ArrayList\u003cTask\u003e items){","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"        this.listItems\u003ditems;","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"NaychiMin":29}},{"path":"src/main/java/taskmanagement/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package taskmanagement;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":" * ToDos class in Zran application.","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":" * It represents a task of class \u0027ToDos\u0027","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":" * Extends the base Task class.","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"     * Constructs an instance of \u0027ToDos\u0027 with the given description and deadline.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":"     * @param description The description of the todos task.","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":"    public ToDos(String description) {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":"        super(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"        taskType \u003d \"T\";","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"     * Constructs an instance of \u0027ToDos\u0027 with the given description and deadline.","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"     * @param description The description of the todos task.","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"    public ToDos(String description, boolean isDone) {","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"        super(description);","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"        taskType \u003d \"T\";","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"        return \"[\" + taskType + \"]\" + \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"NaychiMin":37}},{"path":"src/main/java/userinputs/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package userinputs;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"import commands.*;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":" * Parser class for the Zran application.","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":" * Parses user\u0027s input to identify user\u0027s action.","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":" * Creates an instance of the corresponding command class.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"public class Parser {","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"    public static Commands parse(String input) {","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":"        if (input.toLowerCase().startsWith(Commands.MARK_TASK_COMMAND)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":"            return new MarkTaskCommand(input);","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":"        } else if (input.toLowerCase().startsWith(Commands.UNMARK_TASK_COMMAND)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":"            return new UnmarkTaskCommand(input);","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":"        } else if (input.toLowerCase().startsWith(Commands.DELETE_TASK_COMMAND)){","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"            return new DeleteTaskCommand(input);","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"        } else if(input.toLowerCase().startsWith(Commands.LIST_TASK_COMMAND)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"            return new ListTaskCommand(input);","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"        } else if (input.toLowerCase().startsWith(Commands.USER_HELP_COMMAND)){","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"            return new HelpTaskCommand(input);","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"        } else if (input.toLowerCase().startsWith(Commands.EXIT_BOT_COMMAND)){","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"            return new Commands(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"        } else if (input.toLowerCase().startsWith(Commands.USER_FIND_COMMAND)){","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"            return new FindTaskCommand(input);","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"        } else {","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"            return new AddTaskCommand(input);","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"NaychiMin":30}},{"path":"src/main/java/userinputs/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package userinputs;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"import commands.Commands;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":"import taskmanagement.Task;","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":" * UI class for the Zran application to handle user\u0027s input and output.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":" * Handles user interaction, displays messages, and reads user input.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":"public class Ui {","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"     * Constructs a UI instance with a Scanner for user input.","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"    public Ui() {","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"     * Displays the welcome message.","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"        showLine();","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"        System.out.println(UserMessages.WELCOME_MESSAGE.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"        showLine();","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"     * Receives the user  input.","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"     * @return The user\u0027s input into Zran.","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"NaychiMin"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"NaychiMin"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"NaychiMin"},"content":"     * Displays an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"NaychiMin"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"NaychiMin"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"NaychiMin"},"content":"        //showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"NaychiMin"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"NaychiMin"},"content":"        showLine();","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"NaychiMin"},"content":"     * Displays a line separator.","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"NaychiMin"},"content":"    public static void showLine() {","lastModifiedDate":"2023-09-29"},{"lineNumber":56,"author":{"gitId":"NaychiMin"},"content":"        System.out.println(UserMessages.LINE.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":57,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"NaychiMin"},"content":"     * Displays the goodbye message.","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"NaychiMin"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"NaychiMin"},"content":"        System.out.println(UserMessages.GOODBYE_MESSAGE.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":64,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":65,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":66,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"NaychiMin"},"content":"     * Displays an error message for loading tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"NaychiMin"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-09-29"},{"lineNumber":70,"author":{"gitId":"NaychiMin"},"content":"        System.out.println(UserMessages.LOADING_ERROR.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":71,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":72,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":73,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"NaychiMin"},"content":"     * Displays the help message.","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"NaychiMin"},"content":"    public static void showHelp(){","lastModifiedDate":"2023-09-29"},{"lineNumber":77,"author":{"gitId":"NaychiMin"},"content":"        //showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"NaychiMin"},"content":"        System.out.println(UserMessages.HELP_MESSAGE.message);","lastModifiedDate":"2023-09-29"},{"lineNumber":79,"author":{"gitId":"NaychiMin"},"content":"        showLine();","lastModifiedDate":"2023-09-29"},{"lineNumber":80,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":81,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":82,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"NaychiMin"},"content":"     * Outputs to user after adding or deleting a task.","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"NaychiMin"},"content":"     * @param items The list of tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"NaychiMin"},"content":"     * @param task  The task that was added or deleted.","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"NaychiMin"},"content":"     * @param input The user\u0027s input into Zran.","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"NaychiMin"},"content":"    public static void echo(ArrayList\u003cTask\u003e items, Task task, String input) {","lastModifiedDate":"2023-09-29"},{"lineNumber":90,"author":{"gitId":"NaychiMin"},"content":"        String action \u003d input.startsWith(Commands.DELETE_TASK_COMMAND) ? \"deleted\" : \"added\";","lastModifiedDate":"2023-09-29"},{"lineNumber":91,"author":{"gitId":"NaychiMin"},"content":"        String statusMessage \u003d input.startsWith(Commands.DELETE_TASK_COMMAND) ? \"\" : \" [\" + task.getStatusIcon() + \"]\";","lastModifiedDate":"2023-09-29"},{"lineNumber":92,"author":{"gitId":"NaychiMin"},"content":"        String output \u003d \"    Noted! Task \" + action + \": \" + task.getDescription() + statusMessage + \"\\n\" +","lastModifiedDate":"2023-09-29"},{"lineNumber":93,"author":{"gitId":"NaychiMin"},"content":"                \"    Number of Tasks: \" + items.size();","lastModifiedDate":"2023-09-29"},{"lineNumber":94,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":95,"author":{"gitId":"NaychiMin"},"content":"        printAndEcho(output, items);","lastModifiedDate":"2023-09-29"},{"lineNumber":96,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":97,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":98,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"NaychiMin"},"content":"     * Outputs to user after marking or unmarking a task.","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"NaychiMin"},"content":"     * @param task   The task that was marked or unmarked.","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"NaychiMin"},"content":"     * @param isDone True if the task is marked as done, false otherwise.","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"NaychiMin"},"content":"    public static void echo(Task task, boolean isDone) {","lastModifiedDate":"2023-09-29"},{"lineNumber":105,"author":{"gitId":"NaychiMin"},"content":"        String action \u003d isDone ? \"marked as done\" : \"unmarked\";","lastModifiedDate":"2023-09-29"},{"lineNumber":106,"author":{"gitId":"NaychiMin"},"content":"        String output \u003d isDone ? \"    Congrats! :D Task \" + action + \": \" + task.getDescription() + \" [\" + task.getStatusIcon() + \"]\"","lastModifiedDate":"2023-09-29"},{"lineNumber":107,"author":{"gitId":"NaychiMin"},"content":"                : \"    Oopsies! Task \" + action + \": \" + task.getDescription() + \" [\" + task.getStatusIcon() + \"]\";","lastModifiedDate":"2023-09-29"},{"lineNumber":108,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":109,"author":{"gitId":"NaychiMin"},"content":"        printAndEcho(output);","lastModifiedDate":"2023-09-29"},{"lineNumber":110,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":111,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":112,"author":{"gitId":"NaychiMin"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"NaychiMin"},"content":"     * Outputs the list of tasks to users.","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"NaychiMin"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"NaychiMin"},"content":"     * @param items The list of tasks to display.","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"NaychiMin"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"NaychiMin"},"content":"    public static void echo(ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2023-09-29"},{"lineNumber":118,"author":{"gitId":"NaychiMin"},"content":"        //showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"NaychiMin"},"content":"        System.out.println(\"    List of Tasks:\");","lastModifiedDate":"2023-09-29"},{"lineNumber":120,"author":{"gitId":"NaychiMin"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-09-29"},{"lineNumber":121,"author":{"gitId":"NaychiMin"},"content":"        for (Task item : items) {","lastModifiedDate":"2023-09-29"},{"lineNumber":122,"author":{"gitId":"NaychiMin"},"content":"            if (item !\u003d null) {","lastModifiedDate":"2023-09-29"},{"lineNumber":123,"author":{"gitId":"NaychiMin"},"content":"                System.out.print(\"    \" + ++index + \". \");","lastModifiedDate":"2023-09-29"},{"lineNumber":124,"author":{"gitId":"NaychiMin"},"content":"                System.out.println(item.toString());","lastModifiedDate":"2023-09-29"},{"lineNumber":125,"author":{"gitId":"NaychiMin"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":126,"author":{"gitId":"NaychiMin"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":127,"author":{"gitId":"NaychiMin"},"content":"        showLine();","lastModifiedDate":"2023-09-29"},{"lineNumber":128,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":129,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":130,"author":{"gitId":"NaychiMin"},"content":"    private static void printAndEcho(String output) {","lastModifiedDate":"2023-09-29"},{"lineNumber":131,"author":{"gitId":"NaychiMin"},"content":"        //showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":132,"author":{"gitId":"NaychiMin"},"content":"        System.out.println(output);","lastModifiedDate":"2023-09-29"},{"lineNumber":133,"author":{"gitId":"NaychiMin"},"content":"        showLine();","lastModifiedDate":"2023-09-29"},{"lineNumber":134,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":135,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":136,"author":{"gitId":"NaychiMin"},"content":"    private static void printAndEcho(String output, ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2023-09-29"},{"lineNumber":137,"author":{"gitId":"NaychiMin"},"content":"        printAndEcho(output);","lastModifiedDate":"2023-09-29"},{"lineNumber":138,"author":{"gitId":"NaychiMin"},"content":"        echo(items);","lastModifiedDate":"2023-09-29"},{"lineNumber":139,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":140,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":141,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":142,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"NaychiMin":142}},{"path":"src/main/java/userinputs/UserMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NaychiMin"},"content":"package userinputs;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"NaychiMin"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"NaychiMin"},"content":" * Enumerates messages to be displayed to users for Zran application exceptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"NaychiMin"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"NaychiMin"},"content":"public enum UserMessages {","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"NaychiMin"},"content":"    WELCOME_MESSAGE(\"    hello! I\u0027m Zran, your personal assistant:)! \\n\" +","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"NaychiMin"},"content":"            \"    Type in your to dos for the day and press enter! \\n \" +","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"NaychiMin"},"content":"            \"   Type \u0027help\u0027 to view to list of commands the bot accepts! \"),","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"NaychiMin"},"content":"    GOODBYE_MESSAGE(\"    Goodbye \u003c3 Have a great day ahead!\"),","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"NaychiMin"},"content":"    LOADING_ERROR(\"    Unable to load the file. Please check your filepath. :)\"),","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"NaychiMin"},"content":"    HELP_MESSAGE(\"    Help is here! :) \\n\" +","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"NaychiMin"},"content":"            \"    Listed below are the valid commands: \\n\" +","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"NaychiMin"},"content":"            \"    - todo \\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"NaychiMin"},"content":"            \"    - deadline \\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"NaychiMin"},"content":"            \"    - event \\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"NaychiMin"},"content":"            \"    - mark \\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"NaychiMin"},"content":"            \"    - unmark \\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"NaychiMin"},"content":"            \"    - delete \\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"NaychiMin"},"content":"            \"    - find \\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"NaychiMin"},"content":"            \"    - help \\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"NaychiMin"},"content":"            \"    - bye \\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"NaychiMin"},"content":"            \"    For the formats below, replace *field* with your input \\n\" +","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"NaychiMin"},"content":"            \"    TODO: todo *task name* \\n\" +","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"NaychiMin"},"content":"            \"    DEADLINE: deadline *task name* /by *deadline* \\n\" +","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"NaychiMin"},"content":"            \"    EVENT: event *event name* /from *start date* /to *end date* \\n\" +","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"NaychiMin"},"content":"            \"    LIST: list\\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"NaychiMin"},"content":"            \"    MARK: mark *existing task index* \\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"NaychiMin"},"content":"            \"    UNMARK: unmark *existing task index* \\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"NaychiMin"},"content":"            \"    DELETE: delete *existing task index* \\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"NaychiMin"},"content":"            \"    FIND: find *keyword*\\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"NaychiMin"},"content":"            \"    HELP: help\\n\" +","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"NaychiMin"},"content":"            \"    BYE: bye\"),","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"NaychiMin"},"content":"    LINE(\"    ____________________________________________________________\"),","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"NaychiMin"},"content":"    ;","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"NaychiMin"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"NaychiMin"},"content":"    public final String message;","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"NaychiMin"},"content":"    UserMessages(String message) {","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"NaychiMin"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"NaychiMin"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"NaychiMin"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"NaychiMin":42}}]
