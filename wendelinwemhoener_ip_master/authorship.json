[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"# User Guide for Careo","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"## Quick Description","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"Careo is a simple task tracking software that supports managing todos, events and deadlines.","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"It\u0027s a CLI tool with a focus on simplicity and speed of use.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"Careo offers the following commands (hyperlinked to their description):","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"- [`todo`](#todo---adds-a-todo-type-task-to-the-task-list)","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"- [`event`](#event---adds-an-event-type-task-to-the-task-list)","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"- [`deadline`](#deadline---adds-a-deadline-type-task-to-the-task-list)","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"- [`mark`](#mark---marks-a-stored-task-as-done)","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"- [`unmark`](#unmark---marks-a-stored-task-as-not-done)","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"- [`list`](#list---shows-all-stored-tasks)","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"- [`delete`](#delete---deletes-a-stored-task-from-the-task-list)","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"- [`find`](#find---searches-for-tasks-matching-a-specified-keyword)","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"- [`bye`](#bye---exit-careo-and-store-task-list-to-disk)","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"## Persistence","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"Careo stores data accross multiple sessions. That means that if you add ","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"tasks on one day, they will still be there the next time you use Careo. Using ","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"this feature requires ALWAYS PROPERLY EXITING Careo by using the `bye` command.","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"### Notes about the command format:","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"e.g. in `/by DATE`, DATE is a parameter which can be used as e.g. `/by Sunday`","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"### `todo` - Adds a \"ToDo\" task","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"Given the description of a ToDo, Careo adds it to the task list and prints a confirmation.","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"Command format: `todo TODO_DESCRIPTION`","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"Expected outcome:","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"Based on the description, a new ToDo is created and added to the task list; i.e. if we first run `todo Buy milk`, this would be the output:","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"      [T][ ] Buy milk","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"    Now you have 1 task in the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"### `event` - Adds an \"Event\" task","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"Given the description and from and to dates of an Event, Careo adds it to the task list and prints a confirmation.","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"Command format: `event EVENT_DESCRIPTION /from FROM_DATE /to TO_DATE`","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"Expected outcome:","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"Based on the description, from and to, a new Event is created and added to the task list; i.e. if we first run `event Ballroom /from 8pm /to 11:30`, this would be the output:","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"      [E][ ] Ballroom (from: 8pm to: 11:30)","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"    Now you have 1 task in the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"### `deadline` - Adds a \"Deadline\" task","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"Given the description and date of a Deadline, Careo adds it to the task list and prints a confirmation.","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"Command format: `deadline DEADLINE_DESCRIPTION /by BY_DATE`","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"Expected outcome:","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"Based on the description and by date, a new Deadline is created and added to the task list; i.e. if we first run `deadline submit quiz /by today`, this would be the output:","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"      [D][ ] submit quiz (by: today)","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"    Now you have 1 task in the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"### `mark` - Marks a stored task as done","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"Given the index of a task, Careo marks the task at this index as done and prints a confirmation.","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"If an invalid index is given, an error message is printed.","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"Command format: `mark TASK_INDEX`","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"Expected outcome:","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"wendelinwemhoener"},"content":"The task at the given index is marked; i.e. if we first ran `todo Buy milk` and then `mark 1`, this would be the output:","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"wendelinwemhoener"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"wendelinwemhoener"},"content":"    Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"wendelinwemhoener"},"content":"      [T][X] Buy milk","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"wendelinwemhoener"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"wendelinwemhoener"},"content":"### `unmark` - Marks a stored task as not done","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"wendelinwemhoener"},"content":"Given the index of a task, Careo marks the task at this index as not done and prints a confirmation.","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"wendelinwemhoener"},"content":"If an invalid index is given, an error message is printed.","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"wendelinwemhoener"},"content":"Command format: `unmark TASK_INDEX`","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"wendelinwemhoener"},"content":"Expected outcome:","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"wendelinwemhoener"},"content":"The task at the given index is marked; i.e. if we first ran `todo Buy milk` and then `mark 1` and then `unmark 1`, this would be the output:","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":112,"author":{"gitId":"wendelinwemhoener"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":113,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"wendelinwemhoener"},"content":"    OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"wendelinwemhoener"},"content":"      [T][ ] Buy milk","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":117,"author":{"gitId":"wendelinwemhoener"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":118,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":119,"author":{"gitId":"wendelinwemhoener"},"content":"### `list` - Shows all stored tasks","lastModifiedDate":"2023-10-05"},{"lineNumber":120,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"wendelinwemhoener"},"content":"Careo prints out all stored tasks along with their index and type","lastModifiedDate":"2023-10-05"},{"lineNumber":122,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":123,"author":{"gitId":"wendelinwemhoener"},"content":"Command format: `list`","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"wendelinwemhoener"},"content":"Expected outcome: ","lastModifiedDate":"2023-10-05"},{"lineNumber":126,"author":{"gitId":"wendelinwemhoener"},"content":"All stored tasks are printed out; i.e. if we first ran ","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"wendelinwemhoener"},"content":"`todo Buy milk` and `deadline do quiz /by friday`, this would be the output:","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":129,"author":{"gitId":"wendelinwemhoener"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":131,"author":{"gitId":"wendelinwemhoener"},"content":"    1.[T][ ] Buy milk","lastModifiedDate":"2023-10-05"},{"lineNumber":132,"author":{"gitId":"wendelinwemhoener"},"content":"    2.[D][ ] do quiz (by: friday)","lastModifiedDate":"2023-10-05"},{"lineNumber":133,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":134,"author":{"gitId":"wendelinwemhoener"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":136,"author":{"gitId":"wendelinwemhoener"},"content":"### `delete` - Deletes a stored task from the task list","lastModifiedDate":"2023-10-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":138,"author":{"gitId":"wendelinwemhoener"},"content":"Given the index of a task, Careo delets the task at this index and prints a confirmation.","lastModifiedDate":"2023-10-05"},{"lineNumber":139,"author":{"gitId":"wendelinwemhoener"},"content":"If an invalid index is given, an error message is printed.","lastModifiedDate":"2023-10-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":141,"author":{"gitId":"wendelinwemhoener"},"content":"Command format: `delete TASK_INDEX`","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-10-05"},{"lineNumber":144,"author":{"gitId":"wendelinwemhoener"},"content":"The task at the given index is deleted; i.e. if we first ran `todo Buy milk` and then `delete 1`, this would be the output:","lastModifiedDate":"2023-10-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":146,"author":{"gitId":"wendelinwemhoener"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":147,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":148,"author":{"gitId":"wendelinwemhoener"},"content":"    Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-10-05"},{"lineNumber":149,"author":{"gitId":"wendelinwemhoener"},"content":"      [T][ ] Buy milk","lastModifiedDate":"2023-10-05"},{"lineNumber":150,"author":{"gitId":"wendelinwemhoener"},"content":"    Now you have 0 tasks in the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":151,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":152,"author":{"gitId":"wendelinwemhoener"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":153,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":154,"author":{"gitId":"wendelinwemhoener"},"content":"### `find` - Searches for tasks matching a specified keyword","lastModifiedDate":"2023-10-05"},{"lineNumber":155,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":156,"author":{"gitId":"wendelinwemhoener"},"content":"Given a keyword, Careo searches through all tasks to find possible matches ","lastModifiedDate":"2023-10-06"},{"lineNumber":157,"author":{"gitId":"wendelinwemhoener"},"content":"and returns all tasks whose description contain the specified keyword.","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":159,"author":{"gitId":"wendelinwemhoener"},"content":"Command format: `find KEYWORD`","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":161,"author":{"gitId":"wendelinwemhoener"},"content":"Expected outcome:","lastModifiedDate":"2023-10-05"},{"lineNumber":162,"author":{"gitId":"wendelinwemhoener"},"content":"The task at the given index is marked; i.e. if we first ran `todo Buy milk` and then `deadline view millenium bridge /by soon` and then `find mil`, this would be the output:","lastModifiedDate":"2023-10-05"},{"lineNumber":163,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":164,"author":{"gitId":"wendelinwemhoener"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":165,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":166,"author":{"gitId":"wendelinwemhoener"},"content":"    Here are the matching tasks: ","lastModifiedDate":"2023-10-05"},{"lineNumber":167,"author":{"gitId":"wendelinwemhoener"},"content":"    [T][ ] Buy milk","lastModifiedDate":"2023-10-05"},{"lineNumber":168,"author":{"gitId":"wendelinwemhoener"},"content":"    [D][ ] view millenium bridge (by: soon)","lastModifiedDate":"2023-10-05"},{"lineNumber":169,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":170,"author":{"gitId":"wendelinwemhoener"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":171,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":172,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":173,"author":{"gitId":"wendelinwemhoener"},"content":"### `bye` - Exits Careo and stores tasks to disk","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":175,"author":{"gitId":"wendelinwemhoener"},"content":"Careo prints a goodbye message and saved its current task list to disk.","lastModifiedDate":"2023-10-05"},{"lineNumber":176,"author":{"gitId":"wendelinwemhoener"},"content":"Using this command is REQUIRED for persistence to function properly.","lastModifiedDate":"2023-10-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":178,"author":{"gitId":"wendelinwemhoener"},"content":"Command format: `bye`","lastModifiedDate":"2023-10-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":181,"author":{"gitId":"wendelinwemhoener"},"content":"Careo exits correctly; i.e. if we first ran `todo Buy milk` and then `bye`, this would be the output:","lastModifiedDate":"2023-10-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":184,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":185,"author":{"gitId":"wendelinwemhoener"},"content":"    Bye. Hope to see you again soon!","lastModifiedDate":"2023-10-05"},{"lineNumber":186,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"wendelinwemhoener":165,"-":22}},{"path":"src/main/java/careo/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"package careo;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":" * Represents a certain kind of task due at a certain date.","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"    /** By when the task must be completed */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"    protected String by;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"     * Retrieves the by date of this deadline.","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return The date as string.","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"    public String getBy() {","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"        return by;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"     * Instantiates a deadline given its description and by date.","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param description Textual description of the deadline.","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param by The time of the deadline.","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"     * Returns type, description and by time of a deadline.","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return A string representation of the deadline.","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wendelinwemhoener":39}},{"path":"src/main/java/careo/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"package careo;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":" * Represents the main instance encapsulating all the parts of Careo.","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"    /** Central storage used for persistence of tasks */","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"    private Storage storage;","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"    /** Used for storing and querying user tasks */","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"    /** UI that is responsible for user input and output */","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"    /** Parser containing the business logic for processing user inputs */","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"    private Parser parser;","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     * Instantiates a Duke instance with access to a file of persisted tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param filePath The path of the file used for persistence.","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"            tasks \u003d new TaskList(storage.load(), ui);","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"        } catch (StorageLoadException e) {","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e(), ui);","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"        parser \u003d new Parser(ui, tasks);","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"     * Starts an interactive REPL session for the user.","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"    public void run() {","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"        ui.printIntroduction();","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"        String input;","lastModifiedDate":"2023-10-01"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"        boolean shouldTerminate \u003d false;","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"        while (!shouldTerminate) {","lastModifiedDate":"2023-10-01"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"            try {","lastModifiedDate":"2023-10-01"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"                shouldTerminate \u003d parser.parseInput(input);","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-10-01"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"                ui.showInvalidInputError();","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"        ui.printFarewell();","lastModifiedDate":"2023-10-01"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"        storage.save(tasks, ui);","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-01"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"        new Duke(\"data.temp\").run();","lastModifiedDate":"2023-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wendelinwemhoener":65,"-":3}},{"path":"src/main/java/careo/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"package careo;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":" * Represents a certain kind of task that happens over a span of time.","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"    /** When the event starts */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"    protected String from;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"    /** When the event ends */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"    protected String to;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"    public String getFrom() {","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"        return from;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"    public String getTo() {","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"        return to;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     * Instantiates an Event instance given its parameters.","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param description Textual description of the event.","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param from Time at which the event starts.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param to Time at which the event ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"     * Returns type, description, timespan and whether it is done of an event.","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return A string representation of the event.","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wendelinwemhoener":42}},{"path":"src/main/java/careo/MarkOrUnmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"package careo;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":" * Allows distinguishing the intent when marking/unmarking a task.","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"public enum MarkOrUnmark {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"    MARK,","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"    UNMARK","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wendelinwemhoener":9}},{"path":"src/main/java/careo/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"package careo;","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":" * Responsible for executing the proper business logic triggered by user input.","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"public class Parser {","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"    /** UI that is responsible for user input and output */","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"    /** Used for storing and querying user tasks */","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"     * Creates a Parser instance connected to ui and tasks of a Duke instance.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param ui The Ui instance used by the central Duke instance.","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param tasks The TaskList instance used by the central Duke instance.","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"    public Parser(Ui ui, TaskList tasks) {","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"     * Parses and processes a line of text inputted by the user.","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param input The input from the user.","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return Whether the process-input-loop should be exited.","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"    public boolean parseInput(String input) {","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"                Arrays.asList(\"mark\", \"unmark\", \"deadline\", \"event\", \"todo\")","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"        );","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"            return true;","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"        if (keywords.contains(input)) {","lastModifiedDate":"2023-10-01"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"            ui.showCommandArgumentMissingError(input);","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"            ui.listTasks(tasks);","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2023-10-01"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"            int taskIdx \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"            tasks.markOrUnmarkTask(MarkOrUnmark.MARK, taskIdx);","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2023-10-01"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"            int taskIdx \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-10-01"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"            tasks.markOrUnmarkTask(MarkOrUnmark.UNMARK, taskIdx);","lastModifiedDate":"2023-10-01"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2023-10-01"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"            String relevantInput \u003d input.substring(9);","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"            String[] parts \u003d relevantInput.split(\"/\");","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"            String taskDescription \u003d parts[0].strip();","lastModifiedDate":"2023-10-01"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"            String by \u003d parts[1].substring(2).strip();","lastModifiedDate":"2023-10-01"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"            tasks.addTask(new Deadline(taskDescription, by));","lastModifiedDate":"2023-10-01"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2023-10-01"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"            String relevantInput \u003d input.substring(6);","lastModifiedDate":"2023-10-01"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"            String[] parts \u003d relevantInput.split(\"/\");","lastModifiedDate":"2023-10-01"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"            String taskDescription \u003d parts[0].strip();","lastModifiedDate":"2023-10-01"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"            String from \u003d parts[1].substring(4).strip();","lastModifiedDate":"2023-10-01"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"            String to \u003d parts[2].substring(2).strip();","lastModifiedDate":"2023-10-01"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"            tasks.addTask(new Event(taskDescription, from, to));","lastModifiedDate":"2023-10-01"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2023-10-01"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"            String relevantInput \u003d input.substring(5);","lastModifiedDate":"2023-10-01"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"            String taskDescription \u003d relevantInput.strip();","lastModifiedDate":"2023-10-01"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"            tasks.addTask(new ToDo(taskDescription));","lastModifiedDate":"2023-10-01"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2023-10-01"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"            int taskIdx \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-10-01"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"            tasks.removeTask(taskIdx);","lastModifiedDate":"2023-10-01"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2023-10-01"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"            String searchTerm \u003d input.substring(5);","lastModifiedDate":"2023-10-01"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findMatchingTasks(searchTerm);","lastModifiedDate":"2023-10-01"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"            ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2023-10-01"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"        } else {","lastModifiedDate":"2023-10-01"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"            ui.showUnrecognizedCommandError();","lastModifiedDate":"2023-10-01"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"        return false;","lastModifiedDate":"2023-10-01"},{"lineNumber":91,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"wendelinwemhoener":92}},{"path":"src/main/java/careo/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"package careo;","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"import java.io.File;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":" * Handles making the saved tasks persistent.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"public class Storage {","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"    /** Where the persistence file (relative path) is stored */","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"    private String filePath;","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"     * Instantiates a Storage instance with access to a persistence file.","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param filePath Where the persistence file (relative path) is stored.","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"     * Loads and returns stored tasks from the persistence file.","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return The tasks stored in the persistence file.","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"     * @throws StorageLoadException When filePath doesn\u0027t point to a file.","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"    public ArrayList\u003cTask\u003e load() throws StorageLoadException {","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"        try {","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"            File file \u003d new File(\"temp.txt\");","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"            FileReader fileReader \u003d new FileReader(file);","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"            Scanner in \u003d new Scanner(fileReader);","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"            while (in.hasNext()) {","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"                try {","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"                    String nextLine \u003d in.nextLine();","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"                    String[] parts \u003d nextLine.split(\"\\\\|\");","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"                    Task newTask;","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"                    if (parts[0].equals(\"todo\")) {","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"                        newTask \u003d new ToDo(parts[1]);","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"                    } else if (parts[0].equals(\"event\")) {","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"                        newTask \u003d new Event(parts[1], parts[2], parts[3]);","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"                    } else {","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"                        newTask \u003d new Deadline(parts[1], parts[2]);","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"                    }","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"                    System.out.println(","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"                            \"    An error occured. Maybe the file is corrupted.\"","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"                    );","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"                    System.out.println(","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"                            \"    Please quit the program now.\"","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"                    );","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"                }","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"            throw new StorageLoadException();","lastModifiedDate":"2023-10-01"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"        return tasks;","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"        // return tasks;","lastModifiedDate":"2023-10-01"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"     * Saves tasks to a persitence file.","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param tasks The TaskList containing the tasks to be saved.","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param ui The Ui used to output an error if any occurs.","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"    public void save(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"        try {","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"            File file \u003d new File(\"temp.txt\");","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"            PrintWriter printWriter \u003d new PrintWriter(fileWriter);","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"                if (task instanceof ToDo) {","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"                    printWriter.println(\"todo|\" + task.getDescription());","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"wendelinwemhoener"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"                    Event e \u003d (Event) task;","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"wendelinwemhoener"},"content":"                    printWriter.println(\"event|\" + task.getDescription() + \"|\"","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"wendelinwemhoener"},"content":"                            + e.getFrom() + \"|\" + e.getTo());","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"wendelinwemhoener"},"content":"                } else {","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"wendelinwemhoener"},"content":"                    Deadline d \u003d (Deadline) task;","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":99,"author":{"gitId":"wendelinwemhoener"},"content":"                    printWriter.println(\"deadline|\" + task.getDescription()","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"wendelinwemhoener"},"content":"                            + \"|\" + d.getBy());","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"wendelinwemhoener"},"content":"                }","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"wendelinwemhoener"},"content":"            printWriter.flush();","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"wendelinwemhoener"},"content":"            fileWriter.flush();","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"wendelinwemhoener"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"wendelinwemhoener"},"content":"            ui.showLoadingFileError();","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":110,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"wendelinwemhoener":110}},{"path":"src/main/java/careo/StorageLoadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"package careo;","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"public class StorageLoadException extends Exception {","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"wendelinwemhoener":5}},{"path":"src/main/java/careo/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"package careo;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":" * The main class from which deadline, event and todo inherit.","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"public class Task {","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"    /** Textual description of the task */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"    protected String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"    /** Whether the task has been completed */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"     * Instantiates a Task instance from a description.","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param description Textual description of the task.","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"     * Generates and returns a status icon based on whether the task is done.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return \"X\" if the task is done, \" \" otherwise","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"        return description;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"     * Returns type, description and whether it is done of a task.","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"wendelinwemhoener":47}},{"path":"src/main/java/careo/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"package careo;","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":" * Responsible for performing actions on the stored tasks.","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"public class TaskList {","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"    /** UI that is responsible for user input and output */","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"    /** Internal-only list of all tasks that make up this TaskList */","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"     * Instantiates a TaskList from a list of tasks and connects it to a Ui.","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param tasks List of tasks that will be assigned to the internal tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param ui The Ui instance used by the main Duke instance.","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks, Ui ui) {","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"        return tasks;","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"     * Computes and returns the number of tasks in this TaskList.","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return The number of tasks in this TaskList.","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"    public int size() {","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"        return tasks.size();","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"     * Marks or unmarks a task from tasks and prints a confirmation.","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"     * Handles invalid indexes and prints a warning in that case.","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param markOrUnmark Whether the task should be marked or unmarked.","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param taskIdx Index (zero-based) of the task that should be marked","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"     *                or unmarked in tasks.","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"    public void markOrUnmarkTask(MarkOrUnmark markOrUnmark, int taskIdx) {","lastModifiedDate":"2023-10-01"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"            ui.printTaskListEmpty();","lastModifiedDate":"2023-10-01"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"            return;","lastModifiedDate":"2023-10-01"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"        if (taskIdx \u003e\u003d tasks.size() || taskIdx \u003c 0) {","lastModifiedDate":"2023-10-01"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"            ui.showInvalidTaskIndexError(this);","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"            return;","lastModifiedDate":"2023-10-01"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"        Task selectedTask \u003d tasks.get(taskIdx);","lastModifiedDate":"2023-10-01"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"        selectedTask.setIsDone(markOrUnmark \u003d\u003d MarkOrUnmark.MARK);","lastModifiedDate":"2023-10-01"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"        ui.printSuccessfulMarkOrUnmark(markOrUnmark, selectedTask);","lastModifiedDate":"2023-10-01"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"     * Adds a new task to tasks and prints a confirmation.","lastModifiedDate":"2023-10-01"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param newTask The task that shall be added.","lastModifiedDate":"2023-10-01"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-10-01"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-10-01"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"        ui.printSuccessfullyAddedTask(newTask, this);","lastModifiedDate":"2023-10-01"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"     * Removes a tasks from tasks and prints a confirmation.","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param taskIdx Index of the task that shall be removed.","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"    public void removeTask(int taskIdx) {","lastModifiedDate":"2023-10-01"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"        Task removedTask \u003d tasks.remove(taskIdx);","lastModifiedDate":"2023-10-01"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"        ui.printSuccessfullyRemovedTask(removedTask, this);","lastModifiedDate":"2023-10-01"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"    public ArrayList\u003cTask\u003e findMatchingTasks(String searchTerm) {","lastModifiedDate":"2023-10-01"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-10-01"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-10-01"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"            if (task.getDescription().contains(searchTerm)) {","lastModifiedDate":"2023-10-01"},{"lineNumber":91,"author":{"gitId":"wendelinwemhoener"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-10-01"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-10-01"},{"lineNumber":93,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":94,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":95,"author":{"gitId":"wendelinwemhoener"},"content":"        return matchingTasks;","lastModifiedDate":"2023-10-01"},{"lineNumber":96,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":97,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"wendelinwemhoener":97}},{"path":"src/main/java/careo/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"package careo;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":" * A special kind of task that doesn\u0027t have any additional fields.","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"     * Returns toString of the superclass and adds that it is of type ToDo.","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return A string representation of the ToDo.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wendelinwemhoener":20}},{"path":"src/main/java/careo/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"package careo;","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":" * Resposnsible for displaying output to the user.","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"public class Ui {","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints a line of dashes indented by four spaces.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"    private void printHorizontalLine() {","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    \" + \"-\".repeat(76));","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints a polite introduction and offer for help.","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"    public void printIntroduction() {","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Hello! I\u0027m Careo\");","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints a polite goodbye message.","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"    public void printFarewell() {","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints a list of all tasks and their status.","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"    public void listTasks(TaskList tasks) {","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    \" + counter + \".\" + task);","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"            counter++;","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints that loading from a persistence file was unsuccessful.","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-10-01"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    No file specifying saved tasks was present.\");","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"                \"    Creating a new one; you can start inputting your tasks.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints that the input was invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"    public void showInvalidInputError() {","lastModifiedDate":"2023-10-01"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Invalid input!\");","lastModifiedDate":"2023-10-01"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Please make sure that your input is in \" +","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"                \"the proper format and try again\");","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints that a command was missing arguments.","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param input The name of the command whose arguments were missing.","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"    public void showCommandArgumentMissingError(String input) {","lastModifiedDate":"2023-10-01"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    ☹ OOPS!!! The description of a \" + input","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"                + \" cannot be empty.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"     * Printst that the command was not recognized.","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"    public void showUnrecognizedCommandError() {","lastModifiedDate":"2023-10-01"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"                \"    ☹ OOPS!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":91,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":93,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints that the task list is currently empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"wendelinwemhoener"},"content":"    public void printTaskListEmpty() {","lastModifiedDate":"2023-10-01"},{"lineNumber":97,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":98,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Sorry, there are no tasks yet!\");","lastModifiedDate":"2023-10-01"},{"lineNumber":99,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Add a task and then try again.\");","lastModifiedDate":"2023-10-01"},{"lineNumber":100,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":101,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":102,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":103,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints that the chosen task index is invalid (too high or too low).","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param tasks The TaskList which is supposed to be indexed into.","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"wendelinwemhoener"},"content":"    public void showInvalidTaskIndexError(TaskList tasks) {","lastModifiedDate":"2023-10-01"},{"lineNumber":109,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":110,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Sorry, the chosen task index is invalid!\");","lastModifiedDate":"2023-10-01"},{"lineNumber":111,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Task index must be between 1 (inclusive) and \"","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"wendelinwemhoener"},"content":"                + tasks.size() + \" (inclusive).\");","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":114,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":115,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":116,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":117,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints that a mark or unmark operation completed sucessfully.","lastModifiedDate":"2023-10-05"},{"lineNumber":118,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":119,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param markOrUnmark Whether the operation is a mark or unmark operation.","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param selectedTask Which task is supposed to be (un)selected.","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":122,"author":{"gitId":"wendelinwemhoener"},"content":"    public void printSuccessfulMarkOrUnmark(MarkOrUnmark markOrUnmark,","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"wendelinwemhoener"},"content":"                                            Task selectedTask) {","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":125,"author":{"gitId":"wendelinwemhoener"},"content":"        if (markOrUnmark \u003d\u003d MarkOrUnmark.MARK) {","lastModifiedDate":"2023-10-01"},{"lineNumber":126,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-10-01"},{"lineNumber":127,"author":{"gitId":"wendelinwemhoener"},"content":"        } else {","lastModifiedDate":"2023-10-01"},{"lineNumber":128,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"wendelinwemhoener"},"content":"                    \"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":131,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"      \" + selectedTask);","lastModifiedDate":"2023-10-01"},{"lineNumber":132,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":133,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":134,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":135,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":136,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints that a new task was sucessfully added to the task list.","lastModifiedDate":"2023-10-05"},{"lineNumber":137,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":138,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param newTask New Task that is being added.","lastModifiedDate":"2023-10-05"},{"lineNumber":139,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param tasks TaskList onto which the new task was added.","lastModifiedDate":"2023-10-05"},{"lineNumber":140,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":141,"author":{"gitId":"wendelinwemhoener"},"content":"    public void printSuccessfullyAddedTask(Task newTask, TaskList tasks) {","lastModifiedDate":"2023-10-01"},{"lineNumber":142,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":143,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-10-01"},{"lineNumber":144,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"      \" + newTask.toString());","lastModifiedDate":"2023-10-01"},{"lineNumber":145,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":146,"author":{"gitId":"wendelinwemhoener"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-10-01"},{"lineNumber":147,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Now you have 1 task in the list.\");","lastModifiedDate":"2023-10-01"},{"lineNumber":148,"author":{"gitId":"wendelinwemhoener"},"content":"        } else {","lastModifiedDate":"2023-10-01"},{"lineNumber":149,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Now you have \" + tasks.size()","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"wendelinwemhoener"},"content":"                    + \" tasks in the list.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":152,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":153,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":154,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":155,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":156,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":157,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints that a task was successfully removed from the task list.","lastModifiedDate":"2023-10-05"},{"lineNumber":158,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":159,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param removedTask The task that was just removed.","lastModifiedDate":"2023-10-05"},{"lineNumber":160,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param tasks TaskList from which the task was just removed.","lastModifiedDate":"2023-10-05"},{"lineNumber":161,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":162,"author":{"gitId":"wendelinwemhoener"},"content":"    public void printSuccessfullyRemovedTask(Task removedTask, TaskList tasks) {","lastModifiedDate":"2023-10-01"},{"lineNumber":163,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":164,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-10-01"},{"lineNumber":165,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"      \" + removedTask.toString());","lastModifiedDate":"2023-10-01"},{"lineNumber":166,"author":{"gitId":"wendelinwemhoener"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-10-01"},{"lineNumber":167,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Now you have 1 task in the list.\");","lastModifiedDate":"2023-10-01"},{"lineNumber":168,"author":{"gitId":"wendelinwemhoener"},"content":"        } else {","lastModifiedDate":"2023-10-01"},{"lineNumber":169,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Now you have \" + tasks.size()","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"wendelinwemhoener"},"content":"                    + \" tasks in the list.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":171,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":172,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":173,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":174,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":175,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":176,"author":{"gitId":"wendelinwemhoener"},"content":"     * Shows all tasks matching a certain keyword.","lastModifiedDate":"2023-10-05"},{"lineNumber":177,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":178,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param matchingTasks The already selected, matching tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":179,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":180,"author":{"gitId":"wendelinwemhoener"},"content":"    public void showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2023-10-01"},{"lineNumber":181,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":182,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":183,"author":{"gitId":"wendelinwemhoener"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-10-01"},{"lineNumber":184,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    There are no matching tasks.\");","lastModifiedDate":"2023-10-01"},{"lineNumber":185,"author":{"gitId":"wendelinwemhoener"},"content":"        } else {","lastModifiedDate":"2023-10-01"},{"lineNumber":186,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Here are the matching tasks: \");","lastModifiedDate":"2023-10-01"},{"lineNumber":187,"author":{"gitId":"wendelinwemhoener"},"content":"            for (Task matchingTask : matchingTasks) {","lastModifiedDate":"2023-10-01"},{"lineNumber":188,"author":{"gitId":"wendelinwemhoener"},"content":"                System.out.println(\"    \" + matchingTask);","lastModifiedDate":"2023-10-01"},{"lineNumber":189,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-10-01"},{"lineNumber":190,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":191,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":192,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":193,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":194,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":195,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":196,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints out that storing the persistence file was unsuccessful.","lastModifiedDate":"2023-10-05"},{"lineNumber":197,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":198,"author":{"gitId":"wendelinwemhoener"},"content":"    public void showLoadingFileError() {","lastModifiedDate":"2023-10-05"},{"lineNumber":199,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-05"},{"lineNumber":200,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    An error occured when trying to save your\"","lastModifiedDate":"2023-10-06"},{"lineNumber":201,"author":{"gitId":"wendelinwemhoener"},"content":"                + \"TaskList to a file.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":202,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Ensure that your account has write \" +","lastModifiedDate":"2023-10-06"},{"lineNumber":203,"author":{"gitId":"wendelinwemhoener"},"content":"                \"permissions and try again.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":204,"author":{"gitId":"wendelinwemhoener"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-10-05"},{"lineNumber":205,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":206,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"wendelinwemhoener":206}},{"path":"temp.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"todo|work","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"deadline|you|soon","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"event|me|now|forever","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"wendelinwemhoener":3}}]
