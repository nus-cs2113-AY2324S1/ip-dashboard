[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"MudMud is a chatbot application for creating and managing tasks with the use of a Command Line Interface (CLI). Tasks, like todo, deadline, and event, are supported in this app. This app will store its data via a textfile in a seperate folder.","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"## How to Setup","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"1. Ensure that you have `Java 11` installed on your laptop or computer.","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"2. Download the latest version of the JAR file.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"3. Move the file to a folder that you want to use for the application","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"4. Open up CLI and traverse until you reach your app folder.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":"5. Type in `java -jar \"MudMud.jar\"`.","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":"6. The app will create a data folder and text file and it will close again.","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"7. Run the app again and the app is ready to use!","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"   ","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"* Veiwing your current tasks - `list`","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"* Adding a todo task - `todo`","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"* Adding a deadline task - `deadline`","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"* Adding an event task - `event`","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"* Marking a task - `mark`","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"* Unmarking a task - `unmark`","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"* Deleting a task - `delete`","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"* Searching for tasks - `find`","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"* Exiting the application - `bye`","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"## Veiwing your current tasks - `list`","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"List all tasks available in the app.","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"## Adding a todo task - `todo`","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"Add a new todo task into the list with the format below:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"`todo \u0027task\u0027`","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"**Example:**","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"`todo buy book`","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"StanleyW00"},"content":"## Adding a deadline task - `deadline`","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"StanleyW00"},"content":"Add a new deadline task into the list with the format below:","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"StanleyW00"},"content":"`deadline \u0027task\u0027 /by \u0027specified deadline\u0027`","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"StanleyW00"},"content":"Your `specified deadline` should be in this format:","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"StanleyW00"},"content":"`yyyy-MM-dd HHmm`","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"StanleyW00"},"content":"**Example:**","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"StanleyW00"},"content":"`deadline submit homework /by 2022-10-23 2359`","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"StanleyW00"},"content":"## Adding an event task - `event`","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"StanleyW00"},"content":"Add a new event task into the list with the format below:","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"StanleyW00"},"content":"`event \u0027task\u0027 /from \u0027specified start date\u0027 /to \u0027specified end date\u0027`","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"StanleyW00"},"content":"Your `specified start date` and `specified end date` should be in this format:","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"StanleyW00"},"content":"`yyyy-MM-dd HHmm`","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"StanleyW00"},"content":"**Example:**","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"StanleyW00"},"content":"`event party /from 2022-07-10 1900 /to 2022-07-10 2100`","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"StanleyW00"},"content":"## Marking a task - `mark`","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"StanleyW00"},"content":"Mark a task in the list with the format below:","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"StanleyW00"},"content":"`mark \u0027task number\u0027`","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"StanleyW00"},"content":"**Example:**","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"StanleyW00"},"content":"`mark 2` will mark the second task in the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"StanleyW00"},"content":"## Unmarking a task - `unmark`","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"StanleyW00"},"content":"Unmark a task in the list with the format below:","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"StanleyW00"},"content":"`unmark \u0027task number\u0027`","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"StanleyW00"},"content":"**Example:**","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"StanleyW00"},"content":"`unmark 3` will unmark the third task in the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"StanleyW00"},"content":"## Deleting a task - `delete`","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"StanleyW00"},"content":"Delete a task in the list with the format below:","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"StanleyW00"},"content":"`delete \u0027task number\u0027`","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"StanleyW00"},"content":"**Example:**","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"StanleyW00"},"content":"`delete 1` will delete the first task in the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"StanleyW00"},"content":"## Searching for tasks - `find`","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"StanleyW00"},"content":"Find tasks with the matching keyword in the list with the format below.","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"StanleyW00"},"content":"`find \u0027keyword\u0027`","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"StanleyW00"},"content":"**Example:**","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"StanleyW00"},"content":"`find book` will find tasks with the keyword `book` in the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"StanleyW00"},"content":"## Exiting the application - `bye`","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"StanleyW00"},"content":"Exit the application.","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"StanleyW00":69,"-":16}},{"path":"src/main/java/mudmud/MudMud.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.command.Command;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"import mudmud.exception.DukeCommandException;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"import mudmud.storage.Storage;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"import mudmud.tasklist.TaskList;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"import mudmud.ui.TextUi;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"import mudmud.parser.Parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":" * The entry point for Duke application.","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":" * Initializes and starts the application.","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"public class MudMud {","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"    private TextUi ui;","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"    /** Initializes all class members in Duke. */","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"    public void setup() {","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"        ui \u003d new TextUi();","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"        tasks \u003d new TaskList(storage.restoreSavedData());","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"    /** Runs the application until termination. */","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"    public void run() {","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"        String input;","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"        ui.tellGreeting();","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"StanleyW00"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"StanleyW00"},"content":"            input \u003d ui.getInput();","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"StanleyW00"},"content":"            try {","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"StanleyW00"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"StanleyW00"},"content":"                Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"StanleyW00"},"content":"                command.executeCommand(tasks, ui, storage);","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"StanleyW00"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"StanleyW00"},"content":"            } catch (DukeCommandException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"StanleyW00"},"content":"                exception.handleDukeCommandException(parser.parseCommandType(input)[0]);","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"StanleyW00"},"content":"            } finally {","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"StanleyW00"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"StanleyW00"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"StanleyW00"},"content":"    /** Starts up the application. */","lastModifiedDate":"2023-10-01"},{"lineNumber":51,"author":{"gitId":"StanleyW00"},"content":"    public void start() {","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"StanleyW00"},"content":"        setup();","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"StanleyW00"},"content":"        run();","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"StanleyW00"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"StanleyW00"},"content":"        new MudMud().start();","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"StanleyW00":57,"-":2}},{"path":"src/main/java/mudmud/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.command;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":" * Represents an add task command.","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"    protected String dataToAdd;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"     * Creates an add command.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":"     * @param input The inputted data.","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"    public AddCommand(String input) {","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"        super(false);","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"        dataToAdd \u003d input;","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"StanleyW00":19}},{"path":"src/main/java/mudmud/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.command;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.exception.DukeTaskException;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"import mudmud.storage.Storage;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"import mudmud.tasklist.TaskList;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"import mudmud.ui.TextUi;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":" * Represents an add deadline command.","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"     * Creates an add deadline command.","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"     * @param data The inputted data.","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"    public AddDeadlineCommand(String data) {","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"        super(data);","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"    public void executeCommand(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"            String dataString \u003d tasks.addDeadline(dataToAdd);","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"            storage.addNewData(dataString, tasks.getTasksCount());","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"            ui.printRecentTask(tasks);","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"StanleyW00"},"content":"            ui.handleIOException(exception);","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"StanleyW00"},"content":"        } catch (DukeTaskException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"StanleyW00"},"content":"            exception.handleDukeTaskException(\"deadline\", dataToAdd);","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"StanleyW00"},"content":"        } catch (DateTimeException exception) {","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"StanleyW00"},"content":"            ui.handleDateTimeException();","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"StanleyW00":42}},{"path":"src/main/java/mudmud/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.command;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.exception.DukeTaskException;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"import mudmud.storage.Storage;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"import mudmud.tasklist.TaskList;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"import mudmud.ui.TextUi;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":" * Represents an add event command.","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"     * Creates an add event command.","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"     * @param data The inputted data.","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"    public AddEventCommand(String data) {","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"        super(data);","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"    public void executeCommand(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"            String dataString \u003d tasks.addEvent(dataToAdd);","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"            storage.addNewData(dataString, tasks.getTasksCount());","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"            ui.printRecentTask(tasks);","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"StanleyW00"},"content":"            ui.handleIOException(exception);","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"StanleyW00"},"content":"        } catch (DukeTaskException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"StanleyW00"},"content":"            exception.handleDukeTaskException(\"event\", dataToAdd);","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"StanleyW00"},"content":"        } catch (DateTimeException exception) {","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"StanleyW00"},"content":"            ui.handleDateTimeException();","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"StanleyW00":42}},{"path":"src/main/java/mudmud/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.command;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.exception.DukeTaskException;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"import mudmud.storage.Storage;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"import mudmud.tasklist.TaskList;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"import mudmud.ui.TextUi;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":" * Represents an add todo command.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"     * Creates an add todo command.","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"     * @param data The inputted data.","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"    public AddTodoCommand(String data) {","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"        super(data);","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"    public void executeCommand(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"            String dataString \u003d tasks.addTodo(dataToAdd);","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"            storage.addNewData(dataString, tasks.getTasksCount());","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"            ui.printRecentTask(tasks);","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"            ui.handleIOException(exception);","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"StanleyW00"},"content":"        } catch (DukeTaskException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"StanleyW00"},"content":"            exception.handleDukeTaskException(\"todo\", dataToAdd);","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"StanleyW00":39}},{"path":"src/main/java/mudmud/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.command;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.storage.Storage;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"import mudmud.tasklist.TaskList;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"import mudmud.ui.TextUi;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":" * Represents a bye command.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"     * Creates a bye command.","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"        super(true);","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"    public void executeCommand(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"        ui.tellGoodbye();","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"StanleyW00":26}},{"path":"src/main/java/mudmud/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.command;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.storage.Storage;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"import mudmud.tasklist.TaskList;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"import mudmud.ui.TextUi;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":" * Represent a command in the application.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":"    private boolean isExit;","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"     * Creates a new command.","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"     * @param isExit Checks if it is an exit command.","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"        return isExit;","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"     * Executes the command\u0027s functions.","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"     * @param tasks The task list","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"     * @param ui The application\u0027s UI","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"     * @param storage The application\u0027s storage","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"    public abstract void executeCommand(TaskList tasks, TextUi ui, Storage storage);","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"StanleyW00":34}},{"path":"src/main/java/mudmud/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.command;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.parser.Parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"import mudmud.storage.Storage;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"import mudmud.tasklist.TaskList;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"import mudmud.ui.TextUi;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":" * Represents a delete command.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"    private String index;","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"     * Creates a delete command.","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"     * @param index The selected task\u0027s index.","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"    public DeleteCommand(String index) {","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"        super(false);","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"    public void executeCommand(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"StanleyW00"},"content":"            int selectedIndex \u003d parser.parseIndex(index);","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"StanleyW00"},"content":"            tasks.deleteTask(selectedIndex);","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"StanleyW00"},"content":"            storage.deleteTaskData(selectedIndex);","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"StanleyW00"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"StanleyW00"},"content":"            ui.handleIOException(exception);","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"StanleyW00"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"StanleyW00"},"content":"            ui.handleIndexOutOfBoundsException(tasks.getTasksCount());","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"StanleyW00"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"StanleyW00"},"content":"            ui.handleNumberFormatException(index);","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"StanleyW00":46}},{"path":"src/main/java/mudmud/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.command;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.storage.Storage;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"import mudmud.task.Task;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"import mudmud.tasklist.TaskList;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"import mudmud.ui.TextUi;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":" * Represents a find command.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"    private String keyword;","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"     * Creates a find command.","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"     * @param keyword The selected keyword to find.","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"        super(false);","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"    public void executeCommand(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d tasks.filterTasks(keyword);","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"        ui.printFilteredTasks(filteredTasks);","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"StanleyW00":34}},{"path":"src/main/java/mudmud/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.command;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.storage.Storage;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"import mudmud.tasklist.TaskList;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"import mudmud.ui.TextUi;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":" * Represents a list command.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"     * Creates a list command.","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"    public ListCommand() {","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"        super(false);","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"    public void executeCommand(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"        ui.printTasks(tasks);","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"StanleyW00":26}},{"path":"src/main/java/mudmud/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.command;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.parser.Parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"import mudmud.storage.Storage;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"import mudmud.tasklist.TaskList;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"import mudmud.ui.TextUi;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":" * Represents a mark command.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"    private String index;","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"     * Creates a mark command.","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"     * @param index The selected index.","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"    public MarkCommand(String index) {","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"        super(false);","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"    public void executeCommand(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"StanleyW00"},"content":"            int selectedIndex \u003d parser.parseIndex(index);","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"StanleyW00"},"content":"            tasks.setMarkAsDone(selectedIndex);","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"StanleyW00"},"content":"            storage.updateTaskDatabase(selectedIndex, true);","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"StanleyW00"},"content":"            ui.printModifiedTask(tasks.getTask(selectedIndex), true);","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"StanleyW00"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"StanleyW00"},"content":"            ui.handleIOException(exception);","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"StanleyW00"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"StanleyW00"},"content":"            ui.handleIndexOutOfBoundsException(tasks.getTasksCount());","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"StanleyW00"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"StanleyW00"},"content":"            ui.handleNumberFormatException(index);","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"StanleyW00":47}},{"path":"src/main/java/mudmud/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.command;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.parser.Parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"import mudmud.storage.Storage;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"import mudmud.tasklist.TaskList;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"import mudmud.ui.TextUi;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":" * Represents an unmark command.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"    private String index;","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"     * Creates an unmark command.","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"     * @param index The selected index.","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"    public UnmarkCommand(String index) {","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"        super(false);","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"    public void executeCommand(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"StanleyW00"},"content":"            int selectedIndex \u003d parser.parseIndex(index);","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"StanleyW00"},"content":"            tasks.setUnmarkAsDone(selectedIndex);","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"StanleyW00"},"content":"            storage.updateTaskDatabase(selectedIndex, false);","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"StanleyW00"},"content":"            ui.printModifiedTask(tasks.getTask(selectedIndex), false);","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"StanleyW00"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"StanleyW00"},"content":"            ui.handleIOException(exception);","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"StanleyW00"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"StanleyW00"},"content":"            ui.handleIndexOutOfBoundsException(tasks.getTasksCount());","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"StanleyW00"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"StanleyW00"},"content":"            ui.handleNumberFormatException(index);","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"StanleyW00":47}},{"path":"src/main/java/mudmud/exception/DukeCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.exception;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":" * Indicates an error caused by invalid command being inputted.","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"public class DukeCommandException extends Exception{","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"     * Sends out an error message that the command is invalid.","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":"     * @param command The invalid command.","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"    public void handleDukeCommandException(String command) {","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tSorry I don\u0027t quite understand what your command is.\");","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tPlease a valid command.\");","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tThe command you tried to input is: \" + command);","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"StanleyW00":18}},{"path":"src/main/java/mudmud/exception/DukeTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.exception;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":" * Indicates an error caused by invalid input when creating a task.","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"public class DukeTaskException extends Exception{","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"    private static final String TODO_FORMAT \u003d \"todo \u0027task\u0027\";","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"    private static final String DEADLINE_FORMAT \u003d \"deadline \u0027task\u0027 /by \u0027specified deadline\u0027\";","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"    private static final String EVENT_FORMAT \u003d \"event \u0027task\u0027 /from \u0027specified start date\u0027 /to \u0027specified end date\u0027\";","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"     * Sends out an error message that the input does not match with the specified format.","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"     * @param command The type of task.","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"     * @param input The input with the invalid format.","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"    public void handleDukeTaskException(String command, String input) {","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tSorry your \" + command + \"\u0027s format is invalid.\");","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tYour input should be in this format:\");","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"        if (command.equals(\"todo\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"            System.out.println(\"\\t\\t\" + TODO_FORMAT);","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"            System.out.println(\"\\t\\t\" + DEADLINE_FORMAT);","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"            System.out.println(\"\\t\\t\" + EVENT_FORMAT);","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tYour input is: \");","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\t\\t\" + command + \" \" + input);","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"StanleyW00":34}},{"path":"src/main/java/mudmud/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.command.*;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"import mudmud.exception.DukeCommandException;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":" * Represents parser to parse user\u0027s input.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":"public class Parser {","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"     * Parse a string index into an integer index.","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"     * @param input The string index.","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"     * @return The integer index.","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"    public int parseIndex(String input) {","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"        return Integer.parseInt(input) - 1;","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"     * Parse a user\u0027s input into components of a task.","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"     * @param regex An expression used for splitting.","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"     * @return The input after splitting.","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"    public String[] parseTask(String input, String regex) {","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"        return input.split(regex);","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"StanleyW00"},"content":"     * Split up the input to get command.","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"StanleyW00"},"content":"     * @param input The user\u0027s input","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"StanleyW00"},"content":"     * @return The input after splitting.","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"StanleyW00"},"content":"    public String[] parseCommandType(String input) {","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"StanleyW00"},"content":"        return input.split(\" \", 2);","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"StanleyW00"},"content":"     * Convert a string to DateTime with a specified format.","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"StanleyW00"},"content":"     * @param input The string with a DateTime format.","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"StanleyW00"},"content":"     * @return A string converted into DateTime.","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"StanleyW00"},"content":"    public LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"StanleyW00"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"StanleyW00"},"content":"        return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":56,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"StanleyW00"},"content":"     * Convert a DateTime variable back into a string with a specified format.","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"StanleyW00"},"content":"     * @param dateTime DateTime variable","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"StanleyW00"},"content":"     * @return String that is converted from DateTime.","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"StanleyW00"},"content":"    public String convertDateTimetoString(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-29"},{"lineNumber":63,"author":{"gitId":"StanleyW00"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));","lastModifiedDate":"2023-09-29"},{"lineNumber":64,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":65,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":66,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"StanleyW00"},"content":"     * Creates a command class based on the user\u0027s input.","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"StanleyW00"},"content":"     * @param input The user\u0027s input","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"StanleyW00"},"content":"     * @return A command class","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"StanleyW00"},"content":"     * @throws DukeCommandException If it is an invalid command.","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"StanleyW00"},"content":"    public Command parseCommand(String input) throws DukeCommandException {","lastModifiedDate":"2023-09-28"},{"lineNumber":74,"author":{"gitId":"StanleyW00"},"content":"        String[] parsedInput \u003d parseCommandType(input);","lastModifiedDate":"2023-09-28"},{"lineNumber":75,"author":{"gitId":"StanleyW00"},"content":"        String commandType \u003d parsedInput[0];","lastModifiedDate":"2023-09-28"},{"lineNumber":76,"author":{"gitId":"StanleyW00"},"content":"        String data \u003d parsedInput.length \u003d\u003d 1 ? \"\" : parsedInput[1].trim();","lastModifiedDate":"2023-09-28"},{"lineNumber":77,"author":{"gitId":"StanleyW00"},"content":"        Command command;","lastModifiedDate":"2023-09-28"},{"lineNumber":78,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":79,"author":{"gitId":"StanleyW00"},"content":"        switch (commandType) {","lastModifiedDate":"2023-09-28"},{"lineNumber":80,"author":{"gitId":"StanleyW00"},"content":"        case \"list\":","lastModifiedDate":"2023-09-28"},{"lineNumber":81,"author":{"gitId":"StanleyW00"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2023-09-28"},{"lineNumber":82,"author":{"gitId":"StanleyW00"},"content":"            break;","lastModifiedDate":"2023-09-28"},{"lineNumber":83,"author":{"gitId":"StanleyW00"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-28"},{"lineNumber":84,"author":{"gitId":"StanleyW00"},"content":"            command \u003d new MarkCommand(data);","lastModifiedDate":"2023-09-28"},{"lineNumber":85,"author":{"gitId":"StanleyW00"},"content":"            break;","lastModifiedDate":"2023-09-28"},{"lineNumber":86,"author":{"gitId":"StanleyW00"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-28"},{"lineNumber":87,"author":{"gitId":"StanleyW00"},"content":"            command \u003d new UnmarkCommand(data);","lastModifiedDate":"2023-09-28"},{"lineNumber":88,"author":{"gitId":"StanleyW00"},"content":"            break;","lastModifiedDate":"2023-09-28"},{"lineNumber":89,"author":{"gitId":"StanleyW00"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-28"},{"lineNumber":90,"author":{"gitId":"StanleyW00"},"content":"            command \u003d new DeleteCommand(data);","lastModifiedDate":"2023-09-28"},{"lineNumber":91,"author":{"gitId":"StanleyW00"},"content":"            break;","lastModifiedDate":"2023-09-28"},{"lineNumber":92,"author":{"gitId":"StanleyW00"},"content":"        case \"find\":","lastModifiedDate":"2023-09-30"},{"lineNumber":93,"author":{"gitId":"StanleyW00"},"content":"            command \u003d new FindCommand(data);","lastModifiedDate":"2023-09-30"},{"lineNumber":94,"author":{"gitId":"StanleyW00"},"content":"            break;","lastModifiedDate":"2023-09-30"},{"lineNumber":95,"author":{"gitId":"StanleyW00"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-28"},{"lineNumber":96,"author":{"gitId":"StanleyW00"},"content":"            command \u003d new AddTodoCommand(data);","lastModifiedDate":"2023-09-28"},{"lineNumber":97,"author":{"gitId":"StanleyW00"},"content":"            break;","lastModifiedDate":"2023-09-28"},{"lineNumber":98,"author":{"gitId":"StanleyW00"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-28"},{"lineNumber":99,"author":{"gitId":"StanleyW00"},"content":"            command \u003d new AddDeadlineCommand(data);","lastModifiedDate":"2023-09-28"},{"lineNumber":100,"author":{"gitId":"StanleyW00"},"content":"            break;","lastModifiedDate":"2023-09-28"},{"lineNumber":101,"author":{"gitId":"StanleyW00"},"content":"        case \"event\":","lastModifiedDate":"2023-09-28"},{"lineNumber":102,"author":{"gitId":"StanleyW00"},"content":"            command \u003d new AddEventCommand(data);","lastModifiedDate":"2023-09-28"},{"lineNumber":103,"author":{"gitId":"StanleyW00"},"content":"            break;","lastModifiedDate":"2023-09-28"},{"lineNumber":104,"author":{"gitId":"StanleyW00"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-28"},{"lineNumber":105,"author":{"gitId":"StanleyW00"},"content":"            command \u003d new ByeCommand();","lastModifiedDate":"2023-09-28"},{"lineNumber":106,"author":{"gitId":"StanleyW00"},"content":"            break;","lastModifiedDate":"2023-09-28"},{"lineNumber":107,"author":{"gitId":"StanleyW00"},"content":"        default:","lastModifiedDate":"2023-09-28"},{"lineNumber":108,"author":{"gitId":"StanleyW00"},"content":"            throw new DukeCommandException();","lastModifiedDate":"2023-09-28"},{"lineNumber":109,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":110,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":111,"author":{"gitId":"StanleyW00"},"content":"        return command;","lastModifiedDate":"2023-09-28"},{"lineNumber":112,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":113,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"StanleyW00":113}},{"path":"src/main/java/mudmud/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.storage;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.parser.Parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"import mudmud.task.Deadline;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"import mudmud.task.Event;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"import mudmud.task.Task;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"import mudmud.task.Todo;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"import mudmud.ui.TextUi;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"import java.io.File;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":" * A handler that modifies and gets data from a file.","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"public class Storage {","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"    private final String DATA_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"    private final String DATA_DIRECTORY \u003d \"data\";","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"    private TextUi ui;","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"    private ArrayList\u003cTask\u003e tasksListPlaceholder;","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"     * Creates a handler to modify and access data in the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"    public Storage() {","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"        tasksListPlaceholder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"        ui \u003d new TextUi();","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"StanleyW00"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"StanleyW00"},"content":"     * Inserts new data into the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"StanleyW00"},"content":"     * @param dataString A line that will be inserted into the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":42,"author":{"gitId":"StanleyW00"},"content":"     * @param tasksCount The number of tasks in the list.","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"StanleyW00"},"content":"     * @throws IOException If there is an error related to access/modifying the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"StanleyW00"},"content":"    public void addNewData(String dataString, int tasksCount) throws IOException {","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"StanleyW00"},"content":"        FileWriter writer \u003d new FileWriter(DATA_PATH, true);","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"StanleyW00"},"content":"        if (tasksCount !\u003d 1) {","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"StanleyW00"},"content":"            writer.write(System.lineSeparator());","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"StanleyW00"},"content":"        writer.write(dataString);","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"StanleyW00"},"content":"        writer.close();","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"StanleyW00"},"content":"     * Changes the status of a task with the specified index in the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":58,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":59,"author":{"gitId":"StanleyW00"},"content":"     * @param index The index/row with the modified task.","lastModifiedDate":"2023-10-01"},{"lineNumber":60,"author":{"gitId":"StanleyW00"},"content":"     * @param currentIndex Current index/row.","lastModifiedDate":"2023-10-01"},{"lineNumber":61,"author":{"gitId":"StanleyW00"},"content":"     * @param scanner The scanner that refers to the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":62,"author":{"gitId":"StanleyW00"},"content":"     * @param change The changed status of a task whether it is mark or unmark.","lastModifiedDate":"2023-10-01"},{"lineNumber":63,"author":{"gitId":"StanleyW00"},"content":"     * @param buffer A string builder that will be replacing the contents into the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":64,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":65,"author":{"gitId":"StanleyW00"},"content":"    private void modifyTaskData(int index, int currentIndex, Scanner scanner, String change,","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"StanleyW00"},"content":"                                       StringBuilder buffer) {","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"StanleyW00"},"content":"        if (currentIndex \u003d\u003d index) {","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"StanleyW00"},"content":"            if (buffer.length() \u003e 0) {","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"StanleyW00"},"content":"                buffer.append(System.lineSeparator());","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"StanleyW00"},"content":"            }","lastModifiedDate":"2023-09-27"},{"lineNumber":71,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"StanleyW00"},"content":"            String[] parsedTask \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-09-27"},{"lineNumber":73,"author":{"gitId":"StanleyW00"},"content":"            parsedTask[1] \u003d change;","lastModifiedDate":"2023-09-27"},{"lineNumber":74,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":75,"author":{"gitId":"StanleyW00"},"content":"            for (int i \u003d 0; i \u003c parsedTask.length; i++) {","lastModifiedDate":"2023-09-27"},{"lineNumber":76,"author":{"gitId":"StanleyW00"},"content":"                buffer.append(parsedTask[i]);","lastModifiedDate":"2023-09-27"},{"lineNumber":77,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":78,"author":{"gitId":"StanleyW00"},"content":"                if (i \u003c parsedTask.length - 1) {","lastModifiedDate":"2023-09-27"},{"lineNumber":79,"author":{"gitId":"StanleyW00"},"content":"                    buffer.append(\" | \");","lastModifiedDate":"2023-09-27"},{"lineNumber":80,"author":{"gitId":"StanleyW00"},"content":"                }","lastModifiedDate":"2023-09-27"},{"lineNumber":81,"author":{"gitId":"StanleyW00"},"content":"            }","lastModifiedDate":"2023-09-27"},{"lineNumber":82,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":83,"author":{"gitId":"StanleyW00"},"content":"        } else {","lastModifiedDate":"2023-09-27"},{"lineNumber":84,"author":{"gitId":"StanleyW00"},"content":"            if (buffer.length() \u003e 0) {","lastModifiedDate":"2023-09-27"},{"lineNumber":85,"author":{"gitId":"StanleyW00"},"content":"                buffer.append(System.lineSeparator());","lastModifiedDate":"2023-09-27"},{"lineNumber":86,"author":{"gitId":"StanleyW00"},"content":"            }","lastModifiedDate":"2023-09-27"},{"lineNumber":87,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":88,"author":{"gitId":"StanleyW00"},"content":"            buffer.append(scanner.nextLine());","lastModifiedDate":"2023-09-27"},{"lineNumber":89,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":90,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":91,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":92,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":93,"author":{"gitId":"StanleyW00"},"content":"     * Updates a line from the file that refers to a modified task.","lastModifiedDate":"2023-10-01"},{"lineNumber":94,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":95,"author":{"gitId":"StanleyW00"},"content":"     * @param index The index/row with the modified task.","lastModifiedDate":"2023-10-01"},{"lineNumber":96,"author":{"gitId":"StanleyW00"},"content":"     * @param isDone Specifies if the task is marked or unmarked.","lastModifiedDate":"2023-10-01"},{"lineNumber":97,"author":{"gitId":"StanleyW00"},"content":"     * @throws IOException If there is an error related to access/modifying the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":98,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":99,"author":{"gitId":"StanleyW00"},"content":"    public void updateTaskDatabase(int index, boolean isDone) throws IOException {","lastModifiedDate":"2023-10-01"},{"lineNumber":100,"author":{"gitId":"StanleyW00"},"content":"        Scanner scanner \u003d new Scanner(new File(DATA_PATH));","lastModifiedDate":"2023-09-27"},{"lineNumber":101,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":102,"author":{"gitId":"StanleyW00"},"content":"        StringBuilder buffer \u003d new StringBuilder();","lastModifiedDate":"2023-09-27"},{"lineNumber":103,"author":{"gitId":"StanleyW00"},"content":"        String change \u003d isDone ? \"true\" : \"false\";","lastModifiedDate":"2023-10-01"},{"lineNumber":104,"author":{"gitId":"StanleyW00"},"content":"        int currentIndex \u003d 0;","lastModifiedDate":"2023-09-27"},{"lineNumber":105,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":106,"author":{"gitId":"StanleyW00"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2023-09-27"},{"lineNumber":107,"author":{"gitId":"StanleyW00"},"content":"            modifyTaskData(index, currentIndex, scanner, change, buffer);","lastModifiedDate":"2023-09-27"},{"lineNumber":108,"author":{"gitId":"StanleyW00"},"content":"            currentIndex++;","lastModifiedDate":"2023-09-27"},{"lineNumber":109,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":110,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":111,"author":{"gitId":"StanleyW00"},"content":"        FileWriter writer \u003d new FileWriter(DATA_PATH);","lastModifiedDate":"2023-09-27"},{"lineNumber":112,"author":{"gitId":"StanleyW00"},"content":"        writer.append(buffer.toString());","lastModifiedDate":"2023-09-27"},{"lineNumber":113,"author":{"gitId":"StanleyW00"},"content":"        writer.close();","lastModifiedDate":"2023-09-27"},{"lineNumber":114,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":115,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":116,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":117,"author":{"gitId":"StanleyW00"},"content":"     * Creates a new task based on a line from the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":118,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":119,"author":{"gitId":"StanleyW00"},"content":"     * @param scan The scanner that refers to the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":120,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":121,"author":{"gitId":"StanleyW00"},"content":"    private void createNewData(Scanner scan) {","lastModifiedDate":"2023-09-27"},{"lineNumber":122,"author":{"gitId":"StanleyW00"},"content":"        String[] parsedTask \u003d scan.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-09-27"},{"lineNumber":123,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":124,"author":{"gitId":"StanleyW00"},"content":"        String taskType \u003d parsedTask[0];","lastModifiedDate":"2023-09-27"},{"lineNumber":125,"author":{"gitId":"StanleyW00"},"content":"        String description \u003d parsedTask[2];","lastModifiedDate":"2023-09-30"},{"lineNumber":126,"author":{"gitId":"StanleyW00"},"content":"        String isDone \u003d parsedTask[1];","lastModifiedDate":"2023-09-30"},{"lineNumber":127,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":128,"author":{"gitId":"StanleyW00"},"content":"        switch (taskType) {","lastModifiedDate":"2023-09-27"},{"lineNumber":129,"author":{"gitId":"StanleyW00"},"content":"        case \"T\":","lastModifiedDate":"2023-09-27"},{"lineNumber":130,"author":{"gitId":"StanleyW00"},"content":"            tasksListPlaceholder.add(new Todo(description , isDone));","lastModifiedDate":"2023-09-30"},{"lineNumber":131,"author":{"gitId":"StanleyW00"},"content":"            break;","lastModifiedDate":"2023-09-27"},{"lineNumber":132,"author":{"gitId":"StanleyW00"},"content":"        case \"D\":","lastModifiedDate":"2023-09-27"},{"lineNumber":133,"author":{"gitId":"StanleyW00"},"content":"            LocalDateTime by \u003d parser.parseDateTime(parsedTask[3]);","lastModifiedDate":"2023-09-30"},{"lineNumber":134,"author":{"gitId":"StanleyW00"},"content":"            tasksListPlaceholder.add(new Deadline(description, isDone, by));","lastModifiedDate":"2023-09-30"},{"lineNumber":135,"author":{"gitId":"StanleyW00"},"content":"            break;","lastModifiedDate":"2023-09-27"},{"lineNumber":136,"author":{"gitId":"StanleyW00"},"content":"        case \"E\":","lastModifiedDate":"2023-09-27"},{"lineNumber":137,"author":{"gitId":"StanleyW00"},"content":"            LocalDateTime start \u003d parser.parseDateTime(parsedTask[3]);","lastModifiedDate":"2023-09-30"},{"lineNumber":138,"author":{"gitId":"StanleyW00"},"content":"            LocalDateTime end \u003d parser.parseDateTime(parsedTask[4]);","lastModifiedDate":"2023-09-30"},{"lineNumber":139,"author":{"gitId":"StanleyW00"},"content":"            tasksListPlaceholder.add(new Event(description, isDone, start, end));","lastModifiedDate":"2023-09-30"},{"lineNumber":140,"author":{"gitId":"StanleyW00"},"content":"            break;","lastModifiedDate":"2023-09-27"},{"lineNumber":141,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":142,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":143,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":144,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":145,"author":{"gitId":"StanleyW00"},"content":"     * Restores data of the previous session from the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":146,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":147,"author":{"gitId":"StanleyW00"},"content":"     * @return A list of tasks that is going to be included in task list.","lastModifiedDate":"2023-10-01"},{"lineNumber":148,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":149,"author":{"gitId":"StanleyW00"},"content":"    public ArrayList\u003cTask\u003e restoreSavedData() {","lastModifiedDate":"2023-09-28"},{"lineNumber":150,"author":{"gitId":"StanleyW00"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":151,"author":{"gitId":"StanleyW00"},"content":"            File file \u003d new File(DATA_PATH);","lastModifiedDate":"2023-09-27"},{"lineNumber":152,"author":{"gitId":"StanleyW00"},"content":"            Scanner scan \u003d new Scanner(file);","lastModifiedDate":"2023-09-27"},{"lineNumber":153,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":154,"author":{"gitId":"StanleyW00"},"content":"            while (scan.hasNext()) {","lastModifiedDate":"2023-09-27"},{"lineNumber":155,"author":{"gitId":"StanleyW00"},"content":"                createNewData(scan);","lastModifiedDate":"2023-09-27"},{"lineNumber":156,"author":{"gitId":"StanleyW00"},"content":"            }","lastModifiedDate":"2023-09-27"},{"lineNumber":157,"author":{"gitId":"StanleyW00"},"content":"        } catch (FileNotFoundException exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":158,"author":{"gitId":"StanleyW00"},"content":"            handleFileNotFoundException();","lastModifiedDate":"2023-09-28"},{"lineNumber":159,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":160,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":161,"author":{"gitId":"StanleyW00"},"content":"        return tasksListPlaceholder;","lastModifiedDate":"2023-09-27"},{"lineNumber":162,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":163,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":164,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":165,"author":{"gitId":"StanleyW00"},"content":"     * Creates a directory to store the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":166,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":167,"author":{"gitId":"StanleyW00"},"content":"     * @param newDirectory The directory that is going to be created.","lastModifiedDate":"2023-10-01"},{"lineNumber":168,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":169,"author":{"gitId":"StanleyW00"},"content":"    private void createDukeDirectory(File newDirectory) {","lastModifiedDate":"2023-09-27"},{"lineNumber":170,"author":{"gitId":"StanleyW00"},"content":"        if (!newDirectory.isDirectory() \u0026\u0026 newDirectory.mkdir()) {","lastModifiedDate":"2023-09-27"},{"lineNumber":171,"author":{"gitId":"StanleyW00"},"content":"            System.out.println(\"\\tDirectory successfully created!\");","lastModifiedDate":"2023-09-27"},{"lineNumber":172,"author":{"gitId":"StanleyW00"},"content":"        } else {","lastModifiedDate":"2023-09-27"},{"lineNumber":173,"author":{"gitId":"StanleyW00"},"content":"            System.out.println(\"\\tDirectory found!\");","lastModifiedDate":"2023-09-27"},{"lineNumber":174,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":175,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":176,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":177,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":178,"author":{"gitId":"StanleyW00"},"content":"     * Creates a file to store data.","lastModifiedDate":"2023-10-01"},{"lineNumber":179,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":180,"author":{"gitId":"StanleyW00"},"content":"     * @param newDatabase The file that is going to be created.","lastModifiedDate":"2023-10-01"},{"lineNumber":181,"author":{"gitId":"StanleyW00"},"content":"     * @throws IOException If there is an error in creating the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":182,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":183,"author":{"gitId":"StanleyW00"},"content":"    private void createDukeFile(File newDatabase) throws IOException {","lastModifiedDate":"2023-09-27"},{"lineNumber":184,"author":{"gitId":"StanleyW00"},"content":"        if (!newDatabase.isFile() \u0026\u0026 newDatabase.createNewFile()) {","lastModifiedDate":"2023-09-27"},{"lineNumber":185,"author":{"gitId":"StanleyW00"},"content":"            System.out.println(\"\\tData text file successfully created!\");","lastModifiedDate":"2023-09-27"},{"lineNumber":186,"author":{"gitId":"StanleyW00"},"content":"        } else {","lastModifiedDate":"2023-09-27"},{"lineNumber":187,"author":{"gitId":"StanleyW00"},"content":"            System.out.println(\"\\tText file found!\");","lastModifiedDate":"2023-09-27"},{"lineNumber":188,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":189,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":190,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":191,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":192,"author":{"gitId":"StanleyW00"},"content":"     * Appends all lines except the line with the deleted task.","lastModifiedDate":"2023-10-01"},{"lineNumber":193,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":194,"author":{"gitId":"StanleyW00"},"content":"     * @param index The index/row with the deleted task.","lastModifiedDate":"2023-10-01"},{"lineNumber":195,"author":{"gitId":"StanleyW00"},"content":"     * @param currentIndex Current index/row.","lastModifiedDate":"2023-10-01"},{"lineNumber":196,"author":{"gitId":"StanleyW00"},"content":"     * @param scanner The scanner that refers to the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":197,"author":{"gitId":"StanleyW00"},"content":"     * @param buffer A string builder that will be replacing the contents into the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":198,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":199,"author":{"gitId":"StanleyW00"},"content":"    private void excludeDeletedData(int index, int currentIndex, Scanner scanner, StringBuilder buffer) {","lastModifiedDate":"2023-09-27"},{"lineNumber":200,"author":{"gitId":"StanleyW00"},"content":"        if (currentIndex \u003d\u003d index) {","lastModifiedDate":"2023-09-27"},{"lineNumber":201,"author":{"gitId":"StanleyW00"},"content":"            scanner.nextLine();","lastModifiedDate":"2023-09-27"},{"lineNumber":202,"author":{"gitId":"StanleyW00"},"content":"        } else {","lastModifiedDate":"2023-09-27"},{"lineNumber":203,"author":{"gitId":"StanleyW00"},"content":"            if (buffer.length() \u003e 0) {","lastModifiedDate":"2023-09-27"},{"lineNumber":204,"author":{"gitId":"StanleyW00"},"content":"                buffer.append(System.lineSeparator());","lastModifiedDate":"2023-09-27"},{"lineNumber":205,"author":{"gitId":"StanleyW00"},"content":"            }","lastModifiedDate":"2023-09-27"},{"lineNumber":206,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":207,"author":{"gitId":"StanleyW00"},"content":"            buffer.append(scanner.nextLine());","lastModifiedDate":"2023-09-27"},{"lineNumber":208,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":209,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":210,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":211,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":212,"author":{"gitId":"StanleyW00"},"content":"     * Deletes a line of the deleted task in the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":213,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":214,"author":{"gitId":"StanleyW00"},"content":"     * @param index The index/row with the deleted task.","lastModifiedDate":"2023-10-01"},{"lineNumber":215,"author":{"gitId":"StanleyW00"},"content":"     * @throws IOException If there is an error related to access/modifying the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":216,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":217,"author":{"gitId":"StanleyW00"},"content":"    //Solution below adapted by https://www.tutorialspoint.com/how-to-overwrite-a-line-in-a-txt-file-using-java","lastModifiedDate":"2023-09-27"},{"lineNumber":218,"author":{"gitId":"StanleyW00"},"content":"    public void deleteTaskData(int index) throws IOException {","lastModifiedDate":"2023-09-27"},{"lineNumber":219,"author":{"gitId":"StanleyW00"},"content":"        Scanner scanner \u003d new Scanner(new File(DATA_PATH));","lastModifiedDate":"2023-09-27"},{"lineNumber":220,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":221,"author":{"gitId":"StanleyW00"},"content":"        StringBuilder buffer \u003d new StringBuilder();","lastModifiedDate":"2023-09-27"},{"lineNumber":222,"author":{"gitId":"StanleyW00"},"content":"        int currentIndex \u003d 0;","lastModifiedDate":"2023-09-27"},{"lineNumber":223,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":224,"author":{"gitId":"StanleyW00"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2023-09-27"},{"lineNumber":225,"author":{"gitId":"StanleyW00"},"content":"            excludeDeletedData(index, currentIndex, scanner, buffer);","lastModifiedDate":"2023-09-27"},{"lineNumber":226,"author":{"gitId":"StanleyW00"},"content":"            currentIndex++;","lastModifiedDate":"2023-09-27"},{"lineNumber":227,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":228,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":229,"author":{"gitId":"StanleyW00"},"content":"        scanner.close();","lastModifiedDate":"2023-09-27"},{"lineNumber":230,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":231,"author":{"gitId":"StanleyW00"},"content":"        FileWriter writer \u003d new FileWriter(DATA_PATH);","lastModifiedDate":"2023-09-27"},{"lineNumber":232,"author":{"gitId":"StanleyW00"},"content":"        writer.append(buffer.toString());","lastModifiedDate":"2023-09-27"},{"lineNumber":233,"author":{"gitId":"StanleyW00"},"content":"        writer.close();","lastModifiedDate":"2023-09-27"},{"lineNumber":234,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":235,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":236,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":237,"author":{"gitId":"StanleyW00"},"content":"     * Creates the missing directory and file for storing data.","lastModifiedDate":"2023-10-01"},{"lineNumber":238,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":239,"author":{"gitId":"StanleyW00"},"content":"    public void handleFileNotFoundException() {","lastModifiedDate":"2023-09-27"},{"lineNumber":240,"author":{"gitId":"StanleyW00"},"content":"        ui.showLine();","lastModifiedDate":"2023-09-27"},{"lineNumber":241,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tLooks like I can\u0027t find the file. Let me make it for you.\");","lastModifiedDate":"2023-09-27"},{"lineNumber":242,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":243,"author":{"gitId":"StanleyW00"},"content":"        File newDirectory \u003d new File(DATA_DIRECTORY);","lastModifiedDate":"2023-09-27"},{"lineNumber":244,"author":{"gitId":"StanleyW00"},"content":"        File newDatabase \u003d new File(DATA_PATH);","lastModifiedDate":"2023-09-27"},{"lineNumber":245,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":246,"author":{"gitId":"StanleyW00"},"content":"        try {","lastModifiedDate":"2023-09-27"},{"lineNumber":247,"author":{"gitId":"StanleyW00"},"content":"            createDukeDirectory(newDirectory);","lastModifiedDate":"2023-09-27"},{"lineNumber":248,"author":{"gitId":"StanleyW00"},"content":"            createDukeFile(newDatabase);","lastModifiedDate":"2023-09-27"},{"lineNumber":249,"author":{"gitId":"StanleyW00"},"content":"        } catch (IOException exception){","lastModifiedDate":"2023-09-27"},{"lineNumber":250,"author":{"gitId":"StanleyW00"},"content":"            ui.handleIOException(exception);","lastModifiedDate":"2023-09-27"},{"lineNumber":251,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":252,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":253,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tPlease try to run the app again.\");","lastModifiedDate":"2023-09-27"},{"lineNumber":254,"author":{"gitId":"StanleyW00"},"content":"        ui.showLine();","lastModifiedDate":"2023-09-27"},{"lineNumber":255,"author":{"gitId":"StanleyW00"},"content":"        System.exit(-1);","lastModifiedDate":"2023-09-30"},{"lineNumber":256,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":257,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"StanleyW00":257}},{"path":"src/main/java/mudmud/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.task;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.parser.Parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":" * Represents a deadline in the list.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"     * Creates a new todo.","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"     * @param by The due date of the task.","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"     * Creates a deadline from the previous session.","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"     * @param isDone Status of whether it is marked or unmarked.","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"     * @param by The due date of the task.","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"    public Deadline(String description, String isDone, LocalDateTime by) {","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"StanleyW00"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"StanleyW00"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"StanleyW00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":42,"author":{"gitId":"StanleyW00"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"StanleyW00"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"StanleyW00"},"content":"        String byString \u003d parser.convertDateTimetoString(by);","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"StanleyW00"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byString + \")\";","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"StanleyW00":47}},{"path":"src/main/java/mudmud/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.task;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.parser.Parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":" * Represents an event in the list.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"public class Event extends Task{","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"     * Creates a new event.","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"     * @param start The start date of the task.","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"     * @param end The end date of the task.","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"     * Creates an event from the previous session.","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"     * @param isDone Status of whether it is marked or unmarked.","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"     * @param start The start date of the task.","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"StanleyW00"},"content":"     * @param end The end date of the task.","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"StanleyW00"},"content":"    public Event(String description, String isDone, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"StanleyW00"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"StanleyW00"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"StanleyW00"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"StanleyW00"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"StanleyW00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-10-01"},{"lineNumber":46,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"StanleyW00"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"StanleyW00"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"StanleyW00"},"content":"        String startString  \u003d parser.convertDateTimetoString(start);","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"StanleyW00"},"content":"        String endString \u003d parser.convertDateTimetoString(end);","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"StanleyW00"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startString + \" to: \" + endString + \")\";","lastModifiedDate":"2023-09-29"},{"lineNumber":52,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"StanleyW00":53}},{"path":"src/main/java/mudmud/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.task;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":" * Represents a task in the list.","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"    private String description;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":"     * Creates a new task.","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"     * Creates a task from the previous session.","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"     * @param isDone Status of whether it is marked or unmarked.","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"    public Task(String description, String isDone) {","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"        this.isDone \u003d isDone.equals(\"true\");","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"     * Returns a status icon based on isDone.","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"     * @return A status icon.","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"StanleyW00"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"StanleyW00"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"StanleyW00"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"StanleyW00"},"content":"        return description;","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"StanleyW00"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"StanleyW00"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"StanleyW00"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"StanleyW00"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":53,"author":{"gitId":"StanleyW00"},"content":"     * Returns a string representation of a task.","lastModifiedDate":"2023-10-01"},{"lineNumber":54,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"StanleyW00"},"content":"     * @return A string that is going to be printed.","lastModifiedDate":"2023-10-01"},{"lineNumber":56,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"StanleyW00"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"StanleyW00"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"StanleyW00"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"StanleyW00":61}},{"path":"src/main/java/mudmud/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.task;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":" * Represents a todo in the list.","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"     * Creates a new todo.","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"     * Creates a todo from the previous session.","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"     * @param isDone Status of whether it is marked or unmarked.","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"    public Todo(String description, String isDone) {","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"StanleyW00":34}},{"path":"src/main/java/mudmud/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.tasklist;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.exception.DukeTaskException;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"import mudmud.parser.Parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"import mudmud.task.Deadline;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"import mudmud.task.Event;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"import mudmud.task.Task;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"import mudmud.task.Todo;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"import mudmud.ui.TextUi;","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":" * Represents a list of tasks and contains all tasks available in the program.","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"public class TaskList {","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"    private final String TODO_DATA_TEMPLATE \u003d \"T | false | \" ;","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"    private final String DEADLINE_DATA_TEMPLATE \u003d \"D | false | \";","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"    private final String EVENT_DATA_TEMPLATE \u003d \"E | false | \";","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"    private final String BY_KEYWORD \u003d \" /by \";","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"    private final String FROM_KEYWORD \u003d \" /from \";","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"    private final String TO_KEYWORD \u003d \" /to \";","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"    private TextUi ui;","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"    private int tasksCount;","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"     * Creates a task list with saved tasks.","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"StanleyW00"},"content":"     * @param tasks The saved tasks from previous session.","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"StanleyW00"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks)  {","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"StanleyW00"},"content":"        ui \u003d new TextUi();","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"StanleyW00"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"StanleyW00"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"StanleyW00"},"content":"        tasksCount \u003d tasks.size();","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"StanleyW00"},"content":"    public int getTasksCount() {","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"StanleyW00"},"content":"        return tasksCount;","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":50,"author":{"gitId":"StanleyW00"},"content":"     * Gets a task from the list with a specified index.","lastModifiedDate":"2023-10-01"},{"lineNumber":51,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":52,"author":{"gitId":"StanleyW00"},"content":"     * @param index The specified index.","lastModifiedDate":"2023-10-01"},{"lineNumber":53,"author":{"gitId":"StanleyW00"},"content":"     * @return The task with the specified index.","lastModifiedDate":"2023-10-01"},{"lineNumber":54,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"StanleyW00"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"StanleyW00"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":60,"author":{"gitId":"StanleyW00"},"content":"     * Gets the most recent added task from the list.","lastModifiedDate":"2023-10-01"},{"lineNumber":61,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":62,"author":{"gitId":"StanleyW00"},"content":"     * @return The recent task.","lastModifiedDate":"2023-10-01"},{"lineNumber":63,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":64,"author":{"gitId":"StanleyW00"},"content":"    public Task getRecentTask() {","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"StanleyW00"},"content":"        return tasks.get(tasksCount - 1);","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":69,"author":{"gitId":"StanleyW00"},"content":"     * Marks a task with the specified index.","lastModifiedDate":"2023-10-01"},{"lineNumber":70,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":71,"author":{"gitId":"StanleyW00"},"content":"     * @param index The selected index.","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":73,"author":{"gitId":"StanleyW00"},"content":"    public void setMarkAsDone(int index) {","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"StanleyW00"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2023-09-27"},{"lineNumber":75,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":76,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":77,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":78,"author":{"gitId":"StanleyW00"},"content":"     * Unmarks a task with the specified index.","lastModifiedDate":"2023-10-01"},{"lineNumber":79,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":80,"author":{"gitId":"StanleyW00"},"content":"     * @param index The selected index.","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":82,"author":{"gitId":"StanleyW00"},"content":"    public void setUnmarkAsDone(int index) {","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"StanleyW00"},"content":"        tasks.get(index).unmarkAsDone();","lastModifiedDate":"2023-09-27"},{"lineNumber":84,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":85,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":86,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":87,"author":{"gitId":"StanleyW00"},"content":"     * Deletes a task with the given index in the list.","lastModifiedDate":"2023-10-01"},{"lineNumber":88,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":89,"author":{"gitId":"StanleyW00"},"content":"     * @param input The selected index.","lastModifiedDate":"2023-10-01"},{"lineNumber":90,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":91,"author":{"gitId":"StanleyW00"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"StanleyW00"},"content":"        Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2023-09-27"},{"lineNumber":93,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":94,"author":{"gitId":"StanleyW00"},"content":"        ui.printDeletedTask(removedTask);","lastModifiedDate":"2023-09-27"},{"lineNumber":95,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":96,"author":{"gitId":"StanleyW00"},"content":"        tasksCount--;","lastModifiedDate":"2023-09-27"},{"lineNumber":97,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":98,"author":{"gitId":"StanleyW00"},"content":"        ui.printNumOfTasks(tasksCount);","lastModifiedDate":"2023-09-27"},{"lineNumber":99,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":100,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":101,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":102,"author":{"gitId":"StanleyW00"},"content":"     * Adds a todo into the task list.","lastModifiedDate":"2023-10-01"},{"lineNumber":103,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":104,"author":{"gitId":"StanleyW00"},"content":"     * @param input The task input.","lastModifiedDate":"2023-10-01"},{"lineNumber":105,"author":{"gitId":"StanleyW00"},"content":"     * @return A data string that will be stored in the database.","lastModifiedDate":"2023-10-01"},{"lineNumber":106,"author":{"gitId":"StanleyW00"},"content":"     * @throws DukeTaskException If an input has an invalid format.","lastModifiedDate":"2023-10-01"},{"lineNumber":107,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":108,"author":{"gitId":"StanleyW00"},"content":"    public String addTodo(String input) throws DukeTaskException {","lastModifiedDate":"2023-09-28"},{"lineNumber":109,"author":{"gitId":"StanleyW00"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2023-10-01"},{"lineNumber":110,"author":{"gitId":"StanleyW00"},"content":"            throw new DukeTaskException();","lastModifiedDate":"2023-09-27"},{"lineNumber":111,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":112,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":113,"author":{"gitId":"StanleyW00"},"content":"        tasks.add(new Todo(input.trim()));","lastModifiedDate":"2023-09-27"},{"lineNumber":114,"author":{"gitId":"StanleyW00"},"content":"        tasksCount++;","lastModifiedDate":"2023-09-27"},{"lineNumber":115,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":116,"author":{"gitId":"StanleyW00"},"content":"        return TODO_DATA_TEMPLATE + input.trim();","lastModifiedDate":"2023-09-28"},{"lineNumber":117,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":118,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":119,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":120,"author":{"gitId":"StanleyW00"},"content":"     * Adds an event into the task list.","lastModifiedDate":"2023-10-01"},{"lineNumber":121,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":122,"author":{"gitId":"StanleyW00"},"content":"     * @param input The task input.","lastModifiedDate":"2023-10-01"},{"lineNumber":123,"author":{"gitId":"StanleyW00"},"content":"     * @return A data string that will be stored in the database.","lastModifiedDate":"2023-10-01"},{"lineNumber":124,"author":{"gitId":"StanleyW00"},"content":"     * @throws DukeTaskException If an input has an invalid format.","lastModifiedDate":"2023-10-01"},{"lineNumber":125,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":126,"author":{"gitId":"StanleyW00"},"content":"    public String addDeadline(String input) throws DukeTaskException {","lastModifiedDate":"2023-09-28"},{"lineNumber":127,"author":{"gitId":"StanleyW00"},"content":"        String[] parsedInput \u003d parser.parseTask(input, BY_KEYWORD);","lastModifiedDate":"2023-09-28"},{"lineNumber":128,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":129,"author":{"gitId":"StanleyW00"},"content":"        if (!(parsedInput.length \u003d\u003d 2)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":130,"author":{"gitId":"StanleyW00"},"content":"            throw new DukeTaskException();","lastModifiedDate":"2023-09-27"},{"lineNumber":131,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":132,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":133,"author":{"gitId":"StanleyW00"},"content":"        LocalDateTime by \u003d parser.parseDateTime(parsedInput[1].trim());","lastModifiedDate":"2023-09-29"},{"lineNumber":134,"author":{"gitId":"StanleyW00"},"content":"        String description \u003d parsedInput[0].trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":135,"author":{"gitId":"StanleyW00"},"content":"        String byBeforeParse \u003d parsedInput[1].trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":136,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":137,"author":{"gitId":"StanleyW00"},"content":"        tasks.add(new Deadline(description, by));","lastModifiedDate":"2023-09-29"},{"lineNumber":138,"author":{"gitId":"StanleyW00"},"content":"        tasksCount++;","lastModifiedDate":"2023-09-27"},{"lineNumber":139,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":140,"author":{"gitId":"StanleyW00"},"content":"        return DEADLINE_DATA_TEMPLATE + description + \" | \"  + byBeforeParse;","lastModifiedDate":"2023-09-29"},{"lineNumber":141,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":142,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":143,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":144,"author":{"gitId":"StanleyW00"},"content":"     * Checks the number of each event keywords in the input.","lastModifiedDate":"2023-10-01"},{"lineNumber":145,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":146,"author":{"gitId":"StanleyW00"},"content":"     * @param input The task input.","lastModifiedDate":"2023-10-01"},{"lineNumber":147,"author":{"gitId":"StanleyW00"},"content":"     * @return Confirmation if the number of keywords are correct.","lastModifiedDate":"2023-10-01"},{"lineNumber":148,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":149,"author":{"gitId":"StanleyW00"},"content":"    private boolean checkNumOfEventKeywords(String input) {","lastModifiedDate":"2023-10-01"},{"lineNumber":150,"author":{"gitId":"StanleyW00"},"content":"        int numOfFromKeyword \u003d input.split(FROM_KEYWORD).length - 1;","lastModifiedDate":"2023-09-27"},{"lineNumber":151,"author":{"gitId":"StanleyW00"},"content":"        int numOfToKeyword \u003d input.split(TO_KEYWORD).length - 1;","lastModifiedDate":"2023-09-27"},{"lineNumber":152,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":153,"author":{"gitId":"StanleyW00"},"content":"        return numOfFromKeyword \u003d\u003d 1 \u0026\u0026 numOfToKeyword \u003d\u003d 1;","lastModifiedDate":"2023-09-27"},{"lineNumber":154,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":155,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":156,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":157,"author":{"gitId":"StanleyW00"},"content":"     * Checks the input\u0027s event keywords are in order.","lastModifiedDate":"2023-10-01"},{"lineNumber":158,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":159,"author":{"gitId":"StanleyW00"},"content":"     * @param input The task input.","lastModifiedDate":"2023-10-01"},{"lineNumber":160,"author":{"gitId":"StanleyW00"},"content":"     * @return Confirmation if the input\u0027s keywords are in the right sequence.","lastModifiedDate":"2023-10-01"},{"lineNumber":161,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":162,"author":{"gitId":"StanleyW00"},"content":"    private boolean checkPosOfEventKeywords(String input) {","lastModifiedDate":"2023-10-01"},{"lineNumber":163,"author":{"gitId":"StanleyW00"},"content":"        return input.indexOf(FROM_KEYWORD) \u003c input.indexOf(TO_KEYWORD);","lastModifiedDate":"2023-09-27"},{"lineNumber":164,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":165,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":166,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":167,"author":{"gitId":"StanleyW00"},"content":"     * Adds an event into the task list.","lastModifiedDate":"2023-10-01"},{"lineNumber":168,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":169,"author":{"gitId":"StanleyW00"},"content":"     * @param input The task input.","lastModifiedDate":"2023-10-01"},{"lineNumber":170,"author":{"gitId":"StanleyW00"},"content":"     * @return A data string that will be stored in the database.","lastModifiedDate":"2023-10-01"},{"lineNumber":171,"author":{"gitId":"StanleyW00"},"content":"     * @throws DukeTaskException If an input has an invalid format.","lastModifiedDate":"2023-10-01"},{"lineNumber":172,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":173,"author":{"gitId":"StanleyW00"},"content":"    public String addEvent(String input) throws DukeTaskException {","lastModifiedDate":"2023-10-01"},{"lineNumber":174,"author":{"gitId":"StanleyW00"},"content":"        if (!checkNumOfEventKeywords(input) || !checkPosOfEventKeywords(input)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":175,"author":{"gitId":"StanleyW00"},"content":"            throw new DukeTaskException();","lastModifiedDate":"2023-09-27"},{"lineNumber":176,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":177,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":178,"author":{"gitId":"StanleyW00"},"content":"        String regex \u003d FROM_KEYWORD + \"|\" + TO_KEYWORD;","lastModifiedDate":"2023-09-28"},{"lineNumber":179,"author":{"gitId":"StanleyW00"},"content":"        String[] parsedInput \u003d parser.parseTask(input, regex);","lastModifiedDate":"2023-09-28"},{"lineNumber":180,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":181,"author":{"gitId":"StanleyW00"},"content":"        LocalDateTime start \u003d parser.parseDateTime(parsedInput[1].trim());","lastModifiedDate":"2023-09-29"},{"lineNumber":182,"author":{"gitId":"StanleyW00"},"content":"        LocalDateTime end \u003d parser.parseDateTime(parsedInput[2].trim());","lastModifiedDate":"2023-09-29"},{"lineNumber":183,"author":{"gitId":"StanleyW00"},"content":"        String description \u003d parsedInput[0].trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":184,"author":{"gitId":"StanleyW00"},"content":"        String startBeforeParse \u003d parsedInput[1].trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":185,"author":{"gitId":"StanleyW00"},"content":"        String endBeforeParse \u003d parsedInput[2].trim();","lastModifiedDate":"2023-09-29"},{"lineNumber":186,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":187,"author":{"gitId":"StanleyW00"},"content":"        tasks.add(new Event(description, start, end));","lastModifiedDate":"2023-09-29"},{"lineNumber":188,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":189,"author":{"gitId":"StanleyW00"},"content":"        String dataString \u003d EVENT_DATA_TEMPLATE + description + \" | \"  + startBeforeParse","lastModifiedDate":"2023-09-29"},{"lineNumber":190,"author":{"gitId":"StanleyW00"},"content":"                + \" | \" + endBeforeParse;","lastModifiedDate":"2023-09-29"},{"lineNumber":191,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":192,"author":{"gitId":"StanleyW00"},"content":"        tasksCount++;","lastModifiedDate":"2023-09-27"},{"lineNumber":193,"author":{"gitId":"StanleyW00"},"content":"        return dataString;","lastModifiedDate":"2023-09-28"},{"lineNumber":194,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":195,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":196,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":197,"author":{"gitId":"StanleyW00"},"content":"     * Filters out tasks that do not have their description matches with the keyword.","lastModifiedDate":"2023-10-01"},{"lineNumber":198,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":199,"author":{"gitId":"StanleyW00"},"content":"     * @param keyword The selected keyword to match.","lastModifiedDate":"2023-10-01"},{"lineNumber":200,"author":{"gitId":"StanleyW00"},"content":"     * @return The filtered list.","lastModifiedDate":"2023-10-01"},{"lineNumber":201,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":202,"author":{"gitId":"StanleyW00"},"content":"    public ArrayList\u003cTask\u003e filterTasks(String keyword) {","lastModifiedDate":"2023-09-30"},{"lineNumber":203,"author":{"gitId":"StanleyW00"},"content":"         ArrayList\u003cTask\u003e filteredList \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2023-09-30"},{"lineNumber":204,"author":{"gitId":"StanleyW00"},"content":"                 .filter((task) -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2023-09-30"},{"lineNumber":205,"author":{"gitId":"StanleyW00"},"content":"                 .collect(toList());","lastModifiedDate":"2023-09-30"},{"lineNumber":206,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":207,"author":{"gitId":"StanleyW00"},"content":"         return filteredList;","lastModifiedDate":"2023-09-30"},{"lineNumber":208,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":209,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"StanleyW00":209}},{"path":"src/main/java/mudmud/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"package mudmud.ui;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"import mudmud.task.Task;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"import mudmud.tasklist.TaskList;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":" * The UI of the application.","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"StanleyW00"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"StanleyW00"},"content":"public class TextUi {","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"StanleyW00"},"content":"    private static final String NAME \u003d \"MudMud\";","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"StanleyW00"},"content":"    private static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"StanleyW00"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"StanleyW00"},"content":"     * Prints out greeting when booting up the app.","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"StanleyW00"},"content":"    public void tellGreeting() {","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"StanleyW00"},"content":"        showLine();","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tOh hello! I\u0027m \" + NAME + \".\");","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tHow can I help you today?\");","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"StanleyW00"},"content":"        showLine();","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"StanleyW00"},"content":"     * Prints our goodbye message when exiting the app.","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"StanleyW00"},"content":"    public void tellGoodbye() {","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tGoodbye! I am going to sleep now.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"StanleyW00"},"content":"     * Prints out the number of tasks currently in the app.","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"StanleyW00"},"content":"     * @param tasksCount The number of tasks in the list.","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"StanleyW00"},"content":"    public void printNumOfTasks(int tasksCount) {","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tI took a peak at the list and you have \" + tasksCount","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"StanleyW00"},"content":"                + (tasksCount \u003d\u003d 1 ? \" task\" : \" tasks\") + \" currently.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"StanleyW00"},"content":"     * Prints out the most recent added task.","lastModifiedDate":"2023-10-01"},{"lineNumber":48,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"StanleyW00"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-10-01"},{"lineNumber":50,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":51,"author":{"gitId":"StanleyW00"},"content":"    public void printRecentTask(TaskList tasks) {","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tI have added the following task into the list:\");","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\t\\t\" + tasks.getRecentTask());","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"StanleyW00"},"content":"        printNumOfTasks(tasks.getTasksCount());","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":58,"author":{"gitId":"StanleyW00"},"content":"     * Prints out all the task in the list.","lastModifiedDate":"2023-10-01"},{"lineNumber":59,"author":{"gitId":"StanleyW00"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-10-01"},{"lineNumber":60,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":61,"author":{"gitId":"StanleyW00"},"content":"    public void printTasks(TaskList tasks) {","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tHere are your tasks you have inputted:\");","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"StanleyW00"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getTasksCount(); i++) {","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"StanleyW00"},"content":"            System.out.println(\"\\t\" + i + \".\" + tasks.getTask(i - 1));","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":66,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":67,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":68,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":69,"author":{"gitId":"StanleyW00"},"content":"     * Prints out a horizontal line.","lastModifiedDate":"2023-10-01"},{"lineNumber":70,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":71,"author":{"gitId":"StanleyW00"},"content":"    public void showLine() {","lastModifiedDate":"2023-09-26"},{"lineNumber":72,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\t\" + HORIZONTAL_LINE);","lastModifiedDate":"2023-09-26"},{"lineNumber":73,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":74,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":75,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":76,"author":{"gitId":"StanleyW00"},"content":"     * Prints out the deleted task.","lastModifiedDate":"2023-10-01"},{"lineNumber":77,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":78,"author":{"gitId":"StanleyW00"},"content":"     * @param removedTask The deleted task.","lastModifiedDate":"2023-10-01"},{"lineNumber":79,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":80,"author":{"gitId":"StanleyW00"},"content":"    public void printDeletedTask(Task removedTask) {","lastModifiedDate":"2023-09-26"},{"lineNumber":81,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tI have surgically removed this task:\");","lastModifiedDate":"2023-09-26"},{"lineNumber":82,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\t\\t\" + removedTask);","lastModifiedDate":"2023-09-26"},{"lineNumber":83,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":84,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":85,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":86,"author":{"gitId":"StanleyW00"},"content":"     * Prints out the task that is modified.","lastModifiedDate":"2023-10-01"},{"lineNumber":87,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":88,"author":{"gitId":"StanleyW00"},"content":"     * @param task The task that is being modified.","lastModifiedDate":"2023-10-01"},{"lineNumber":89,"author":{"gitId":"StanleyW00"},"content":"     * @param isMarking Status of whether it is marked or unmarked.","lastModifiedDate":"2023-10-01"},{"lineNumber":90,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":91,"author":{"gitId":"StanleyW00"},"content":"    public void printModifiedTask(Task task, boolean isMarking) {","lastModifiedDate":"2023-10-01"},{"lineNumber":92,"author":{"gitId":"StanleyW00"},"content":"        if (isMarking) {","lastModifiedDate":"2023-09-26"},{"lineNumber":93,"author":{"gitId":"StanleyW00"},"content":"            System.out.println(\"\\tYay! You have completed this task:\");","lastModifiedDate":"2023-09-26"},{"lineNumber":94,"author":{"gitId":"StanleyW00"},"content":"        } else {","lastModifiedDate":"2023-09-26"},{"lineNumber":95,"author":{"gitId":"StanleyW00"},"content":"            System.out.println(\"\\tOh no! It seems that you haven\u0027t finish this task:\");","lastModifiedDate":"2023-09-26"},{"lineNumber":96,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":97,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":98,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\t\\t\" + task);","lastModifiedDate":"2023-10-01"},{"lineNumber":99,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":100,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":101,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":102,"author":{"gitId":"StanleyW00"},"content":"     * Prints out all tasks from a filtered list.","lastModifiedDate":"2023-10-01"},{"lineNumber":103,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":104,"author":{"gitId":"StanleyW00"},"content":"     * @param tasks The filtered task list.","lastModifiedDate":"2023-10-01"},{"lineNumber":105,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":106,"author":{"gitId":"StanleyW00"},"content":"    public void printFilteredTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-30"},{"lineNumber":107,"author":{"gitId":"StanleyW00"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":108,"author":{"gitId":"StanleyW00"},"content":"            System.out.println(\"\\tSorry, it seems I can not find the tasks with the keyword.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":109,"author":{"gitId":"StanleyW00"},"content":"            return;","lastModifiedDate":"2023-09-30"},{"lineNumber":110,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":111,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":112,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tHere are the matching tasks in the list:\");","lastModifiedDate":"2023-09-30"},{"lineNumber":113,"author":{"gitId":"StanleyW00"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-09-30"},{"lineNumber":114,"author":{"gitId":"StanleyW00"},"content":"            System.out.println(\"\\t\" + i + \".\" + tasks.get(i - 1));","lastModifiedDate":"2023-09-30"},{"lineNumber":115,"author":{"gitId":"StanleyW00"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":116,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":117,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":118,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":119,"author":{"gitId":"StanleyW00"},"content":"     * Sends out an error message that the user trying to access an invalid index.","lastModifiedDate":"2023-10-01"},{"lineNumber":120,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":121,"author":{"gitId":"StanleyW00"},"content":"     * @param tasksCount The number of tasks in the list.","lastModifiedDate":"2023-10-01"},{"lineNumber":122,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":123,"author":{"gitId":"StanleyW00"},"content":"    public void handleIndexOutOfBoundsException(int tasksCount) {","lastModifiedDate":"2023-09-26"},{"lineNumber":124,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tUmm, you tried to access a task that does not exist.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":125,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tPerhaps you should put a valid number based on the number of tasks \" +","lastModifiedDate":"2023-09-26"},{"lineNumber":126,"author":{"gitId":"StanleyW00"},"content":"                \"you have currently. \");","lastModifiedDate":"2023-09-26"},{"lineNumber":127,"author":{"gitId":"StanleyW00"},"content":"        printNumOfTasks(tasksCount);","lastModifiedDate":"2023-09-26"},{"lineNumber":128,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":129,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":130,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":131,"author":{"gitId":"StanleyW00"},"content":"     * Sends out an error message that the index can not be converted into an integer.","lastModifiedDate":"2023-10-01"},{"lineNumber":132,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":133,"author":{"gitId":"StanleyW00"},"content":"     * @param number The index of the input.","lastModifiedDate":"2023-10-01"},{"lineNumber":134,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":135,"author":{"gitId":"StanleyW00"},"content":"    public void handleNumberFormatException(String number) {","lastModifiedDate":"2023-10-01"},{"lineNumber":136,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tPlease use a valid number for marking or unmarking a task.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":137,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tThe number you tried to input is: \" + number);","lastModifiedDate":"2023-10-01"},{"lineNumber":138,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":139,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":140,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":141,"author":{"gitId":"StanleyW00"},"content":"     * Sends out an error message relating to the file.","lastModifiedDate":"2023-10-01"},{"lineNumber":142,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":143,"author":{"gitId":"StanleyW00"},"content":"     * @param exception IoException","lastModifiedDate":"2023-10-01"},{"lineNumber":144,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":145,"author":{"gitId":"StanleyW00"},"content":"    public void handleIOException(IOException exception) {","lastModifiedDate":"2023-09-26"},{"lineNumber":146,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tSomething went wrong! Please try again!\");","lastModifiedDate":"2023-09-29"},{"lineNumber":147,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\t\" + exception.getMessage());","lastModifiedDate":"2023-09-29"},{"lineNumber":148,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":149,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":150,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":151,"author":{"gitId":"StanleyW00"},"content":"     * Sends out an error message that the DateTime format is incorrect in the input.","lastModifiedDate":"2023-10-01"},{"lineNumber":152,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":153,"author":{"gitId":"StanleyW00"},"content":"    public void handleDateTimeException(){","lastModifiedDate":"2023-09-29"},{"lineNumber":154,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\tPlease insert your specified date with the format below:\");","lastModifiedDate":"2023-09-29"},{"lineNumber":155,"author":{"gitId":"StanleyW00"},"content":"        System.out.println(\"\\t\\t\" + DATE_TIME_FORMAT);","lastModifiedDate":"2023-09-29"},{"lineNumber":156,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":157,"author":{"gitId":"StanleyW00"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":158,"author":{"gitId":"StanleyW00"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":159,"author":{"gitId":"StanleyW00"},"content":"     * Asks for the user to type an input into the application.","lastModifiedDate":"2023-10-01"},{"lineNumber":160,"author":{"gitId":"StanleyW00"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":161,"author":{"gitId":"StanleyW00"},"content":"     * @return The typed input.","lastModifiedDate":"2023-10-01"},{"lineNumber":162,"author":{"gitId":"StanleyW00"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":163,"author":{"gitId":"StanleyW00"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-28"},{"lineNumber":164,"author":{"gitId":"StanleyW00"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-28"},{"lineNumber":165,"author":{"gitId":"StanleyW00"},"content":"        return in.nextLine().trim();","lastModifiedDate":"2023-09-27"},{"lineNumber":166,"author":{"gitId":"StanleyW00"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":167,"author":{"gitId":"StanleyW00"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"StanleyW00":167}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"StanleyW00"},"content":"todo borrow book","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"StanleyW00"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"StanleyW00"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"StanleyW00"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"StanleyW00"},"content":"list","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"StanleyW00"},"content":"mark 2","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"StanleyW00"},"content":"mark 4","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"StanleyW00"},"content":"list","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"StanleyW00"},"content":"unmark 4","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"StanleyW00"},"content":"list","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"StanleyW00"},"content":"bye","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"StanleyW00":11}}]
