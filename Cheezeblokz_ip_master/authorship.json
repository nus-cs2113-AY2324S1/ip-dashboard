[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheezeblokz"},"content":"import javax.sound.midi.SysexMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"Cheezeblokz"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Cheezeblokz"},"content":"        partition();","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Cheezeblokz"},"content":"        // name of the robot in ASCII art","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Cheezeblokz"},"content":"        String name \u003d \" _____ _                       _     _       _         \\n\" +","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Cheezeblokz"},"content":"                \"/  __ \\\\ |                     | |   | |     | |        \\n\" +","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Cheezeblokz"},"content":"                \"| /  \\\\/ |__   ___  ___ _______| |__ | | ___ | | __ ____\\n\" +","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Cheezeblokz"},"content":"                \"| |   | \u0027_ \\\\ / _ \\\\/ _ \\\\_  / _ \\\\ \u0027_ \\\\| |/ _ \\\\| |/ /|_  /\\n\" +","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Cheezeblokz"},"content":"                \"| \\\\__/\\\\ | | |  __/  __// /  __/ |_) | | (_) |   \u003c  / / \\n\" +","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Cheezeblokz"},"content":"                \" \\\\____/_| |_|\\\\___|\\\\___/___\\\\___|_.__/|_|\\\\___/|_|\\\\_\\\\/___|\";","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Cheezeblokz"},"content":"        // introduction and initial prompt for user input","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Cheezeblokz"},"content":"        System.out.print(\"Hello! My name is:\\n\" + name + \"\\n\\n\" +","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Cheezeblokz"},"content":"                \"What can I do for you today? :)\\n\" + \"\u003e\u003e\");","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Cheezeblokz"},"content":"        // Scanner object for getting user input from the terminal","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Cheezeblokz"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Cheezeblokz"},"content":"        // string to monitor current user input","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Cheezeblokz"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Cheezeblokz"},"content":"        // string array for storing all user inputs, and integer indexer to monitor size of array,","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Cheezeblokz"},"content":"        // assume user inputs do not exceed 100","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Cheezeblokz"},"content":"        String[] userInputs \u003d new String[100];","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"Cheezeblokz"},"content":"        int userInputsIndex \u003d 0;","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"Cheezeblokz"},"content":"        // exit if \u0027bye\u0027 command is given, else keep prompting for user input","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"Cheezeblokz"},"content":"        while(!userInput.equalsIgnoreCase(\"bye\"))","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"Cheezeblokz"},"content":"        {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"Cheezeblokz"},"content":"            // if list command is given, list out all previous user inputs,","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"Cheezeblokz"},"content":"            // else proceed to store it in the string array userInputs","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"Cheezeblokz"},"content":"            if (userInput.equalsIgnoreCase(\"list\"))","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"Cheezeblokz"},"content":"            {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"Cheezeblokz"},"content":"                // if list is empty, print \u0027no item\u0027 message instead of list items","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"Cheezeblokz"},"content":"                if(userInputsIndex \u003d\u003d 0)","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"Cheezeblokz"},"content":"                {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"Cheezeblokz"},"content":"                    System.out.println(\"No item stored in your list! :o\");","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"Cheezeblokz"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"Cheezeblokz"},"content":"                else","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"Cheezeblokz"},"content":"                {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"Cheezeblokz"},"content":"                    // custom message","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"Cheezeblokz"},"content":"                    System.out.println(\"Here are the item(s) in your list. :)\");","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"Cheezeblokz"},"content":"                    // print out list items and number each item","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"Cheezeblokz"},"content":"                    for(int i \u003d 0;i \u003c userInputsIndex;i++)","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"Cheezeblokz"},"content":"                    {","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"Cheezeblokz"},"content":"                        System.out.println(i+1 + \". \" + userInputs[i]);","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"Cheezeblokz"},"content":"                    }","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"Cheezeblokz"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"Cheezeblokz"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"Cheezeblokz"},"content":"            else","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"Cheezeblokz"},"content":"            {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"Cheezeblokz"},"content":"                userInputs[userInputsIndex] \u003d userInput; // Store user input into array","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"Cheezeblokz"},"content":"                userInputsIndex++; // Increase String array index\\","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"Cheezeblokz"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"Cheezeblokz"},"content":"            partition();","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"Cheezeblokz"},"content":"            // prompt user for input and store it in userInput","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"Cheezeblokz"},"content":"            System.out.print(\"What do you want to do next? :o\\n\" + \"\u003e\u003e\");","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"Cheezeblokz"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"Cheezeblokz"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"Cheezeblokz"},"content":"        // program exit statement","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"Cheezeblokz"},"content":"        System.out.println(\" Bye. Hope to see you again soon! :D\");","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"Cheezeblokz"},"content":"        partition();","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"Cheezeblokz"},"content":"        System.out.println(\"                          -END-                             \");","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"Cheezeblokz"},"content":"    // private function to print a stream of underscores for partitioning robot conversation","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"Cheezeblokz"},"content":"    private static void partition(){","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"Cheezeblokz"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Cheezeblokz":74,"-":4}}]
