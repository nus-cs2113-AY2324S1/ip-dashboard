[{"path":"src/main/java/elgin/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"import elgin.command.Command;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"import elgin.exception.DukeException;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"import elgin.parser.Parser;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"import elgin.storage.Storage;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"import elgin.task.TaskList;","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"import elgin.ui.Ui;","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":" * Entry point of the Task handling bot","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"public class Duke {","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"    private static Ui ui;","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"    private static Storage storage;","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"ChoonSiang"},"content":"     * Instantiate UI, Storage and TaskList.","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"ChoonSiang"},"content":"    public Duke() {","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"ChoonSiang"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"ChoonSiang"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"ChoonSiang"},"content":"        try {","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"ChoonSiang"},"content":"            tasks \u003d new TaskList(storage.getSavedTasks());","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"ChoonSiang"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"ChoonSiang"},"content":"            ui.formatPrint(e.getMessage());","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"ChoonSiang"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"ChoonSiang"},"content":"     * Continuously receive command from user and run it.","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"ChoonSiang"},"content":"     * Ends when user entered Bye.","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"ChoonSiang"},"content":"    public void run() {","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"ChoonSiang"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"ChoonSiang"},"content":"        ui.sayGreeting();","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"ChoonSiang"},"content":"        String userInput;","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"ChoonSiang"},"content":"        boolean isContinue \u003d true;","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"ChoonSiang"},"content":"        while (isContinue) {","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"ChoonSiang"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"ChoonSiang"},"content":"            try {","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"ChoonSiang"},"content":"                Command command \u003d new Parser().parseCommand(userInput);","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"ChoonSiang"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"ChoonSiang"},"content":"                storage.saveToFile(tasks.getAllTasks());","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"ChoonSiang"},"content":"                isContinue \u003d command.getIsContinue();","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"ChoonSiang"},"content":"                if (!isContinue) {","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"ChoonSiang"},"content":"                    ui.sayBye();","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"ChoonSiang"},"content":"                }","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"ChoonSiang"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"ChoonSiang"},"content":"                ui.formatPrint(e.getMessage());","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"ChoonSiang"},"content":"            }","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":63,"author":{"gitId":"ChoonSiang"},"content":"     * The entry point of application.","lastModifiedDate":"2023-09-28"},{"lineNumber":64,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"ChoonSiang"},"content":"     * @param args the user supplied input arguments","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"ChoonSiang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"ChoonSiang"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"ChoonSiang"},"content":"        duke.run();","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"ChoonSiang":69}},{"path":"src/main/java/elgin/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.command;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"import elgin.exception.DukeException;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"import elgin.storage.Storage;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"import elgin.task.TaskList;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"import elgin.ui.Ui;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"import static elgin.parser.Parser.isArguments;","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"    private String command;","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"    private String arguments;","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"     * @param command Command type.","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"     * @param arguments Arguments supplied by the user.","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"    public AddCommand(String command, String arguments) {","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"ChoonSiang"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"ChoonSiang"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"ChoonSiang"},"content":"     * Executes to add Todo/Deadline/Event task into TaskList based on command.","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"ChoonSiang"},"content":"     * Prints success message when task is added.","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"ChoonSiang"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"ChoonSiang"},"content":"     * @param ui Ui for standardised output of program.","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"ChoonSiang"},"content":"     * @param storage Storage that stores and loads tasks from disk.","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"ChoonSiang"},"content":"     * @throws DukeException If error adding task.","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"ChoonSiang"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"ChoonSiang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"ChoonSiang"},"content":"        String[] msg;","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"ChoonSiang"},"content":"        if (!isArguments(arguments)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"ChoonSiang"},"content":"            return;","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"ChoonSiang"},"content":"        switch (command) {","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"ChoonSiang"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"ChoonSiang"},"content":"            msg \u003d tasks.addTodo(arguments);","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"ChoonSiang"},"content":"            break;","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"ChoonSiang"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"ChoonSiang"},"content":"            msg \u003d tasks.addDeadline(command, arguments);","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"ChoonSiang"},"content":"            break;","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"ChoonSiang"},"content":"        case \"event\":","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"ChoonSiang"},"content":"            msg \u003d tasks.addEvent(command, arguments);","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"ChoonSiang"},"content":"            break;","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"ChoonSiang"},"content":"        default:","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"ChoonSiang"},"content":"            ui.showUnknownCmdErrorMsg();","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"ChoonSiang"},"content":"            return;","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"ChoonSiang"},"content":"        ui.formatPrint(msg);","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"ChoonSiang":59}},{"path":"src/main/java/elgin/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.command;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"import elgin.exception.DukeException;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"import elgin.storage.Storage;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"import elgin.task.TaskList;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"import elgin.ui.Ui;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":" * Abstract class Command that can be executed on Task.","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"    public boolean isContinue \u003d true;","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"     * Abstract method Execute that contains the logic of the command.","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"     * @param ui Ui for standardised output of program.","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"     * @param storage Storage that stores and loads tasks from disk.","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"     * @throws DukeException If error executing command.","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"ChoonSiang"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"ChoonSiang"},"content":"    public boolean getIsContinue() {","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"ChoonSiang"},"content":"        return isContinue;","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"ChoonSiang":28}},{"path":"src/main/java/elgin/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.command;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"import elgin.exception.DukeException;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"import elgin.storage.Storage;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"import elgin.task.TaskList;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"import elgin.ui.Ui;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"    private int index;","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"     * @param index Index of the task to perform action on.","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"ChoonSiang"},"content":"     * Executes to delete the task from TaskList.","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"ChoonSiang"},"content":"     * Prints success message when task is deleted.","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"ChoonSiang"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"ChoonSiang"},"content":"     * @param ui Ui for standardised output of program.","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"ChoonSiang"},"content":"     * @param storage Storage that stores and loads tasks from disk.","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"ChoonSiang"},"content":"     * @throws DukeException If invalid task index.","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"ChoonSiang"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"ChoonSiang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"ChoonSiang"},"content":"        int totalTasks \u003d tasks.getTaskSize();","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"ChoonSiang"},"content":"        if (index \u003c 1 || index \u003e totalTasks) {","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"ChoonSiang"},"content":"            throw new DukeException(\"Please enter a valid task number.\");","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"ChoonSiang"},"content":"        ui.formatPrint(tasks.deleteTask(index));","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"ChoonSiang":39}},{"path":"src/main/java/elgin/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.command;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"import elgin.storage.Storage;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"import elgin.task.TaskList;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"import elgin.ui.Ui;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"     * Executes to change isContinue to False to indicate user","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"     * exiting the program.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"     * @param ui Ui for standardised output of program.","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"     * @param storage Storage that stores and loads tasks from disk.","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"        isContinue \u003d false;","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"ChoonSiang":22}},{"path":"src/main/java/elgin/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.command;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"import elgin.exception.DukeException;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"import elgin.storage.Storage;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"import elgin.task.TaskList;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"import elgin.ui.Ui;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"    private String arguments;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"     * Initialise the arguments to be lowercase for insensitive searching.","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"     * @param arguments Arguments containing the keyword to search for.","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"    public FindCommand(String arguments) {","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"        this.arguments \u003d arguments.toLowerCase();","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"ChoonSiang"},"content":"     * Executes to find tasks that contains the keyword and print them if found,","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"ChoonSiang"},"content":"     * else print message to indicate no matched tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"ChoonSiang"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"ChoonSiang"},"content":"     * @param ui Ui for standardised output of program.","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"ChoonSiang"},"content":"     * @param storage Storage that stores and loads tasks from disk.","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"ChoonSiang"},"content":"     * @throws DukeException If Keyword is empty.","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"ChoonSiang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"ChoonSiang"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"ChoonSiang"},"content":"            throw new DukeException(\"Please enter the keyword to search for.\");","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"ChoonSiang"},"content":"        ui.formatPrint(tasks.findTasks(arguments));","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"ChoonSiang":37}},{"path":"src/main/java/elgin/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.command;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"import elgin.storage.Storage;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"import elgin.task.TaskList;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"import elgin.ui.Ui;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"     * Executes and prints all the tasks formatted by the Ui.","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"     * @param tasks TaskList of tasks","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"     * @param ui Ui for standardised output of program","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"     * @param storage Storage that stores and loads tasks from disk.","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"        ui.formatPrint(tasks.listTasks());","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"ChoonSiang":21}},{"path":"src/main/java/elgin/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.command;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"import elgin.exception.DukeException;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"import elgin.storage.Storage;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"import elgin.task.TaskList;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"import elgin.ui.Ui;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"    private int index;","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"     * @param index Index of the task to perform action on.","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"ChoonSiang"},"content":"     * Executes to mark the task as completed.","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"ChoonSiang"},"content":"     * Prints success message when task is marked as completed.","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"ChoonSiang"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"ChoonSiang"},"content":"     * @param ui Ui for standardised output of program.","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"ChoonSiang"},"content":"     * @param storage Storage that stores and loads tasks from disk.","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"ChoonSiang"},"content":"     * @throws DukeException If invalid task index.","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"ChoonSiang"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"ChoonSiang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"ChoonSiang"},"content":"        int totalTasks \u003d tasks.getTaskSize();","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"ChoonSiang"},"content":"        if (index \u003c 1 || index \u003e totalTasks) {","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"ChoonSiang"},"content":"            throw new DukeException(\"Please enter a valid task number.\");","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"ChoonSiang"},"content":"        ui.formatPrint(tasks.setTaskIsDone(index, true));","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"ChoonSiang":40}},{"path":"src/main/java/elgin/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.command;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"import elgin.exception.DukeException;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"import elgin.storage.Storage;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"import elgin.task.TaskList;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"import elgin.ui.Ui;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"    private int index;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor for UnmarkCommand.","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"     * @param index Index of the task to perform action on.","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"ChoonSiang"},"content":"     * Executes to unmark the task as not completed.","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"ChoonSiang"},"content":"     * Prints success message when task is marked as not completed.","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"ChoonSiang"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"ChoonSiang"},"content":"     * @param ui Ui for standardised output of program.","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"ChoonSiang"},"content":"     * @param storage Storage that stores and loads tasks from disk.","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"ChoonSiang"},"content":"     * @throws DukeException If invalid task index.","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"ChoonSiang"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"ChoonSiang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"ChoonSiang"},"content":"        int totalTasks \u003d tasks.getTaskSize();","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"ChoonSiang"},"content":"        if (index \u003c 1 || index \u003e totalTasks) {","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"ChoonSiang"},"content":"            throw new DukeException(\"Please enter a valid task number.\");","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"ChoonSiang"},"content":"        ui.formatPrint(tasks.setTaskIsDone(index, false));","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"ChoonSiang":38}},{"path":"src/main/java/elgin/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.exception;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor of DukeException.","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"     * @param message Message to be shown when Exception occurs.","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"        super(message);","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"ChoonSiang":15}},{"path":"src/main/java/elgin/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.parser;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"import elgin.command.*;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"import elgin.exception.DukeException;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"public class Parser {","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"    private static final int INVALID_INDEX \u003d -1;","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"    public static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"     * Parse user input and split into command and arguments.","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"     * Returns the Command type based on command and arguments.","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"     * @param command The command input by user","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"ChoonSiang"},"content":"     * @return Command to be executed.","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"ChoonSiang"},"content":"     * @throws DukeException If invalid command/arguments is supplied.","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"ChoonSiang"},"content":"    public Command parseCommand(String command) throws DukeException {","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"ChoonSiang"},"content":"        String[] commandArray \u003d command.split(\" \", 2);","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"ChoonSiang"},"content":"        String userCommand \u003d commandArray[0].toLowerCase();","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"ChoonSiang"},"content":"        String arguments \u003d \"\";","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"ChoonSiang"},"content":"        int index \u003d INVALID_INDEX;","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"ChoonSiang"},"content":"        if (commandArray.length \u003e 1) {","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"ChoonSiang"},"content":"            arguments \u003d commandArray[1];","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"ChoonSiang"},"content":"            index \u003d parseTaskIndex(arguments, userCommand);","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"ChoonSiang"},"content":"        switch (userCommand) {","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"ChoonSiang"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"ChoonSiang"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"ChoonSiang"},"content":"        case \"list\":","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"ChoonSiang"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"ChoonSiang"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"ChoonSiang"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"ChoonSiang"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"ChoonSiang"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"ChoonSiang"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"ChoonSiang"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"ChoonSiang"},"content":"        case \"find\":","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"ChoonSiang"},"content":"            return new FindCommand(arguments);","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"ChoonSiang"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"ChoonSiang"},"content":"            // fallthrough","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"ChoonSiang"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"ChoonSiang"},"content":"            // fallthrough","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"ChoonSiang"},"content":"        case \"event\":","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"ChoonSiang"},"content":"            return new AddCommand(userCommand, arguments);","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"ChoonSiang"},"content":"        default:","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"ChoonSiang"},"content":"            throw new DukeException(\"Sorry I do not understand your command\");","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"ChoonSiang"},"content":"     * Parse arguments of Deadline and Event and","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"ChoonSiang"},"content":"     * store them into hashmap.","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":63,"author":{"gitId":"ChoonSiang"},"content":"     * @param command Command type, either Deadline or Event.","lastModifiedDate":"2023-09-28"},{"lineNumber":64,"author":{"gitId":"ChoonSiang"},"content":"     * @param arguments Arguments to be parsed.","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"ChoonSiang"},"content":"     * @return Hashmap containing the parsed arguments.","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"ChoonSiang"},"content":"     * @throws DukeException If invalid arguments is supplied for the respective command.","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"ChoonSiang"},"content":"    public static HashMap\u003cString, String\u003e parseArguments(String command, String arguments) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"ChoonSiang"},"content":"        HashMap\u003cString, String\u003e parsedArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"ChoonSiang"},"content":"        String[] splitArg;","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"ChoonSiang"},"content":"        switch (command) {","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"ChoonSiang"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"ChoonSiang"},"content":"            splitArg \u003d arguments.split(\" /by \");","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"ChoonSiang"},"content":"            if (splitArg.length \u003c 2) {","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"ChoonSiang"},"content":"                throw new DukeException(\"Usage: deadline \u003ctask\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2023-09-27"},{"lineNumber":76,"author":{"gitId":"ChoonSiang"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"ChoonSiang"},"content":"            parsedArgs.put(\"description\", splitArg[0]);","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"ChoonSiang"},"content":"            parsedArgs.put(\"by\", splitArg[1]);","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"ChoonSiang"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"ChoonSiang"},"content":"        case \"event\":","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"ChoonSiang"},"content":"            splitArg \u003d arguments.split(\" /from \");","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"ChoonSiang"},"content":"            if (splitArg.length \u003c 2) {","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"ChoonSiang"},"content":"                throw new DukeException(\"Usage: event \u003ctask\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2023-09-27"},{"lineNumber":84,"author":{"gitId":"ChoonSiang"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"ChoonSiang"},"content":"            parsedArgs.put(\"description\", splitArg[0]);","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"ChoonSiang"},"content":"            String[] fromTo \u003d splitArg[1].split(\" /to \");","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"ChoonSiang"},"content":"            if (fromTo.length \u003c 2) {","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"ChoonSiang"},"content":"                throw new DukeException(\"Usage: event \u003ctask\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2023-09-27"},{"lineNumber":89,"author":{"gitId":"ChoonSiang"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"ChoonSiang"},"content":"            parsedArgs.put(\"from\", fromTo[0]);","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"ChoonSiang"},"content":"            parsedArgs.put(\"to\", fromTo[1]);","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"ChoonSiang"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"ChoonSiang"},"content":"        default:","lastModifiedDate":"2023-09-17"},{"lineNumber":94,"author":{"gitId":"ChoonSiang"},"content":"            throw new DukeException(\"Sorry I do not understand your command\");","lastModifiedDate":"2023-09-27"},{"lineNumber":95,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"ChoonSiang"},"content":"        return parsedArgs;","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":100,"author":{"gitId":"ChoonSiang"},"content":"     * Parse the task Index from argument if command","lastModifiedDate":"2023-09-28"},{"lineNumber":101,"author":{"gitId":"ChoonSiang"},"content":"     * is mark/unmark/delete, else return INVALID_INDEX.","lastModifiedDate":"2023-09-28"},{"lineNumber":102,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":103,"author":{"gitId":"ChoonSiang"},"content":"     * @param arguments Argument containing the index.","lastModifiedDate":"2023-09-28"},{"lineNumber":104,"author":{"gitId":"ChoonSiang"},"content":"     * @param command Command type.","lastModifiedDate":"2023-09-28"},{"lineNumber":105,"author":{"gitId":"ChoonSiang"},"content":"     * @return Index of the task to be executed on.","lastModifiedDate":"2023-09-28"},{"lineNumber":106,"author":{"gitId":"ChoonSiang"},"content":"     * @throws DukeException If index argument does not contain number only.","lastModifiedDate":"2023-09-28"},{"lineNumber":107,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":108,"author":{"gitId":"ChoonSiang"},"content":"    public int parseTaskIndex(String arguments, String command) throws DukeException {","lastModifiedDate":"2023-09-27"},{"lineNumber":109,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":110,"author":{"gitId":"ChoonSiang"},"content":"        if (!(command.equals(\"mark\") || command.equals(\"unmark\") || command.equals(\"delete\"))) {","lastModifiedDate":"2023-09-27"},{"lineNumber":111,"author":{"gitId":"ChoonSiang"},"content":"            return INVALID_INDEX;","lastModifiedDate":"2023-09-27"},{"lineNumber":112,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":113,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":114,"author":{"gitId":"ChoonSiang"},"content":"        if (!isArguments(arguments)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":115,"author":{"gitId":"ChoonSiang"},"content":"            return INVALID_INDEX;","lastModifiedDate":"2023-09-17"},{"lineNumber":116,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":118,"author":{"gitId":"ChoonSiang"},"content":"        int idx \u003d INVALID_INDEX;","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"ChoonSiang"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"ChoonSiang"},"content":"            idx \u003d Integer.parseInt(arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"ChoonSiang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"ChoonSiang"},"content":"            throw new DukeException(\"Please enter a valid task number.\");","lastModifiedDate":"2023-09-27"},{"lineNumber":123,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"ChoonSiang"},"content":"        return idx;","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":128,"author":{"gitId":"ChoonSiang"},"content":"     * Checks if arguments string is empty.","lastModifiedDate":"2023-09-28"},{"lineNumber":129,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":130,"author":{"gitId":"ChoonSiang"},"content":"     * @param arguments Arguments string","lastModifiedDate":"2023-09-28"},{"lineNumber":131,"author":{"gitId":"ChoonSiang"},"content":"     * @return True if arguments is not empty, else False.","lastModifiedDate":"2023-09-28"},{"lineNumber":132,"author":{"gitId":"ChoonSiang"},"content":"     * @throws DukeException If arguments is empty.","lastModifiedDate":"2023-09-28"},{"lineNumber":133,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":134,"author":{"gitId":"ChoonSiang"},"content":"    public static boolean isArguments(String arguments) throws DukeException {","lastModifiedDate":"2023-09-27"},{"lineNumber":135,"author":{"gitId":"ChoonSiang"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2023-09-17"},{"lineNumber":136,"author":{"gitId":"ChoonSiang"},"content":"            throw new DukeException(\"OOPS! Description/Task number cannot be empty.\");","lastModifiedDate":"2023-09-27"},{"lineNumber":137,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":138,"author":{"gitId":"ChoonSiang"},"content":"        return true;","lastModifiedDate":"2023-09-17"},{"lineNumber":139,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":140,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":141,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":142,"author":{"gitId":"ChoonSiang"},"content":"     * Returns LocalDateTime from string format of date time.","lastModifiedDate":"2023-09-28"},{"lineNumber":143,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":144,"author":{"gitId":"ChoonSiang"},"content":"     * @param input String representation of date time.","lastModifiedDate":"2023-09-28"},{"lineNumber":145,"author":{"gitId":"ChoonSiang"},"content":"     * @return LocalDateTime of date time.","lastModifiedDate":"2023-09-28"},{"lineNumber":146,"author":{"gitId":"ChoonSiang"},"content":"     * @throws DukeException If the date time does not specific format (dd/MM/yyyy HHmm).","lastModifiedDate":"2023-09-28"},{"lineNumber":147,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":148,"author":{"gitId":"ChoonSiang"},"content":"    public static LocalDateTime parseDateTime(String input) throws DukeException {","lastModifiedDate":"2023-09-27"},{"lineNumber":149,"author":{"gitId":"ChoonSiang"},"content":"        LocalDateTime parsedDateTime;","lastModifiedDate":"2023-09-27"},{"lineNumber":150,"author":{"gitId":"ChoonSiang"},"content":"        try {","lastModifiedDate":"2023-09-27"},{"lineNumber":151,"author":{"gitId":"ChoonSiang"},"content":"            parsedDateTime \u003d LocalDateTime.parse(input, DATETIME_FORMATTER);","lastModifiedDate":"2023-09-27"},{"lineNumber":152,"author":{"gitId":"ChoonSiang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-27"},{"lineNumber":153,"author":{"gitId":"ChoonSiang"},"content":"            throw new DukeException(\"Error parsing date time.\");","lastModifiedDate":"2023-09-27"},{"lineNumber":154,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":155,"author":{"gitId":"ChoonSiang"},"content":"        return parsedDateTime;","lastModifiedDate":"2023-09-27"},{"lineNumber":156,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":157,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":158,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":159,"author":{"gitId":"ChoonSiang"},"content":"     * Compares two if LocalDateTime and throws exception if","lastModifiedDate":"2023-09-28"},{"lineNumber":160,"author":{"gitId":"ChoonSiang"},"content":"     * end datetime is before start datetime.","lastModifiedDate":"2023-09-28"},{"lineNumber":161,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":162,"author":{"gitId":"ChoonSiang"},"content":"     * @param from Starting datetime.","lastModifiedDate":"2023-09-28"},{"lineNumber":163,"author":{"gitId":"ChoonSiang"},"content":"     * @param to Ending datetime.","lastModifiedDate":"2023-09-28"},{"lineNumber":164,"author":{"gitId":"ChoonSiang"},"content":"     * @throws DukeException If /to datetime is before /from datetime.","lastModifiedDate":"2023-09-28"},{"lineNumber":165,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":166,"author":{"gitId":"ChoonSiang"},"content":"    public static void isValidFromToDateTime(LocalDateTime from, LocalDateTime to) throws DukeException {","lastModifiedDate":"2023-09-27"},{"lineNumber":167,"author":{"gitId":"ChoonSiang"},"content":"        if (to.isBefore(from)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":168,"author":{"gitId":"ChoonSiang"},"content":"            throw new DukeException(\"/to datetime cannot be before /from datetime\");","lastModifiedDate":"2023-09-27"},{"lineNumber":169,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":170,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":171,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"ChoonSiang":171}},{"path":"src/main/java/elgin/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.storage;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"import elgin.exception.DukeException;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"import elgin.task.Deadline;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"import elgin.task.Event;","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"import elgin.task.Task;","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"import elgin.task.Todo;","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"import java.io.File;","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"import static elgin.parser.Parser.isValidFromToDateTime;","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"import static elgin.parser.Parser.parseDateTime;","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"public class Storage {","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"ChoonSiang"},"content":"    private static final String DONE_VALUE \u003d \"1\";","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"ChoonSiang"},"content":"    private static final String NEW_LINE \u003d System.getProperty(\"line.separator\");","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"ChoonSiang"},"content":"    private static final String SEPARATOR \u003d \" | \";","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"ChoonSiang"},"content":"    private final String TASK_FILE_DIRECTORY_PATH;","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"ChoonSiang"},"content":"    private final String TASK_FILE_PATH;","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor for Storage.","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"ChoonSiang"},"content":"     * Initialise the saved tasks file directory and path.","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"ChoonSiang"},"content":"    public Storage() {","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"ChoonSiang"},"content":"        TASK_FILE_DIRECTORY_PATH \u003d Path.of(\"data\").toAbsolutePath().toString();","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"ChoonSiang"},"content":"        TASK_FILE_PATH \u003d Path.of(\"data/tasks.txt\").toAbsolutePath().toString();","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"ChoonSiang"},"content":"     * Checks and create directory if not exist.","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"ChoonSiang"},"content":"     * @param dirPath Directory of the saved tasks file.","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"ChoonSiang"},"content":"    public static void checkAndCreateDirectory(String dirPath) {","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"ChoonSiang"},"content":"        File directory \u003d new File(dirPath);","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"ChoonSiang"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"ChoonSiang"},"content":"            directory.mkdir();","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"ChoonSiang"},"content":"     * Check and create saved tasks file if not exist.","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"ChoonSiang"},"content":"     * @param filePath Path of the saved tasks file.","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"ChoonSiang"},"content":"     * @throws IOException If the task file fails to create.","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"ChoonSiang"},"content":"    public static void checkAndCreateFile(String filePath) throws IOException {","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"ChoonSiang"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"ChoonSiang"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"ChoonSiang"},"content":"            try {","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"ChoonSiang"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"ChoonSiang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"ChoonSiang"},"content":"                throw new IOException(e.getMessage());","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"ChoonSiang"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":64,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":65,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":67,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"ChoonSiang"},"content":"     * Loads saved tasks from file into arraylist.","lastModifiedDate":"2023-09-28"},{"lineNumber":69,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"ChoonSiang"},"content":"     * @return ArrayList of tasks","lastModifiedDate":"2023-09-28"},{"lineNumber":71,"author":{"gitId":"ChoonSiang"},"content":"     * @throws IOException If error reading the file.","lastModifiedDate":"2023-09-28"},{"lineNumber":72,"author":{"gitId":"ChoonSiang"},"content":"     * @throws DukeException If error parsing the task in the file.","lastModifiedDate":"2023-09-28"},{"lineNumber":73,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":74,"author":{"gitId":"ChoonSiang"},"content":"    public ArrayList\u003cTask\u003e getSavedTasks() throws IOException, DukeException {","lastModifiedDate":"2023-09-27"},{"lineNumber":75,"author":{"gitId":"ChoonSiang"},"content":"        checkAndCreateDirectory(TASK_FILE_DIRECTORY_PATH);","lastModifiedDate":"2023-09-17"},{"lineNumber":76,"author":{"gitId":"ChoonSiang"},"content":"        checkAndCreateFile(TASK_FILE_PATH);","lastModifiedDate":"2023-09-17"},{"lineNumber":77,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":78,"author":{"gitId":"ChoonSiang"},"content":"        ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-17"},{"lineNumber":79,"author":{"gitId":"ChoonSiang"},"content":"        File file \u003d new File(TASK_FILE_PATH);","lastModifiedDate":"2023-09-17"},{"lineNumber":80,"author":{"gitId":"ChoonSiang"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":81,"author":{"gitId":"ChoonSiang"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-17"},{"lineNumber":82,"author":{"gitId":"ChoonSiang"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-09-17"},{"lineNumber":83,"author":{"gitId":"ChoonSiang"},"content":"                String taskLine \u003d scanner.nextLine();","lastModifiedDate":"2023-09-17"},{"lineNumber":84,"author":{"gitId":"ChoonSiang"},"content":"                Task newTask \u003d parseTask(taskLine);","lastModifiedDate":"2023-09-17"},{"lineNumber":85,"author":{"gitId":"ChoonSiang"},"content":"                if (newTask !\u003d null) {","lastModifiedDate":"2023-09-17"},{"lineNumber":86,"author":{"gitId":"ChoonSiang"},"content":"                    savedTasks.add(newTask);","lastModifiedDate":"2023-09-17"},{"lineNumber":87,"author":{"gitId":"ChoonSiang"},"content":"                }","lastModifiedDate":"2023-09-17"},{"lineNumber":88,"author":{"gitId":"ChoonSiang"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":89,"author":{"gitId":"ChoonSiang"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":90,"author":{"gitId":"ChoonSiang"},"content":"            throw new FileNotFoundException(e.getMessage());","lastModifiedDate":"2023-09-27"},{"lineNumber":91,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":92,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":93,"author":{"gitId":"ChoonSiang"},"content":"        return savedTasks;","lastModifiedDate":"2023-09-17"},{"lineNumber":94,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":95,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":96,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":97,"author":{"gitId":"ChoonSiang"},"content":"     * Parse Task from line in saved file as Todo/Deadline/Event.","lastModifiedDate":"2023-09-28"},{"lineNumber":98,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":99,"author":{"gitId":"ChoonSiang"},"content":"     * @param taskLine Line containing string represenation of the task.","lastModifiedDate":"2023-09-28"},{"lineNumber":100,"author":{"gitId":"ChoonSiang"},"content":"     * @return Task if valid, else null.","lastModifiedDate":"2023-09-28"},{"lineNumber":101,"author":{"gitId":"ChoonSiang"},"content":"     * @throws DukeException If task cannot be parsed.","lastModifiedDate":"2023-09-28"},{"lineNumber":102,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":103,"author":{"gitId":"ChoonSiang"},"content":"    public Task parseTask(String taskLine) throws DukeException {","lastModifiedDate":"2023-09-27"},{"lineNumber":104,"author":{"gitId":"ChoonSiang"},"content":"        String[] taskInfo \u003d taskLine.split(\" \\\\| \");","lastModifiedDate":"2023-09-17"},{"lineNumber":105,"author":{"gitId":"ChoonSiang"},"content":"        switch (taskInfo[0]) {","lastModifiedDate":"2023-09-17"},{"lineNumber":106,"author":{"gitId":"ChoonSiang"},"content":"        case \"T\":","lastModifiedDate":"2023-09-17"},{"lineNumber":107,"author":{"gitId":"ChoonSiang"},"content":"            if (taskInfo.length !\u003d 3) {","lastModifiedDate":"2023-09-17"},{"lineNumber":108,"author":{"gitId":"ChoonSiang"},"content":"                return null;","lastModifiedDate":"2023-09-17"},{"lineNumber":109,"author":{"gitId":"ChoonSiang"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":110,"author":{"gitId":"ChoonSiang"},"content":"            return new Todo(taskInfo[2], taskInfo[1].equals(DONE_VALUE));","lastModifiedDate":"2023-09-17"},{"lineNumber":111,"author":{"gitId":"ChoonSiang"},"content":"        case \"D\":","lastModifiedDate":"2023-09-17"},{"lineNumber":112,"author":{"gitId":"ChoonSiang"},"content":"            if (taskInfo.length !\u003d 4) {","lastModifiedDate":"2023-09-17"},{"lineNumber":113,"author":{"gitId":"ChoonSiang"},"content":"                return null;","lastModifiedDate":"2023-09-17"},{"lineNumber":114,"author":{"gitId":"ChoonSiang"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":115,"author":{"gitId":"ChoonSiang"},"content":"            return new Deadline(taskInfo[2], parseDateTime(taskInfo[3]), taskInfo[1].equals(DONE_VALUE));","lastModifiedDate":"2023-09-27"},{"lineNumber":116,"author":{"gitId":"ChoonSiang"},"content":"        case \"E\":","lastModifiedDate":"2023-09-17"},{"lineNumber":117,"author":{"gitId":"ChoonSiang"},"content":"            if (taskInfo.length !\u003d 5) {","lastModifiedDate":"2023-09-17"},{"lineNumber":118,"author":{"gitId":"ChoonSiang"},"content":"                return null;","lastModifiedDate":"2023-09-17"},{"lineNumber":119,"author":{"gitId":"ChoonSiang"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":120,"author":{"gitId":"ChoonSiang"},"content":"            LocalDateTime from \u003d parseDateTime(taskInfo[3]);","lastModifiedDate":"2023-09-27"},{"lineNumber":121,"author":{"gitId":"ChoonSiang"},"content":"            LocalDateTime to \u003d parseDateTime(taskInfo[4]);","lastModifiedDate":"2023-09-27"},{"lineNumber":122,"author":{"gitId":"ChoonSiang"},"content":"            isValidFromToDateTime(from, to);","lastModifiedDate":"2023-09-27"},{"lineNumber":123,"author":{"gitId":"ChoonSiang"},"content":"            return new Event(taskInfo[2], from, to, taskInfo[1].equals(DONE_VALUE));","lastModifiedDate":"2023-09-27"},{"lineNumber":124,"author":{"gitId":"ChoonSiang"},"content":"        default:","lastModifiedDate":"2023-09-17"},{"lineNumber":125,"author":{"gitId":"ChoonSiang"},"content":"            return null;","lastModifiedDate":"2023-09-17"},{"lineNumber":126,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":127,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":128,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":129,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":130,"author":{"gitId":"ChoonSiang"},"content":"    private void deleteFileContent(String filePath) {","lastModifiedDate":"2023-09-27"},{"lineNumber":131,"author":{"gitId":"ChoonSiang"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":132,"author":{"gitId":"ChoonSiang"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-17"},{"lineNumber":133,"author":{"gitId":"ChoonSiang"},"content":"            writer.write(\"\");","lastModifiedDate":"2023-09-17"},{"lineNumber":134,"author":{"gitId":"ChoonSiang"},"content":"            writer.close();","lastModifiedDate":"2023-09-17"},{"lineNumber":135,"author":{"gitId":"ChoonSiang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":136,"author":{"gitId":"ChoonSiang"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-17"},{"lineNumber":137,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":138,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":139,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":140,"author":{"gitId":"ChoonSiang"},"content":"    private void appendToFile(String filePath, String content) {","lastModifiedDate":"2023-09-27"},{"lineNumber":141,"author":{"gitId":"ChoonSiang"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":142,"author":{"gitId":"ChoonSiang"},"content":"            FileWriter writer \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-09-17"},{"lineNumber":143,"author":{"gitId":"ChoonSiang"},"content":"            writer.write(content);","lastModifiedDate":"2023-09-17"},{"lineNumber":144,"author":{"gitId":"ChoonSiang"},"content":"            writer.close();","lastModifiedDate":"2023-09-17"},{"lineNumber":145,"author":{"gitId":"ChoonSiang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":146,"author":{"gitId":"ChoonSiang"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-17"},{"lineNumber":147,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":148,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":149,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":150,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":151,"author":{"gitId":"ChoonSiang"},"content":"     * Save tasks as string representation to file","lastModifiedDate":"2023-09-28"},{"lineNumber":152,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":153,"author":{"gitId":"ChoonSiang"},"content":"     * @param tasks ArrayList of tasks to be saved.","lastModifiedDate":"2023-09-28"},{"lineNumber":154,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":155,"author":{"gitId":"ChoonSiang"},"content":"    public void saveToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-27"},{"lineNumber":156,"author":{"gitId":"ChoonSiang"},"content":"        deleteFileContent(TASK_FILE_PATH);","lastModifiedDate":"2023-09-17"},{"lineNumber":157,"author":{"gitId":"ChoonSiang"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-17"},{"lineNumber":158,"author":{"gitId":"ChoonSiang"},"content":"            String taskAsString \u003d getTaskAsString(task);","lastModifiedDate":"2023-09-17"},{"lineNumber":159,"author":{"gitId":"ChoonSiang"},"content":"            appendToFile(TASK_FILE_PATH, taskAsString);","lastModifiedDate":"2023-09-17"},{"lineNumber":160,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":161,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":162,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":163,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":164,"author":{"gitId":"ChoonSiang"},"content":"     * Gets task as string representation to be saved in file.","lastModifiedDate":"2023-09-28"},{"lineNumber":165,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":166,"author":{"gitId":"ChoonSiang"},"content":"     * @param task Task to be converted to string representation.","lastModifiedDate":"2023-09-28"},{"lineNumber":167,"author":{"gitId":"ChoonSiang"},"content":"     * @return String representation of Task if valid task, else return empty string.","lastModifiedDate":"2023-09-28"},{"lineNumber":168,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":169,"author":{"gitId":"ChoonSiang"},"content":"    public String getTaskAsString(Task task) {","lastModifiedDate":"2023-09-27"},{"lineNumber":170,"author":{"gitId":"ChoonSiang"},"content":"        switch (task.getType()) {","lastModifiedDate":"2023-09-17"},{"lineNumber":171,"author":{"gitId":"ChoonSiang"},"content":"        case \"T\":","lastModifiedDate":"2023-09-17"},{"lineNumber":172,"author":{"gitId":"ChoonSiang"},"content":"            return task.getType() + SEPARATOR + task.getIsDoneAsOneOrZero()","lastModifiedDate":"2023-09-17"},{"lineNumber":173,"author":{"gitId":"ChoonSiang"},"content":"                    + SEPARATOR + task.getDescription() + NEW_LINE;","lastModifiedDate":"2023-09-17"},{"lineNumber":174,"author":{"gitId":"ChoonSiang"},"content":"        case \"D\":","lastModifiedDate":"2023-09-17"},{"lineNumber":175,"author":{"gitId":"ChoonSiang"},"content":"            Deadline d \u003d (Deadline) task;","lastModifiedDate":"2023-09-17"},{"lineNumber":176,"author":{"gitId":"ChoonSiang"},"content":"            return d.getType() + SEPARATOR + d.getIsDoneAsOneOrZero()","lastModifiedDate":"2023-09-17"},{"lineNumber":177,"author":{"gitId":"ChoonSiang"},"content":"                    + SEPARATOR + d.getDescription() + SEPARATOR + d.getBy() + NEW_LINE;","lastModifiedDate":"2023-09-17"},{"lineNumber":178,"author":{"gitId":"ChoonSiang"},"content":"        case \"E\":","lastModifiedDate":"2023-09-17"},{"lineNumber":179,"author":{"gitId":"ChoonSiang"},"content":"            Event e \u003d (Event) task;","lastModifiedDate":"2023-09-17"},{"lineNumber":180,"author":{"gitId":"ChoonSiang"},"content":"            return e.getType() + SEPARATOR + e.getIsDoneAsOneOrZero()","lastModifiedDate":"2023-09-17"},{"lineNumber":181,"author":{"gitId":"ChoonSiang"},"content":"                    + SEPARATOR + e.getDescription() + SEPARATOR + e.getFrom()","lastModifiedDate":"2023-09-17"},{"lineNumber":182,"author":{"gitId":"ChoonSiang"},"content":"                    + SEPARATOR + e.getTo() + NEW_LINE;","lastModifiedDate":"2023-09-17"},{"lineNumber":183,"author":{"gitId":"ChoonSiang"},"content":"        default:","lastModifiedDate":"2023-09-17"},{"lineNumber":184,"author":{"gitId":"ChoonSiang"},"content":"            return \"\";","lastModifiedDate":"2023-09-17"},{"lineNumber":185,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":186,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":187,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":188,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"ChoonSiang":188}},{"path":"src/main/java/elgin/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"import static elgin.parser.Parser.DATETIME_FORMATTER;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"     * @param by Ending date time of Deadline.","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"        type \u003d \"D\";","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ChoonSiang"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"ChoonSiang"},"content":"     * Called when loading Deadline from saved file.","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"ChoonSiang"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"ChoonSiang"},"content":"     * @param by Ending date time of Deadline.","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"ChoonSiang"},"content":"     * @param isDone True if the Deadline is completed, else False","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"ChoonSiang"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone) {","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"ChoonSiang"},"content":"        super(description);","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"ChoonSiang"},"content":"        type \u003d \"D\";","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"ChoonSiang"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"ChoonSiang"},"content":"        setIsDone(isDone);","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"ChoonSiang"},"content":"     * Gets Deadline ending date time in 24 hours clock format.","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"ChoonSiang"},"content":"     * @return LocalDateTime of Deadline end","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"ChoonSiang"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"ChoonSiang"},"content":"        return by.format(DATETIME_FORMATTER);","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"ChoonSiang"},"content":"     * Gets Deadline ending date time in 12 hours clock format.","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"ChoonSiang"},"content":"     * @return LocalDateTime of Deadline end","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"ChoonSiang"},"content":"    public String getByAs12HourClock() {","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"ChoonSiang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh.mma\");","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"ChoonSiang"},"content":"        return by.format(formatter);","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"ChoonSiang"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"ChoonSiang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"ChoonSiang"},"content":"        return super.toString() + \" (by: \" + getByAs12HourClock() + \")\";","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ChoonSiang":63}},{"path":"src/main/java/elgin/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"import static elgin.parser.Parser.DATETIME_FORMATTER;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"    private final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh.mma\");","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor for Event.","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"     * @param description Description of Event.","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"     * @param from Starting date time of Event.","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"     * @param to Ending date time of Event.","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"ChoonSiang"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ChoonSiang"},"content":"        type \u003d \"E\";","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ChoonSiang"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ChoonSiang"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor for Event.","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"ChoonSiang"},"content":"     * Called when loading Event from saved file.","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"ChoonSiang"},"content":"     * @param description Description of Event.","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"ChoonSiang"},"content":"     * @param from Starting date time of Event.","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"ChoonSiang"},"content":"     * @param to Ending date time of Event.","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"ChoonSiang"},"content":"     * @param isDone True if the Event is completed, else False.","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"ChoonSiang"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to, boolean isDone) {","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"ChoonSiang"},"content":"        super(description);","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"ChoonSiang"},"content":"        type \u003d \"E\";","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"ChoonSiang"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"ChoonSiang"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"ChoonSiang"},"content":"        setIsDone(isDone);","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"ChoonSiang"},"content":"     * Gets Event starting date time in 24 hours clock format.","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"ChoonSiang"},"content":"     * @return LocalDateTime of Event start","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"ChoonSiang"},"content":"    public String getFrom() {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"ChoonSiang"},"content":"        return from.format(DATETIME_FORMATTER);","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"ChoonSiang"},"content":"     * Gets Event starting date time in 12 hours clock format.","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"ChoonSiang"},"content":"     * @return LocalDateTime of Event start","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"ChoonSiang"},"content":"    public String getFromAs12HourClock() {","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"ChoonSiang"},"content":"        return from.format(FORMATTER);","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":64,"author":{"gitId":"ChoonSiang"},"content":"     * Gets Event ending date time in 24 hours clock format.","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"ChoonSiang"},"content":"     * @return LocalDateTime of Event end","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"ChoonSiang"},"content":"    public String getTo() {","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"ChoonSiang"},"content":"        return to.format(DATETIME_FORMATTER);","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":71,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":73,"author":{"gitId":"ChoonSiang"},"content":"     * Gets Event ending date time in 12 hours clock format.","lastModifiedDate":"2023-09-28"},{"lineNumber":74,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":75,"author":{"gitId":"ChoonSiang"},"content":"     * @return LocalDateTime of Event end","lastModifiedDate":"2023-09-28"},{"lineNumber":76,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":77,"author":{"gitId":"ChoonSiang"},"content":"    public String getToAs12HourClock() {","lastModifiedDate":"2023-09-27"},{"lineNumber":78,"author":{"gitId":"ChoonSiang"},"content":"        return to.format(FORMATTER);","lastModifiedDate":"2023-09-27"},{"lineNumber":79,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":81,"author":{"gitId":"ChoonSiang"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":82,"author":{"gitId":"ChoonSiang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-27"},{"lineNumber":83,"author":{"gitId":"ChoonSiang"},"content":"        return super.toString() + \" (from: \" + getFromAs12HourClock() + \", to: \" + getToAs12HourClock() + \")\";","lastModifiedDate":"2023-09-27"},{"lineNumber":84,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":85,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ChoonSiang":85}},{"path":"src/main/java/elgin/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"public class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"    protected String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"    protected String type;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor of Task.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"     * Gets task description.","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"ChoonSiang"},"content":"     * @return Description of the Task.","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"ChoonSiang"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"ChoonSiang"},"content":"        return description;","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"ChoonSiang"},"content":"     * Marks/Unmarks the Task as done.","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"ChoonSiang"},"content":"     * @param isDone True if the task is completed, else False.","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"ChoonSiang"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"ChoonSiang"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"ChoonSiang"},"content":"     * Gets the isDone state of the task and represent","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"ChoonSiang"},"content":"     * it as a symbol.","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"ChoonSiang"},"content":"     * @return \"X\" if task is completed, else return \" \".","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"ChoonSiang"},"content":"    public String getIsDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"ChoonSiang"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"ChoonSiang"},"content":"     * Gets the isDone state of Task as 1 or 0","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"ChoonSiang"},"content":"     * for storing into file.","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"ChoonSiang"},"content":"     * @return 1 if isDone is true, else 0.","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"ChoonSiang"},"content":"    public String getIsDoneAsOneOrZero() {","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"ChoonSiang"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"ChoonSiang"},"content":"     * Gets type of task (Todo, Deadline, Event)","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"ChoonSiang"},"content":"     * @return Char representation of Task.","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"ChoonSiang"},"content":"    public String getType() {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"ChoonSiang"},"content":"        return type;","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"ChoonSiang"},"content":"     * Formats the string representation of Task to","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"ChoonSiang"},"content":"     * show type, isDone statue and description.","lastModifiedDate":"2023-09-28"},{"lineNumber":69,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"ChoonSiang"},"content":"     * @return String of formatted Task.","lastModifiedDate":"2023-09-28"},{"lineNumber":71,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":72,"author":{"gitId":"ChoonSiang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"ChoonSiang"},"content":"        return \"[\" + getType() + \"][\" + getIsDone() + \"] \" + getDescription();","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"ChoonSiang":75}},{"path":"src/main/java/elgin/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"import elgin.exception.DukeException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"import static elgin.parser.Parser.*;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"public class TaskList {","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor for Tasklist.","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"     * This will be called if saved tasks file failed to load.","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor for Tasklist.","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"ChoonSiang"},"content":"     * @param tasks Tasks loaded from saved file.","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"ChoonSiang"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"ChoonSiang"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"ChoonSiang"},"content":"     * Lists all tasks in the arraylist.","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"ChoonSiang"},"content":"     * @return Messages containing the string representation of all tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"ChoonSiang"},"content":"    public String[] listTasks() {","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"ChoonSiang"},"content":"        int totalTasks \u003d getTaskSize();","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"ChoonSiang"},"content":"        String[] allTasksDescription \u003d new String[totalTasks + 1];","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"ChoonSiang"},"content":"        allTasksDescription[0] \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"ChoonSiang"},"content":"        for (int i \u003d 0; i \u003c totalTasks; i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"ChoonSiang"},"content":"            allTasksDescription[i + 1] \u003d (i + 1) + \".\" + tasks.get(i);","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"ChoonSiang"},"content":"        return allTasksDescription;","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"ChoonSiang"},"content":"     * Loops through all the tasks and find the tasks","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"ChoonSiang"},"content":"     * that contains the keyword specified by the user.","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"ChoonSiang"},"content":"     * @param keyword Keyword to be searched for.","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"ChoonSiang"},"content":"     * @return Messages containing the list of matched tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"ChoonSiang"},"content":"    public String[] findTasks(String keyword) {","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"ChoonSiang"},"content":"        int totalTasks \u003d getTaskSize();","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"ChoonSiang"},"content":"        String[] allMatchingTasks \u003d new String[totalTasks + 1];","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"ChoonSiang"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"ChoonSiang"},"content":"        for (int i \u003d 0; i \u003c totalTasks; i++) {","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"ChoonSiang"},"content":"            String taskDescription \u003d tasks.get(i).getDescription().toLowerCase();","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"ChoonSiang"},"content":"            if (taskDescription.contains(keyword)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"ChoonSiang"},"content":"                allMatchingTasks[counter] \u003d (counter) + \".\" + tasks.get(i);","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"ChoonSiang"},"content":"                counter++;","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"ChoonSiang"},"content":"            }","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"ChoonSiang"},"content":"        if (counter !\u003d 1) {","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"ChoonSiang"},"content":"            allMatchingTasks[0] \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"ChoonSiang"},"content":"        } else {","lastModifiedDate":"2023-09-27"},{"lineNumber":71,"author":{"gitId":"ChoonSiang"},"content":"            allMatchingTasks[0] \u003d \"Sorry no match found.\";","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":73,"author":{"gitId":"ChoonSiang"},"content":"        return Arrays.copyOf(allMatchingTasks, counter);","lastModifiedDate":"2023-09-27"},{"lineNumber":74,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":75,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":76,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":77,"author":{"gitId":"ChoonSiang"},"content":"     * Adds the Todo task to the tasks arraylist.","lastModifiedDate":"2023-09-28"},{"lineNumber":78,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":79,"author":{"gitId":"ChoonSiang"},"content":"     * @param arguments Arguments supplied by the user containing description.","lastModifiedDate":"2023-09-28"},{"lineNumber":80,"author":{"gitId":"ChoonSiang"},"content":"     * @return Messages to be printed after adding Todo.","lastModifiedDate":"2023-09-28"},{"lineNumber":81,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":82,"author":{"gitId":"ChoonSiang"},"content":"    public String[] addTodo(String arguments) {","lastModifiedDate":"2023-09-28"},{"lineNumber":83,"author":{"gitId":"ChoonSiang"},"content":"        Todo task \u003d new Todo(arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"ChoonSiang"},"content":"        return addToTasks(task);","lastModifiedDate":"2023-09-27"},{"lineNumber":85,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":87,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":88,"author":{"gitId":"ChoonSiang"},"content":"     * Adds the Deadline task to the tasks arraylist.","lastModifiedDate":"2023-09-28"},{"lineNumber":89,"author":{"gitId":"ChoonSiang"},"content":"     * Parses arguments as datetime.","lastModifiedDate":"2023-09-28"},{"lineNumber":90,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":91,"author":{"gitId":"ChoonSiang"},"content":"     * @param command Command supplied by the user.","lastModifiedDate":"2023-09-28"},{"lineNumber":92,"author":{"gitId":"ChoonSiang"},"content":"     * @param arguments Arguments supplied by the user containing description and /by.","lastModifiedDate":"2023-09-28"},{"lineNumber":93,"author":{"gitId":"ChoonSiang"},"content":"     * @return Messages to be printed after adding Deadline.","lastModifiedDate":"2023-09-28"},{"lineNumber":94,"author":{"gitId":"ChoonSiang"},"content":"     * @throws DukeException If arguments are invalid.","lastModifiedDate":"2023-09-28"},{"lineNumber":95,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":96,"author":{"gitId":"ChoonSiang"},"content":"    public String[] addDeadline(String command, String arguments) throws DukeException {","lastModifiedDate":"2023-09-27"},{"lineNumber":97,"author":{"gitId":"ChoonSiang"},"content":"        HashMap\u003cString, String\u003e parsedArgs \u003d parseArguments(command, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"ChoonSiang"},"content":"        String description \u003d parsedArgs.get(\"description\");","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"ChoonSiang"},"content":"        LocalDateTime by \u003d parseDateTime(parsedArgs.get(\"by\"));","lastModifiedDate":"2023-09-27"},{"lineNumber":100,"author":{"gitId":"ChoonSiang"},"content":"        Deadline task \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"ChoonSiang"},"content":"        return addToTasks(task);","lastModifiedDate":"2023-09-27"},{"lineNumber":102,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":104,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":105,"author":{"gitId":"ChoonSiang"},"content":"     * Adds the Event task to the tasks arraylist.","lastModifiedDate":"2023-09-28"},{"lineNumber":106,"author":{"gitId":"ChoonSiang"},"content":"     * Parses arguments as datetime.","lastModifiedDate":"2023-09-28"},{"lineNumber":107,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":108,"author":{"gitId":"ChoonSiang"},"content":"     * @param command Command supplied by the user.","lastModifiedDate":"2023-09-28"},{"lineNumber":109,"author":{"gitId":"ChoonSiang"},"content":"     * @param arguments Arguments supplied by the user containing description, /from, /to.","lastModifiedDate":"2023-09-28"},{"lineNumber":110,"author":{"gitId":"ChoonSiang"},"content":"     * @return Messages to be printed after adding Event.","lastModifiedDate":"2023-09-28"},{"lineNumber":111,"author":{"gitId":"ChoonSiang"},"content":"     * @throws DukeException If arguments are invalid.","lastModifiedDate":"2023-09-28"},{"lineNumber":112,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":113,"author":{"gitId":"ChoonSiang"},"content":"    public String[] addEvent(String command, String arguments) throws DukeException {","lastModifiedDate":"2023-09-27"},{"lineNumber":114,"author":{"gitId":"ChoonSiang"},"content":"        HashMap\u003cString, String\u003e parsedArgs \u003d parseArguments(command, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"ChoonSiang"},"content":"        String description \u003d parsedArgs.get(\"description\");","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"ChoonSiang"},"content":"        LocalDateTime from \u003d parseDateTime(parsedArgs.get(\"from\"));","lastModifiedDate":"2023-09-27"},{"lineNumber":117,"author":{"gitId":"ChoonSiang"},"content":"        LocalDateTime to \u003d parseDateTime(parsedArgs.get(\"to\"));","lastModifiedDate":"2023-09-27"},{"lineNumber":118,"author":{"gitId":"ChoonSiang"},"content":"        isValidFromToDateTime(from, to);","lastModifiedDate":"2023-09-27"},{"lineNumber":119,"author":{"gitId":"ChoonSiang"},"content":"        Event task \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"ChoonSiang"},"content":"        return addToTasks(task);","lastModifiedDate":"2023-09-27"},{"lineNumber":121,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":124,"author":{"gitId":"ChoonSiang"},"content":"     * Set a task isDone status.","lastModifiedDate":"2023-09-28"},{"lineNumber":125,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":126,"author":{"gitId":"ChoonSiang"},"content":"     * @param index Index of the task.","lastModifiedDate":"2023-09-28"},{"lineNumber":127,"author":{"gitId":"ChoonSiang"},"content":"     * @param isDone True if the task is completed, else False.","lastModifiedDate":"2023-09-28"},{"lineNumber":128,"author":{"gitId":"ChoonSiang"},"content":"     * @return Messages to be printed after setting the isDone status of Task.","lastModifiedDate":"2023-09-28"},{"lineNumber":129,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":130,"author":{"gitId":"ChoonSiang"},"content":"    public String[] setTaskIsDone(int index, boolean isDone) {","lastModifiedDate":"2023-09-28"},{"lineNumber":131,"author":{"gitId":"ChoonSiang"},"content":"        index--;","lastModifiedDate":"2023-09-27"},{"lineNumber":132,"author":{"gitId":"ChoonSiang"},"content":"        tasks.get(index).setIsDone(isDone);","lastModifiedDate":"2023-09-27"},{"lineNumber":133,"author":{"gitId":"ChoonSiang"},"content":"        String doneMsg \u003d isDone","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"ChoonSiang"},"content":"                ? \"Nice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"ChoonSiang"},"content":"                : \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"ChoonSiang"},"content":"        String[] messages \u003d new String[]{","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"ChoonSiang"},"content":"                doneMsg,","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"ChoonSiang"},"content":"                \"\\t\" + tasks.get(index)","lastModifiedDate":"2023-09-27"},{"lineNumber":139,"author":{"gitId":"ChoonSiang"},"content":"        };","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"ChoonSiang"},"content":"        return messages;","lastModifiedDate":"2023-09-27"},{"lineNumber":141,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":144,"author":{"gitId":"ChoonSiang"},"content":"     * Returns message containing number of tasks","lastModifiedDate":"2023-09-28"},{"lineNumber":145,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":146,"author":{"gitId":"ChoonSiang"},"content":"     * @return Message","lastModifiedDate":"2023-09-28"},{"lineNumber":147,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":148,"author":{"gitId":"ChoonSiang"},"content":"    public String getNumberOfTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"ChoonSiang"},"content":"        int totalTasks \u003d getTaskSize();","lastModifiedDate":"2023-09-17"},{"lineNumber":150,"author":{"gitId":"ChoonSiang"},"content":"        String taskWord \u003d totalTasks \u003e 1 ? \" tasks\" : \" task\";","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"ChoonSiang"},"content":"        return \"Now you have \" + totalTasks + taskWord + \" in the list.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":155,"author":{"gitId":"ChoonSiang"},"content":"     * Adds a task to the Task Arraylist.","lastModifiedDate":"2023-09-28"},{"lineNumber":156,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":157,"author":{"gitId":"ChoonSiang"},"content":"     * @param t Task to be added","lastModifiedDate":"2023-09-28"},{"lineNumber":158,"author":{"gitId":"ChoonSiang"},"content":"     * @return Messages to be printed after adding task.","lastModifiedDate":"2023-09-28"},{"lineNumber":159,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":160,"author":{"gitId":"ChoonSiang"},"content":"    public String[] addToTasks(Task t) {","lastModifiedDate":"2023-09-27"},{"lineNumber":161,"author":{"gitId":"ChoonSiang"},"content":"        tasks.add(t);","lastModifiedDate":"2023-09-17"},{"lineNumber":162,"author":{"gitId":"ChoonSiang"},"content":"        String[] messages \u003d new String[]{","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"ChoonSiang"},"content":"                \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"ChoonSiang"},"content":"                \"\\t\" + t,","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"ChoonSiang"},"content":"                getNumberOfTasks()","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"ChoonSiang"},"content":"        };","lastModifiedDate":"2023-08-27"},{"lineNumber":167,"author":{"gitId":"ChoonSiang"},"content":"        return messages;","lastModifiedDate":"2023-09-27"},{"lineNumber":168,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":170,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":171,"author":{"gitId":"ChoonSiang"},"content":"    public int getTaskSize() {","lastModifiedDate":"2023-09-17"},{"lineNumber":172,"author":{"gitId":"ChoonSiang"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-17"},{"lineNumber":173,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":174,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":175,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":176,"author":{"gitId":"ChoonSiang"},"content":"     * Delete a task based on the index supplied by user.","lastModifiedDate":"2023-09-28"},{"lineNumber":177,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":178,"author":{"gitId":"ChoonSiang"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-28"},{"lineNumber":179,"author":{"gitId":"ChoonSiang"},"content":"     * @return Messages to be printed after deleted task.","lastModifiedDate":"2023-09-28"},{"lineNumber":180,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":181,"author":{"gitId":"ChoonSiang"},"content":"    public String[] deleteTask(int index) {","lastModifiedDate":"2023-09-27"},{"lineNumber":182,"author":{"gitId":"ChoonSiang"},"content":"        index--;","lastModifiedDate":"2023-09-27"},{"lineNumber":183,"author":{"gitId":"ChoonSiang"},"content":"        Task t \u003d tasks.get(index);","lastModifiedDate":"2023-09-27"},{"lineNumber":184,"author":{"gitId":"ChoonSiang"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-09-27"},{"lineNumber":185,"author":{"gitId":"ChoonSiang"},"content":"        String[] messages \u003d new String[]{","lastModifiedDate":"2023-09-17"},{"lineNumber":186,"author":{"gitId":"ChoonSiang"},"content":"                \"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2023-09-17"},{"lineNumber":187,"author":{"gitId":"ChoonSiang"},"content":"                \"\\t\" + t,","lastModifiedDate":"2023-09-17"},{"lineNumber":188,"author":{"gitId":"ChoonSiang"},"content":"                getNumberOfTasks()","lastModifiedDate":"2023-09-17"},{"lineNumber":189,"author":{"gitId":"ChoonSiang"},"content":"        };","lastModifiedDate":"2023-09-17"},{"lineNumber":190,"author":{"gitId":"ChoonSiang"},"content":"        return messages;","lastModifiedDate":"2023-09-27"},{"lineNumber":191,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":192,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":193,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":194,"author":{"gitId":"ChoonSiang"},"content":"     * Gets all tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":195,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":196,"author":{"gitId":"ChoonSiang"},"content":"     * @return ArrayList of all the tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":197,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":198,"author":{"gitId":"ChoonSiang"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-09-27"},{"lineNumber":199,"author":{"gitId":"ChoonSiang"},"content":"        return tasks;","lastModifiedDate":"2023-09-27"},{"lineNumber":200,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":201,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"ChoonSiang":201}},{"path":"src/main/java/elgin/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":" * Represents a Todo Task.","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor of Todo task.","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"        type \u003d \"T\";","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"     * Instantiates a new Todo.","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"ChoonSiang"},"content":"     * @param isDone True if the task is completed, else False.","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"ChoonSiang"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"ChoonSiang"},"content":"        super(description);","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"ChoonSiang"},"content":"        type \u003d \"T\";","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"ChoonSiang"},"content":"        setIsDone(isDone);","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ChoonSiang":30}},{"path":"src/main/java/elgin/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"package elgin.ui;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":" * UI class that handles formatting of program output.","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"public class Ui {","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"    final String BOT_NAME;","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"    final String SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"ChoonSiang"},"content":"     * Constructor for UI.","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"ChoonSiang"},"content":"     * Initialise BOT_NAME.","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"ChoonSiang"},"content":"    public Ui() {","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"ChoonSiang"},"content":"        BOT_NAME \u003d \"Elgin\";","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"ChoonSiang"},"content":"     * Prints a greeting message when the program first started.","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"ChoonSiang"},"content":"    public void sayGreeting() {","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"ChoonSiang"},"content":"        String[] toPrint \u003d new String[]{","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"ChoonSiang"},"content":"                \"Hello! I\u0027m \" + BOT_NAME,","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"ChoonSiang"},"content":"                \"What can I do for you?\"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"ChoonSiang"},"content":"        };","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"ChoonSiang"},"content":"        formatPrint(toPrint);","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"ChoonSiang"},"content":"     * Prints a message when the user exit the program.","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"ChoonSiang"},"content":"    public void sayBye() {","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"ChoonSiang"},"content":"        formatPrint(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"ChoonSiang"},"content":"     * Prints the array of strings in a standardised format.","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"ChoonSiang"},"content":"     * @param lines Array of strings to be printed.","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"ChoonSiang"},"content":"    public void formatPrint(String[] lines) {","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"ChoonSiang"},"content":"        System.out.println(\"\\t\" + SEPARATOR);","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"ChoonSiang"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"ChoonSiang"},"content":"            System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"ChoonSiang"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"ChoonSiang"},"content":"        System.out.println(\"\\t\" + SEPARATOR);","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"ChoonSiang"},"content":"     * Prints in a standardised format.","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"ChoonSiang"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"ChoonSiang"},"content":"     * @param line The string to be printed.","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"ChoonSiang"},"content":"    public void formatPrint(String line) {","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"ChoonSiang"},"content":"        System.out.println(\"\\t\" + SEPARATOR);","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"ChoonSiang"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"ChoonSiang"},"content":"        System.out.println(\"\\t\" + SEPARATOR);","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"ChoonSiang"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":63,"author":{"gitId":"ChoonSiang"},"content":"     * Format and print an error message when","lastModifiedDate":"2023-09-28"},{"lineNumber":64,"author":{"gitId":"ChoonSiang"},"content":"     * the user supplied an unknown command.","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"ChoonSiang"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"ChoonSiang"},"content":"    public void showUnknownCmdErrorMsg() {","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"ChoonSiang"},"content":"        formatPrint(\"Sorry I do not understand your command\");","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"ChoonSiang"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"ChoonSiang"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"ChoonSiang"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"ChoonSiang":70}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChoonSiang"},"content":"list","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ChoonSiang"},"content":"todo borrow book","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ChoonSiang"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ChoonSiang"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ChoonSiang"},"content":"list","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ChoonSiang"},"content":"mark 1","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ChoonSiang"},"content":"mark 2","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ChoonSiang"},"content":"list","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ChoonSiang"},"content":"unmark 1","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"unmark 2","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ChoonSiang"},"content":"list","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ChoonSiang"},"content":"bye","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ChoonSiang":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ChoonSiang"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\elgin\\*.java ..\\src\\main\\java\\elgin\\exception\\*.java ..\\src\\main\\java\\elgin\\task\\*.java ..\\src\\main\\java\\elgin\\utils\\*.java","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ChoonSiang"},"content":"java -classpath ..\\bin elgin.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"ChoonSiang":2}}]
