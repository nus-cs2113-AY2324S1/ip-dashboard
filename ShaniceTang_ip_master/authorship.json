[{"path":"src/main/java/chattie/Chattie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.commands.Command;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ChattieException;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"public class Chattie {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"     * Constructor that initializes a new Ui, Storage and TaskList object","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"     * @throws ChattieException If there are any exceptions thrown while loading chattie.tx","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"    public Chattie(String folderPath, String filePath) {","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"        storage \u003d new Storage(folderPath, filePath);","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"        try {","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"        } catch (ChattieException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"     * Runs the main function of the chatbot like reading commands and exiting the","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"     * chatbot when user types \"bye\"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"     * @throws ChattieException If there are any exceptions related to user command","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"     * @throws IOException If chattie.txt cannot be updated","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"ShaniceTang"},"content":"    public void run() {","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"ShaniceTang"},"content":"        ui.greetUser();","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"ShaniceTang"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"ShaniceTang"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"ShaniceTang"},"content":"            try {","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"ShaniceTang"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"ShaniceTang"},"content":"                ui.printLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"ShaniceTang"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"ShaniceTang"},"content":"                c.execute(tasks, ui);","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"ShaniceTang"},"content":"                storage.updateFile(tasks.getList());","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"ShaniceTang"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"ShaniceTang"},"content":"            } catch (ChattieException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"ShaniceTang"},"content":"                ui.showError();","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"ShaniceTang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"ShaniceTang"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"ShaniceTang"},"content":"            } finally {","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"ShaniceTang"},"content":"                ui.printLine();","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"ShaniceTang"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"ShaniceTang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"ShaniceTang"},"content":"        new Chattie(\"./data\", \"./data/chattie.txt\").run();","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ShaniceTang":58,"-":2}},{"path":"src/main/java/chattie/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.commands.*;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Deadline;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Event;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Task;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Todo;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":" * Deals with making sense of data or the user command","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"public class Parser {","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"    //deals with making sense of the user command","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"    private static int COMMAND_TYPE_INDEX \u003d 0;","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"    private static int TASK_TYPE_INDEX \u003d 0;","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"    private static int ISDONE_INDEX \u003d 1;","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"    private static int TASK_DESCRIPTION_INDEX \u003d 2;","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"    private static int DETAILS_INDEX \u003d 3;","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"    private static int FROM_INDEX \u003d 0;","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"    private static int TO_INDEX \u003d 1;","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"     * Takes in user input and creates a new command object that corresponds to input","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"     * @param command String that user has entered","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"     * @return The type of command","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"    public static Command parse(String command) {","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"        String[] commandArray \u003d command.split(\" \");","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"        String commandType \u003d commandArray[COMMAND_TYPE_INDEX];","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"ShaniceTang"},"content":"        switch(commandType) {","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"ShaniceTang"},"content":"        case \"list\":","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"ShaniceTang"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"ShaniceTang"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"ShaniceTang"},"content":"            return new MarkCommand(command);","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"ShaniceTang"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"ShaniceTang"},"content":"            return new UnmarkCommand(command);","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"ShaniceTang"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"ShaniceTang"},"content":"            return new DeleteCommand(command);","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"ShaniceTang"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"ShaniceTang"},"content":"            return new TodoCommand(command);","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"ShaniceTang"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"ShaniceTang"},"content":"            return new DeadlineCommand(command);","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"ShaniceTang"},"content":"        case \"event\":","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"ShaniceTang"},"content":"            return new EventCommand(command);","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"ShaniceTang"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"ShaniceTang"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"ShaniceTang"},"content":"        case \"find\":","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"ShaniceTang"},"content":"            return new FindCommand(command);","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"ShaniceTang"},"content":"        default:","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"ShaniceTang"},"content":"            return new EchoCommand(command);","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"ShaniceTang"},"content":"     * Converts string to a task object","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"ShaniceTang"},"content":"     * @param line Line in chattie.txt","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"ShaniceTang"},"content":"     * @return Task object that corresponds to line in chattie.txt","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"ShaniceTang"},"content":"    public static Task parseTask(String line) {","lastModifiedDate":"2023-09-30"},{"lineNumber":67,"author":{"gitId":"ShaniceTang"},"content":"        Task task;","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"ShaniceTang"},"content":"        String[] taskArray \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"ShaniceTang"},"content":"        String taskType \u003d taskArray[TASK_TYPE_INDEX].trim();","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"ShaniceTang"},"content":"        boolean isDone \u003d taskArray[ISDONE_INDEX].equals(\"1\");","lastModifiedDate":"2023-09-30"},{"lineNumber":71,"author":{"gitId":"ShaniceTang"},"content":"        String description \u003d taskArray[TASK_DESCRIPTION_INDEX] + \" \";","lastModifiedDate":"2023-09-30"},{"lineNumber":72,"author":{"gitId":"ShaniceTang"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"ShaniceTang"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"ShaniceTang"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"ShaniceTang"},"content":"            String by \u003d taskArray[DETAILS_INDEX];","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"ShaniceTang"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"ShaniceTang"},"content":"        } else {","lastModifiedDate":"2023-09-30"},{"lineNumber":78,"author":{"gitId":"ShaniceTang"},"content":"            String[] fromTo \u003d taskArray[DETAILS_INDEX].split(\"-\");","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"ShaniceTang"},"content":"            String from \u003d fromTo[FROM_INDEX];","lastModifiedDate":"2023-09-30"},{"lineNumber":80,"author":{"gitId":"ShaniceTang"},"content":"            String to \u003d fromTo[TO_INDEX];","lastModifiedDate":"2023-09-30"},{"lineNumber":81,"author":{"gitId":"ShaniceTang"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-30"},{"lineNumber":82,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":83,"author":{"gitId":"ShaniceTang"},"content":"        task.setDone(isDone);","lastModifiedDate":"2023-09-30"},{"lineNumber":84,"author":{"gitId":"ShaniceTang"},"content":"        return task;","lastModifiedDate":"2023-09-30"},{"lineNumber":85,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":86,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"ShaniceTang"},"content":"     * Converts yyyy/mm/dd to MMM d yyyy","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"ShaniceTang"},"content":"     * @param by Date of deadline","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"ShaniceTang"},"content":"     * @return Formatted date string","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"ShaniceTang"},"content":"    public static String parseDate(String by) {","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"ShaniceTang"},"content":"        by \u003d by.replace(\"/\", \"-\");","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"ShaniceTang"},"content":"        try {","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"ShaniceTang"},"content":"            LocalDate date \u003d LocalDate.parse(by);","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"ShaniceTang"},"content":"            return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"ShaniceTang"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"ShaniceTang"},"content":"            return by;","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ShaniceTang":102}},{"path":"src/main/java/chattie/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Parser;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"import chattie.TaskList;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ChattieException;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ErrorType;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Deadline;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Event;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Task;","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Todo;","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"import java.io.File;","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"public class Storage {","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"    private static String folderPath;","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"    private static String filePath;","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"    public Storage(String folderPath, String filePath) {","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"     * Loads chattie.txt","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"ShaniceTang"},"content":"     * @return List of tasks from chattie.txt","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"ShaniceTang"},"content":"     * @throws ChattieException If file cannot be loaded","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"ShaniceTang"},"content":"    public static ArrayList\u003cTask\u003e load() throws ChattieException{","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"ShaniceTang"},"content":"        createFile();","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"ShaniceTang"},"content":"        return readFromFile();","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"ShaniceTang"},"content":"     * Checks if chattie.txt exists and creates a new file if it doesn\u0027t exist","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"ShaniceTang"},"content":"     * @throws ChattieException If file cannot be created","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"ShaniceTang"},"content":"    public static void createFile() throws ChattieException {","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"ShaniceTang"},"content":"        File folder \u003d new File(folderPath);","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"ShaniceTang"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"ShaniceTang"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"ShaniceTang"},"content":"            folder.mkdirs();","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"ShaniceTang"},"content":"        try {","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"ShaniceTang"},"content":"            file.createNewFile();","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"ShaniceTang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.FILE_LOAD_FAIL);","lastModifiedDate":"2023-09-30"},{"lineNumber":61,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"ShaniceTang"},"content":"    private static ArrayList\u003cTask\u003e readFromFile() throws ChattieException{","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"ShaniceTang"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"ShaniceTang"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-30"},{"lineNumber":67,"author":{"gitId":"ShaniceTang"},"content":"        try {","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"ShaniceTang"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"ShaniceTang"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"ShaniceTang"},"content":"                list.add(Parser.parseTask(scanner.nextLine()));","lastModifiedDate":"2023-09-30"},{"lineNumber":71,"author":{"gitId":"ShaniceTang"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":72,"author":{"gitId":"ShaniceTang"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.FILE_LOAD_FAIL);","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"ShaniceTang"},"content":"        return list;","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":78,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"ShaniceTang"},"content":"    private static void writeToFile(String task) throws IOException{","lastModifiedDate":"2023-09-30"},{"lineNumber":80,"author":{"gitId":"ShaniceTang"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-09-30"},{"lineNumber":81,"author":{"gitId":"ShaniceTang"},"content":"        fileWriter.write(task + System.lineSeparator());","lastModifiedDate":"2023-09-30"},{"lineNumber":82,"author":{"gitId":"ShaniceTang"},"content":"        fileWriter.close();","lastModifiedDate":"2023-09-30"},{"lineNumber":83,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":84,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":85,"author":{"gitId":"ShaniceTang"},"content":"    private static String formatTaskString(Task task) {","lastModifiedDate":"2023-09-30"},{"lineNumber":86,"author":{"gitId":"ShaniceTang"},"content":"        String description \u003d task.getTask();","lastModifiedDate":"2023-09-30"},{"lineNumber":87,"author":{"gitId":"ShaniceTang"},"content":"        String done \u003d task.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-09-30"},{"lineNumber":88,"author":{"gitId":"ShaniceTang"},"content":"        String taskString \u003d \"\";","lastModifiedDate":"2023-09-30"},{"lineNumber":89,"author":{"gitId":"ShaniceTang"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-09-30"},{"lineNumber":90,"author":{"gitId":"ShaniceTang"},"content":"            taskString \u003d \"T | \" + done + \" | \" + description;","lastModifiedDate":"2023-09-30"},{"lineNumber":91,"author":{"gitId":"ShaniceTang"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-09-30"},{"lineNumber":92,"author":{"gitId":"ShaniceTang"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-30"},{"lineNumber":93,"author":{"gitId":"ShaniceTang"},"content":"            taskString \u003d \"D | \" + done + \" | \" + description + \"| \" + deadline.getBy();","lastModifiedDate":"2023-09-30"},{"lineNumber":94,"author":{"gitId":"ShaniceTang"},"content":"        } else {","lastModifiedDate":"2023-09-30"},{"lineNumber":95,"author":{"gitId":"ShaniceTang"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-09-30"},{"lineNumber":96,"author":{"gitId":"ShaniceTang"},"content":"            taskString \u003d \"E | \" + done + \" | \" + description + \"| \" + event.getFrom() + \"-\" + event.getTo();","lastModifiedDate":"2023-09-30"},{"lineNumber":97,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":98,"author":{"gitId":"ShaniceTang"},"content":"        return taskString;","lastModifiedDate":"2023-09-30"},{"lineNumber":99,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":100,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":101,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"ShaniceTang"},"content":"     * Rewrites chattie.txt with updated array list of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"ShaniceTang"},"content":"     * @param list Updated list of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"ShaniceTang"},"content":"     * @throws IOException If an exception occurred in writeToFile()","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"ShaniceTang"},"content":"    public static void updateFile(ArrayList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"ShaniceTang"},"content":"        FileWriter clearFile \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-30"},{"lineNumber":109,"author":{"gitId":"ShaniceTang"},"content":"        clearFile.write(\"\");","lastModifiedDate":"2023-09-30"},{"lineNumber":110,"author":{"gitId":"ShaniceTang"},"content":"        clearFile.close();","lastModifiedDate":"2023-09-30"},{"lineNumber":111,"author":{"gitId":"ShaniceTang"},"content":"        for (Task task : list) {","lastModifiedDate":"2023-09-30"},{"lineNumber":112,"author":{"gitId":"ShaniceTang"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2023-09-30"},{"lineNumber":113,"author":{"gitId":"ShaniceTang"},"content":"                continue;","lastModifiedDate":"2023-09-30"},{"lineNumber":114,"author":{"gitId":"ShaniceTang"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":115,"author":{"gitId":"ShaniceTang"},"content":"            writeToFile(formatTaskString(task));","lastModifiedDate":"2023-09-30"},{"lineNumber":116,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":117,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":118,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ShaniceTang":118}},{"path":"src/main/java/chattie/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ChattieException;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ErrorType;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Task;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":" * Handles all list related functions like add, delete, etc.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"public class TaskList {","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"    private static ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"     * Constructor that creates a new TaskList object with an empty array list","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"     * Constructor that creates a new TaskList object containing list items","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"     * loaded from chattie.txt","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"     * @param list Array list of tasks obtained from chattie.txt","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"    public static int getSize() {","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"        return list.size();","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"ShaniceTang"},"content":"     * Returns the task list","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"ShaniceTang"},"content":"     * @return array list of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"ShaniceTang"},"content":"    public static ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"ShaniceTang"},"content":"        return list;","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"ShaniceTang"},"content":"     * Returns the Task object at a specific index of the task list","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"ShaniceTang"},"content":"     * @param index Index of task to be retrieved","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"ShaniceTang"},"content":"     * @return Task object at index","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"ShaniceTang"},"content":"    public static Task getTask(int index) {","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"ShaniceTang"},"content":"        return list.get(index);","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"ShaniceTang"},"content":"     * Adds a task to the task list","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"ShaniceTang"},"content":"     * @param task Task to be added","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"ShaniceTang"},"content":"    public static void add(Task task) {","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"ShaniceTang"},"content":"        list.add(task);","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"ShaniceTang"},"content":"     * Deletes a task at the specified location","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"ShaniceTang"},"content":"     * @param taskNum Position of the task to be deleted in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"ShaniceTang"},"content":"     * @throws ChattieException When taskNum is out of bounds","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"ShaniceTang"},"content":"    public static void delete(int taskNum) throws ChattieException {","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"ShaniceTang"},"content":"        if (taskNum \u003c 0 || taskNum \u003e\u003d list.size()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.OUT_OF_BOUNDS);","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"ShaniceTang"},"content":"        list.remove(taskNum);","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":78,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"ShaniceTang"},"content":"     * Marks a task at the specified location to be done","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"ShaniceTang"},"content":"     * @param taskNum Position of the task to be marked in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"ShaniceTang"},"content":"     * @throws ChattieException When taskNum is out of bounds","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"ShaniceTang"},"content":"    public static void mark(int taskNum) throws ChattieException {","lastModifiedDate":"2023-09-30"},{"lineNumber":86,"author":{"gitId":"ShaniceTang"},"content":"        if (taskNum \u003c 0 || taskNum \u003e\u003d list.size()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":87,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.OUT_OF_BOUNDS);","lastModifiedDate":"2023-09-30"},{"lineNumber":88,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":89,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":90,"author":{"gitId":"ShaniceTang"},"content":"        list.get(taskNum).setDone(true);","lastModifiedDate":"2023-09-30"},{"lineNumber":91,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":92,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":93,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"ShaniceTang"},"content":"     * Unmarks a task at the specified location to be not done","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"ShaniceTang"},"content":"     * @param taskNum Position of the task to be unmarked in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"ShaniceTang"},"content":"     * @throws ChattieException When taskNum is out of bounds","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"ShaniceTang"},"content":"    public static void unmark(int taskNum) throws ChattieException {","lastModifiedDate":"2023-09-30"},{"lineNumber":100,"author":{"gitId":"ShaniceTang"},"content":"        if (taskNum \u003c 0 || taskNum \u003e\u003d list.size()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":101,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.OUT_OF_BOUNDS);","lastModifiedDate":"2023-09-30"},{"lineNumber":102,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":103,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":104,"author":{"gitId":"ShaniceTang"},"content":"        list.get(taskNum).setDone(false);","lastModifiedDate":"2023-09-30"},{"lineNumber":105,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":106,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"ShaniceTang"},"content":"     * Finds tasks that matches the search query","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"ShaniceTang"},"content":"     * @param query String that the user wants to search","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"ShaniceTang"},"content":"     * @return Array list of tasks that contains the query","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"ShaniceTang"},"content":"    public static ArrayList\u003cTask\u003e find (String query) {","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"ShaniceTang"},"content":"        return (ArrayList\u003cTask\u003e) list.stream()","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"ShaniceTang"},"content":"                .filter(task -\u003e task.getTask().contains(query))","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"ShaniceTang"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ShaniceTang":118}},{"path":"src/main/java/chattie/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Task;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":" * Deals with user interface like printing","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"public class Ui {","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"     * Prints divider line","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"    public static void printLine() {","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"     * Greets the user to provide a friendly experience","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"    public static void greetUser() {","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"        String line;","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"        printLine();","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tHello! I\u0027m Chattie! How was your day?\");","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"        printLine();","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"        line \u003d in.nextLine().toLowerCase();","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"        printLine();","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"        if(line.contains(\"good\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tGreat to hear that! :D\");","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"ShaniceTang"},"content":"        } else if (line.contains(\"bad\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tI\u0027m sorry to hear that :(\");","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"ShaniceTang"},"content":"        } else {","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tSounds like you had quite a day\");","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tWhat can I do for you?\");","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"ShaniceTang"},"content":"        printLine();","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"ShaniceTang"},"content":"     * Reads the user command and returns it as a string","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"ShaniceTang"},"content":"     * @return User command","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"ShaniceTang"},"content":"    public static String readCommand() {","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"ShaniceTang"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"ShaniceTang"},"content":"        return in.nextLine();","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"ShaniceTang"},"content":"     * Asks user to try again after showing specific ChattieException message","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"ShaniceTang"},"content":"    public void showError() {","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tPlease try again\");","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":61,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"ShaniceTang"},"content":"     * Prints error message for non-ChattieException errors","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"ShaniceTang"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tOh no! \" + message);","lastModifiedDate":"2023-09-30"},{"lineNumber":67,"author":{"gitId":"ShaniceTang"},"content":"        showError();","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"ShaniceTang"},"content":"     * Prints after task has been unmarked","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"ShaniceTang"},"content":"     * @param task List of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"ShaniceTang"},"content":"     * @param taskNum Position of unmarked task in the task list","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"ShaniceTang"},"content":"    public static void printUnmarkMessage(TaskList task, int taskNum) {","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tOK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-30"},{"lineNumber":78,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\t\" + task.getTask(taskNum));","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":80,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":81,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"ShaniceTang"},"content":"     * Prints after task has been added","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"ShaniceTang"},"content":"     * @param task Task to be added","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"ShaniceTang"},"content":"     * @param taskList List of tasks to be updated","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"ShaniceTang"},"content":"    public static void printAddMessage(TaskList taskList, Task task) {","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-30"},{"lineNumber":89,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\t  \" + task);","lastModifiedDate":"2023-09-30"},{"lineNumber":90,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tNow you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":92,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":93,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"ShaniceTang"},"content":"     * Prints after task has been deleted","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"ShaniceTang"},"content":"     * @param task Task to be deleted","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"ShaniceTang"},"content":"     * @param taskList List of tasks to be updated","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"ShaniceTang"},"content":"    public void printDeleteMessage(TaskList taskList, Task task) {","lastModifiedDate":"2023-09-30"},{"lineNumber":100,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-30"},{"lineNumber":101,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\t\" + task);","lastModifiedDate":"2023-09-30"},{"lineNumber":102,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tNow you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":103,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":104,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":105,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"ShaniceTang"},"content":"     * Prints after task has been marked","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"ShaniceTang"},"content":"     * @param task List of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"ShaniceTang"},"content":"     * @param taskNum Position of marked task in the task list","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"ShaniceTang"},"content":"    public void printMarkMessage(TaskList task, int taskNum) {","lastModifiedDate":"2023-09-30"},{"lineNumber":112,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-30"},{"lineNumber":113,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\t\" + task.getTask(taskNum));","lastModifiedDate":"2023-09-30"},{"lineNumber":114,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":115,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":116,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"ShaniceTang"},"content":"     * Prints the entire task list","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"ShaniceTang"},"content":"     * @param list List of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"ShaniceTang"},"content":"    public void printTaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-30"},{"lineNumber":122,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-09-30"},{"lineNumber":123,"author":{"gitId":"ShaniceTang"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-30"},{"lineNumber":124,"author":{"gitId":"ShaniceTang"},"content":"            System.out.print(\"\\t\" + (i+1) + \". \");","lastModifiedDate":"2023-09-30"},{"lineNumber":125,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(list.get(i));","lastModifiedDate":"2023-09-30"},{"lineNumber":126,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":127,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":128,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":129,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"ShaniceTang"},"content":"     * Prints filtered list based on find command","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"ShaniceTang"},"content":"     * @param list Filtered list of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"ShaniceTang"},"content":"    public void printFilteredList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"ShaniceTang"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"ShaniceTang"},"content":"            System.out.print(\"\\t\" + (i+1) + \". \");","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(list.get(i));","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"ShaniceTang"},"content":"     * Prints exit message","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"ShaniceTang"},"content":"    public void printExitMessage() {","lastModifiedDate":"2023-09-30"},{"lineNumber":146,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tByeeeee. Hope to see you again soon! :)\");","lastModifiedDate":"2023-09-30"},{"lineNumber":147,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":148,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":149,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"ShaniceTang"},"content":"     * Prints user command","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"ShaniceTang"},"content":"     * @param command User command","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"ShaniceTang"},"content":"    public void printEchoMessage(String command) {","lastModifiedDate":"2023-09-30"},{"lineNumber":155,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(command);","lastModifiedDate":"2023-09-30"},{"lineNumber":156,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":157,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ShaniceTang":157}},{"path":"src/main/java/chattie/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.commands;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.TaskList;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Ui;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ChattieException;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Storage;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":" * Deals with the execution of each command","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"    public abstract void execute(TaskList tasks, Ui ui) throws ChattieException;","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ShaniceTang":16}},{"path":"src/main/java/chattie/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.commands;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Parser;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"import chattie.TaskList;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Ui;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ChattieException;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ErrorType;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Deadline;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Storage;","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":" * Deals with deadline related commands","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"    private static final int DEADLINE_LENGTH \u003d 9;","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"    private static final int BY_LENGTH \u003d 3;","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"    private static String command;","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"    public DeadlineCommand(String command) {","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"     * Adds a new deadline to list of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"     * @param ui User interface","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"     * @throws ChattieException If command is empty or not formatted properly","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"    public void execute(TaskList tasks, Ui ui) throws ChattieException {","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"        if (command.trim().length() \u003c DEADLINE_LENGTH) { //check if deadline is empty","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.EMPTY_DEADLINE);","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"ShaniceTang"},"content":"        int slashIndex \u003d command.indexOf(\"/by\");","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"ShaniceTang"},"content":"        if (slashIndex \u003c 0) {","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.INVALID_DEADLINE); //check if \u0027/by\u0027 is present","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"ShaniceTang"},"content":"        String task \u003d command.substring(DEADLINE_LENGTH, slashIndex);","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"ShaniceTang"},"content":"        String by \u003d command.substring(slashIndex + BY_LENGTH);","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"ShaniceTang"},"content":"        if (task.isEmpty() || by.isEmpty()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.INVALID_DEADLINE); //check if [task] or [by] empty","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"ShaniceTang"},"content":"        by \u003d Parser.parseDate(by.trim());","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"ShaniceTang"},"content":"        Deadline deadline \u003d new Deadline(task, by);","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"ShaniceTang"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"ShaniceTang"},"content":"        ui.printAddMessage(tasks, deadline);","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"ShaniceTang"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"ShaniceTang"},"content":"        return false;","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ShaniceTang":58}},{"path":"src/main/java/chattie/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.commands;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.TaskList;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Ui;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ChattieException;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Storage;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Task;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":" * Deals with delete related commands","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"    private static final int TASK_INDEX \u003d 1;","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"    private static String command;","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"    public DeleteCommand(String command) {","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"     * Deletes a task from the tasklist","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"     * @param ui User interface","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"     * @throws ChattieException When command is out of bounds","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"    public void execute(TaskList tasks, Ui ui) throws ChattieException {","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"        String[] commandArray \u003d command.split(\" \");","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"        int taskNum \u003d Integer.parseInt(commandArray[TASK_INDEX]) - 1;","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"        Task task \u003d tasks.getTask(taskNum);","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"        tasks.delete(taskNum);","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"        ui.printDeleteMessage(tasks, task);","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"ShaniceTang"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"ShaniceTang"},"content":"        return false;","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ShaniceTang":40}},{"path":"src/main/java/chattie/commands/EchoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.commands;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.TaskList;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Ui;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ChattieException;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Storage;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":" * Deals with echo related commands","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"public class EchoCommand extends Command {","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"    private static String command;","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"    public EchoCommand(String command) {","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"     * Echos the user input","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"     * @param ui User interface","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"     * @throws ChattieException","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"    public void execute(TaskList tasks, Ui ui) throws ChattieException {","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"        ui.printEchoMessage(command);","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"        return false;","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ShaniceTang":35}},{"path":"src/main/java/chattie/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.commands;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.TaskList;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Ui;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ChattieException;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ErrorType;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Deadline;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Event;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Storage;","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":" * Deals with event related commands","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"    private static final int EVENT_LENGTH \u003d 6;","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"    private static final int FROM_LENGTH \u003d 5;","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"    private static final int TO_LENGTH \u003d 3;","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"    private static String command;","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"    public EventCommand(String command) {","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"     * Adds a new event to list of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"     * @param ui User interface","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"     * @throws ChattieException If command is empty or not formatted properly","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"    public void execute(TaskList tasks, Ui ui) throws ChattieException {","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"        if (command.trim().length() \u003c EVENT_LENGTH) {","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.EMPTY_EVENT); //check if event is empty","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"ShaniceTang"},"content":"        int firstSlash \u003d command.indexOf(\"/from\");","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"ShaniceTang"},"content":"        int secondSlash \u003d command.indexOf(\"/to\");","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"ShaniceTang"},"content":"        if (firstSlash \u003c 0 || secondSlash \u003c 0) {","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.INVALID_EVENT); //check if \u0027/from\u0027 or \u0027/to\u0027 present","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"ShaniceTang"},"content":"        String task \u003d command.substring(EVENT_LENGTH, firstSlash);","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"ShaniceTang"},"content":"        String from \u003d command.substring(firstSlash + FROM_LENGTH, secondSlash);","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"ShaniceTang"},"content":"        String to \u003d command.substring(secondSlash + TO_LENGTH);","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"ShaniceTang"},"content":"        if (task.isEmpty() || from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.INVALID_EVENT); //check if [task], [from], or [to] is empty","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"ShaniceTang"},"content":"        Event event \u003d new Event(task, from, to);","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"ShaniceTang"},"content":"        tasks.add(event);","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"ShaniceTang"},"content":"        ui.printAddMessage(tasks, event);","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"ShaniceTang"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"ShaniceTang"},"content":"        return false;","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ShaniceTang":60}},{"path":"src/main/java/chattie/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.commands;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.TaskList;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Ui;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ChattieException;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Storage;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":" * Deals with exit command","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"     * Prints bye message","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"    public void execute(TaskList tasks, Ui ui) throws ChattieException {","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"        ui.printExitMessage();","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"        return true;","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ShaniceTang":25}},{"path":"src/main/java/chattie/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.TaskList;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ChattieException;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ErrorType;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Task;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":" * Deals with find command","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"    private static String command;","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"    private static final int FIND_LENGTH \u003d 5;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"    public FindCommand(String command) {","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"     * Filters the tasklist to match the query","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"     * @param ui User interface","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"     * @throws ChattieException If no matching results","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"    public void execute(TaskList tasks, Ui ui) throws ChattieException {","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"        String query \u003d command.substring(FIND_LENGTH);","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d tasks.find(query);","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"        if (filteredList.isEmpty()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.EMPTY_LIST);","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"ShaniceTang"},"content":"        ui.printFilteredList(filteredList);","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"ShaniceTang"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"ShaniceTang"},"content":"        return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"ShaniceTang":45}},{"path":"src/main/java/chattie/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.commands;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.TaskList;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Ui;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ChattieException;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Storage;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Task;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":" * Deals with list command","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"     * Prints out the list of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"     * @param ui User interface","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"    public void execute(TaskList tasks, Ui ui) throws ChattieException {","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"        ArrayList\u003cTask\u003e list \u003d tasks.getList();","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"        ui.printTaskList(list);","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"        return false;","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ShaniceTang":33}},{"path":"src/main/java/chattie/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.commands;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.TaskList;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Ui;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ChattieException;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Storage;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":" * Deals with mark command","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"    private static final int TASK_INDEX \u003d 1;","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"    private static String command;","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"    public MarkCommand(String command) {","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"     * Marks the specified task as done","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"     * @param ui User interface","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"    public void execute(TaskList tasks, Ui ui) throws ChattieException {","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"        String[] commandArray \u003d command.split(\" \");","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"        int taskNum \u003d Integer.parseInt(commandArray[TASK_INDEX]) - 1;","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"        tasks.mark(taskNum);","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"        ui.printMarkMessage(tasks, taskNum);","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"ShaniceTang"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"ShaniceTang"},"content":"        return false;","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ShaniceTang":39}},{"path":"src/main/java/chattie/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.commands;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.TaskList;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Ui;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ChattieException;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ErrorType;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Storage;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Deadline;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Todo;","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":" * Deals with todo related commands","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"    private static final int TODO_LENGTH \u003d 5;","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"    private static String command;","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"    public TodoCommand(String command) {","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"     * Adds a new todo to list of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"     * @param ui User interface","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"     * @throws ChattieException If command is empty or not formatted properly","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"    public void execute(TaskList tasks, Ui ui) throws ChattieException {","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"        if (command.trim().length() \u003c TODO_LENGTH) {","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.TODO);","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"        String task \u003d command.substring(TODO_LENGTH);","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"ShaniceTang"},"content":"        Todo todo \u003d new Todo(task);","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"ShaniceTang"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"ShaniceTang"},"content":"        ui.printAddMessage(tasks, todo);","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"ShaniceTang"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"ShaniceTang"},"content":"        return false;","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ShaniceTang":46}},{"path":"src/main/java/chattie/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.commands;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.TaskList;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Ui;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ChattieException;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"import chattie.Storage;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":" * Deals with unmark command","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"    private static final int TASK_INDEX \u003d 1;","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"    private static String command;","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"    public UnmarkCommand(String command) {","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"     * Marks the specified task as not done","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"     * @param ui User interface","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"    public void execute(TaskList tasks, Ui ui) throws ChattieException {","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"        String[] commandArray \u003d command.split(\" \");","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"        int taskNum \u003d Integer.parseInt(commandArray[TASK_INDEX]) - 1;","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"        tasks.unmark(taskNum);","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"        ui.printUnmarkMessage(tasks, taskNum);","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"ShaniceTang"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"ShaniceTang"},"content":"        return false;","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ShaniceTang":39}},{"path":"src/main/java/chattie/error/ChattieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.error;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"public class ChattieException extends Exception{","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"    public ChattieException(ErrorType e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"        switch(e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"        case TODO:","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tOh no! Todo is empty :(\");","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"        case EMPTY_DEADLINE:","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tOh no! Deadline is empty :(\");","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"        case INVALID_DEADLINE:","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tOh no! Deadline has an invalid format :(\");","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tTo add a deadline: Type \\\"deadline [task] /by [deadline]\\\"\");","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"        case EMPTY_EVENT:","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tOh no! Event is empty :(\");","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"        case INVALID_EVENT:","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tOh no! Event has an invalid format :(\");","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tTo add an event: Type \\\"event [task] /from [start] /to [end]\\\"\");","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"        case INVALID_COMMAND:","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tOh no! I don\u0027t understand this command :(\");","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"        case OUT_OF_BOUNDS:","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tOh no! This task doesn\u0027t exist\");","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"            break;","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"        case EMPTY_LIST:","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tSorry, no matching results :(\");","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"            break;","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"        default:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tOh no! Unknown error encountered\");","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"            break;","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"ShaniceTang":37}},{"path":"src/main/java/chattie/error/ErrorType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.error;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"public enum ErrorType {","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"    TODO, EMPTY_DEADLINE, EMPTY_EVENT, INVALID_DEADLINE, INVALID_EVENT, INVALID_COMMAND, OUT_OF_BOUNDS,","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"    FILE_LOAD_FAIL, EMPTY_LIST","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"ShaniceTang":6}},{"path":"src/main/java/chattie/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"    private String by;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"    public Deadline(String task, String by) {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"        super(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"        return by;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"ShaniceTang":20}},{"path":"src/main/java/chattie/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"public class Event extends Task{","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"    private String from;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"    private String to;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"    public Event(String task, String from, String to) {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"        super(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"    public String getFrom() {","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"        return from;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"    public String getTo() {","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"        return to;","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"        return \"[E]\" + super.toString() + \"(from:\" + from + \"to:\" + to + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"ShaniceTang":25}},{"path":"src/main/java/chattie/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"public class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"    protected String task;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"    public Task() {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"        setTask(\"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"        setDone(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"    public Task(String task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"        setTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"        setDone(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"        return isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"    public void setTask(String task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"ShaniceTang"},"content":"            return \"[X] \" + getTask();","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"ShaniceTang"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"ShaniceTang"},"content":"            return \"[ ] \" + getTask();","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ShaniceTang":41}},{"path":"src/main/java/chattie/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"    public Todo(String task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"        super(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"ShaniceTang":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"good","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"todo read book","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"deadline cs2113 coursemology /by Friday 4pm","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"event cs2112 lecture /from Friday 4pm /to 6pm","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"list","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"mark 2","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"deadline cs2113 ip /by Thursday 5pm","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"list","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"bye","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"ShaniceTang":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"java -classpath ..\\bin Chattie \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ShaniceTang":1,"-":20}}]
