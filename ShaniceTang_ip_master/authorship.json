[{"path":"src/main/java/chattie/Chattie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ChattieException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"import chattie.error.ErrorType;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Deadline;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Event;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"import chattie.tasks.Todo;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"public class Chattie {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"    private static void startChat(int count, Task[] list) {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"        String line;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tHello! I\u0027m Chattie! How was your day?\");","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"        greetUser(line);","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"        while(!line.equals(\"bye\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"            count \u003d readCommands(line, list, count);","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tByeeeee. Hope to see you again soon! :)\");","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"ShaniceTang"},"content":"    public static void greetUser(String line) {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"ShaniceTang"},"content":"        line \u003d line.toLowerCase();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ShaniceTang"},"content":"        if(line.contains(\"good\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tGreat to hear that! :D\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ShaniceTang"},"content":"        } else if (line.contains(\"bad\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tI\u0027m sorry to hear that :(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ShaniceTang"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tSounds like you had quite a day\");","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tWhat can I do for you?\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ShaniceTang"},"content":"    private static int readCommands(String line, Task[] list, int count) {","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"ShaniceTang"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"ShaniceTang"},"content":"            if(line.equals(\"list\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"ShaniceTang"},"content":"                listTasks(list, count);","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"ShaniceTang"},"content":"            } else if(line.startsWith(\"mark\") || line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"ShaniceTang"},"content":"                String[] command \u003d line.split(\" \");","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"ShaniceTang"},"content":"                markTask(list, command);","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"ShaniceTang"},"content":"            } else if (line.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"ShaniceTang"},"content":"                count \u003d addTodo(list, line, count);","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"ShaniceTang"},"content":"            } else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"ShaniceTang"},"content":"                count \u003d addDeadline(list, line, count);","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"ShaniceTang"},"content":"            } else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"ShaniceTang"},"content":"                count \u003d addEvent(list, line, count);","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"ShaniceTang"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"ShaniceTang"},"content":"        } catch (ChattieException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tPlease try again\");","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"ShaniceTang"},"content":"        return count;","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"ShaniceTang"},"content":"    public static void listTasks(Task[] list, int count) {","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"ShaniceTang"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ShaniceTang"},"content":"            System.out.print(\"\\t\" + (i+1) + \". \");","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ShaniceTang"},"content":"            if(list[i].isDone()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ShaniceTang"},"content":"                System.out.println(list[i]);","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"ShaniceTang"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"ShaniceTang"},"content":"                System.out.println(list[i]);","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"ShaniceTang"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"ShaniceTang"},"content":"    public static int addTodo(Task[] list, String line, int count) throws ChattieException{","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"ShaniceTang"},"content":"        if (line.trim().length() \u003c 5) {","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.TODO);","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"ShaniceTang"},"content":"        String todo \u003d line.substring(5);","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"ShaniceTang"},"content":"        list[count] \u003d new Todo(todo);","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\t  \" + list[count]);","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"ShaniceTang"},"content":"        count++;","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tNow you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"ShaniceTang"},"content":"        return count;","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"ShaniceTang"},"content":"    public static int addDeadline(Task[] list, String line, int count) throws ChattieException {","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"ShaniceTang"},"content":"        if (line.trim().length() \u003c 9) { //check if deadline is empty","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.EMPTY_DEADLINE);","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"ShaniceTang"},"content":"        int slashIndex \u003d line.indexOf(\"/by\");","lastModifiedDate":"2023-09-09"},{"lineNumber":104,"author":{"gitId":"ShaniceTang"},"content":"        if (slashIndex \u003c 0) {","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.INVALID_DEADLINE); //check if \u0027/by\u0027 is present","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"ShaniceTang"},"content":"        String task \u003d line.substring(9, slashIndex);","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"ShaniceTang"},"content":"        String by \u003d line.substring(slashIndex + 3);","lastModifiedDate":"2023-09-09"},{"lineNumber":110,"author":{"gitId":"ShaniceTang"},"content":"        if (task.isEmpty() || by.isEmpty()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.INVALID_DEADLINE); //check if [task] or [by] empty","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"ShaniceTang"},"content":"        list[count] \u003d new Deadline(task, by);","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\t  \" + list[count]);","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"ShaniceTang"},"content":"        count++;","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tNow you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"ShaniceTang"},"content":"        return count;","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"ShaniceTang"},"content":"    public static int addEvent(Task[] list, String line, int count) throws ChattieException{","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"ShaniceTang"},"content":"        if (line.trim().length() \u003c 6) {","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.EMPTY_EVENT); //check if event is empty","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"ShaniceTang"},"content":"        int firstSlash \u003d line.indexOf(\"/from\");","lastModifiedDate":"2023-09-09"},{"lineNumber":128,"author":{"gitId":"ShaniceTang"},"content":"        int secondSlash \u003d line.indexOf(\"/to\");","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"ShaniceTang"},"content":"        if (firstSlash \u003c 0 || secondSlash \u003c 0) {","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.INVALID_EVENT); //check if \u0027/from\u0027 or \u0027/to\u0027 present","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"ShaniceTang"},"content":"        String task \u003d line.substring(6, firstSlash);","lastModifiedDate":"2023-09-09"},{"lineNumber":134,"author":{"gitId":"ShaniceTang"},"content":"        String from \u003d line.substring(firstSlash + 5, secondSlash);","lastModifiedDate":"2023-09-09"},{"lineNumber":135,"author":{"gitId":"ShaniceTang"},"content":"        String to \u003d line.substring(secondSlash + 3);","lastModifiedDate":"2023-09-09"},{"lineNumber":136,"author":{"gitId":"ShaniceTang"},"content":"        if (task.isEmpty() || from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"ShaniceTang"},"content":"            throw new ChattieException(ErrorType.INVALID_EVENT); //check if [task], [from], or [to] is empty","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"ShaniceTang"},"content":"        list[count] \u003d new Event(task, from, to);","lastModifiedDate":"2023-09-09"},{"lineNumber":141,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\t  \" + list[count]);","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"ShaniceTang"},"content":"        count++;","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"ShaniceTang"},"content":"        System.out.println(\"\\tNow you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"ShaniceTang"},"content":"        return count;","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"ShaniceTang"},"content":"    public static void markTask(Task[] list, String[] command) {","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"ShaniceTang"},"content":"        int taskNum \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"ShaniceTang"},"content":"        if(command[0].equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"ShaniceTang"},"content":"            list[taskNum].setDone(true);","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\t\" + list[taskNum]);","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"ShaniceTang"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"ShaniceTang"},"content":"            list[taskNum].setDone(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tOK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\t\" + list[taskNum]);","lastModifiedDate":"2023-09-06"},{"lineNumber":158,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"ShaniceTang"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"ShaniceTang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"ShaniceTang"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"ShaniceTang"},"content":"        Task[] list \u003d new Task[100];","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"ShaniceTang"},"content":"        startChat(count, list);","lastModifiedDate":"2023-09-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ShaniceTang":164,"-":2}},{"path":"src/main/java/chattie/error/ChattieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.error;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"public class ChattieException extends Exception{","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"    public ChattieException(ErrorType e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"        switch(e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"        case TODO:","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tOh no! Todo is empty :(\");","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"        case EMPTY_DEADLINE:","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tOh no! Deadline is empty :(\");","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"        case INVALID_DEADLINE:","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tOh no! Deadline has an invalid format :(\");","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tTo add a deadline: Type \\\"deadline [task] /by [deadline]\\\"\");","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"        case EMPTY_EVENT:","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tOh no! Event is empty :(\");","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"        case INVALID_EVENT:","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tOh no! Event has an invalid format :(\");","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tTo add an event: Type \\\"event [task] /from [start] /to [end]\\\"\");","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"        default:","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"            System.out.println(\"\\tOh no! I don\u0027t understand this command :(\");","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"ShaniceTang":29}},{"path":"src/main/java/chattie/error/ErrorType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.error;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"public enum ErrorType {","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"    TODO, EMPTY_DEADLINE, EMPTY_EVENT, INVALID_DEADLINE, INVALID_EVENT","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"ShaniceTang":5}},{"path":"src/main/java/chattie/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"    private String by;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"    public Deadline(String task, String by) {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"        super(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"            return \"[D]\" + super.toString() + \"(by:\" + by + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"            return \"[D]\" + super.toString() + \"(by:\" + by + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"ShaniceTang":20}},{"path":"src/main/java/chattie/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"public class Event extends Task{","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"    private String from;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"    private String to;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"    public Event(String task, String from, String to) {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"        super(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"            return \"[E]\" + super.toString() + \"(from:\" + from + \"to:\" + to + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"            return \"[E]\" + super.toString() + \"(from:\" + from + \"to:\" + to + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"ShaniceTang":21}},{"path":"src/main/java/chattie/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"public class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"    protected String task;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"    public Task() {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"        setTask(\"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"        setDone(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"    public Task(String task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"        setTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"        setDone(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ShaniceTang"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ShaniceTang"},"content":"        return isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ShaniceTang"},"content":"    public void setTask(String task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ShaniceTang"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ShaniceTang"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ShaniceTang"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"ShaniceTang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"ShaniceTang"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"ShaniceTang"},"content":"            return \"[X] \" + getTask();","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"ShaniceTang"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"ShaniceTang"},"content":"            return \"[ ] \" + getTask();","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ShaniceTang":41}},{"path":"src/main/java/chattie/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"package chattie.tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"    public Todo(String task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"        super(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ShaniceTang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"ShaniceTang"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"ShaniceTang"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"ShaniceTang"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"ShaniceTang"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"ShaniceTang"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"ShaniceTang"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"ShaniceTang"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"ShaniceTang":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ShaniceTang"},"content":"good","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"ShaniceTang"},"content":"todo read book","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"ShaniceTang"},"content":"deadline cs2113 coursemology /by Friday 4pm","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"ShaniceTang"},"content":"event cs2112 lecture /from Friday 4pm /to 6pm","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"ShaniceTang"},"content":"list","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"ShaniceTang"},"content":"mark 2","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"ShaniceTang"},"content":"deadline cs2113 ip /by Thursday 5pm","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"ShaniceTang"},"content":"list","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"ShaniceTang"},"content":"bye","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"ShaniceTang":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ShaniceTang"},"content":"java -classpath ..\\bin Chattie \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ShaniceTang":1,"-":20}}]
