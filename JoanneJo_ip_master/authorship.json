[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JoanneJo"},"content":"# Lemon project template","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"JoanneJo"},"content":"3. After that, locate the `src/main/java/Lemon.java` file, right-click it, and choose `Run Lemon.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JoanneJo":2,"-":22}},{"path":"src/main/java/Lemon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoanneJo"},"content":"import lemon.exception.LemonException;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"JoanneJo"},"content":"import lemon.task.Deadline;","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"JoanneJo"},"content":"import lemon.task.Event;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"JoanneJo"},"content":"import lemon.task.Task;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"JoanneJo"},"content":"import lemon.task.Todo;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"JoanneJo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"JoanneJo"},"content":"import java.util.AbstractMap;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"JoanneJo"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"JoanneJo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JoanneJo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"JoanneJo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"JoanneJo"},"content":"import java.io.File;","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"JoanneJo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"JoanneJo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"JoanneJo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"JoanneJo"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"JoanneJo"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"JoanneJo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"JoanneJo"},"content":"public class Lemon {","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"JoanneJo"},"content":"    public static String LEMON_EMOJI \u003d \"\\uD83C\\uDF4B\";","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"JoanneJo"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"JoanneJo"},"content":"    public static void greet() {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"JoanneJo"},"content":"        String LOGO \u003d \"                      .--:::.                      \\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"JoanneJo"},"content":"                + \"                .:-----::::.:-.                    \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"JoanneJo"},"content":"                + \"            .----:::::::::..:\u003d:                    \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"JoanneJo"},"content":"                + \"         .---:::::::::::::::-*.                    \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"JoanneJo"},"content":"                + \"       .\u003d-::::::::::::::::::::\u003d.                   \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"JoanneJo"},"content":"                + \"      :\u003d:::::::::::::::::::::::+.                  \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"JoanneJo"},"content":"                + \"     .\u003d:::::::::::::::::::::::::\u003d                  \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"JoanneJo"},"content":"                + \"     +.:::::::::::::::::::::::::\u003d                  \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"JoanneJo"},"content":"                + \"    -:::::::::::::::::::::::::----:.               \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"JoanneJo"},"content":"                + \"    \u003d:::::::::::::::::::::::-:.   .:---:           \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"JoanneJo"},"content":"                + \"    \u003d:::::::::::::::::::::\u003d* :.:: -  .:.--         \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"JoanneJo"},"content":"                + \"    \u003d::::::::::::::::::::+--..   :::. .-.:\u003d-       \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"JoanneJo"},"content":"                + \"    :-::::::::::::::::::\u003d.:-.:    .:-.--. ::\u003d      \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"JoanneJo"},"content":"                + \"     +:::::::::::::::::\u003d:  + .:::::.-:-....: +     \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"JoanneJo"},"content":"                + \"     --::::::::-:::::::+   .+ -.....--:-..... \u003d    \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"JoanneJo"},"content":"                + \"     :\u003d::::::::::::::::\u003d.   .\u003d:.   .-: :-.  .:\u003d.   \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"JoanneJo"},"content":"                + \"     --::::\u003d--------\u003d----.    --..:-:   :.: .:-.   \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"JoanneJo"},"content":"                + \"      .---\u003d.    ...     \u003d..    .-: .:.  .: .. \u003d    \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"JoanneJo"},"content":"                + \"                        -   .    .-::-:..  .::     \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"JoanneJo"},"content":"                + \"                        .:::::.       .:\u003d+\u003d:       \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"JoanneJo"},"content":"                + \"                              .:::::::-:.          \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"JoanneJo"},"content":"                + \"    ______   ________  ________  ________  ________ \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"JoanneJo"},"content":"                + \"  ╱╱      ╲ ╱        ╲╱        ╲╱        ╲╱    ╱   ╲\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"JoanneJo"},"content":"                + \" ╱╱       ╱╱         ╱         ╱         ╱         ╱\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"JoanneJo"},"content":"                + \"╱        ╱╱        _╱         ╱         ╱         ╱ \\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"JoanneJo"},"content":"                + \"╲________╱╲________╱╲__╱__╱__╱╲________╱╲__╱_____╱  \\n\";","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"JoanneJo"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"JoanneJo"},"content":"        System.out.println(\"Hey there! I\u0027m Lemon \" +  LEMON_EMOJI);","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"JoanneJo"},"content":"        System.out.println(\"How can I add some zest to your day?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"JoanneJo"},"content":"        System.out.print( LEMON_EMOJI + \" \" +  LEMON_EMOJI + \" \");","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"JoanneJo"},"content":"    public static String getInput() {","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"JoanneJo"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"JoanneJo"},"content":"        System.out.println(LEMON_EMOJI + \"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"JoanneJo"},"content":"        return in.nextLine();","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"JoanneJo"},"content":"    public static AbstractMap.SimpleEntry\u003cTask, String\u003e addNewTodo(String input, boolean isDone, String filePath)","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"JoanneJo"},"content":"            throws LemonException {","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"JoanneJo"},"content":"        String inputPattern \u003d \"todo (.+)\";","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"JoanneJo"},"content":"        Pattern pattern \u003d Pattern.compile(inputPattern);","lastModifiedDate":"2023-09-17"},{"lineNumber":70,"author":{"gitId":"JoanneJo"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-09-17"},{"lineNumber":71,"author":{"gitId":"JoanneJo"},"content":"        boolean matchFound \u003d matcher.find();","lastModifiedDate":"2023-09-17"},{"lineNumber":72,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"JoanneJo"},"content":"        String task;","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"JoanneJo"},"content":"        if (matchFound) {","lastModifiedDate":"2023-09-17"},{"lineNumber":76,"author":{"gitId":"JoanneJo"},"content":"            task \u003d matcher.group(1).trim();","lastModifiedDate":"2023-09-17"},{"lineNumber":77,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"JoanneJo"},"content":"            if (task.isEmpty()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"JoanneJo"},"content":"                throw new LemonException(\"Oopsie! Please state the task!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"JoanneJo"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"JoanneJo"},"content":"            Task newTask \u003d new Todo(task, isDone);","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"JoanneJo"},"content":"            tasks.add(newTask);","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"JoanneJo"},"content":"            String taskStr \u003d String.format(\"T | %s | %s\\n\", newTask.getStatusIcon(), task);","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"JoanneJo"},"content":"            return new AbstractMap.SimpleEntry\u003c\u003e(newTask, taskStr);","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"JoanneJo"},"content":"        } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"JoanneJo"},"content":"            throw new LemonException(\"Oopsie! Please use the format \u0027todo \u003ctask\u003e\u0027!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"JoanneJo"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"JoanneJo"},"content":"    public static AbstractMap.SimpleEntry\u003cTask, String\u003e addNewDeadline(String input, boolean isDone, String filePath)","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"JoanneJo"},"content":"            throws LemonException {","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"JoanneJo"},"content":"        String inputPattern \u003d \"deadline (.+?) /by (.+)\";","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"JoanneJo"},"content":"        Pattern pattern \u003d Pattern.compile(inputPattern);","lastModifiedDate":"2023-09-17"},{"lineNumber":97,"author":{"gitId":"JoanneJo"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-09-17"},{"lineNumber":98,"author":{"gitId":"JoanneJo"},"content":"        boolean matchFound \u003d matcher.find();","lastModifiedDate":"2023-09-17"},{"lineNumber":99,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":100,"author":{"gitId":"JoanneJo"},"content":"        String task, dateTime;","lastModifiedDate":"2023-09-15"},{"lineNumber":101,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":102,"author":{"gitId":"JoanneJo"},"content":"        if (matchFound) {","lastModifiedDate":"2023-09-17"},{"lineNumber":103,"author":{"gitId":"JoanneJo"},"content":"            task \u003d matcher.group(1).trim();","lastModifiedDate":"2023-09-17"},{"lineNumber":104,"author":{"gitId":"JoanneJo"},"content":"            dateTime \u003d matcher.group(2).trim();","lastModifiedDate":"2023-09-17"},{"lineNumber":105,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"JoanneJo"},"content":"            if (task.isEmpty() || dateTime.isEmpty()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":107,"author":{"gitId":"JoanneJo"},"content":"                throw new LemonException(\"Oopsie! Please state the task and date/time!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":108,"author":{"gitId":"JoanneJo"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":109,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"JoanneJo"},"content":"            Task newTask \u003d new Deadline(task, isDone, dateTime);","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"JoanneJo"},"content":"            tasks.add(newTask);","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"JoanneJo"},"content":"            String taskStr \u003d String.format(\"D | %s | %s | %s\\n\", newTask.getStatusIcon(), task, dateTime);","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"JoanneJo"},"content":"            return new AbstractMap.SimpleEntry\u003c\u003e(newTask, taskStr);","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"JoanneJo"},"content":"        } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"JoanneJo"},"content":"            throw new LemonException(\"Oopsie! Please use the format \u0027deadline \u003ctask\u003e /by \u003cdate/time\u003e\u0027!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"JoanneJo"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":118,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":119,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":120,"author":{"gitId":"JoanneJo"},"content":"    public static AbstractMap.SimpleEntry\u003cTask, String\u003e addNewEvent(String input, boolean isDone, String filePath)","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"JoanneJo"},"content":"            throws LemonException {","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"JoanneJo"},"content":"        String inputPattern \u003d \"event (.+?) /from (.+?) /to (.+)\";","lastModifiedDate":"2023-09-15"},{"lineNumber":123,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":124,"author":{"gitId":"JoanneJo"},"content":"        Pattern pattern \u003d Pattern.compile(inputPattern);","lastModifiedDate":"2023-09-17"},{"lineNumber":125,"author":{"gitId":"JoanneJo"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-09-17"},{"lineNumber":126,"author":{"gitId":"JoanneJo"},"content":"        boolean matchFound \u003d matcher.find();","lastModifiedDate":"2023-09-17"},{"lineNumber":127,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":128,"author":{"gitId":"JoanneJo"},"content":"        String task, startDateTime, endDateTime;","lastModifiedDate":"2023-09-15"},{"lineNumber":129,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":130,"author":{"gitId":"JoanneJo"},"content":"        if (matchFound) {","lastModifiedDate":"2023-09-17"},{"lineNumber":131,"author":{"gitId":"JoanneJo"},"content":"            task \u003d matcher.group(1).trim();","lastModifiedDate":"2023-09-17"},{"lineNumber":132,"author":{"gitId":"JoanneJo"},"content":"            startDateTime \u003d matcher.group(2).trim();","lastModifiedDate":"2023-09-17"},{"lineNumber":133,"author":{"gitId":"JoanneJo"},"content":"            endDateTime \u003d matcher.group(3).trim();","lastModifiedDate":"2023-09-17"},{"lineNumber":134,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"JoanneJo"},"content":"            if (task.isEmpty() || startDateTime.isEmpty() || endDateTime.isEmpty()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"JoanneJo"},"content":"                throw new LemonException(\"Oopsie! Please state the task, starting date/time and ending date/time!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"JoanneJo"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":138,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"JoanneJo"},"content":"            Task newTask \u003d new Event(task, isDone, startDateTime, endDateTime);","lastModifiedDate":"2023-09-19"},{"lineNumber":140,"author":{"gitId":"JoanneJo"},"content":"            tasks.add(newTask);","lastModifiedDate":"2023-09-18"},{"lineNumber":141,"author":{"gitId":"JoanneJo"},"content":"            String taskStr \u003d String.format(\"E | %s | %s | %s | %s\\n\", newTask.getStatusIcon(), task, startDateTime,","lastModifiedDate":"2023-09-19"},{"lineNumber":142,"author":{"gitId":"JoanneJo"},"content":"                    endDateTime);","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"JoanneJo"},"content":"            return new AbstractMap.SimpleEntry\u003c\u003e(newTask, taskStr);","lastModifiedDate":"2023-09-19"},{"lineNumber":145,"author":{"gitId":"JoanneJo"},"content":"        } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":146,"author":{"gitId":"JoanneJo"},"content":"            throw new LemonException(\"Oopsie! Please use the format \u0027event \u003ctask\u003e \" +","lastModifiedDate":"2023-09-15"},{"lineNumber":147,"author":{"gitId":"JoanneJo"},"content":"                    \"/from \u003cstarting date/time\u003e /to \u003cending date/time\u003e\u0027!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":148,"author":{"gitId":"JoanneJo"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":149,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":150,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":151,"author":{"gitId":"JoanneJo"},"content":"    public static void deleteTask(String input, boolean isEmptyList, String filePath) throws LemonException {","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"JoanneJo"},"content":"        checkEmptyList(\"delete\", isEmptyList);","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":154,"author":{"gitId":"JoanneJo"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":155,"author":{"gitId":"JoanneJo"},"content":"            String inputPattern \u003d \"delete (\\\\d+)\";","lastModifiedDate":"2023-09-18"},{"lineNumber":156,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":157,"author":{"gitId":"JoanneJo"},"content":"            Pattern pattern \u003d Pattern.compile(inputPattern);","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"JoanneJo"},"content":"            Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"JoanneJo"},"content":"            boolean matchFound \u003d matcher.find();","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"JoanneJo"},"content":"            if (matchFound) {","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"JoanneJo"},"content":"                int taskSerialNo \u003d Integer.parseInt(matcher.group(1).trim());","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"JoanneJo"},"content":"                int taskIndex \u003d taskSerialNo - 1;","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":165,"author":{"gitId":"JoanneJo"},"content":"                Task deletedTask \u003d tasks.remove(taskIndex);","lastModifiedDate":"2023-09-18"},{"lineNumber":166,"author":{"gitId":"JoanneJo"},"content":"                printAddedOrDeletedTask(deletedTask, \"delete\");","lastModifiedDate":"2023-09-18"},{"lineNumber":167,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":168,"author":{"gitId":"JoanneJo"},"content":"                String taskStr \u003d null;","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"JoanneJo"},"content":"                for (Task task : tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"JoanneJo"},"content":"                    if (task instanceof Todo) {","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"JoanneJo"},"content":"                        taskStr \u003d String.format(\"T | %s | %s\\n\", task.getStatusIcon(), task.getDescription());","lastModifiedDate":"2023-09-21"},{"lineNumber":173,"author":{"gitId":"JoanneJo"},"content":"                    } else if (task instanceof Deadline) {","lastModifiedDate":"2023-09-21"},{"lineNumber":174,"author":{"gitId":"JoanneJo"},"content":"                        Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-21"},{"lineNumber":175,"author":{"gitId":"JoanneJo"},"content":"                        taskStr \u003d String.format(\"D | %s | %s | %s\\n\", task.getStatusIcon(), task.getDescription(), deadline.getBy());","lastModifiedDate":"2023-09-21"},{"lineNumber":176,"author":{"gitId":"JoanneJo"},"content":"                    } else if (task instanceof Event) {","lastModifiedDate":"2023-09-21"},{"lineNumber":177,"author":{"gitId":"JoanneJo"},"content":"                        Event event \u003d (Event) task;","lastModifiedDate":"2023-09-21"},{"lineNumber":178,"author":{"gitId":"JoanneJo"},"content":"                        taskStr \u003d String.format(\"E | %s | %s | %s | %s\\n\", task.getStatusIcon(), task.getDescription(), event.getFrom(),","lastModifiedDate":"2023-09-21"},{"lineNumber":179,"author":{"gitId":"JoanneJo"},"content":"                                event.getTo());","lastModifiedDate":"2023-09-21"},{"lineNumber":180,"author":{"gitId":"JoanneJo"},"content":"                    } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":181,"author":{"gitId":"JoanneJo"},"content":"                        throw new LemonException(\"Uh-oh! An error has occurred while deleting.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":182,"author":{"gitId":"JoanneJo"},"content":"                    }","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"JoanneJo"},"content":"                    overwriteFile(filePath, taskStr);","lastModifiedDate":"2023-09-21"},{"lineNumber":184,"author":{"gitId":"JoanneJo"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":185,"author":{"gitId":"JoanneJo"},"content":"                //deleteFromFile(filePath, taskSerialNo);","lastModifiedDate":"2023-09-21"},{"lineNumber":186,"author":{"gitId":"JoanneJo"},"content":"            } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":187,"author":{"gitId":"JoanneJo"},"content":"                throw new LemonException(\"Oopsie! Please use the format \u0027delete \u003ctask number\u003e\u0027!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":188,"author":{"gitId":"JoanneJo"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":189,"author":{"gitId":"JoanneJo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":190,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"Oopsie! Please enter a valid task number!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":191,"author":{"gitId":"JoanneJo"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":192,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"Oopsie! Please enter a task number that is on the list!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":193,"author":{"gitId":"JoanneJo"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":194,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":195,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":196,"author":{"gitId":"JoanneJo"},"content":"    public static void printAddedOrDeletedTask(Task task, String action) {","lastModifiedDate":"2023-09-18"},{"lineNumber":197,"author":{"gitId":"JoanneJo"},"content":"        if (action.equals(\"add\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":198,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"Got it! This task has been squeezed into your basket:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":199,"author":{"gitId":"JoanneJo"},"content":"        } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":200,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"Got it! This task has been squeezed out of your basket:\");","lastModifiedDate":"2023-09-18"},{"lineNumber":201,"author":{"gitId":"JoanneJo"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":202,"author":{"gitId":"JoanneJo"},"content":"        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2023-09-18"},{"lineNumber":203,"author":{"gitId":"JoanneJo"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" fruitful tasks in your basket!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":204,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":205,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":206,"author":{"gitId":"JoanneJo"},"content":"    public static void printList(boolean isEmpty) throws LemonException {","lastModifiedDate":"2023-09-15"},{"lineNumber":207,"author":{"gitId":"JoanneJo"},"content":"        if (isEmpty) {","lastModifiedDate":"2023-09-04"},{"lineNumber":208,"author":{"gitId":"JoanneJo"},"content":"            throw new LemonException(\"Your basket is on a lemonade break right now! Add some fruitful tasks!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":209,"author":{"gitId":"JoanneJo"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"Your basket is looking citrusy-fresh:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":211,"author":{"gitId":"JoanneJo"},"content":"            int taskSerialNo \u003d 1;","lastModifiedDate":"2023-09-04"},{"lineNumber":212,"author":{"gitId":"JoanneJo"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-18"},{"lineNumber":213,"author":{"gitId":"JoanneJo"},"content":"                System.out.println(taskSerialNo + \". \" + task.toString());","lastModifiedDate":"2023-09-18"},{"lineNumber":214,"author":{"gitId":"JoanneJo"},"content":"                taskSerialNo++;","lastModifiedDate":"2023-09-04"},{"lineNumber":215,"author":{"gitId":"JoanneJo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"JoanneJo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":218,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":219,"author":{"gitId":"JoanneJo"},"content":"    public static void checkEmptyList(String action, boolean isEmptyList) throws LemonException {","lastModifiedDate":"2023-09-18"},{"lineNumber":220,"author":{"gitId":"JoanneJo"},"content":"        if (isEmptyList) {","lastModifiedDate":"2023-09-15"},{"lineNumber":221,"author":{"gitId":"JoanneJo"},"content":"            if (action.equals(\"mark\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":222,"author":{"gitId":"JoanneJo"},"content":"                throw new LemonException(\"Your basket is on a lemonade break right now! \" +","lastModifiedDate":"2023-09-15"},{"lineNumber":223,"author":{"gitId":"JoanneJo"},"content":"                        \"There are no tasks to be marked. Add some fruitful tasks!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":224,"author":{"gitId":"JoanneJo"},"content":"            } else if (action.equals(\"unmark\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":225,"author":{"gitId":"JoanneJo"},"content":"                throw new LemonException(\"Your basket is on a lemonade break right now! \" +","lastModifiedDate":"2023-09-15"},{"lineNumber":226,"author":{"gitId":"JoanneJo"},"content":"                        \"There are no tasks to be unmarked. Add some fruitful tasks!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":227,"author":{"gitId":"JoanneJo"},"content":"            } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":228,"author":{"gitId":"JoanneJo"},"content":"                throw new LemonException(\"Your basket is on a lemonade break right now! \" +","lastModifiedDate":"2023-09-18"},{"lineNumber":229,"author":{"gitId":"JoanneJo"},"content":"                        \"There are no tasks to be deleted. Add some fruitful tasks!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":230,"author":{"gitId":"JoanneJo"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":231,"author":{"gitId":"JoanneJo"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":232,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":233,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":234,"author":{"gitId":"JoanneJo"},"content":"    public static void markTask(String input, String action, boolean isEmptyList, String filePath)","lastModifiedDate":"2023-09-19"},{"lineNumber":235,"author":{"gitId":"JoanneJo"},"content":"            throws LemonException {","lastModifiedDate":"2023-09-19"},{"lineNumber":236,"author":{"gitId":"JoanneJo"},"content":"        checkEmptyList(action, isEmptyList);","lastModifiedDate":"2023-09-18"},{"lineNumber":237,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":238,"author":{"gitId":"JoanneJo"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":239,"author":{"gitId":"JoanneJo"},"content":"            String inputPattern \u003d \"(mark|unmark) (\\\\d+)\";","lastModifiedDate":"2023-09-15"},{"lineNumber":240,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":241,"author":{"gitId":"JoanneJo"},"content":"            Pattern pattern \u003d Pattern.compile(inputPattern);","lastModifiedDate":"2023-09-17"},{"lineNumber":242,"author":{"gitId":"JoanneJo"},"content":"            Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-09-17"},{"lineNumber":243,"author":{"gitId":"JoanneJo"},"content":"            boolean matchFound \u003d matcher.find();","lastModifiedDate":"2023-09-17"},{"lineNumber":244,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":245,"author":{"gitId":"JoanneJo"},"content":"            if (matchFound) {","lastModifiedDate":"2023-09-17"},{"lineNumber":246,"author":{"gitId":"JoanneJo"},"content":"                int taskSerialNo \u003d Integer.parseInt(matcher.group(2).trim());","lastModifiedDate":"2023-09-17"},{"lineNumber":247,"author":{"gitId":"JoanneJo"},"content":"                int taskIndex \u003d taskSerialNo - 1;","lastModifiedDate":"2023-09-04"},{"lineNumber":248,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":249,"author":{"gitId":"JoanneJo"},"content":"                String currentStatusIcon \u003d tasks.get(taskIndex).getStatusIcon();","lastModifiedDate":"2023-09-19"},{"lineNumber":250,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":251,"author":{"gitId":"JoanneJo"},"content":"                if (action.equals(\"mark\") \u0026\u0026 !Objects.equals(currentStatusIcon, \"X\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":252,"author":{"gitId":"JoanneJo"},"content":"                    tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2023-09-18"},{"lineNumber":253,"author":{"gitId":"JoanneJo"},"content":"                    System.out.println(\"Great job! This task is now juiced:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":254,"author":{"gitId":"JoanneJo"},"content":"                } else if (action.equals(\"unmark\") \u0026\u0026 !Objects.equals(currentStatusIcon, \" \")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":255,"author":{"gitId":"JoanneJo"},"content":"                    tasks.get(taskIndex).markAsNotDone();","lastModifiedDate":"2023-09-18"},{"lineNumber":256,"author":{"gitId":"JoanneJo"},"content":"                    System.out.println(\"No problem! This task is back into the basket:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":257,"author":{"gitId":"JoanneJo"},"content":"                } else {","lastModifiedDate":"2023-09-19"},{"lineNumber":258,"author":{"gitId":"JoanneJo"},"content":"                    throw new LemonException(\"The task has already been marked accordingly!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":259,"author":{"gitId":"JoanneJo"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":260,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":261,"author":{"gitId":"JoanneJo"},"content":"                System.out.println(\"\\t\" + tasks.get(taskIndex).toString());","lastModifiedDate":"2023-09-18"},{"lineNumber":262,"author":{"gitId":"JoanneJo"},"content":"                updateFile(filePath, taskSerialNo, action);","lastModifiedDate":"2023-09-19"},{"lineNumber":263,"author":{"gitId":"JoanneJo"},"content":"            } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":264,"author":{"gitId":"JoanneJo"},"content":"                throw new LemonException(\"Oopsie! Please use the format \u0027mark/unmark \u003ctask number\u003e\u0027!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":265,"author":{"gitId":"JoanneJo"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":266,"author":{"gitId":"JoanneJo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":267,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"Oopsie! Please enter a valid task number!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":268,"author":{"gitId":"JoanneJo"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":269,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"Oopsie! Please enter a task number that is on the list!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":270,"author":{"gitId":"JoanneJo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":271,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":272,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":273,"author":{"gitId":"JoanneJo"},"content":"    public static void loadFile(String filePath) throws LemonException {","lastModifiedDate":"2023-09-19"},{"lineNumber":274,"author":{"gitId":"JoanneJo"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":275,"author":{"gitId":"JoanneJo"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-19"},{"lineNumber":276,"author":{"gitId":"JoanneJo"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-19"},{"lineNumber":277,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":278,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"Loading data file...\");","lastModifiedDate":"2023-09-19"},{"lineNumber":279,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":280,"author":{"gitId":"JoanneJo"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":281,"author":{"gitId":"JoanneJo"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-09-19"},{"lineNumber":282,"author":{"gitId":"JoanneJo"},"content":"                String[] taskStr \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-19"},{"lineNumber":283,"author":{"gitId":"JoanneJo"},"content":"                boolean isDone;","lastModifiedDate":"2023-09-19"},{"lineNumber":284,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":285,"author":{"gitId":"JoanneJo"},"content":"                if (taskStr[1].equals(\"X\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":286,"author":{"gitId":"JoanneJo"},"content":"                    isDone \u003d true;","lastModifiedDate":"2023-09-19"},{"lineNumber":287,"author":{"gitId":"JoanneJo"},"content":"                } else {","lastModifiedDate":"2023-09-19"},{"lineNumber":288,"author":{"gitId":"JoanneJo"},"content":"                    isDone \u003d false;","lastModifiedDate":"2023-09-19"},{"lineNumber":289,"author":{"gitId":"JoanneJo"},"content":"                }","lastModifiedDate":"2023-09-19"},{"lineNumber":290,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":291,"author":{"gitId":"JoanneJo"},"content":"                switch (taskStr[0]) {","lastModifiedDate":"2023-09-19"},{"lineNumber":292,"author":{"gitId":"JoanneJo"},"content":"                case \"T\":","lastModifiedDate":"2023-09-19"},{"lineNumber":293,"author":{"gitId":"JoanneJo"},"content":"                    addNewTodo(String.format(\"todo %s\", taskStr[2]), isDone, filePath);","lastModifiedDate":"2023-09-19"},{"lineNumber":294,"author":{"gitId":"JoanneJo"},"content":"                    break;","lastModifiedDate":"2023-09-19"},{"lineNumber":295,"author":{"gitId":"JoanneJo"},"content":"                case \"D\":","lastModifiedDate":"2023-09-19"},{"lineNumber":296,"author":{"gitId":"JoanneJo"},"content":"                    addNewDeadline(String.format(\"deadline %s /by %s\", taskStr[2], taskStr[3]), isDone, filePath);","lastModifiedDate":"2023-09-19"},{"lineNumber":297,"author":{"gitId":"JoanneJo"},"content":"                    break;","lastModifiedDate":"2023-09-19"},{"lineNumber":298,"author":{"gitId":"JoanneJo"},"content":"                case \"E\":","lastModifiedDate":"2023-09-19"},{"lineNumber":299,"author":{"gitId":"JoanneJo"},"content":"                    addNewEvent(String.format(\"event %s /from %s /to %s\", taskStr[2], taskStr[3], taskStr[4]),","lastModifiedDate":"2023-09-21"},{"lineNumber":300,"author":{"gitId":"JoanneJo"},"content":"                            isDone, filePath);","lastModifiedDate":"2023-09-19"},{"lineNumber":301,"author":{"gitId":"JoanneJo"},"content":"                    break;","lastModifiedDate":"2023-09-19"},{"lineNumber":302,"author":{"gitId":"JoanneJo"},"content":"                default:","lastModifiedDate":"2023-09-19"},{"lineNumber":303,"author":{"gitId":"JoanneJo"},"content":"                    throw new LemonException(\"Uh-oh! Data in the file is not in the right format! Please use the format \" +","lastModifiedDate":"2023-09-19"},{"lineNumber":304,"author":{"gitId":"JoanneJo"},"content":"                            \"\u0027\u003cT/D/E\u003e | \u003cX/ \u003e | \u003ctask\u003e [| \u003cdate/time\u003e] [| \u003cdate/time\u003e]\u0027!\\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":305,"author":{"gitId":"JoanneJo"},"content":"                }","lastModifiedDate":"2023-09-19"},{"lineNumber":306,"author":{"gitId":"JoanneJo"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":307,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"Data file loaded!\\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":308,"author":{"gitId":"JoanneJo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":309,"author":{"gitId":"JoanneJo"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-19"},{"lineNumber":310,"author":{"gitId":"JoanneJo"},"content":"            if (!file.getParentFile().exists()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":311,"author":{"gitId":"JoanneJo"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-19"},{"lineNumber":312,"author":{"gitId":"JoanneJo"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":313,"author":{"gitId":"JoanneJo"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":314,"author":{"gitId":"JoanneJo"},"content":"                try {","lastModifiedDate":"2023-09-19"},{"lineNumber":315,"author":{"gitId":"JoanneJo"},"content":"                    file.createNewFile();","lastModifiedDate":"2023-09-19"},{"lineNumber":316,"author":{"gitId":"JoanneJo"},"content":"                } catch (IOException f) {","lastModifiedDate":"2023-09-19"},{"lineNumber":317,"author":{"gitId":"JoanneJo"},"content":"                    System.out.println(\"Uh-oh! An error has occurred while creating file.\\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":318,"author":{"gitId":"JoanneJo"},"content":"                }","lastModifiedDate":"2023-09-19"},{"lineNumber":319,"author":{"gitId":"JoanneJo"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":320,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":321,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"New file created at \" + file.getAbsolutePath() + \" !\\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":322,"author":{"gitId":"JoanneJo"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":323,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":324,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":325,"author":{"gitId":"JoanneJo"},"content":"    public static void writeToFile(String filePath, String taskStr) {","lastModifiedDate":"2023-09-19"},{"lineNumber":326,"author":{"gitId":"JoanneJo"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-19"},{"lineNumber":327,"author":{"gitId":"JoanneJo"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":328,"author":{"gitId":"JoanneJo"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-09-19"},{"lineNumber":329,"author":{"gitId":"JoanneJo"},"content":"            fileWriter.write(taskStr);","lastModifiedDate":"2023-09-19"},{"lineNumber":330,"author":{"gitId":"JoanneJo"},"content":"            fileWriter.close();","lastModifiedDate":"2023-09-19"},{"lineNumber":331,"author":{"gitId":"JoanneJo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":332,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"Uh-oh! An error has occurred while writing to file.\\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":333,"author":{"gitId":"JoanneJo"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":334,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":335,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":336,"author":{"gitId":"JoanneJo"},"content":"    public static void overwriteFile(String filePath, String taskStr) {","lastModifiedDate":"2023-09-21"},{"lineNumber":337,"author":{"gitId":"JoanneJo"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-21"},{"lineNumber":338,"author":{"gitId":"JoanneJo"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":339,"author":{"gitId":"JoanneJo"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath, false);","lastModifiedDate":"2023-09-21"},{"lineNumber":340,"author":{"gitId":"JoanneJo"},"content":"            fileWriter.write(taskStr);","lastModifiedDate":"2023-09-21"},{"lineNumber":341,"author":{"gitId":"JoanneJo"},"content":"            fileWriter.close();","lastModifiedDate":"2023-09-21"},{"lineNumber":342,"author":{"gitId":"JoanneJo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":343,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"Uh-oh! An error has occurred while writing to file.\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":344,"author":{"gitId":"JoanneJo"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":345,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":346,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":347,"author":{"gitId":"JoanneJo"},"content":"    public static void deleteFromFile(String filePath, int deleteLineSerialNo) throws LemonException {","lastModifiedDate":"2023-09-21"},{"lineNumber":348,"author":{"gitId":"JoanneJo"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":349,"author":{"gitId":"JoanneJo"},"content":"            String TEMP_FILE_PATH \u003d \"./data/tempFile.txt\";","lastModifiedDate":"2023-09-19"},{"lineNumber":350,"author":{"gitId":"JoanneJo"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-19"},{"lineNumber":351,"author":{"gitId":"JoanneJo"},"content":"            File tempFile \u003d new File(TEMP_FILE_PATH);","lastModifiedDate":"2023-09-19"},{"lineNumber":352,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":353,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"TEST3\");","lastModifiedDate":"2023-09-21"},{"lineNumber":354,"author":{"gitId":"JoanneJo"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-09-19"},{"lineNumber":355,"author":{"gitId":"JoanneJo"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2023-09-19"},{"lineNumber":356,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":357,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"TEST4\");","lastModifiedDate":"2023-09-21"},{"lineNumber":358,"author":{"gitId":"JoanneJo"},"content":"            String currentLine;","lastModifiedDate":"2023-09-19"},{"lineNumber":359,"author":{"gitId":"JoanneJo"},"content":"            int lineCount \u003d 1;","lastModifiedDate":"2023-09-19"},{"lineNumber":360,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":361,"author":{"gitId":"JoanneJo"},"content":"            while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-19"},{"lineNumber":362,"author":{"gitId":"JoanneJo"},"content":"                if (lineCount !\u003d deleteLineSerialNo) {","lastModifiedDate":"2023-09-19"},{"lineNumber":363,"author":{"gitId":"JoanneJo"},"content":"                    writer.write(currentLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":364,"author":{"gitId":"JoanneJo"},"content":"                }","lastModifiedDate":"2023-09-19"},{"lineNumber":365,"author":{"gitId":"JoanneJo"},"content":"                lineCount++;","lastModifiedDate":"2023-09-19"},{"lineNumber":366,"author":{"gitId":"JoanneJo"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":367,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"TEST5\");","lastModifiedDate":"2023-09-21"},{"lineNumber":368,"author":{"gitId":"JoanneJo"},"content":"            writer.close();","lastModifiedDate":"2023-09-19"},{"lineNumber":369,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"TEST1\");","lastModifiedDate":"2023-09-21"},{"lineNumber":370,"author":{"gitId":"JoanneJo"},"content":"            reader.close();","lastModifiedDate":"2023-09-19"},{"lineNumber":371,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"TEST2\");","lastModifiedDate":"2023-09-21"},{"lineNumber":372,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":373,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(file.delete());","lastModifiedDate":"2023-09-21"},{"lineNumber":374,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":375,"author":{"gitId":"JoanneJo"},"content":"            if (file.delete()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":376,"author":{"gitId":"JoanneJo"},"content":"                System.out.println(\"TEST6\");","lastModifiedDate":"2023-09-21"},{"lineNumber":377,"author":{"gitId":"JoanneJo"},"content":"                if (!tempFile.renameTo(file)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":378,"author":{"gitId":"JoanneJo"},"content":"                    throw new LemonException(\"Uh-oh! An error has occurred while deleting from file. not renamed\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":379,"author":{"gitId":"JoanneJo"},"content":"                }","lastModifiedDate":"2023-09-19"},{"lineNumber":380,"author":{"gitId":"JoanneJo"},"content":"            } else {","lastModifiedDate":"2023-09-19"},{"lineNumber":381,"author":{"gitId":"JoanneJo"},"content":"                System.out.println(\"TEST7\");","lastModifiedDate":"2023-09-21"},{"lineNumber":382,"author":{"gitId":"JoanneJo"},"content":"                throw new LemonException(\"Uh-oh! An error has occurred while deleting from file. not deleted\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":383,"author":{"gitId":"JoanneJo"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":384,"author":{"gitId":"JoanneJo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":385,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"Uh-oh! An error has occurred while deleting from file. io\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":386,"author":{"gitId":"JoanneJo"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":387,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":388,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":389,"author":{"gitId":"JoanneJo"},"content":"    public static void updateFile(String filePath, int updateLineSerialNo, String action) {","lastModifiedDate":"2023-09-19"},{"lineNumber":390,"author":{"gitId":"JoanneJo"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":391,"author":{"gitId":"JoanneJo"},"content":"            String TEMP_FILE_PATH \u003d \"./data/tempFile.txt\";","lastModifiedDate":"2023-09-19"},{"lineNumber":392,"author":{"gitId":"JoanneJo"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-19"},{"lineNumber":393,"author":{"gitId":"JoanneJo"},"content":"            File tempFile \u003d new File(TEMP_FILE_PATH);","lastModifiedDate":"2023-09-19"},{"lineNumber":394,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":395,"author":{"gitId":"JoanneJo"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-09-19"},{"lineNumber":396,"author":{"gitId":"JoanneJo"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2023-09-19"},{"lineNumber":397,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":398,"author":{"gitId":"JoanneJo"},"content":"            String currentLine;","lastModifiedDate":"2023-09-19"},{"lineNumber":399,"author":{"gitId":"JoanneJo"},"content":"            int lineCount \u003d 1;","lastModifiedDate":"2023-09-19"},{"lineNumber":400,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":401,"author":{"gitId":"JoanneJo"},"content":"            while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-19"},{"lineNumber":402,"author":{"gitId":"JoanneJo"},"content":"                if (lineCount \u003d\u003d updateLineSerialNo) {","lastModifiedDate":"2023-09-19"},{"lineNumber":403,"author":{"gitId":"JoanneJo"},"content":"                    if (action.equals(\"mark\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":404,"author":{"gitId":"JoanneJo"},"content":"                        currentLine \u003d currentLine.replace(\" |   | \", \" | X | \");","lastModifiedDate":"2023-09-19"},{"lineNumber":405,"author":{"gitId":"JoanneJo"},"content":"                    } else if (action.equals(\"unmark\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":406,"author":{"gitId":"JoanneJo"},"content":"                        currentLine \u003d currentLine.replace(\" | X | \", \" |   | \");","lastModifiedDate":"2023-09-19"},{"lineNumber":407,"author":{"gitId":"JoanneJo"},"content":"                    }","lastModifiedDate":"2023-09-19"},{"lineNumber":408,"author":{"gitId":"JoanneJo"},"content":"                }","lastModifiedDate":"2023-09-19"},{"lineNumber":409,"author":{"gitId":"JoanneJo"},"content":"                writer.write(currentLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":410,"author":{"gitId":"JoanneJo"},"content":"                lineCount++;","lastModifiedDate":"2023-09-19"},{"lineNumber":411,"author":{"gitId":"JoanneJo"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":412,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":413,"author":{"gitId":"JoanneJo"},"content":"            writer.close();","lastModifiedDate":"2023-09-19"},{"lineNumber":414,"author":{"gitId":"JoanneJo"},"content":"            reader.close();","lastModifiedDate":"2023-09-19"},{"lineNumber":415,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":416,"author":{"gitId":"JoanneJo"},"content":"            if (file.delete()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":417,"author":{"gitId":"JoanneJo"},"content":"                if (!tempFile.renameTo(file)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":418,"author":{"gitId":"JoanneJo"},"content":"                    throw new IOException(\"Uh-oh! An error has occurred while updating file.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":419,"author":{"gitId":"JoanneJo"},"content":"                }","lastModifiedDate":"2023-09-19"},{"lineNumber":420,"author":{"gitId":"JoanneJo"},"content":"            } else {","lastModifiedDate":"2023-09-19"},{"lineNumber":421,"author":{"gitId":"JoanneJo"},"content":"                throw new IOException(\"Uh-oh! An error has occurred while updating file.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":422,"author":{"gitId":"JoanneJo"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":423,"author":{"gitId":"JoanneJo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":424,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"Uh-oh! An error has occurred while updating file.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":425,"author":{"gitId":"JoanneJo"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":426,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":427,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":428,"author":{"gitId":"JoanneJo"},"content":"    public static void exit() {","lastModifiedDate":"2023-09-04"},{"lineNumber":429,"author":{"gitId":"JoanneJo"},"content":"        System.out.println(\"Squeeze the day! Until we meet again, stay fresh and zesty!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":430,"author":{"gitId":"JoanneJo"},"content":"        System.out.print(LEMON_EMOJI + \" \" + LEMON_EMOJI + \" \"+ LEMON_EMOJI);","lastModifiedDate":"2023-09-15"},{"lineNumber":431,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":432,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":433,"author":{"gitId":"JoanneJo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-04"},{"lineNumber":434,"author":{"gitId":"JoanneJo"},"content":"        boolean isFinished \u003d false;","lastModifiedDate":"2023-09-15"},{"lineNumber":435,"author":{"gitId":"JoanneJo"},"content":"        boolean isEmptyList;","lastModifiedDate":"2023-09-15"},{"lineNumber":436,"author":{"gitId":"JoanneJo"},"content":"        String input;","lastModifiedDate":"2023-09-15"},{"lineNumber":437,"author":{"gitId":"JoanneJo"},"content":"        String FILE_PATH \u003d \"./data/lemon.txt\";","lastModifiedDate":"2023-09-19"},{"lineNumber":438,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":439,"author":{"gitId":"JoanneJo"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":440,"author":{"gitId":"JoanneJo"},"content":"            loadFile(FILE_PATH);","lastModifiedDate":"2023-09-19"},{"lineNumber":441,"author":{"gitId":"JoanneJo"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":442,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(\"Uh-oh! Data in the file is not in the right format! Please use the format \" +","lastModifiedDate":"2023-09-19"},{"lineNumber":443,"author":{"gitId":"JoanneJo"},"content":"                    \"\u0027\u003cT/D/E\u003e | \u003cX/ \u003e | \u003ctask\u003e [| \u003cdate/time\u003e] [| \u003cdate/time\u003e]\u0027!\\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":444,"author":{"gitId":"JoanneJo"},"content":"        } catch (LemonException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":445,"author":{"gitId":"JoanneJo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-19"},{"lineNumber":446,"author":{"gitId":"JoanneJo"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":447,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":448,"author":{"gitId":"JoanneJo"},"content":"        greet();","lastModifiedDate":"2023-09-04"},{"lineNumber":449,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":450,"author":{"gitId":"JoanneJo"},"content":"        while (!isFinished) {","lastModifiedDate":"2023-09-04"},{"lineNumber":451,"author":{"gitId":"JoanneJo"},"content":"            isEmptyList \u003d tasks.size() \u003c\u003d 0;","lastModifiedDate":"2023-09-18"},{"lineNumber":452,"author":{"gitId":"JoanneJo"},"content":"            input \u003d getInput();","lastModifiedDate":"2023-09-15"},{"lineNumber":453,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":454,"author":{"gitId":"JoanneJo"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":455,"author":{"gitId":"JoanneJo"},"content":"                exit();","lastModifiedDate":"2023-09-15"},{"lineNumber":456,"author":{"gitId":"JoanneJo"},"content":"                isFinished \u003d true;","lastModifiedDate":"2023-09-15"},{"lineNumber":457,"author":{"gitId":"JoanneJo"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":458,"author":{"gitId":"JoanneJo"},"content":"                try {","lastModifiedDate":"2023-09-15"},{"lineNumber":459,"author":{"gitId":"JoanneJo"},"content":"                    printList(isEmptyList);","lastModifiedDate":"2023-09-15"},{"lineNumber":460,"author":{"gitId":"JoanneJo"},"content":"                } catch (LemonException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":461,"author":{"gitId":"JoanneJo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-09-15"},{"lineNumber":462,"author":{"gitId":"JoanneJo"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":463,"author":{"gitId":"JoanneJo"},"content":"            } else if (input.matches(\"todo\\\\b.*\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":464,"author":{"gitId":"JoanneJo"},"content":"                try {","lastModifiedDate":"2023-09-15"},{"lineNumber":465,"author":{"gitId":"JoanneJo"},"content":"                    AbstractMap.SimpleEntry\u003cTask, String\u003e newTodo \u003d addNewTodo(input, false, FILE_PATH);","lastModifiedDate":"2023-09-19"},{"lineNumber":466,"author":{"gitId":"JoanneJo"},"content":"                    printAddedOrDeletedTask(newTodo.getKey(), \"add\");","lastModifiedDate":"2023-09-19"},{"lineNumber":467,"author":{"gitId":"JoanneJo"},"content":"                    writeToFile(FILE_PATH, newTodo.getValue());","lastModifiedDate":"2023-09-19"},{"lineNumber":468,"author":{"gitId":"JoanneJo"},"content":"                } catch (LemonException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":469,"author":{"gitId":"JoanneJo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-09-15"},{"lineNumber":470,"author":{"gitId":"JoanneJo"},"content":"                }","lastModifiedDate":"2023-09-15"},{"lineNumber":471,"author":{"gitId":"JoanneJo"},"content":"            } else if (input.matches(\"deadline\\\\b.*\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":472,"author":{"gitId":"JoanneJo"},"content":"                try {","lastModifiedDate":"2023-09-15"},{"lineNumber":473,"author":{"gitId":"JoanneJo"},"content":"                    AbstractMap.SimpleEntry\u003cTask, String\u003e newDeadline \u003d addNewDeadline(input, false, FILE_PATH);","lastModifiedDate":"2023-09-19"},{"lineNumber":474,"author":{"gitId":"JoanneJo"},"content":"                    printAddedOrDeletedTask(newDeadline.getKey(), \"add\");","lastModifiedDate":"2023-09-19"},{"lineNumber":475,"author":{"gitId":"JoanneJo"},"content":"                    writeToFile(FILE_PATH, newDeadline.getValue());","lastModifiedDate":"2023-09-19"},{"lineNumber":476,"author":{"gitId":"JoanneJo"},"content":"                } catch (LemonException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":477,"author":{"gitId":"JoanneJo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-09-15"},{"lineNumber":478,"author":{"gitId":"JoanneJo"},"content":"                }","lastModifiedDate":"2023-09-15"},{"lineNumber":479,"author":{"gitId":"JoanneJo"},"content":"            } else if (input.matches(\"event\\\\b.*\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":480,"author":{"gitId":"JoanneJo"},"content":"                try {","lastModifiedDate":"2023-09-15"},{"lineNumber":481,"author":{"gitId":"JoanneJo"},"content":"                    AbstractMap.SimpleEntry\u003cTask, String\u003e newEvent \u003d addNewEvent(input, false, FILE_PATH);","lastModifiedDate":"2023-09-19"},{"lineNumber":482,"author":{"gitId":"JoanneJo"},"content":"                    printAddedOrDeletedTask(newEvent.getKey(), \"add\");","lastModifiedDate":"2023-09-19"},{"lineNumber":483,"author":{"gitId":"JoanneJo"},"content":"                    writeToFile(FILE_PATH, newEvent.getValue());","lastModifiedDate":"2023-09-19"},{"lineNumber":484,"author":{"gitId":"JoanneJo"},"content":"                } catch (LemonException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":485,"author":{"gitId":"JoanneJo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-09-15"},{"lineNumber":486,"author":{"gitId":"JoanneJo"},"content":"                }","lastModifiedDate":"2023-09-15"},{"lineNumber":487,"author":{"gitId":"JoanneJo"},"content":"            } else if (input.matches(\"delete\\\\b.*\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":488,"author":{"gitId":"JoanneJo"},"content":"                try {","lastModifiedDate":"2023-09-18"},{"lineNumber":489,"author":{"gitId":"JoanneJo"},"content":"                    deleteTask(input, isEmptyList, FILE_PATH);","lastModifiedDate":"2023-09-19"},{"lineNumber":490,"author":{"gitId":"JoanneJo"},"content":"                } catch (LemonException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":491,"author":{"gitId":"JoanneJo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-09-18"},{"lineNumber":492,"author":{"gitId":"JoanneJo"},"content":"                }","lastModifiedDate":"2023-09-18"},{"lineNumber":493,"author":{"gitId":"JoanneJo"},"content":"            } else if (input.matches(\"mark\\\\b.*\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":494,"author":{"gitId":"JoanneJo"},"content":"                try {","lastModifiedDate":"2023-09-15"},{"lineNumber":495,"author":{"gitId":"JoanneJo"},"content":"                    markTask(input, \"mark\", isEmptyList, FILE_PATH);","lastModifiedDate":"2023-09-19"},{"lineNumber":496,"author":{"gitId":"JoanneJo"},"content":"                } catch (LemonException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":497,"author":{"gitId":"JoanneJo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-09-15"},{"lineNumber":498,"author":{"gitId":"JoanneJo"},"content":"                }","lastModifiedDate":"2023-09-15"},{"lineNumber":499,"author":{"gitId":"JoanneJo"},"content":"            } else if (input.matches(\"unmark\\\\b.*\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":500,"author":{"gitId":"JoanneJo"},"content":"                try {","lastModifiedDate":"2023-09-15"},{"lineNumber":501,"author":{"gitId":"JoanneJo"},"content":"                    markTask(input, \"unmark\", isEmptyList, FILE_PATH);","lastModifiedDate":"2023-09-19"},{"lineNumber":502,"author":{"gitId":"JoanneJo"},"content":"                } catch (LemonException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":503,"author":{"gitId":"JoanneJo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-09-15"},{"lineNumber":504,"author":{"gitId":"JoanneJo"},"content":"                }","lastModifiedDate":"2023-09-15"},{"lineNumber":505,"author":{"gitId":"JoanneJo"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":506,"author":{"gitId":"JoanneJo"},"content":"                System.out.println(\"Hmmm! I\u0027m not sure what that means. Could you please specify your request?\");","lastModifiedDate":"2023-09-15"},{"lineNumber":507,"author":{"gitId":"JoanneJo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":508,"author":{"gitId":"JoanneJo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":510,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JoanneJo":508,"-":2}},{"path":"src/main/java/lemon/exception/LemonException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoanneJo"},"content":"package lemon.exception;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"JoanneJo"},"content":"public class LemonException extends Exception {","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"JoanneJo"},"content":"    public LemonException(String message) {","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"JoanneJo"},"content":"        super(message);","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"JoanneJo"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"JoanneJo":7}},{"path":"src/main/java/lemon/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoanneJo"},"content":"package lemon.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"JoanneJo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"JoanneJo"},"content":"    protected String by;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"JoanneJo"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"JoanneJo"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"JoanneJo"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"JoanneJo"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"JoanneJo"},"content":"        return by;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"JoanneJo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"JoanneJo"},"content":"    public String toString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"JoanneJo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"JoanneJo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"JoanneJo":19}},{"path":"src/main/java/lemon/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoanneJo"},"content":"package lemon.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"JoanneJo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"JoanneJo"},"content":"    protected String from;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"JoanneJo"},"content":"    protected String to;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"JoanneJo"},"content":"    public Event(String description, boolean isDone, String start, String end) {","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"JoanneJo"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"JoanneJo"},"content":"        this.from \u003d start;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"JoanneJo"},"content":"        this.to \u003d end;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"JoanneJo"},"content":"    public String getFrom() {","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"JoanneJo"},"content":"        return from;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"JoanneJo"},"content":"    public String getTo() {","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"JoanneJo"},"content":"        return to;","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"JoanneJo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"JoanneJo"},"content":"    public String toString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"JoanneJo"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"JoanneJo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"JoanneJo":25}},{"path":"src/main/java/lemon/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoanneJo"},"content":"package lemon.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"JoanneJo"},"content":"public class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JoanneJo"},"content":"    protected String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JoanneJo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"JoanneJo"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"JoanneJo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"JoanneJo"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"JoanneJo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"JoanneJo"},"content":"        return description;","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"JoanneJo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"JoanneJo"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"JoanneJo"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"JoanneJo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"JoanneJo"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"JoanneJo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"JoanneJo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"JoanneJo"},"content":"    public String toString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"JoanneJo"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"JoanneJo"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"JoanneJo":32}},{"path":"src/main/java/lemon/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoanneJo"},"content":"package lemon.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"JoanneJo"},"content":"import lemon.task.Task;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"JoanneJo"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"JoanneJo"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"JoanneJo"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"JoanneJo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"JoanneJo"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"JoanneJo"},"content":"    public String toString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"JoanneJo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"JoanneJo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"JoanneJo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"JoanneJo":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JoanneJo"},"content":"todo borrow book","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"JoanneJo"},"content":"list","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"JoanneJo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"JoanneJo"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"JoanneJo"},"content":"bye","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"JoanneJo":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"JoanneJo"},"content":"java -classpath ..\\bin Lemon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JoanneJo":1,"-":20}}]
