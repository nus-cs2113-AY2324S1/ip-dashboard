[{"path":"data/kenbot.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"[D][X] return book (by: Monday)","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"BenedictChannn":1}},{"path":"src/main/java/Commands/Add.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Commands;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Ken.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import Ken.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"import Ken.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"public class Add extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"    private final Task task;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"    public Add(Task task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"    public void run(TaskList list) {","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"        list.addTask(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"        Ui.printTexts(new String[] {","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"                \"Barbie-approved! You\u0027ve added this glamorous task:\",","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"                task.toString(),","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"                \"Now your list is sparkling with \" + list.getSize() + \" glamorous tasks, darling!\"","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"        });","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":23}},{"path":"src/main/java/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Commands;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import Ken.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"    public abstract void run(TaskList list) throws KenException;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":8}},{"path":"src/main/java/Commands/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Commands;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenException;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenMissingTaskException;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"import Ken.TaskList;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"import Ken.Ui;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"public class Delete extends Command{","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"    public Delete(int taskNumber) {","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"    public void run(TaskList list) throws KenMissingTaskException {","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"            String taskText \u003d list.getTask(taskNumber - 1).toString();","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"            list.deleteTask(taskNumber - 1);","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"            Ui.printTexts(new String[] {","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"                    \"Noted, darling! I\u0027ve given that task the boot, just like a fashion faux pas!\",","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"                    taskText,","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"                    \"Now your list is sparkling with \" + list.getSize() + \" glamorous tasks, darling!\"","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"            });","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"        } catch (KenMissingTaskException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenMissingTaskException();","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"BenedictChannn":29}},{"path":"src/main/java/Commands/Goodbye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Commands;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import Ken.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"import Ken.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"import static Ken.FileHandler.writeToFile;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"public class Goodbye extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"    private static final String byeLogo \u003d \"  ___________________  _____ __________ ____  __.____    .___ _______    ________\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"            + \"\\t/   _____/\\\\______   \\\\/  _  \\\\\\\\______   \\\\    |/ _|    |   |   |\\\\      \\\\  /  _____/\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"            + \"\\t \\\\_____  \\\\  |     ___/  /_\\\\  \\\\|       _/      \u003c |    |   |   |/   |   \\\\/   \\\\  ___\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"            + \"\\t /        \\\\ |    |  /    |    \\\\    |   \\\\    |  \\\\|    |___|   /    |    \\\\    \\\\_\\\\  \\\\\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"            + \"\\t/_______  / |____|  \\\\____|__  /____|_  /____|__ \\\\_______ \\\\___\\\\____|__  /\\\\______  /\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"            + \"\\t        \\\\/                  \\\\/       \\\\/        \\\\/       \\\\/           \\\\/        \\\\/\";","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"    public void run(TaskList list) throws KenException {","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"        Ui.printTexts(new String[] {","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"                \"Until we meet again, my fellow dream chaser! Keep\",","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"                byeLogo,","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"        });","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"        writeToFile(list);","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":24}},{"path":"src/main/java/Commands/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Commands;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Ken.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"public class List extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"    public void run(TaskList list) {","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"        list.getTasks();","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":11}},{"path":"src/main/java/Commands/Update.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Commands;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenMissingTaskException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import Ken.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"import Ken.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"public class Update extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"    public Update(int taskNumber, boolean isDone) {","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"    public void run(TaskList list) throws KenMissingTaskException{","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"            list.updateStatus(taskNumber - 1, isDone);","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"            String text;","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"            text \u003d isDone ? \"Barbie-tastic! You\u0027ve completed this task with glamour!\"","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"                    : \"Back to the runway, darling! This task needs more Barbie magic!\";","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"            Ui.printTexts(new String[]{","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"                    text,","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"                    list.getTask(taskNumber - 1).toString()","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"            });","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"        } catch (KenMissingTaskException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenMissingTaskException();","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":33}},{"path":"src/main/java/Exceptions/KenException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Exceptions;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"public class KenException extends Exception {","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"    public KenException(String message) {","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"        super(message);","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":7}},{"path":"src/main/java/Exceptions/KenFileCorruptedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"public class KenFileCorruptedException extends KenException {","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"    public KenFileCorruptedException(String message) {","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"        super(message);","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"BenedictChannn":7}},{"path":"src/main/java/Exceptions/KenMissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Exceptions;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"public class KenMissingTaskException extends KenException {","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"    public KenMissingTaskException() {","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"        super(\"Sweetie, that\u0027s not on the Barbie agenda!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":7}},{"path":"src/main/java/Exceptions/KenParsingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Exceptions;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"public class KenParsingException extends KenException {","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"    public KenParsingException(String message) {","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"        super(message);","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":7}},{"path":"src/main/java/Exceptions/KenReadFromFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"public class KenReadFromFileException extends KenException {","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"    public KenReadFromFileException() {","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"        super(\"Oops, darling! Reading from the file is like, so not happening right now!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"BenedictChannn":7}},{"path":"src/main/java/Exceptions/KenWriteToFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"public class KenWriteToFileException extends KenException {","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"    public KenWriteToFileException() {","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"        super(\"Uh-oh, darling! Writing to the file is a total fashion fail!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"BenedictChannn":7}},{"path":"src/main/java/Ken/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Ken;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"    protected String by;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"        super(description);","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"        return by;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"    public String toString() {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"        return \"\\t[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"BenedictChannn":22}},{"path":"src/main/java/Ken/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Ken;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"    protected String from;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"    protected String to;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"        super(description);","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"    public String getFrom() {","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"        return from;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"    public String getTo() {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"        return to;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"    public void setTo(String to) {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"    public String toString() {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"        return \"\\t[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"BenedictChannn":33}},{"path":"src/main/java/Ken/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Ken;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenFileCorruptedException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenMissingTaskException;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenReadFromFileException;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenWriteToFileException;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"import java.io.File;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"public class FileHandler {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"    private static final String FILE_PATH \u003d \"data/kenbot.txt\";","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"    private static final char TODO \u003d \u0027T\u0027;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"    private static final char DEADLINE \u003d \u0027D\u0027;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"    private static final char EVENT \u003d \u0027E\u0027;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"    public static void readFromFile(TaskList list) throws KenReadFromFileException, KenFileCorruptedException {","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"            try {","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"                file.getParentFile().mkdir();","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"                throw new KenReadFromFileException();","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"            getDataFromFile(file, list);","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"    private static void getDataFromFile(File file, TaskList list) throws KenReadFromFileException, KenFileCorruptedException {","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"            Scanner in \u003d new Scanner(file);","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"            while (in.hasNext()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"BenedictChannn"},"content":"                String lineInput \u003d in.nextLine();","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"BenedictChannn"},"content":"                char taskType \u003d lineInput.charAt(1);","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"BenedictChannn"},"content":"                boolean isDone;","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"BenedictChannn"},"content":"                if (lineInput.contains(\"][ ]\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"BenedictChannn"},"content":"                    isDone \u003d false;","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"BenedictChannn"},"content":"                } else if (lineInput.contains(\"][X]\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"BenedictChannn"},"content":"                    isDone \u003d true;","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"BenedictChannn"},"content":"                } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"BenedictChannn"},"content":"                    throw new KenFileCorruptedException(\"Uh-oh, darling! The task status is like, totally hiding from the spotlight!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"BenedictChannn"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"BenedictChannn"},"content":"                String[] line \u003d lineInput.split(\"] \", 2);","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"BenedictChannn"},"content":"                String lineInformation;","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"BenedictChannn"},"content":"                if (line.length \u003c 2) {","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"BenedictChannn"},"content":"                    throw new KenFileCorruptedException(\"Sweetie, where\u0027s the sparkle? The task description is like, totally missing from the scene!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"BenedictChannn"},"content":"                } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"BenedictChannn"},"content":"                    lineInformation \u003d line[1];","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"BenedictChannn"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"BenedictChannn"},"content":"                switch (taskType) {","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"BenedictChannn"},"content":"                case TODO:","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"BenedictChannn"},"content":"                    Task todo \u003d getTodo(lineInformation);","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"BenedictChannn"},"content":"                    todo.setDone(isDone);","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"BenedictChannn"},"content":"                    list.addTask(todo);","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"BenedictChannn"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"BenedictChannn"},"content":"                case DEADLINE:","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"BenedictChannn"},"content":"                    Task deadline \u003d getDeadline(lineInformation);","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"BenedictChannn"},"content":"                    deadline.setDone(isDone);","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"BenedictChannn"},"content":"                    list.addTask(deadline);","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"BenedictChannn"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"BenedictChannn"},"content":"                case EVENT:","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"BenedictChannn"},"content":"                    Task event \u003d getEvent(lineInformation);","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"BenedictChannn"},"content":"                    event.setDone(isDone);","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"BenedictChannn"},"content":"                    list.addTask(event);","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"BenedictChannn"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"BenedictChannn"},"content":"                default:","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"BenedictChannn"},"content":"                    throw new KenFileCorruptedException(\"Oopsie, darling! The task type is like, totally not on our fabulous radar!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"BenedictChannn"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"BenedictChannn"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"BenedictChannn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenReadFromFileException();","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"BenedictChannn"},"content":"    public static void writeToFile(TaskList list) throws KenWriteToFileException {","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"BenedictChannn"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"BenedictChannn"},"content":"            for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"BenedictChannn"},"content":"                Task task \u003d list.getTask(i);","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"BenedictChannn"},"content":"                String taskText \u003d task.toString().trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"BenedictChannn"},"content":"                fw.write(taskText + System.lineSeparator());","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"BenedictChannn"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"BenedictChannn"},"content":"            fw.close();","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"BenedictChannn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenWriteToFileException();","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"BenedictChannn"},"content":"    public static Task getDeadline(String input) throws KenFileCorruptedException {","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"BenedictChannn"},"content":"        String[] deadlineInformation \u003d input.split(\"[(]by:\", 2);","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"BenedictChannn"},"content":"        String deadlineDescription;","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"BenedictChannn"},"content":"        String deadlineBy;","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"BenedictChannn"},"content":"            deadlineDescription \u003d deadlineInformation[0].trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"BenedictChannn"},"content":"            deadlineBy \u003d deadlineInformation[1].replace(\")\", \"\").trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"BenedictChannn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenFileCorruptedException(\"The deadline is like, totally missing its fabulous moment!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"BenedictChannn"},"content":"        return new Deadline(deadlineDescription, deadlineBy);","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"BenedictChannn"},"content":"    public static Task getTodo(String input) {","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"BenedictChannn"},"content":"        String todoDescription \u003d input.trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"BenedictChannn"},"content":"        return new Todo(todoDescription);","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"BenedictChannn"},"content":"    public static Task getEvent(String input) throws KenFileCorruptedException {","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"BenedictChannn"},"content":"        String[] eventInformation \u003d input.split(\"[(]from:|to:\", 3);","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"BenedictChannn"},"content":"        String eventDescription;","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"BenedictChannn"},"content":"        String eventFrom;","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"BenedictChannn"},"content":"        String eventTo;","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"BenedictChannn"},"content":"            eventDescription \u003d eventInformation[0].trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"BenedictChannn"},"content":"            eventFrom \u003d eventInformation[1].trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"BenedictChannn"},"content":"            eventTo \u003d eventInformation[2].replace(\")\", \"\").trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"BenedictChannn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenFileCorruptedException(\"The event period is like, totally missing from the spotlight!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"BenedictChannn"},"content":"        return new Event(eventDescription, eventFrom, eventTo);","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"BenedictChannn":129}},{"path":"src/main/java/Ken/Ken.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Ken;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Commands.Command;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import Commands.Goodbye;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenException;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenParsingException;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"public class Ken {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"    private static final TaskList list \u003d new TaskList();","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"        ParseCommands parser \u003d new ParseCommands();","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"        Ui.greetUser();","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"            FileHandler.readFromFile(list);","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"            Command startCommand \u003d parser.parse(\"list\");","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"            startCommand.run(list);","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"            Ui.printTexts(new String[] {","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"                    e.getMessage()","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"            });","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"        Command command \u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"        String input;","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"        while (!(command instanceof Goodbye)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"            input \u003d scan.nextLine();","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"            try {","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"                command \u003d parser.parse(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"                try {","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"                    command.run(list);","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"BenedictChannn"},"content":"                } catch (KenParsingException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"BenedictChannn"},"content":"                    Ui.printTexts(new String[] {","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"BenedictChannn"},"content":"                            e.getMessage()","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"BenedictChannn"},"content":"                    });","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"BenedictChannn"},"content":"                }","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"BenedictChannn"},"content":"            } catch (KenException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"BenedictChannn"},"content":"                Ui.printTexts(new String[] {","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"BenedictChannn"},"content":"                        e.getMessage()","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"BenedictChannn"},"content":"                });","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"BenedictChannn"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"BenedictChannn":46,"-":3}},{"path":"src/main/java/Ken/ParseCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Ken;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Commands.*;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenException;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenParsingException;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"public class ParseCommands {","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"    private static final String TODO \u003d \"todo\";","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"    private static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"    private static final String EVENT \u003d \"event\";","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"    private static final String LIST \u003d \"list\";","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"    private static final String MARK \u003d \"mark\";","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"    private static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"    private static final String BYE \u003d \"bye\";","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"    private static final String DELETE \u003d \"delete\";","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"    public Command parse(String input) throws KenException {","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"        String command \u003d input.contains(\" \") ? input.split(\" \")[0] : input;","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"        switch (command) {","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"        case TODO:","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"            Task todo \u003d getTodo(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"            return new Add(todo);","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"            Task deadline \u003d getDeadline(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"            return new Add(deadline);","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"        case EVENT:","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"            Task event \u003d getEvent(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"            return new Add(event);","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"        case LIST:","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"            return new List();","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"        case MARK:","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"            return getStatus(input, true);","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"            return getStatus(input, false);","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"        case DELETE:","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"            return getDelete(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"        case BYE:","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"BenedictChannn"},"content":"            return new Goodbye();","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"BenedictChannn"},"content":"        default:","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Uh-oh, darling! Your input needs a makeover for me to understand!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"BenedictChannn"},"content":"    private static Task getTodo(String input) throws KenParsingException {","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"BenedictChannn"},"content":"        if (input.trim().equals(TODO)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Oopsie! A todo without a description is like a party without glitter, so not fabulous!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"BenedictChannn"},"content":"        String todoName \u003d input.substring(TODO.length() + 1).trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"BenedictChannn"},"content":"        return new Todo(todoName);","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"BenedictChannn"},"content":"    private static Task getDeadline(String input) throws KenParsingException {","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"BenedictChannn"},"content":"        if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Please enter a proper deadline using \u0027/by\u0027.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"BenedictChannn"},"content":"        String[] deadlineInfo \u003d input.substring(DEADLINE.length() + 1).split(\"/by\", 2);","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"BenedictChannn"},"content":"        String deadlineName \u003d deadlineInfo[0].trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"BenedictChannn"},"content":"        String by \u003d deadlineInfo[1].trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"BenedictChannn"},"content":"        if (deadlineName.isEmpty()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Oopsie! A deadline without a description is like a party without glitter, so not fabulous!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"BenedictChannn"},"content":"        if (by.isEmpty()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Oopsie! Did you forget to include the deadline?\");","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"BenedictChannn"},"content":"        return new Deadline(deadlineName, by);","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"BenedictChannn"},"content":"    private static Task getEvent(String input) throws KenParsingException {","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"BenedictChannn"},"content":"        if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Please enter a proper event using \u0027/from\u0027 and \u0027 /to\u0027.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"BenedictChannn"},"content":"        String[] eventInfo \u003d input.substring(EVENT.length() + 1).split(\"/from |/to\", 3);","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"BenedictChannn"},"content":"        String eventName \u003d eventInfo[0].trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"BenedictChannn"},"content":"        String from \u003d eventInfo[1].trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"BenedictChannn"},"content":"        String to \u003d eventInfo[2].trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"BenedictChannn"},"content":"        if (eventName.isEmpty()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Oopsie! An event without a description is like a party without glitter, so not fabulous!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"BenedictChannn"},"content":"        if (from.isEmpty()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Oopsie! Did you forget to include the start date of the event?\");","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"BenedictChannn"},"content":"        if (to.isEmpty()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Oopsie! Did you forget to include the end date of the event?\");","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"BenedictChannn"},"content":"        return new Event(eventName, from, to);","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"BenedictChannn"},"content":"    public static Update getStatus(String input, boolean isDone) throws KenParsingException {","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"BenedictChannn"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"BenedictChannn"},"content":"        if (trimmedInput.equals(MARK) || trimmedInput.equals(UNMARK)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Pick a task to mark/unmark and let the Barbie magic flow!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"BenedictChannn"},"content":"        String taskString \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"BenedictChannn"},"content":"        int taskNumber;","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"BenedictChannn"},"content":"            taskNumber \u003d Integer.parseInt(taskString);","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"BenedictChannn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Oh darling, that\u0027s not a number fit for a Barbie world.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"BenedictChannn"},"content":"        return new Update(taskNumber, isDone);","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"BenedictChannn"},"content":"    public static Delete getDelete(String input) throws KenParsingException {","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"BenedictChannn"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"BenedictChannn"},"content":"        if (trimmedInput.equals(DELETE)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Pick a task to delete and let the Barbie magic flow!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"BenedictChannn"},"content":"        String taskString \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"BenedictChannn"},"content":"        int taskNumber;","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"BenedictChannn"},"content":"            taskNumber \u003d Integer.parseInt(taskString);","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"BenedictChannn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Oh darling, that\u0027s not a number fit for a Barbie world.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"BenedictChannn"},"content":"        return new Delete(taskNumber);","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"BenedictChannn":117}},{"path":"src/main/java/Ken/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Ken;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"public class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"    protected String description;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"    public void setDone(boolean status) {","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"BenedictChannn":24}},{"path":"src/main/java/Ken/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Ken;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenMissingTaskException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"public class TaskList {","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"        list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"        list.add(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"    public Task getTask(int taskNumber) throws KenMissingTaskException {","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"            return list.get(taskNumber);","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenMissingTaskException();","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"        return list.size();","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"    public void updateStatus(int taskNumber, boolean status) throws KenMissingTaskException {","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"            list.get(taskNumber).setDone(status);","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenMissingTaskException();","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"BenedictChannn"},"content":"    public void getTasks() {","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"BenedictChannn"},"content":"        int taskSize \u003d list.size();","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"BenedictChannn"},"content":"        String[] texts \u003d new String[taskSize + 1];","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"BenedictChannn"},"content":"        texts[0] \u003d \"Behold, your list of enchanting tasks!\";","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"BenedictChannn"},"content":"        for (int i \u003d 1; i \u003c\u003d taskSize; i++) {","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"BenedictChannn"},"content":"            Task currentTask \u003d list.get(i - 1);","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"BenedictChannn"},"content":"            texts[i] \u003d \"\\t\" + i + \".\" + currentTask.toString();","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"BenedictChannn"},"content":"        Ui.printTexts(texts);","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"BenedictChannn"},"content":"    public void deleteTask(int taskNumber) throws KenMissingTaskException{","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"BenedictChannn"},"content":"            list.remove(taskNumber);","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"BenedictChannn"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenMissingTaskException();","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":57}},{"path":"src/main/java/Ken/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Ken;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"        super(description);","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"    public String toString() {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"        return \"\\t[T]\" + super.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"BenedictChannn":12}},{"path":"src/main/java/Ken/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Ken;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"public class Ui {","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"    public static void printLine() {","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"        System.out.println(\"_____________________________________________________________\");","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"    public static void printTexts(String[] texts) {","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"        printLine();","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"        for (String text : texts) {","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"            System.out.println(\"\\t\" + text);","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"        printLine();","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"    public static void greetUser() {","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"        String hiLogo \u003d \" ____  __.___________ _______\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t|    |/ _|\\\\_   _____/ \\\\      \\\\\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t|      \u003c   |    __)_  /   |   \\\\\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t|    |  \\\\  |        \\\\/    |    \\\\\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t|____|__ \\\\/_________/\\\\____|__  /\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t\\\\/        \\\\/         \\\\/\";","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"        printTexts(new String[] {","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"                \"Greetings, fashionista! I\u0027m\",","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"                hiLogo,","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"                \"your dream planner extraordinaire.\",","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"                \"Ready to make your day as fabulous as a Barbie runway show?\"","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"        });","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"    public static void byeUser() {","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"        String byeLogo \u003d \"  ___________________  _____ __________ ____  __.____    .___ _______    ________\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t/   _____/\\\\______   \\\\/  _  \\\\\\\\______   \\\\    |/ _|    |   |   |\\\\      \\\\  /  _____/\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t \\\\_____  \\\\  |     ___/  /_\\\\  \\\\|       _/      \u003c |    |   |   |/   |   \\\\/   \\\\  ___\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t /        \\\\ |    |  /    |    \\\\    |   \\\\    |  \\\\|    |___|   /    |    \\\\    \\\\_\\\\  \\\\\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t/_______  / |____|  \\\\____|__  /____|_  /____|__ \\\\_______ \\\\___\\\\____|__  /\\\\______  /\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t        \\\\/                  \\\\/       \\\\/        \\\\/       \\\\/           \\\\/        \\\\/\";","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"BenedictChannn"},"content":"        printTexts(new String[] {","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"BenedictChannn"},"content":"                \"Until we meet again, my fellow dream chaser! Keep\",","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"BenedictChannn"},"content":"                byeLogo,","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"BenedictChannn"},"content":"        });","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"BenedictChannn":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"todo read book","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"list","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"list","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"list","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"mark 1","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"mark 2","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"mark 3","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"unmark 1","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"unmark 2","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"unmark 3","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"list","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"bye","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"BenedictChannn":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"javac  -cp ..\\src\\main\\java\\Ken -Xlint:none -d ..\\bin ..\\src\\main\\java\\Ken\\*.java","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"java -classpath ..\\bin Ken \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BenedictChannn":2,"-":19}}]
