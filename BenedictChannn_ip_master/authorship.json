[{"path":"data/kenbot.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"[T][ ] Attend Barbie\u0027s party","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"[E][ ] Barbie\u0027s Glamorous Party (from: Oct 12 2023 6:00 PM to: Oct 12 2023 10:00 PM)","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"BenedictChannn":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"# Ken: Barbie-Themed Task Manager User Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"Welcome, fashionista! Ken is your personal dream planner extraordinaire. ","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"Whether you are ready to conquer the runway or just keep track of your daily tasks, Ken has got you covered.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"This guide will walk you through using Ken\u0027s fabulous features.","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"### Add tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"Ken allows you to add different types of tasks to your task list!","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"Some of the characteristics of these are as follows:","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"- Todo: Description of task","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"- Deadline: Description of task + Deadline date","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"- Event: Description of task + Event start \u0026 end date","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"### Edit and update tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"When you\u0027ve successfully accomplished a task, you can **mark** it as done, darling! ","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"Other ways to manage your list of fabulous tasks include **unmarking** a task and **deleting** tasks. Stay fabulous!","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"### Find tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"When things start getting CRAZY in Ken\u0027s world, it\u0027s easy to lose track of your tasks, just like a fashion faux pas! ","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"That\u0027s why, with Ken the fabulous task manager, we\u0027re here to help you get back on the glamorous track. ","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"You can search for tasks with a specific keyword or list out all your tasks, darling!","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"### `todo` - add a todo task","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"This command adds a todo task to your task list.","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"Example of usage: `todo Attend Barbie\u0027s party`","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"Expected outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"BenedictChannn"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"BenedictChannn"},"content":"Barbie-approved! You\u0027ve added this glamorous task:","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"BenedictChannn"},"content":"    [T][ ] Attend Barbie\u0027s party","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"BenedictChannn"},"content":"Now your list is sparkling with (x) glamorous tasks, darling!","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"BenedictChannn"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"BenedictChannn"},"content":"### `deadline` - add a deadline task","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"BenedictChannn"},"content":"This command adds a deadline task to your task list.","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"BenedictChannn"},"content":"Format: `deadline DESCRIPTION /by DEADLINE_DATE`","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"BenedictChannn"},"content":"\u003e [!NOTE]","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"BenedictChannn"},"content":"\u003e - DEADLINE_DATE must be in the format `d/M/yyyy HHmm`.","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"BenedictChannn"},"content":"Example of usage: `deadline buy Barbie\u0027s present /by 3/10/2023 1530`","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"BenedictChannn"},"content":"Expected outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"BenedictChannn"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"BenedictChannn"},"content":"Barbie-approved! You\u0027ve added this glamorous task:","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"BenedictChannn"},"content":"    [D][ ] buy Barbie\u0027s present (by: Oct 3 2023 3:30 PM)","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"BenedictChannn"},"content":"Now your list is sparkling with (x) glamorous tasks, darling!","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"BenedictChannn"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"BenedictChannn"},"content":"### `event` - add a event task","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"BenedictChannn"},"content":"This command adds an event task to your task list, with the start and end date indicated in the format","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"BenedictChannn"},"content":"d/M/yyyy HHmm.","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"BenedictChannn"},"content":"Format: `event DESCRIPTION /from FROM_DATE /to TO_DATE`","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"BenedictChannn"},"content":"\u003e [!NOTE]","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"BenedictChannn"},"content":"\u003e - `FROM_DATE` and `TO_DATE` must be in the format `d/M/yyyy HHmm`.","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"BenedictChannn"},"content":"\u003e - `FROM_DATE` must be before `TO_DATE`.","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"BenedictChannn"},"content":"Example of usage: `event Barbie\u0027s Glamorous Party /from 12/10/2023 1800 /to 12/10/2023 2200`","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"BenedictChannn"},"content":"Expected outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"BenedictChannn"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"BenedictChannn"},"content":"Barbie-approved! You\u0027ve added this glamorous task:","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"BenedictChannn"},"content":"    [E][ ] Barbie\u0027s Glamorous Party (from: Oct 12 2023 6:00 PM to: Oct 12 2023 10:00 PM)","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"BenedictChannn"},"content":"Now your list is sparkling with (x) glamorous tasks, darling!","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"BenedictChannn"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"BenedictChannn"},"content":"### `mark` - mark task as done","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"BenedictChannn"},"content":"This command marks a task in your task as done, using the item number","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"BenedictChannn"},"content":"of the task in that list.","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"BenedictChannn"},"content":"Example of usage: `mark 2`","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"BenedictChannn"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"BenedictChannn"},"content":"Barbie-tastic! You\u0027ve completed this task with glamour!","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"BenedictChannn"},"content":"\t[D][X] buy Barbie\u0027s present (by: Oct 3 2023 3:30 PM)","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"BenedictChannn"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"BenedictChannn"},"content":"### `unmark` - unmark task as done","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"BenedictChannn"},"content":"This command unmarks a task as done, using that item number of the task","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"BenedictChannn"},"content":"in that list","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"BenedictChannn"},"content":"Example of usage: `unmark 2`","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"BenedictChannn"},"content":"Expected outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"BenedictChannn"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"BenedictChannn"},"content":"Back to the runway, darling! This task needs more Barbie magic!","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"BenedictChannn"},"content":"\t[D][ ] buy Barbie\u0027s present (by: Oct 3 2023 3:30 PM)","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"BenedictChannn"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"BenedictChannn"},"content":"### `delete` - delete task","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"BenedictChannn"},"content":"This command deletes a task from the list, using that item number of the task","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"BenedictChannn"},"content":"in that list","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"BenedictChannn"},"content":"Example of usage: `delete 2`","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"BenedictChannn"},"content":"Expected outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"BenedictChannn"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"BenedictChannn"},"content":"Noted, darling! I\u0027ve given that task the boot, just like a fashion faux pas!","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"BenedictChannn"},"content":"\t[D][ ] buy Barbie\u0027s present (by: Oct 3 2023 3:30 PM)","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"BenedictChannn"},"content":"Now your list is sparkling with (x) glamorous tasks, darling!","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"BenedictChannn"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"BenedictChannn"},"content":"### `find` - find tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"BenedictChannn"},"content":"This command finds a task using a specified keyword.","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"BenedictChannn"},"content":"Example of usage: `find Barbie`","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"BenedictChannn"},"content":"Expected outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"BenedictChannn"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"BenedictChannn"},"content":"These are the tasks that match the keyword, hun!","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"BenedictChannn"},"content":"\t1.\t[T][ ] Attend Barbie\u0027s party","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"BenedictChannn"},"content":"\t2.\t[E][ ] Barbie\u0027s Glamorous Party (from: Oct 12 2023 6:00 PM to: Oct 12 2023 10:00 PM)","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"BenedictChannn"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"BenedictChannn"},"content":"### `list` - list tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"BenedictChannn"},"content":"This command lists all tasks in the task list.","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"BenedictChannn"},"content":"Example of usage: `list`","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"BenedictChannn"},"content":"Expected outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"BenedictChannn"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"BenedictChannn"},"content":"Behold, your list of enchanting tasks!","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"BenedictChannn"},"content":"\t1.\t[T][ ] Attend Barbie\u0027s party","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"BenedictChannn"},"content":"\t2.\t[E][ ] Barbie\u0027s Glamorous Party (from: Oct 12 2023 6:00 PM to: Oct 12 2023 10:00 PM)","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"BenedictChannn"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"BenedictChannn"},"content":"### `bye` - exit app","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"BenedictChannn"},"content":"This command closes the application and saves the current list into a file.","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"BenedictChannn"},"content":"Example of usage: `bye`","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"BenedictChannn"},"content":"Expected outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":159,"author":{"gitId":"BenedictChannn"},"content":"Until we meet again, my fellow dream chaser! Keep","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"BenedictChannn"},"content":"\t  ___________________  _____ __________ ____  __.____    .___ _______    ________","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"BenedictChannn"},"content":"\t/   _____/\\______   \\/  _  \\\\______   \\    |/ _|    |   |   |\\      \\  /  _____/","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"BenedictChannn"},"content":"\t \\_____  \\  |     ___/  /_\\  \\|       _/      \u003c |    |   |   |/   |   \\/   \\  ___","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"BenedictChannn"},"content":"\t /        \\ |    |  /    |    \\    |   \\    |  \\|    |___|   /    |    \\    \\_\\  \\","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"BenedictChannn"},"content":"\t/_______  / |____|  \\____|__  /____|_  /____|__ \\_______ \\___\\____|__  /\\______  /","lastModifiedDate":"2023-10-03"},{"lineNumber":165,"author":{"gitId":"BenedictChannn"},"content":"\t        \\/                  \\/       \\/        \\/       \\/           \\/        \\/","lastModifiedDate":"2023-10-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"BenedictChannn":147,"-":19}},{"path":"src/main/java/Commands/Add.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Commands;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Tasks.Task;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import Tasks.TaskList;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"import UI.Ui;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":" * Represents a command to add tasks to a TaskList in the Barbie-themed task manager.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"public class Add extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"    private final Task task;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"     * Constructor for \"Add\" command with the specified task to be added.","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"    public Add(Task task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"     * Executes the \"Add\" command by adding the task to the TaskList and printing messages to the user.","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"     * @param list The task list on which the command should operate.","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"    public void run(TaskList list) {","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"        list.addTask(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"        Ui.printTexts(new String[] {","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"                \"Barbie-approved! You\u0027ve added this glamorous task:\",","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"                task.toString(),","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"                \"Now your list is sparkling with \" + list.getSize() + \" glamorous tasks, darling!\"","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"        });","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":36}},{"path":"src/main/java/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Commands;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import Tasks.TaskList;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":" * The abstract base class for all commands in the Barbie-themed task manager.","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":" * Subclasses of Command represent specific actions that can be performed by the user.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"     * Abstract method to execute the command by performing the specific action on the task list.","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"     * @param list The task list on which the command should operate.","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"     * @throws KenException If an error occurs while executing the command.","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"    public abstract void run(TaskList list) throws KenException;","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":19}},{"path":"src/main/java/Commands/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Commands;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenMissingTaskException;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import Tasks.TaskList;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"import UI.Ui;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":" * Represents a command to delete a task from TaskList in the Barbie-themed task manager.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"public class Delete extends Command{","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"     * Constructor for \"Delete\" command with the specified task number to be deleted.","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"     * @param taskNumber The number of the task to be deleted from the task list.","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"    public Delete(int taskNumber) {","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"     * Executes the \"Delete\" command by deleting the specified task from TaskList and printing messages to the user.","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"     * @param list The task list on which the command should operate.","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"     * @throws KenMissingTaskException If the task specified by the task number is not found or does not exist.","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"    public void run(TaskList list) throws KenMissingTaskException {","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"            String taskText \u003d list.getTask(taskNumber - 1).toString();","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"            list.deleteTask(taskNumber - 1);","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"            Ui.printTexts(new String[] {","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"                    \"Noted, darling! I\u0027ve given that task the boot, just like a fashion faux pas!\",","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"                    taskText,","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"                    \"Now your list is sparkling with \" + list.getSize() + \" glamorous tasks, darling!\"","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"BenedictChannn"},"content":"            });","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"BenedictChannn"},"content":"        } catch (KenMissingTaskException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenMissingTaskException();","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"BenedictChannn":42}},{"path":"src/main/java/Commands/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Commands;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenException;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import Tasks.TaskList;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":" * Represents a command to find tasks in the TaskList that matches a specified keyword.","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"public class Find extends Command {","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"    private final String keyword;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"     * Constructor of \"Find\" command with the specified keyword for searching tasks.","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"     * @param keyword The keyword to search for within the TaskList.","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"    public Find(String keyword) {","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"     * Executes the \"Find\" command by searching for tasks that contain the specified keyword in their description.","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"     * The matching tasks are then displayed to users.","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"     * @param list The task list on which the command should operate.","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"    public void run(TaskList list) {","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"        list.getTasks(keyword);","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"BenedictChannn":31}},{"path":"src/main/java/Commands/Goodbye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Commands;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import Tasks.TaskList;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"import UI.Ui;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"import static Storage.Storage.writeToFile;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":" * Represents a command to exit the Barbie-themed task manager gracefully.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"public class Goodbye extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"     * Executes the \"Goodbye\" command, bidding farewell to the user and saving the current TaskList to a file.","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"     * @param list The task list on which the command should operate.","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"     * @throws KenException If an error occurs while writing the TaskList to a file.","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"    public void run(TaskList list) throws KenException {","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"        Ui.byeUser();","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"        writeToFile(list);","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":24}},{"path":"src/main/java/Commands/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Commands;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Tasks.TaskList;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":" * Represents a command to list tasks in the Barbie-themed task manager in a nice way.","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"public class List extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"     * Executes the \"List\" command by displaying the list of tasks to the user.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"     * @param list The task list on which the command should operate.","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"    public void run(TaskList list) {","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"        list.getTasks();","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":19}},{"path":"src/main/java/Commands/Update.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Commands;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenMissingTaskException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import Tasks.TaskList;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"import UI.Ui;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":" * Represents a command to manage the status of a task in the Barbie-themed task manager.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"public class Update extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"     * Constructor for \"Update\" command with the specified task number and status of task.","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"     * @param taskNumber The number of the task to be updated.","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"     * @param isDone The new status of the task (true if completed and false if not completed).","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"    public Update(int taskNumber, boolean isDone) {","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"     * Executes the \"Update\" command by updating the status of the specified task and printing messages to the user.","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"     * @param list The task list on which the command should operate.","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"     * @throws KenMissingTaskException If the task specified by the taskNumber is not found.","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"    public void run(TaskList list) throws KenMissingTaskException{","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"            list.updateStatus(taskNumber - 1, isDone);","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"            String text;","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"BenedictChannn"},"content":"            text \u003d isDone ? \"Barbie-tastic! You\u0027ve completed this task with glamour!\"","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"BenedictChannn"},"content":"                    : \"Back to the runway, darling! This task needs more Barbie magic!\";","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"BenedictChannn"},"content":"            Ui.printTexts(new String[]{","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"BenedictChannn"},"content":"                    text,","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"BenedictChannn"},"content":"                    list.getTask(taskNumber - 1).toString()","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"BenedictChannn"},"content":"            });","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"BenedictChannn"},"content":"        } catch (KenMissingTaskException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenMissingTaskException();","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":47}},{"path":"src/main/java/Exceptions/KenDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Exceptions;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":" * A custom exception class for handling date format issues in Event and Deadline tasks in the Barbie-themed task manager.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":" * This exception is thrown when a date does not follow the expected format: dd/mm/yyyy HHmm.","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":" * It provides a specific error message to guide the user in formatting their date correctly.","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"public class KenDateException extends KenException {","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"     * Constructors a new instance of the KenDateException class with predefined error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"     * The error message instructs users to follow the expected date format","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"    public KenDateException() {","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"        super(\"Uh-oh, I\u0027m a little confused! Please make sure your date follows this style: dd/mm/yyyy HHmm. Thanks, doll!\");","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"BenedictChannn":17}},{"path":"src/main/java/Exceptions/KenException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Exceptions;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":" * The base class for custom exceptions in the Barbie-themed task manager.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":" * This class extends the Java standard Exception class.","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"public class KenException extends Exception {","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"     * Constructs a new instance of the KenException class with the specified error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"     * @param message The error message that describes the exception.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"    public KenException(String message) {","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"        super(message);","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":17}},{"path":"src/main/java/Exceptions/KenFileCorruptedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":" * A custom exception class for handling file corruption issues in the Barbie-themed task manager.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":" * This exception is thrown when a file is corrupted.","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"public class KenFileCorruptedException extends KenException {","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"     * Constructs a new instance of the KenFileCorruptedException class with the specified error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"     * @param message The error message that describes the file corruption issue.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"    public KenFileCorruptedException(String message) {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"        super(message);","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"BenedictChannn":17}},{"path":"src/main/java/Exceptions/KenMissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Exceptions;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":" * A custom exception class for handling missing task issues in the Barbie-themed task manager.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":" * This exception is thrown when an operation attempts to access or manipulate a task that does not exist in the task manager.","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"public class KenMissingTaskException extends KenException {","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"     * Constructs a new instance of the KenMissingTaskException class with a predefined error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"     * The error message informs the user that the requested task cannot be found.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"    public KenMissingTaskException() {","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"        super(\"Sweetie, that\u0027s not on the Barbie agenda!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":16}},{"path":"src/main/java/Exceptions/KenParsingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Exceptions;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":" * A custom exception class for handling parsing issues in the Barbie-themed task manager.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":" * This exception is thrown when there is a problem parsing user input or commands.","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"public class KenParsingException extends KenException {","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"     * Constructs a new instance of the KenParsingException class with the specified error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"     * @param message The error message that describes the parsing issue.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"    public KenParsingException(String message) {","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"        super(message);","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":17}},{"path":"src/main/java/Exceptions/KenReadFromFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":" * A custom exception class for handling file reading issues in the Barbie-themed task manager.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":" * This exception is thrown when there is a problem reading from the file.","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"public class KenReadFromFileException extends KenException {","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"     * Constructs a new instance of the KenReadFromFileException class with a predefined error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"     * The error message indicates that there\u0027s an issue with reading from the file.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"    public KenReadFromFileException() {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"        super(\"Oops, darling! Reading from the file is like, so not happening right now!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"BenedictChannn":16}},{"path":"src/main/java/Exceptions/KenWriteToFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":" * A custom exception class for handling file writing issues in the Barbie-themed task manager.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":" * This exception is thrown when there is a problem writing data to the file.","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"public class KenWriteToFileException extends KenException {","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"     * Constructs a new instance of the KenWriteToFileException class with a predefined error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"     * The error message indicates that there\u0027s an issue with writing to the file.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"    public KenWriteToFileException() {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"        super(\"Uh-oh, darling! Writing to the file is a total fashion fail!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"BenedictChannn":16}},{"path":"src/main/java/Ken/Ken.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Ken;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"import Commands.Command;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"import Commands.Goodbye;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenException;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenParsingException;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"import Parser.ParseCommands;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"import Storage.Storage;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"import Tasks.TaskList;","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"import UI.Ui;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":" * Ken is a Barbie-themed task manager that allows users to manage their tasks.","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":" * Users can add, delete, mark as done, list, and search for tasks.","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":" * Ken also provides a user-friendly text-based interface for interaction.","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"public class Ken {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"    private final TaskList list \u003d new TaskList();","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"     * Executes the Barbie-themed task manager application.","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"     * It starts by greeting the user, loading tasks from a file and running the initial command.","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"    public void execute() {","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"        ParseCommands parser \u003d new ParseCommands();","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"        Ui.greetUser();","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"            Storage.readFromFile(list);","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"            Command startCommand \u003d parser.parse(\"list\");","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"            startCommand.run(list);","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"BenedictChannn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"BenedictChannn"},"content":"            Ui.printTexts(new String[] {","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"BenedictChannn"},"content":"                    e.getMessage()","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"BenedictChannn"},"content":"            });","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"BenedictChannn"},"content":"        Command command \u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"BenedictChannn"},"content":"        String input;","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"BenedictChannn"},"content":"        while (!(command instanceof Goodbye)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"BenedictChannn"},"content":"            input \u003d scan.nextLine();","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"BenedictChannn"},"content":"            try {","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"BenedictChannn"},"content":"                command \u003d parser.parse(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"BenedictChannn"},"content":"                try {","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"BenedictChannn"},"content":"                    command.run(list);","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"BenedictChannn"},"content":"                } catch (KenParsingException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"BenedictChannn"},"content":"                    Ui.printTexts(new String[] {","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"BenedictChannn"},"content":"                            e.getMessage()","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"BenedictChannn"},"content":"                    });","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"BenedictChannn"},"content":"                }","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"BenedictChannn"},"content":"            } catch (KenException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"BenedictChannn"},"content":"                Ui.printTexts(new String[] {","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"BenedictChannn"},"content":"                        e.getMessage()","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"BenedictChannn"},"content":"                });","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"BenedictChannn"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"BenedictChannn"},"content":"     * Main method to run the program.","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"BenedictChannn"},"content":"     * It creates a new instance of Ken and executes the application.","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"BenedictChannn"},"content":"     * @param args The command-line arguments.","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"BenedictChannn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"BenedictChannn"},"content":"        new Ken().execute();","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"BenedictChannn":72,"-":2}},{"path":"src/main/java/Parser/ParseCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Parser;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Commands.*;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenDateException;","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenException;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenParsingException;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"import Tasks.Event;","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"import Tasks.Task;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"import Tasks.Todo;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":" * A utility class responsible for parsing user commands and input in the Barbie-themed task manager.","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"public class ParseCommands {","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"    private static final String TODO \u003d \"todo\";","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"    private static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"    private static final String EVENT \u003d \"event\";","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"    private static final String LIST \u003d \"list\";","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"    private static final String MARK \u003d \"mark\";","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"    private static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"    private static final String BYE \u003d \"bye\";","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"    private static final String DELETE \u003d \"delete\";","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"    private static final String FIND \u003d \"find\";","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"     * Parses the user input and returns the corresponding Commands object.","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"     * @param input The user\u0027s input command as a string.","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"     * @return A Commands object representing the parsed user command.","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"     * @throws KenException If there is an issue parsing the input or creating the Commands object.","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"BenedictChannn"},"content":"    public Command parse(String input) throws KenException {","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"BenedictChannn"},"content":"        String command \u003d input.contains(\" \") ? input.split(\" \")[0] : input;","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"BenedictChannn"},"content":"        switch (command) {","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"BenedictChannn"},"content":"        case TODO:","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"BenedictChannn"},"content":"            Task todo \u003d getTodo(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"BenedictChannn"},"content":"            return new Add(todo);","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"BenedictChannn"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"BenedictChannn"},"content":"            Task deadline \u003d getDeadline(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"BenedictChannn"},"content":"            return new Add(deadline);","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"BenedictChannn"},"content":"        case EVENT:","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"BenedictChannn"},"content":"            Task event \u003d getEvent(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"BenedictChannn"},"content":"            return new Add(event);","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"BenedictChannn"},"content":"        case LIST:","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"BenedictChannn"},"content":"            return new List();","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"BenedictChannn"},"content":"        case MARK:","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"BenedictChannn"},"content":"            return getStatus(input, true);","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"BenedictChannn"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"BenedictChannn"},"content":"            return getStatus(input, false);","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"BenedictChannn"},"content":"        case DELETE:","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"BenedictChannn"},"content":"            return getDelete(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"BenedictChannn"},"content":"        case FIND:","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"BenedictChannn"},"content":"            return getMatchTask(input);","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"BenedictChannn"},"content":"        case BYE:","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"BenedictChannn"},"content":"            return new Goodbye();","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"BenedictChannn"},"content":"        default:","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Uh-oh, darling! Your input needs a makeover for me to understand!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"BenedictChannn"},"content":"    private Command getMatchTask(String input) throws KenParsingException {","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"BenedictChannn"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"BenedictChannn"},"content":"        if (trimmedInput.equals(FIND)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":71,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Barbie, darling, could you, like, pick a keyword to find some fab tasks?\");","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":73,"author":{"gitId":"BenedictChannn"},"content":"        String keyword \u003d trimmedInput.split(\" \", 2)[1];","lastModifiedDate":"2023-09-27"},{"lineNumber":74,"author":{"gitId":"BenedictChannn"},"content":"        return new Find(keyword);","lastModifiedDate":"2023-09-27"},{"lineNumber":75,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":76,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":77,"author":{"gitId":"BenedictChannn"},"content":"    private static Task getTodo(String input) throws KenParsingException {","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"BenedictChannn"},"content":"        if (input.trim().equals(TODO)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Oopsie! A todo without a description is like a party without glitter, so not fabulous!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"BenedictChannn"},"content":"        String todoName \u003d input.substring(TODO.length() + 1).trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"BenedictChannn"},"content":"        return new Todo(todoName);","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"BenedictChannn"},"content":"    private static Task getDeadline(String input) throws KenParsingException, KenDateException {","lastModifiedDate":"2023-09-26"},{"lineNumber":86,"author":{"gitId":"BenedictChannn"},"content":"        if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Please enter a proper deadline using \u0027/by\u0027.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"BenedictChannn"},"content":"        String[] deadlineInfo \u003d input.substring(DEADLINE.length() + 1).split(\"/by\", 2);","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"BenedictChannn"},"content":"        String deadlineName \u003d deadlineInfo[0].trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"BenedictChannn"},"content":"        String byString \u003d deadlineInfo[1].trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":92,"author":{"gitId":"BenedictChannn"},"content":"        if (deadlineName.isEmpty()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Oopsie! A deadline without a description is like a party without glitter, so not fabulous!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"BenedictChannn"},"content":"        if (byString.isEmpty()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":96,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Oopsie! Did you forget to include the deadline?\");","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-26"},{"lineNumber":99,"author":{"gitId":"BenedictChannn"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(byString, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-09-26"},{"lineNumber":100,"author":{"gitId":"BenedictChannn"},"content":"            return new Deadline(deadlineName, by);","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"BenedictChannn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-26"},{"lineNumber":102,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenDateException();","lastModifiedDate":"2023-09-26"},{"lineNumber":103,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":104,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"BenedictChannn"},"content":"    private static Task getEvent(String input) throws KenParsingException, KenDateException {","lastModifiedDate":"2023-09-26"},{"lineNumber":107,"author":{"gitId":"BenedictChannn"},"content":"        if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Please enter a proper event using \u0027/from\u0027 and \u0027 /to\u0027.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"BenedictChannn"},"content":"        String[] eventInfo \u003d input.substring(EVENT.length() + 1).split(\"/from |/to\", 3);","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"BenedictChannn"},"content":"        String eventName \u003d eventInfo[0].trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"BenedictChannn"},"content":"        String fromString \u003d eventInfo[1].trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":113,"author":{"gitId":"BenedictChannn"},"content":"        String toString \u003d eventInfo[2].trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":114,"author":{"gitId":"BenedictChannn"},"content":"        if (eventName.isEmpty()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Oopsie! An event without a description is like a party without glitter, so not fabulous!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"BenedictChannn"},"content":"        if (fromString.isEmpty()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":118,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Oopsie! Did you forget to include the start date of the event?\");","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"BenedictChannn"},"content":"        if (toString.isEmpty()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":121,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Oopsie! Did you forget to include the end date of the event?\");","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-26"},{"lineNumber":124,"author":{"gitId":"BenedictChannn"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(fromString, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-09-26"},{"lineNumber":125,"author":{"gitId":"BenedictChannn"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(toString, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-09-26"},{"lineNumber":126,"author":{"gitId":"BenedictChannn"},"content":"            if (from.isAfter(to)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":127,"author":{"gitId":"BenedictChannn"},"content":"                throw new KenParsingException(\"Honey, we need to keep things in order: the start date can\u0027t strut in after the end date.\");","lastModifiedDate":"2023-10-02"},{"lineNumber":128,"author":{"gitId":"BenedictChannn"},"content":"            }","lastModifiedDate":"2023-10-02"},{"lineNumber":129,"author":{"gitId":"BenedictChannn"},"content":"            return new Event(eventName, from, to);","lastModifiedDate":"2023-09-19"},{"lineNumber":130,"author":{"gitId":"BenedictChannn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-26"},{"lineNumber":131,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenDateException();","lastModifiedDate":"2023-09-26"},{"lineNumber":132,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":133,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":134,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":135,"author":{"gitId":"BenedictChannn"},"content":"    private static Update getStatus(String input, boolean isDone) throws KenParsingException {","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"BenedictChannn"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2023-09-19"},{"lineNumber":137,"author":{"gitId":"BenedictChannn"},"content":"        if (trimmedInput.equals(MARK) || trimmedInput.equals(UNMARK)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":138,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Pick a task to mark/unmark and let the Barbie magic flow!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":139,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":140,"author":{"gitId":"BenedictChannn"},"content":"        String taskString \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"BenedictChannn"},"content":"        int taskNumber;","lastModifiedDate":"2023-09-19"},{"lineNumber":142,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"BenedictChannn"},"content":"            taskNumber \u003d Integer.parseInt(taskString);","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"BenedictChannn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":145,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Oh darling, that\u0027s not a number fit for a Barbie world.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":146,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":147,"author":{"gitId":"BenedictChannn"},"content":"        return new Update(taskNumber, isDone);","lastModifiedDate":"2023-09-19"},{"lineNumber":148,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"BenedictChannn"},"content":"    private static Delete getDelete(String input) throws KenParsingException {","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"BenedictChannn"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"BenedictChannn"},"content":"        if (trimmedInput.equals(DELETE)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Pick a task to delete and let the Barbie magic flow!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"BenedictChannn"},"content":"        String taskString \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-09-19"},{"lineNumber":156,"author":{"gitId":"BenedictChannn"},"content":"        int taskNumber;","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"BenedictChannn"},"content":"            taskNumber \u003d Integer.parseInt(taskString);","lastModifiedDate":"2023-09-19"},{"lineNumber":159,"author":{"gitId":"BenedictChannn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":160,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenParsingException(\"Oh darling, that\u0027s not a number fit for a Barbie world.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":161,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":162,"author":{"gitId":"BenedictChannn"},"content":"        return new Delete(taskNumber);","lastModifiedDate":"2023-09-19"},{"lineNumber":163,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":164,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"BenedictChannn":164}},{"path":"src/main/java/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Storage;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenDateException;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenFileCorruptedException;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenReadFromFileException;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenWriteToFileException;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"import Tasks.*;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"import java.io.File;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":" * A utility class responsible for reading and writing tasks to a file to save the list of tasks.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"public class Storage {","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"    private static final String FILE_PATH \u003d \"data/kenbot.txt\";","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"    private static final char TODO \u003d \u0027T\u0027;","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"    private static final char DEADLINE \u003d \u0027D\u0027;","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"    private static final char EVENT \u003d \u0027E\u0027;","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"     * Reads tasks from file, populates the task list and create the file/ directory if it does not exist.","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"     * @param list The task list to populate with tasks from the file.","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"     * @throws KenReadFromFileException If there is an issue reading data from the file.","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"     * @throws KenFileCorruptedException If the file\u0027s content is corrupt or does not match the expected format.","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"    public static void readFromFile(TaskList list) throws KenReadFromFileException, KenFileCorruptedException {","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"BenedictChannn"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"BenedictChannn"},"content":"            try {","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"BenedictChannn"},"content":"                file.getParentFile().mkdir();","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"BenedictChannn"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"BenedictChannn"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"BenedictChannn"},"content":"                throw new KenReadFromFileException();","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"BenedictChannn"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"BenedictChannn"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"BenedictChannn"},"content":"            getDataFromFile(file, list);","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"BenedictChannn"},"content":"    private static void getDataFromFile(File file, TaskList list) throws KenReadFromFileException, KenFileCorruptedException {","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"BenedictChannn"},"content":"            Scanner in \u003d new Scanner(file);","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"BenedictChannn"},"content":"            while (in.hasNext()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"BenedictChannn"},"content":"                String lineInput \u003d in.nextLine();","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"BenedictChannn"},"content":"                char taskType \u003d lineInput.charAt(1);","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"BenedictChannn"},"content":"                boolean isDone;","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"BenedictChannn"},"content":"                if (lineInput.contains(\"][ ]\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"BenedictChannn"},"content":"                    isDone \u003d false;","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"BenedictChannn"},"content":"                } else if (lineInput.contains(\"][X]\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"BenedictChannn"},"content":"                    isDone \u003d true;","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"BenedictChannn"},"content":"                } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"BenedictChannn"},"content":"                    throw new KenFileCorruptedException(\"Uh-oh, darling! The task status is like, totally hiding from the spotlight!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"BenedictChannn"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"BenedictChannn"},"content":"                String[] line \u003d lineInput.split(\"] \", 2);","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"BenedictChannn"},"content":"                String lineInformation;","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"BenedictChannn"},"content":"                if (line.length \u003c 2) {","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"BenedictChannn"},"content":"                    throw new KenFileCorruptedException(\"Sweetie, where\u0027s the sparkle? The task description is like, totally missing from the scene!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"BenedictChannn"},"content":"                } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"BenedictChannn"},"content":"                    lineInformation \u003d line[1];","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"BenedictChannn"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"BenedictChannn"},"content":"                switch (taskType) {","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"BenedictChannn"},"content":"                case TODO:","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"BenedictChannn"},"content":"                    Task todo \u003d getTodo(lineInformation);","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"BenedictChannn"},"content":"                    todo.setDone(isDone);","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"BenedictChannn"},"content":"                    list.addTask(todo);","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"BenedictChannn"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"BenedictChannn"},"content":"                case DEADLINE:","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"BenedictChannn"},"content":"                    Task deadline \u003d getDeadline(lineInformation);","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"BenedictChannn"},"content":"                    deadline.setDone(isDone);","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"BenedictChannn"},"content":"                    list.addTask(deadline);","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"BenedictChannn"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"BenedictChannn"},"content":"                case EVENT:","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"BenedictChannn"},"content":"                    Task event \u003d getEvent(lineInformation);","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"BenedictChannn"},"content":"                    event.setDone(isDone);","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"BenedictChannn"},"content":"                    list.addTask(event);","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"BenedictChannn"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"BenedictChannn"},"content":"                default:","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"BenedictChannn"},"content":"                    throw new KenFileCorruptedException(\"Oopsie, darling! The task type is like, totally not on our fabulous radar!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"BenedictChannn"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"BenedictChannn"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"BenedictChannn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenReadFromFileException();","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"BenedictChannn"},"content":"     * Writes tasks from TaskList to the file.","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"BenedictChannn"},"content":"     * @param list The TaskList to write the tasks from.","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"BenedictChannn"},"content":"     * @throws KenWriteToFileException If there is an issue with writing data to the file.","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"BenedictChannn"},"content":"    public static void writeToFile(TaskList list) throws KenWriteToFileException {","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"BenedictChannn"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"BenedictChannn"},"content":"            for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"BenedictChannn"},"content":"                Task task \u003d list.getTask(i);","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"BenedictChannn"},"content":"                String taskText \u003d task.toString().trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"BenedictChannn"},"content":"                fw.write(taskText + System.lineSeparator());","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"BenedictChannn"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"BenedictChannn"},"content":"            fw.close();","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"BenedictChannn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenWriteToFileException();","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"BenedictChannn"},"content":"    private static Task getTodo(String input) {","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"BenedictChannn"},"content":"        String todoDescription \u003d input.trim();","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"BenedictChannn"},"content":"        return new Todo(todoDescription);","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"BenedictChannn"},"content":"    private static Task getDeadline(String input) throws KenFileCorruptedException {","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"BenedictChannn"},"content":"        String[] deadlineInformation \u003d input.split(\"[(]by:\", 2);","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"BenedictChannn"},"content":"        String deadlineDescription;","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"BenedictChannn"},"content":"        String deadlineByString;","lastModifiedDate":"2023-09-26"},{"lineNumber":129,"author":{"gitId":"BenedictChannn"},"content":"        LocalDateTime deadlineBy;","lastModifiedDate":"2023-09-26"},{"lineNumber":130,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"BenedictChannn"},"content":"            deadlineDescription \u003d deadlineInformation[0].trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"BenedictChannn"},"content":"            deadlineByString \u003d deadlineInformation[1].replace(\")\", \"\").trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":133,"author":{"gitId":"BenedictChannn"},"content":"            deadlineBy \u003d LocalDateTime.parse(deadlineByString, DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\"));","lastModifiedDate":"2023-09-26"},{"lineNumber":134,"author":{"gitId":"BenedictChannn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenFileCorruptedException(\"The deadline is like, totally missing its fabulous moment!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"BenedictChannn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-26"},{"lineNumber":137,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenFileCorruptedException(\"The deadline date seems to be corrupted!\");","lastModifiedDate":"2023-09-26"},{"lineNumber":138,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"BenedictChannn"},"content":"        return new Deadline(deadlineDescription, deadlineBy);","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"BenedictChannn"},"content":"    private static Task getEvent(String input) throws KenFileCorruptedException {","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"BenedictChannn"},"content":"        String[] eventInformation \u003d input.split(\"[(]from:|to:\", 3);","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"BenedictChannn"},"content":"        String eventDescription;","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"BenedictChannn"},"content":"        String eventFromString;","lastModifiedDate":"2023-09-26"},{"lineNumber":146,"author":{"gitId":"BenedictChannn"},"content":"        String eventToString;","lastModifiedDate":"2023-09-26"},{"lineNumber":147,"author":{"gitId":"BenedictChannn"},"content":"        LocalDateTime eventFrom;","lastModifiedDate":"2023-09-26"},{"lineNumber":148,"author":{"gitId":"BenedictChannn"},"content":"        LocalDateTime eventTo;","lastModifiedDate":"2023-09-26"},{"lineNumber":149,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"BenedictChannn"},"content":"            eventDescription \u003d eventInformation[0].trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"BenedictChannn"},"content":"            eventFromString \u003d eventInformation[1].trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":152,"author":{"gitId":"BenedictChannn"},"content":"            eventFrom \u003d LocalDateTime.parse(eventFromString, DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\"));","lastModifiedDate":"2023-09-26"},{"lineNumber":153,"author":{"gitId":"BenedictChannn"},"content":"            eventToString \u003d eventInformation[2].replace(\")\", \"\").trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":154,"author":{"gitId":"BenedictChannn"},"content":"            eventTo \u003d LocalDateTime.parse(eventToString, DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\"));","lastModifiedDate":"2023-09-26"},{"lineNumber":155,"author":{"gitId":"BenedictChannn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenFileCorruptedException(\"The event period is like, totally missing from the spotlight!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"BenedictChannn"},"content":"        return new Event(eventDescription, eventFrom, eventTo);","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"BenedictChannn":160}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Tasks;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":" * Represents a task with a deadline in the Barbie-themed task manager.","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"    protected String by;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"     * Initializes a new Deadline task with the given description and deadline date.","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"     * @param by The deadline date and time.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"        super(description);","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"        this.by \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\"));","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"     *  Gets the formatted deadline date and time.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"     * @return The formatted deadline date and time.","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"        return by;","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"     * Sets the deadline date and time.","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"     * @param by The new deadline date and time.","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"BenedictChannn"},"content":"    public void setBy(LocalDateTime by) {","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"BenedictChannn"},"content":"        this.by \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"BenedictChannn"},"content":"     * Returns a string representation of the Deadline task, including its status, description, and deadline.","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"BenedictChannn"},"content":"     * @return A string representing the Deadline task, in the format: \"[D] [X] Description (by: Deadline)\".","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"BenedictChannn"},"content":"    public String toString() {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"BenedictChannn"},"content":"        return \"\\t[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"BenedictChannn":50}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Tasks;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":" * Represents an Event task in the Barbie-themed task manager.","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"    protected String from;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"    protected String to;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"     * Initializes a new Event task with the given description, start date and end date.","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"     * @param from The start date and time of the Event.","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"     * @param to The end date and time of the Event.","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"        super(description);","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"        this.from \u003d from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\"));;","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"        this.to \u003d to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\"));;","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"     * Gets the formatted start date and time of the Event.","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"     * @return The formatted start date and time.","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"    public String getFrom() {","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"        return from;","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"     * Gets the formatted end date and time of the Event.","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"BenedictChannn"},"content":"     * @return The formatted end date and time.","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"BenedictChannn"},"content":"    public String getTo() {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"BenedictChannn"},"content":"        return to;","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"BenedictChannn"},"content":"     * Sets the start date and time of the Event.","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"BenedictChannn"},"content":"     * @param from The new start date and time.","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"BenedictChannn"},"content":"    public void setFrom(LocalDateTime from) {","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"BenedictChannn"},"content":"        this.from \u003d from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\"));","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"BenedictChannn"},"content":"     * Sets the end date and time of the Event.","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"BenedictChannn"},"content":"     * @param to The new end date and time.","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"BenedictChannn"},"content":"    public void setTo(LocalDateTime to) {","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"BenedictChannn"},"content":"        this.to \u003d to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\"));","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"BenedictChannn"},"content":"     * Returns a new string representation of the Event task, including its status, description, start date and end date.","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"BenedictChannn"},"content":"     * @return A string representing the Event task, in the format: \"[E] [X] Description (from: StartDate to: EndDate)\".","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"BenedictChannn"},"content":"    public String toString() {","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"BenedictChannn"},"content":"        return \"\\t[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"BenedictChannn":71}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Tasks;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":" * Represents a generic task in the Barbie-themed task manager.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"public class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"    protected String description;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"     * Initializes a new task with the given description.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"     * Gets the status icon of the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"     * @return The status icon (\"X\" if task is done, \" \" if task not done).","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"     * Sets the status of the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"     * @param status The status of the task (true if done, false if not done).","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"    public void setDone(boolean status) {","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"BenedictChannn"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"BenedictChannn"},"content":"     * @return A string representing the task, in the format: \"[X] Description\" if done.","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"BenedictChannn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"BenedictChannn"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"BenedictChannn":47}},{"path":"src/main/java/Tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Tasks;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import Exceptions.KenMissingTaskException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"import UI.Ui;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":" * Represents a list of tasks in the Barbie-themed task manager.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"public class TaskList {","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"     * Initializes a new task list.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"        list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"        list.add(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"     * Retrieve task from the task list  by its index.","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"     * @param taskNumber The index of the task to retrieve.","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"     * @throws KenMissingTaskException If the specified task index is out of bounds.","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"BenedictChannn"},"content":"    public Task getTask(int taskNumber) throws KenMissingTaskException {","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"BenedictChannn"},"content":"            return list.get(taskNumber);","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"BenedictChannn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenMissingTaskException();","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"BenedictChannn"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"BenedictChannn"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"BenedictChannn"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"BenedictChannn"},"content":"        return list.size();","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"BenedictChannn"},"content":"     * Updates the status of a task in the TaskList.","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"BenedictChannn"},"content":"     * @param taskNumber The index of the task to update.","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"BenedictChannn"},"content":"     * @param status The new status of the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"BenedictChannn"},"content":"     * @throws KenMissingTaskException If the specified task index is out of bounds.","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"BenedictChannn"},"content":"    public void updateStatus(int taskNumber, boolean status) throws KenMissingTaskException {","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"BenedictChannn"},"content":"            list.get(taskNumber).setDone(status);","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"BenedictChannn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenMissingTaskException();","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"BenedictChannn"},"content":"     * Retrieves all the task from the TaskList and prints them to the CLI.","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"BenedictChannn"},"content":"    public void getTasks() {","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"BenedictChannn"},"content":"        int taskSize \u003d list.size();","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"BenedictChannn"},"content":"        String[] texts \u003d new String[taskSize + 1];","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"BenedictChannn"},"content":"        texts[0] \u003d \"Behold, your list of enchanting tasks!\";","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"BenedictChannn"},"content":"        for (int i \u003d 1; i \u003c\u003d taskSize; i++) {","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"BenedictChannn"},"content":"            Task currentTask \u003d list.get(i - 1);","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"BenedictChannn"},"content":"            texts[i] \u003d \"\\t\" + i + \".\" + currentTask.toString();","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"BenedictChannn"},"content":"        Ui.printTexts(texts);","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"BenedictChannn"},"content":"     * Retrieves tasks containing a specific keyword from the TaskList and prints them to the CLI.","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"BenedictChannn"},"content":"     * @param keyword The keyword to search for within task descriptions.","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"BenedictChannn"},"content":"    public void getTasks(String keyword) {","lastModifiedDate":"2023-09-27"},{"lineNumber":90,"author":{"gitId":"BenedictChannn"},"content":"        ArrayList\u003cString\u003e foundList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-27"},{"lineNumber":91,"author":{"gitId":"BenedictChannn"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-27"},{"lineNumber":92,"author":{"gitId":"BenedictChannn"},"content":"            Task currentTask \u003d list.get(i);","lastModifiedDate":"2023-09-27"},{"lineNumber":93,"author":{"gitId":"BenedictChannn"},"content":"            String taskDescription \u003d currentTask.toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"BenedictChannn"},"content":"            if (taskDescription.contains(keyword)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":95,"author":{"gitId":"BenedictChannn"},"content":"                foundList.add(\"\\t\" + (foundList.size() + 1) + \".\" + currentTask.toString());","lastModifiedDate":"2023-09-27"},{"lineNumber":96,"author":{"gitId":"BenedictChannn"},"content":"            }","lastModifiedDate":"2023-09-27"},{"lineNumber":97,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":98,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":99,"author":{"gitId":"BenedictChannn"},"content":"        String openingLine;","lastModifiedDate":"2023-09-27"},{"lineNumber":100,"author":{"gitId":"BenedictChannn"},"content":"        if (foundList.isEmpty()) {","lastModifiedDate":"2023-09-27"},{"lineNumber":101,"author":{"gitId":"BenedictChannn"},"content":"            openingLine \u003d \"Oh, sugarplum! You have no matching tasks with \u0027\" + keyword + \"\u0027\";","lastModifiedDate":"2023-09-27"},{"lineNumber":102,"author":{"gitId":"BenedictChannn"},"content":"        } else {","lastModifiedDate":"2023-09-27"},{"lineNumber":103,"author":{"gitId":"BenedictChannn"},"content":"            openingLine \u003d \"These are the tasks that match the keyword, hun!\";","lastModifiedDate":"2023-09-27"},{"lineNumber":104,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":105,"author":{"gitId":"BenedictChannn"},"content":"        Ui.printTexts(openingLine, foundList);","lastModifiedDate":"2023-09-27"},{"lineNumber":106,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":107,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":108,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"BenedictChannn"},"content":"     * Deletes a task from the TaskList by its index.","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"BenedictChannn"},"content":"     * @param taskNumber The index of the task to delete.","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"BenedictChannn"},"content":"     * @throws KenMissingTaskException If the specified task index is out of bounds.","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"BenedictChannn"},"content":"    public void deleteTask(int taskNumber) throws KenMissingTaskException{","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"BenedictChannn"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"BenedictChannn"},"content":"            list.remove(taskNumber);","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"BenedictChannn"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"BenedictChannn"},"content":"            throw new KenMissingTaskException();","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"BenedictChannn":121}},{"path":"src/main/java/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package Tasks;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":" * Represents a todo task in the barbie-themed task manager.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"     * Initializes a new todo task with the given description.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"        super(description);","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"     * Returns a string representation of the todo task, including its status and description.","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"     * @return A string representing the todo task, in the format: \"[T] [X] Description\"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"    public String toString() {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"        return \"\\t[T]\" + super.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"BenedictChannn":25}},{"path":"src/main/java/UI/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"package UI;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":" * Provides user interface functionality for the Barbie-themed task manager.","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"public class Ui {","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"     * Prints a horizontal line separator to the console.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"    public static void printLine() {","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"        System.out.println(\"_____________________________________________________________\");","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"BenedictChannn"},"content":"     * Prints an array of text messages to the console.","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"BenedictChannn"},"content":"     * @param texts An array of text messages to be printed.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"BenedictChannn"},"content":"    public static void printTexts(String[] texts) {","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"BenedictChannn"},"content":"        printLine();","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"BenedictChannn"},"content":"        for (String text : texts) {","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"BenedictChannn"},"content":"            System.out.println(\"\\t\" + text);","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"BenedictChannn"},"content":"        printLine();","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"BenedictChannn"},"content":"     * Prints an array of task-related text messages to the console.","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"BenedictChannn"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"BenedictChannn"},"content":"     * @param startLine The initial line of text to be printed.","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"BenedictChannn"},"content":"     * @param taskTexts An ArrayList of task-related text messages to be printed.","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"BenedictChannn"},"content":"    public static void printTexts(String startLine, ArrayList\u003cString\u003e taskTexts) {","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"BenedictChannn"},"content":"        printLine();","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"BenedictChannn"},"content":"        System.out.println(\"\\t\" + startLine);","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"BenedictChannn"},"content":"        for (String text : taskTexts) {","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"BenedictChannn"},"content":"            System.out.println(\"\\t\" + text);","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"BenedictChannn"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"BenedictChannn"},"content":"        printLine();","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"BenedictChannn"},"content":"     * Displays a greeting message with a Barbie-themed logo to console.","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"BenedictChannn"},"content":"    public static void greetUser() {","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"BenedictChannn"},"content":"        String hiLogo \u003d \" ____  __.___________ _______\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t|    |/ _|\\\\_   _____/ \\\\      \\\\\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t|      \u003c   |    __)_  /   |   \\\\\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t|    |  \\\\  |        \\\\/    |    \\\\\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t|____|__ \\\\/_________/\\\\____|__  /\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t\\\\/        \\\\/         \\\\/\";","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"BenedictChannn"},"content":"        printTexts(new String[] {","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"BenedictChannn"},"content":"                \"Greetings, fashionista! I\u0027m\",","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"BenedictChannn"},"content":"                hiLogo,","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"BenedictChannn"},"content":"                \"your dream planner extraordinaire.\",","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"BenedictChannn"},"content":"                \"Ready to make your day as fabulous as a Barbie runway show?\"","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"BenedictChannn"},"content":"        });","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"BenedictChannn"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"BenedictChannn"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"BenedictChannn"},"content":"     * Displays a farewell message with a Barbie-themed logo to the console.","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"BenedictChannn"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"BenedictChannn"},"content":"    public static void byeUser() {","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"BenedictChannn"},"content":"        String byeLogo \u003d \"  ___________________  _____ __________ ____  __.____    .___ _______    ________\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t/   _____/\\\\______   \\\\/  _  \\\\\\\\______   \\\\    |/ _|    |   |   |\\\\      \\\\  /  _____/\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t \\\\_____  \\\\  |     ___/  /_\\\\  \\\\|       _/      \u003c |    |   |   |/   |   \\\\/   \\\\  ___\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t /        \\\\ |    |  /    |    \\\\    |   \\\\    |  \\\\|    |___|   /    |    \\\\    \\\\_\\\\  \\\\\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t/_______  / |____|  \\\\____|__  /____|_  /____|__ \\\\_______ \\\\___\\\\____|__  /\\\\______  /\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"BenedictChannn"},"content":"                + \"\\t        \\\\/                  \\\\/       \\\\/        \\\\/       \\\\/           \\\\/        \\\\/\";","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"BenedictChannn"},"content":"        printTexts(new String[] {","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"BenedictChannn"},"content":"                \"Until we meet again, my fellow dream chaser! Keep\",","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"BenedictChannn"},"content":"                byeLogo,","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"BenedictChannn"},"content":"        });","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"BenedictChannn"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"BenedictChannn"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"BenedictChannn":77}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BenedictChannn"},"content":"todo read book","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"BenedictChannn"},"content":"list","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"BenedictChannn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"BenedictChannn"},"content":"list","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"BenedictChannn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"BenedictChannn"},"content":"list","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"BenedictChannn"},"content":"mark 1","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"BenedictChannn"},"content":"mark 2","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"BenedictChannn"},"content":"mark 3","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"unmark 1","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"BenedictChannn"},"content":"unmark 2","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"BenedictChannn"},"content":"unmark 3","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"BenedictChannn"},"content":"list","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"BenedictChannn"},"content":"bye","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"BenedictChannn":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"BenedictChannn"},"content":"javac  -cp ..\\src\\main\\java\\Ken -Xlint:none -d ..\\bin ..\\src\\main\\java\\Ken\\*.java","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"BenedictChannn"},"content":"java -classpath ..\\bin Ken \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BenedictChannn":2,"-":19}}]
