[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"PLOC is a desktop app for managing tasks using CLI (Command Line Interface). Note commands are case-sensitive. So \u0027Bye\u0027 will exit the programme while \u0027bye\u0027 will not","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"### Exiting: `Bye` ","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"Exits program while saving the tasks on the file system. ","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"Format: `Bye`","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"### Adding a task: `todo`","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"Adds a single task to the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"Format: `todo \u003cNAME\u003e`","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"### Adding a task with a deadline: `deadline`","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"Adds a single task with a deadline to the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"Format: `deadline \u003cNAME OF TASK\u003e /by \u003cDEADLINE\u003e`","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"### Adding an event: `event`","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"Adds a single event to the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"Format: `event \u003cNAME\u003e /from \u003cSTART\u003e /to \u003cEND\u003e`","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"### Viewing all tasks: `list`","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"Shows a list of tasks in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"Format: `list`","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"Marks one task as done.","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"Format: `mark \u003cINDEX\u003e`","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"### Marking a task as not done: `unmark`","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"Marks one task as not done.","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"Format: `unmark \u003cINDEX\u003e`","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"Deletes one task in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"Format: `delete \u003cINDEX\u003e`","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"### Finding a task by keyword: `find`","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"Finds one task in the list by a keyword. Only works for single keywords and not phrases.","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"Format: `find \u003cKEYWORD\u003e`","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"ryanlohyr":43,"-":15}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"T|0|bye","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"D|0|1 |1 ","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"T|0|k","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"ryanlohyr":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"import java.io.*;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import java.util.concurrent.atomic.AtomicBoolean;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import commands.*;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"    private static final String dukeDataFile \u003d \"./duke.txt\";","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    private static Storage storage;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"    private static Ui ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"            tasks \u003d new TaskList(storage.getTaskData());","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"        storage.addTaskSize(tasks.size());","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"        while (!userInput.equals(\"Bye\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"            String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"            String initialWord \u003d words[0];","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"            boolean validWord \u003d Parser.validateInput(initialWord, words, tasks.size());","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"            if (validWord) {","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"                switch (initialWord) {","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"                case \"list\": {","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"                    tasks.printList();","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"                case \"help\": {","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"Welcome to your to do list!. Here are the commands\");","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"To add Deadlines, type in \u0027deadline \u003ctask name\u003e /\u003cdeadline\u003e\");","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"example: \u0027deadline do 2113 assignment /tuesday 2pm\");","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"To add Events, type in \u0027event \u003cevent name\u003e /\u003cevent start time\u003e /\u003cevent end time\u003e\");","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"example: \u0027deadline do 2113 assignment /tuesday 2pm/4pm\");","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"                case \"delete\": {","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"                    int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"                    Task item \u003d tasks.get(index - 1);","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"                    storage.removeFromFile(index);","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"                    tasks.delete(index - 1);","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"[\" + item.getType() + \"]\" + \"[\" + item.getStatusIcon() + \"]\" + item);","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"                case \"find\": {","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"                    //only a single keyword","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"                    String keyword \u003d words[1];","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"                    AtomicBoolean matchFound \u003d new AtomicBoolean(false);","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"Here are the tasks that contains the keyword \u0027\" + keyword + \"\u0027\");","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"                    tasks.getAllTasks().stream()","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"                            .filter(task -\u003e {","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"                                if (!task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"                                    return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"                                }","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"                                matchFound.set(true);","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"                                return true;","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"                            }).forEach(System.out::println);","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"                    if (!matchFound.get()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"                        System.out.println(\"No matching items found\");","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"                    }","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"                case \"mark\": {","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"                    int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"                    Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"                    currTask.markStatus();","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"                    String message \u003d String.format(\"[%s] %s\", currTask.getStatusIcon(), currTask.getDescription());","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(message);","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"                    storage.updateMark(index, 1);","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"                case \"unmark\": {","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"                    // unmark an item","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"unmark \" + words[1]);","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"                    int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"                    // we need to check if it\u0027s out of bounds first","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"                    Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"                    currTask.unmarkStatus();","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"Nice! I\u0027ve unmarked this task: \");","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"ryanlohyr"},"content":"                    String message \u003d String.format(\"[%s] %s\", currTask.getStatusIcon(), currTask.getDescription());","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(message);","lastModifiedDate":"2023-09-04"},{"lineNumber":117,"author":{"gitId":"ryanlohyr"},"content":"                    storage.updateMark(index, 0);","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"ryanlohyr"},"content":"                case \"todo\": {","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"ryanlohyr"},"content":"                    String newWord \u003d userInput.replace(\"todo \", \"\");","lastModifiedDate":"2023-09-08"},{"lineNumber":123,"author":{"gitId":"ryanlohyr"},"content":"                    ToDo currTask \u003d new ToDo(newWord);","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"ryanlohyr"},"content":"                    tasks.add(currTask);","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"added: \" + newWord);","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"ryanlohyr"},"content":"                    storage.addToFile(\"T|0|\" + newWord);","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"ryanlohyr"},"content":"                case \"deadline\": {","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"ryanlohyr"},"content":"                    String newWord \u003d userInput.replace(\"deadline \", \"\");","lastModifiedDate":"2023-09-08"},{"lineNumber":132,"author":{"gitId":"ryanlohyr"},"content":"                    String[] deadlineArray \u003d newWord.split(\"/\");","lastModifiedDate":"2023-09-08"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"                    if (!Parser.validateTimedTasks(\"deadline\", deadlineArray)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"ryanlohyr"},"content":"                        break;","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"                    }","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"                    Deadline currTask \u003d new Deadline(deadlineArray[0], deadlineArray[1]);","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"                    tasks.add(currTask);","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"added: \" + deadlineArray[0]);","lastModifiedDate":"2023-09-08"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"                    storage.addToFile(\"D|0|\" + deadlineArray[0] + \"|\" + deadlineArray[1]);","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"ryanlohyr"},"content":"                case \"event\": {","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"                    String newWord \u003d userInput.replace(\"event \", \"\");","lastModifiedDate":"2023-09-08"},{"lineNumber":145,"author":{"gitId":"ryanlohyr"},"content":"                    String[] firstSplit \u003d newWord.split(\"/\");","lastModifiedDate":"2023-09-08"},{"lineNumber":146,"author":{"gitId":"ryanlohyr"},"content":"                    if (!Parser.validateTimedTasks(\"event\", firstSplit)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"ryanlohyr"},"content":"                        break;","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"ryanlohyr"},"content":"                    }","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"ryanlohyr"},"content":"                    Event currTask \u003d new Event(firstSplit[0], firstSplit[1], firstSplit[2]);","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"ryanlohyr"},"content":"                    tasks.add(currTask);","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":152,"author":{"gitId":"ryanlohyr"},"content":"                    storage.addToFile(\"E|0|\" + firstSplit[0] + \"|\" + firstSplit[1] + \"|\" + firstSplit[2]);","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"added: \" + firstSplit[0] + \", you have now \" + tasks.size() + \" tasks\");","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":158,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"ryanlohyr"},"content":"                default: {","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"ryanlohyr"},"content":"                    Task currTask \u003d new Task(userInput);","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"ryanlohyr"},"content":"                    tasks.add(currTask);","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"ryanlohyr"},"content":"                    storage.addToFile(\"T|0|\" + userInput);","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"added: \" + userInput);","lastModifiedDate":"2023-09-04"},{"lineNumber":164,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":166,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":169,"author":{"gitId":"ryanlohyr"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":170,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":171,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":172,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":173,"author":{"gitId":"ryanlohyr"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-10-04"},{"lineNumber":174,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"ryanlohyr"},"content":"        // Close the scanner when you\u0027re done with it","lastModifiedDate":"2023-09-04"},{"lineNumber":176,"author":{"gitId":"ryanlohyr"},"content":"        scanner.close();","lastModifiedDate":"2023-09-04"},{"lineNumber":177,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":178,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"ryanlohyr"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-10-03"},{"lineNumber":180,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":181,"author":{"gitId":"ryanlohyr"},"content":"        new Duke(dukeDataFile).run();","lastModifiedDate":"2023-10-03"},{"lineNumber":182,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ryanlohyr":181,"-":3}},{"path":"src/main/java/commands/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"public class Deadline extends ToDo {","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"    protected String by;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"        super(description);","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"        this.type \u003d \u0027D\u0027;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"        return by;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"    ","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"     public String toString() {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"         return String.format(\"%s (by: %s)\",this.description,this.by);","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"     }","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ryanlohyr":25}},{"path":"src/main/java/commands/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"    public static String outOfBoundsError(){","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"        return \"index out of bounds, try again later.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"    public static String invalidInputForType(String function){","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"        return String.format(\"Invalid input for %s only accepts integers \\nFor example: \u0027%s 1\u0027\",function,function);","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"ryanlohyr":13}},{"path":"src/main/java/commands/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"public class Event extends Deadline {","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"    protected String end;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"    public Event(String description, String by, String end) {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"        super(description,by);","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"        this.type \u003d \u0027E\u0027;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"    public String toString() {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"        return String.format(\"%s (from: %s to: %s)\",this.description,this.by,this.end);","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ryanlohyr":16}},{"path":"src/main/java/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"public class Parser {","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"    private static Ui ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"     * Validates user input for various commands based on the specified method name.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"     * \u003cp\u003eThis method performs input validation for different commands (e.g., \"mark,\" \"unmark,\" \"todo,\" \"find,\" \"delete\")","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"     * by checking the provided method name and the corresponding input parameters (words) against specific criteria.","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"     * It returns true if the input is valid for the specified method, and false otherwise. Additionally, it may display","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"     * error messages using the user interface (ui) for invalid inputs.","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"     * @param methodName    The name of the method associated with the user command.","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"     * @param words         An array of words representing the input parameters.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"     * @param numberOfItems The total number of items (e.g., tasks) currently in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"     * @return true if the input is valid; false otherwise.","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"    public static boolean validateInput(String methodName, String[] words, int numberOfItems) {","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"        switch (methodName) {","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"        case \"mark\": {","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"            if (words.length \u003d\u003d 1 || !words[1].matches(\"-?\\\\d+\")) {","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"                ui.showError(DukeException.invalidInputForType(words[0]));","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"mark \" + words[1]);","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"            int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"            // we need to check if it\u0027s out of bounds first","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"            if (index \u003e numberOfItems || index \u003c\u003d 0) {","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"                ui.showError(DukeException.outOfBoundsError());","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"        case \"unmark\": {","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"            if (words.length \u003d\u003d 1 || !words[1].matches(\"-?\\\\d+\")) {","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"                ui.showError(DukeException.invalidInputForType(words[0]));","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"unmark \" + words[1]);","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"            int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"            // we need to check if it\u0027s out of bounds first","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"            if (index \u003e numberOfItems || index \u003c\u003d 0) {","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"                ui.showError(DukeException.outOfBoundsError());","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"        case \"todo\": {","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"                ui.showError(\"task missing\");","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"        case \"find\": {","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"                ui.showError(\"keyword missing for find function\");","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"            } else if (words.length \u003e 2) {","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"                ui.showError(\"find function only works for a single keyword, not phrases\");","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"        case \"delete\": {","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"            if (words.length \u003d\u003d 1 || !words[1].matches(\"-?\\\\d+\")) {","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"                ui.showError(DukeException.invalidInputForType(words[0]));","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"delete \" + words[1]);","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"            int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"            // we need to check if it\u0027s out of bounds first","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"            if (index \u003e numberOfItems || index \u003c\u003d 0) {","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"                ui.showError(DukeException.outOfBoundsError());","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"        default: {","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"        return true;","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"     * Validates timed task input based on the specified method name and word array.","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"     * \u003cp\u003eThis method validates timed task input to ensure that it conforms to the expected","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"     * format for a given method. It checks the number of elements in the wordArray based on","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"     * the provided method name (\"event\" or \"deadline\"). If the input is valid, the method","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"     * returns true; otherwise, it displays an error message and returns false.","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"     * \u003cp\u003eValidations:","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"     * \u003cul\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"     *   \u003cli\u003eFor \"event\" method: Expects three elements in wordArray.\u003c/li\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"     *   \u003cli\u003eFor \"deadline\" method: Expects two elements in wordArray.\u003c/li\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"     *   \u003cli\u003eFor other method names: Returns false and displays an \"Unknown method\" error.\u003c/li\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"     * @param methodName The name of the method to validate (\"event\" or \"deadline\").","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"     * @param wordArray  An array of words representing the input for the timed task.","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"     * @return true if the input is valid; false otherwise.","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"    public static boolean validateTimedTasks(String methodName, String[] wordArray) {","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"        switch (methodName) {","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"ryanlohyr"},"content":"        case \"event\":","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"ryanlohyr"},"content":"            if (wordArray.length !\u003d 3) {","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"ryanlohyr"},"content":"                ui.showError(\"Invalid input for event function\");","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"ryanlohyr"},"content":"        case \"deadline\":","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"ryanlohyr"},"content":"            if (wordArray.length !\u003d 2) {","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"ryanlohyr"},"content":"                ui.showError(\"Invalid input for deadline function\");","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"ryanlohyr"},"content":"        default:","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"ryanlohyr"},"content":"            // Handle other cases or show an error if methodName is unknown","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"ryanlohyr"},"content":"            ui.showError(\"Unknown method: \" + methodName);","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"        return true;","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"ryanlohyr":136}},{"path":"src/main/java/commands/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import java.io.*;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"public class Storage {","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"    private final String dukeDataFile;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"    private int taskListSize;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"    public Storage(String dukeDataFile) {","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"        this.dukeDataFile \u003d dukeDataFile;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"    public void addTaskSize(int size) {","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"        this.taskListSize \u003d size;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"     * Adds a new task to the data file and increments the task list size.","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"     * \u003cp\u003eThis method appends the specified textToAdd to the end of the data file, creating","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"     * a new task entry. It uses a {@code FileWriter} to write the text efficiently, adds a","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"     * newline character before writing the new entry, and then closes the writer. After adding","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"     * the task, it increments the task list size.","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"     * @param textToAdd The text representing the new task to be added to the data file.","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"     * @throws IOException If there is an error while writing to the data file.","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"    public void addToFile(String textToAdd) throws IOException {","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"        FileWriter fw \u003d new FileWriter(this.dukeDataFile, true);","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"        // Create a BufferedWriter for efficient writing","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"        BufferedWriter bufferedWriter \u003d new BufferedWriter(fw);","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(this.dukeDataFile));","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"        //we only append newline if the file is not empty","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"        if (reader.readLine() !\u003d null) {","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"            bufferedWriter.newLine();","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"        bufferedWriter.write(textToAdd);","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"        bufferedWriter.close();","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"        fw.close();","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"        this.taskListSize +\u003d 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"     * Updates a specific line in the file denoted by `dukeDataFile` without creating a new file.","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"     * @param lineToEdit The line number to be edited (1-based index).","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"     * @param action     The new action value to set in the line (0 or 1).","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"    public void updateMark(int lineToEdit, int action) {","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e modifiedLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(this.dukeDataFile))) {","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"            String currentLine;","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"            int lineNumber \u003d 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"            while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"                lineNumber++;","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"                if (lineNumber \u003d\u003d lineToEdit) {","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"                    // Modify the line if it\u0027s the one to edit","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"                    char[] charArray \u003d currentLine.toCharArray();","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"                    charArray[2] \u003d (char) (action + \u00270\u0027);","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"                    modifiedLines.add(new String(charArray));","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"                } else {","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"                    // Keep the original line if it\u0027s not the one to edit","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"                    modifiedLines.add(currentLine);","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"            System.err.println(\"Error reading the file: \" + e.getMessage());","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"            return;","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.dukeDataFile))) {","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"            // Write the modified lines back to the original file","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"            for (String line : modifiedLines) {","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"                writer.write(line);","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"                writer.newLine();","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Line edited successfully.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"            System.err.println(\"Error writing to the file: \" + e.getMessage());","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"     * Removes a specific line from the file denoted by `dukeDataFile` without creating a new file.","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"     * @param lineToRemove The line number to be removed (1-based index).","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"    public void removeFromFile(int lineToRemove) {","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e modifiedLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(this.dukeDataFile))) {","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"            String currentLine;","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"            int lineNumber \u003d 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"            while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"                lineNumber++;","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"                if (lineNumber \u003d\u003d lineToRemove) {","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"                    // Skip the line to remove","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"                    continue;","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"                modifiedLines.add(currentLine);","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"            System.err.println(\"Error reading the file: \" + e.getMessage());","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"            return;","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"ryanlohyr"},"content":"        this.taskListSize -\u003d 1;","lastModifiedDate":"2023-10-05"},{"lineNumber":117,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"ryanlohyr"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.dukeDataFile))) {","lastModifiedDate":"2023-10-05"},{"lineNumber":119,"author":{"gitId":"ryanlohyr"},"content":"            int oldTaskListSize \u003d this.taskListSize + 1;","lastModifiedDate":"2023-10-05"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"            int lineNumber \u003d 0;","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"ryanlohyr"},"content":"            // Write the modified lines back to the original file","lastModifiedDate":"2023-10-05"},{"lineNumber":122,"author":{"gitId":"ryanlohyr"},"content":"            for (String line : modifiedLines) {","lastModifiedDate":"2023-10-05"},{"lineNumber":123,"author":{"gitId":"ryanlohyr"},"content":"                lineNumber++;","lastModifiedDate":"2023-10-05"},{"lineNumber":124,"author":{"gitId":"ryanlohyr"},"content":"                writer.write(line);","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"ryanlohyr"},"content":"                if (lineNumber !\u003d this.taskListSize ) {","lastModifiedDate":"2023-10-05"},{"lineNumber":126,"author":{"gitId":"ryanlohyr"},"content":"                    if(lineToRemove \u003d\u003d oldTaskListSize  \u0026\u0026 lineNumber + 1 \u003d\u003d lineToRemove){","lastModifiedDate":"2023-10-05"},{"lineNumber":127,"author":{"gitId":"ryanlohyr"},"content":"                        continue;","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"ryanlohyr"},"content":"                    }else{","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"ryanlohyr"},"content":"                        writer.newLine(); // Add a new line after writing","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"ryanlohyr"},"content":"                    }","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Line removed successfully.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":134,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"            System.err.println(\"Error writing to the file: \" + e.getMessage());","lastModifiedDate":"2023-10-05"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"     * Reads task data from a file and returns an ArrayList of tasks.","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"ryanlohyr"},"content":"     * This method reads task data from a specified file and parses it into an ArrayList","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"     * of Task objects. Each line in the file represents a task, and the format of each","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"ryanlohyr"},"content":"     * line should be as follows:","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"ryanlohyr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"ryanlohyr"},"content":"     * - \"T|0|description\" for a ToDo task","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"ryanlohyr"},"content":"     * - \"D|0|description|deadline\" for a Deadline task","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"ryanlohyr"},"content":"     * - \"E|0|description|eventDate|eventTime\" for an Event task","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"ryanlohyr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"ryanlohyr"},"content":"     * The first character in each line specifies the task type (T for ToDo, D for Deadline,","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"ryanlohyr"},"content":"     * E for Event), followed by a status indicator (0 for incomplete, 1 for completed),","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"ryanlohyr"},"content":"     * and then task-specific details separated by \u0027|\u0027 characters.","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"ryanlohyr"},"content":"     * @return An ArrayList of Task objects containing the tasks read from the file.","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"ryanlohyr"},"content":"     * @throws IOException If an error occurs while reading the file.","lastModifiedDate":"2023-10-03"},{"lineNumber":157,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":158,"author":{"gitId":"ryanlohyr"},"content":"    public ArrayList\u003cTask\u003e getTaskData() throws IOException {","lastModifiedDate":"2023-10-03"},{"lineNumber":159,"author":{"gitId":"ryanlohyr"},"content":"        File f \u003d new File(dukeDataFile);","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"ryanlohyr"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"ryanlohyr"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cTask\u003e currentArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":165,"author":{"gitId":"ryanlohyr"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-10-03"},{"lineNumber":166,"author":{"gitId":"ryanlohyr"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":167,"author":{"gitId":"ryanlohyr"},"content":"            String currentLine \u003d s.nextLine();","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"ryanlohyr"},"content":"            String[] wordArray \u003d currentLine.split(\"\\\\|\");","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"ryanlohyr"},"content":"            switch (wordArray[0]) {","lastModifiedDate":"2023-10-03"},{"lineNumber":170,"author":{"gitId":"ryanlohyr"},"content":"            case \"T\": {","lastModifiedDate":"2023-10-03"},{"lineNumber":171,"author":{"gitId":"ryanlohyr"},"content":"                ToDo currTask \u003d new ToDo(wordArray[2]);","lastModifiedDate":"2023-10-03"},{"lineNumber":172,"author":{"gitId":"ryanlohyr"},"content":"                if (Integer.parseInt(wordArray[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-10-03"},{"lineNumber":173,"author":{"gitId":"ryanlohyr"},"content":"                    currTask.markStatus();","lastModifiedDate":"2023-10-03"},{"lineNumber":174,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"ryanlohyr"},"content":"                currentArray.add(currTask);","lastModifiedDate":"2023-10-03"},{"lineNumber":176,"author":{"gitId":"ryanlohyr"},"content":"                break;","lastModifiedDate":"2023-10-03"},{"lineNumber":177,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":178,"author":{"gitId":"ryanlohyr"},"content":"            case \"D\": {","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"ryanlohyr"},"content":"                Deadline currTask \u003d new Deadline(wordArray[2], wordArray[3]);","lastModifiedDate":"2023-10-03"},{"lineNumber":180,"author":{"gitId":"ryanlohyr"},"content":"                if (Integer.parseInt(wordArray[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-10-03"},{"lineNumber":181,"author":{"gitId":"ryanlohyr"},"content":"                    currTask.markStatus();","lastModifiedDate":"2023-10-03"},{"lineNumber":182,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"ryanlohyr"},"content":"                currentArray.add(currTask);","lastModifiedDate":"2023-10-03"},{"lineNumber":184,"author":{"gitId":"ryanlohyr"},"content":"                break;","lastModifiedDate":"2023-10-03"},{"lineNumber":185,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":186,"author":{"gitId":"ryanlohyr"},"content":"            case \"E\": {","lastModifiedDate":"2023-10-03"},{"lineNumber":187,"author":{"gitId":"ryanlohyr"},"content":"                Event currTask \u003d new Event(wordArray[2], wordArray[3], wordArray[4]);","lastModifiedDate":"2023-10-03"},{"lineNumber":188,"author":{"gitId":"ryanlohyr"},"content":"                if (Integer.parseInt(wordArray[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"ryanlohyr"},"content":"                    currTask.markStatus();","lastModifiedDate":"2023-10-03"},{"lineNumber":190,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"ryanlohyr"},"content":"                currentArray.add(currTask);","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"ryanlohyr"},"content":"                break;","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":194,"author":{"gitId":"ryanlohyr"},"content":"            default: {","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"ryanlohyr"},"content":"                System.out.println(\"Should not be here\");","lastModifiedDate":"2023-10-03"},{"lineNumber":196,"author":{"gitId":"ryanlohyr"},"content":"                break;","lastModifiedDate":"2023-10-03"},{"lineNumber":197,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":199,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":200,"author":{"gitId":"ryanlohyr"},"content":"        return currentArray;","lastModifiedDate":"2023-10-03"},{"lineNumber":201,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":202,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":203,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"ryanlohyr":203}},{"path":"src/main/java/commands/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"public class Task {","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"    protected String description;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"    protected char type;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"    private static int numberOfTasks \u003d 0;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"        this.type \u003d \u0027T\u0027;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"        numberOfTasks +\u003d 1;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"     * Gets the status icon for the task.","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"     * \u003cp\u003eThis method returns a status icon character that represents whether the task is done","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"     * or not. If the task is done, it returns \"X\"; otherwise, it returns a space character (\" \").","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"     * @return A string containing the status icon for the task (\"X\" for done, \" \" for not done).","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"    public char getType() {","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"        return this.type;","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"        return this.description;","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"    public void markStatus() {","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"    public void unmarkStatus() {","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"    public String toString() {","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"        return String.format(this.description);","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"ryanlohyr":52}},{"path":"src/main/java/commands/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"public class TaskList {","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasksList){","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"        this.tasks \u003d tasksList;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves the task based on its index","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"    public Task get(int index){","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"     * Deletes the task based on its index","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"    public void delete(int index){","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"     * Adds a task to the task manager.","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"     * \u003cp\u003eThis method adds the provided {@code Task} object to the list of tasks managed by","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"     * the task manager.","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"     * @param task The {@code Task} object to be added to the task manager.","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"    public void add(Task task){","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"        tasks.add(task);","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves a list of all tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"     * \u003cp\u003eThis method returns an {@code ArrayList} containing all the tasks currently stored","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"     * in the task manager. If there are no tasks, an empty {@code ArrayList} is returned.","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"     * @return An {@code ArrayList} of {@code Task} objects representing all the tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"    public ArrayList\u003cTask\u003e getAllTasks(){","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"        return tasks;","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"     * Returns the number of tasks","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"    public int size(){","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"        return tasks.size();","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"     * Prints a list of tasks with their status icons and descriptions.","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"    public void printList() {","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"        for(Task task: tasks){","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"                    count + \".\" + \"[\" + task.getType() + \"]\" + \"[\" + task.getStatusIcon() + \"]\" + task);","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"            count +\u003d 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"ryanlohyr":74}},{"path":"src/main/java/commands/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"        super(description);","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"        this.type \u003d \u0027T\u0027;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ryanlohyr":11}},{"path":"src/main/java/commands/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"public class Ui {","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"        String logoRyan \u003d \" ____  _          \\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"                + \"|  _ \\\\| | ___   __\\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"                + \"| |_) | |/ _ \\\\ / _|\\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"                + \"|  __/| | (_) | (__\\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"                + \"|_|   |_|\\\\___/ \\\\___|\\n\";","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"        String line \u003d \"Hello! I\u0027m Ryan Loh \\nWhat can I do for you?\\nType anything to be added to your magic list :D\\n\";","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(line + logoRyan);","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"        String lineBreak \u003d \"------------------------------ \\n\";","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(lineBreak + \"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"ryanlohyr":33}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"T|0|read book","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"T|0|join sports club","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"T|0|urmother","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"T|0|ur father","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"ryanlohyr":4}}]
