[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"    protected String by;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"        return this.by;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"bljhty":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"//package main.java;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"     * This method prints the greetings message when the user starts the program.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"    public static void greet() {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"        String logo \u003d \"  ____                  \\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"                + \" |  _ \\\\  ___  _ __ ___  \\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"                + \" | | | |/ _ \\\\| \u0027_ ` _ \\\\ \\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"                + \" | |_| | (_) | | | | | |\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"                + \" |____/ \\\\___/|_| |_| |_|\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"        String greetings \u003d \"____________________________________________________________\" + \"\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"                \"Hello! I\u0027m Dom\" + \"\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"                \"What can I do for you?\" + \"\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"        System.out.println(greetings);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"     * This method prints the goodbye message when the user exits the program.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    public static void goodbye() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"        String goodbye \u003d \"____________________________________________________________\" + \"\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"                \"Bye. Hope to see you again soon!\" + \"\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        System.out.println(goodbye);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"     * This method prints the input message.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"    public static void echo(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"        System.out.println(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"     * This method prints the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"    private static void listTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"            System.out.println(\" No tasks.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"            String taskType \u003d task instanceof Todo ? \"[T]\" : (task instanceof Deadline ? \"[D]\" : \"[E]\");","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"            String statusIcon \u003d task.getStatusIcon();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"            ","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"                description +\u003d \" (by: \" + ((Deadline) task).getBy() + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"                description +\u003d \" (from: \" + ((Event) task).getFrom() + \" to: \" + ((Event) task).getTo() + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"            ","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"            System.out.println(\" \" + (i + 1) + \".\" + taskType + statusIcon + \" \" + description);","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"        greet();","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"        try (Scanner givenTask \u003d new Scanner(System.in)) {  ","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"            while (true) {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"                String command \u003d givenTask.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"                if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"                    goodbye();","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"                } else if (command.equalsIgnoreCase(\"list\")) { // if user inputs \"list\", UI prints the list of tasks that is stored in the ArrayList    ","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"                    listTasks(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"                ","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"                // split the command into two parts, \"mark\" and the task number","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"                // e.g. \"mark 1\" will be split into \"mark\" and \"1\"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"                // the task number is then parsed into an integer","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"                // the task number is then used to get the task from the ArrayList","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"                // the task is then marked as done","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"                // the UI prints the task that is marked as done","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"                // if the task number is invalid, the UI prints an error message","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"                } else if (command.startsWith(\"mark\")) { // if user inputs \"mark\", UI marks the task as done","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"                    String[] parts \u003d command.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"                    if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"                        int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"                        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"                            Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"                            task.markAsDone(true);","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"                            System.out.println(\" Nice! I\u0027ve marked this task as done:\\n\" + \"   \" + task.getStatusIcon()","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"                                    + \" \" + task.getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"                        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"                            System.out.println(\" Invalid task number.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"                // split the command into two parts, \"unmark\" and the task number","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"                // e.g. \"unmark 1\" will be split into \"unmark\" and \"1\"","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"                // the task number is then parsed into an integer","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"                // the task number is then used to get the task from the ArrayList","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"                // the task is then marked as not done yet","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"                // the UI prints the task that is marked as not done yet","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"                // if the task number is invalid, the UI prints an error message","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"                } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"                    String[] parts \u003d command.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"                    if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"                        int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"                        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"                            Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"                            task.markAsUndone(true);","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"                            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + \" \"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"                                    + task.getStatusIcon() + \" \" + task.getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"                        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"                            System.out.println(\" Invalid task number.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"                } else if (command.startsWith(\"todo \")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"bljhty"},"content":"                    // Handle adding a ToDo task","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"bljhty"},"content":"                    String description \u003d command.substring(5); // Remove \"todo \"","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"                    tasks.add(new Todo(description));","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"                    System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"                    System.out.println(\"   \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"                    System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"                } else if (command.startsWith(\"deadline \")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"                    String[] parts \u003d command.substring(9).split(\" /by \");","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"                    if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"                        // Handle adding a Deadline task","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"                        String description \u003d parts[0];","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"                        String by \u003d parts[1];","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"                        tasks.add(new Deadline(description, by));","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"                        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"                        System.out.println(\"   \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"                        System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"                    } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"                        System.out.println(\" Invalid command.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"                    }","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"                } else if (command.startsWith(\"event \")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"                    // Handle adding an Event task","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"                    String[] parts \u003d command.substring(6).split(\" /from \");","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"                    if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"                        String description \u003d parts[0];","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"                        String[] timeParts \u003d parts[1].split(\" /to \");","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"                        String from \u003d timeParts[0];","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"                        String to \u003d timeParts[1];","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"                        tasks.add(new Event(description, from, to));","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"                        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-06"},{"lineNumber":151,"author":{"gitId":"bljhty"},"content":"                        System.out.println(\"   \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-09-06"},{"lineNumber":152,"author":{"gitId":"bljhty"},"content":"                        System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"bljhty"},"content":"                    } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"bljhty"},"content":"                        System.out.println(\" Invalid event command format.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":155,"author":{"gitId":"bljhty"},"content":"                    }","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"bljhty"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"bljhty"},"content":"                    tasks.add(new Task(command));","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"bljhty"},"content":"                    echo(\" added: \" + command);","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"bljhty"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"bljhty":158,"-":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"    protected String from;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"    protected String to;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"    public String getFrom() {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"        return this.from;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"    public String getTo() {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"        return this.to;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"bljhty":23}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"public class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"    protected String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); //return X symbols when done, else return empty space","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"    public void markAsDone(boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    public void markAsUndone(boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"        return this.description;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"bljhty":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"    public Todo (String description) {","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"bljhty":10}}]
