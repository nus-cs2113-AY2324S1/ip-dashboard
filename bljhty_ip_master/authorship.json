[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"# DOM User Guide","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"Dom is a desktop program to store a list of tasks for the user via a Command Line Interface(CLI)","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"## Quick Start","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"1. Ensure that you have JAVA \u002711\u0027 or above installed in your computer.","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"2. Download the latest \u0027ip.jar\u0027 from [here](https://github.com/bljhty/ip/releases)","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"3. Copy downloaded \u0027ip.jar\u0027 file to the desired home folder of your choice","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"4. open a command terminal and \u0027cd\u0027 to the folder mentioned in ster 3","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"5. type in the following to run the application","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"java -jar ip.jar","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"6. if successful, the following greeting should appear:","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"Hello from","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"  ____                  ","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":" |  _ \\  ___  _ __ ___  ","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":" | | | |/ _ \\| \u0027_ ` _ \\ ","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":" | |_| | (_) | | | | | |","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":" |____/ \\___/|_| |_| |_|","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"____________________________________________________________","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"Hello! I\u0027m Dom","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"What can I do for you?","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"7. Type in desired command to start using the program.","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"### Adding a todo task: `todo`","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"Adds a task of type todo to the list.","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"\u003cbr\u003eTodo contains a description.","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"\u003cbr\u003eExample: `todo read book`","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"### Adding an event: `event`","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"Adds a task of type event to the list.","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"\u003cbr\u003eEvent contains a description, from and to.","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"Format: `event DESCRIPTION /from FROM /to TO`","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"\u003cbr\u003eExample: `event CS2113 tutorial /from 4 April 2023 4pm /to 6pm`","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"### Adding a deadline: `deadline`","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"Adds a task deadline to the list.","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"\u003cbr\u003eDeadline contains description and by.","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"Format: `deadline DESCRIPTION /by BY`","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"\u003cbr\u003eExample: `deadline CS2113 iP /by 3 March 11.59pm`","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"### Viewing full list of tasks: `list`","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"Shows a list of all tasks recorded in the list.","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"Format: `list`","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"### Mark task as done: `mark`","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"Marks task as done based on the task number indicated.","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"Format: `mark TASK_NUMBER`","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"- TASK_NUMBER must be an integer that is within the list size","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"Example: `mark 2`","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"### Mark task as not done: `unmark`","lastModifiedDate":"2023-09-30"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"Marks task as not done based on the task number indicated.","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"Format: `unmark TASK_NUMBER`","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"- TASK_NUMBER must be an integer that is within the list size","lastModifiedDate":"2023-09-30"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"Example: `unmark 3`","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"### Delete task: `delete`","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"Deletes the task based on the task number indicated.","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"Format: `delete TASK_NUMBER`","lastModifiedDate":"2023-09-30"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"- TASK_NUMBER must be an integer that is within the list size","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"Example: `delete 1`","lastModifiedDate":"2023-09-30"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"### Find task(s): `find`","lastModifiedDate":"2023-09-30"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"Searches the tasks in the list, returning the tasks containing the keyword in their description.","lastModifiedDate":"2023-09-30"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-09-30"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"\u003cbr\u003eExample: `find CS2113`","lastModifiedDate":"2023-09-30"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"### Exiting DOM: `bye`","lastModifiedDate":"2023-09-30"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"Exits and closes the program.","lastModifiedDate":"2023-09-30"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"Format: `bye`","lastModifiedDate":"2023-09-30"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"## FAQ","lastModifiedDate":"2023-09-30"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"**Q**: Can I edit the file manually from the save.txt file?","lastModifiedDate":"2023-09-30"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"\u003cbr\u003e**A**: It is not advised to do so, as formatting of the save.txt file incorrectly will cause the program to crash.","lastModifiedDate":"2023-09-30"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"## Command Summary","lastModifiedDate":"2023-09-30"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"| **Command** | **Format, Examples**                                                                                 |","lastModifiedDate":"2023-09-30"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"|-------------|------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-09-30"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"| todo        | `todo DESCRIPTION`\u003cbr\u003ee.g. `todo read book`                                                          |","lastModifiedDate":"2023-09-30"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"| event       | `event DESCRIPTION /from FROM /to TO`\u003cbr\u003ee.g. `event CS2113 tutorial /from 4 April 2023 4pm /to 6pm` |","lastModifiedDate":"2023-09-30"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"| deadline    | `deadline DESCRIPTION /by BY`\u003cbr\u003ee.g. `deadline CS2113 iP /by 3 March 11.59pm`                       |","lastModifiedDate":"2023-09-30"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"| list        | `list`                                                                                               |","lastModifiedDate":"2023-09-30"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"| mark        | `mark TASK_NUMBER`\u003cbr\u003ee.g. `mark 2`                                                                  |","lastModifiedDate":"2023-09-30"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"| unmark      | `unmark TASK_NUMBER`\u003cbr\u003ee.g. `unmark 3`                                                              |","lastModifiedDate":"2023-09-30"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"| delete      | `delete TASK_NUMBER`\u003cbr\u003ee.g. `delete 1`                                                              |","lastModifiedDate":"2023-09-30"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"| find        | `find KEYWORD`\u003cbr\u003ee.g. `find CS2113`                                                                 |","lastModifiedDate":"2023-09-30"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"| bye         | `bye`                                                                                                |","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"bljhty":94,"-":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import tasks.Todo;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import tasks.DukeException;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"import tasks.Parser;","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":" * Represents the main logic for the Duke application.","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":" * Manages the initialization, execution, and storage of tasks.","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"    private static final String lineDivder \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"   /**","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    * Initializes a new Duke instance with the given file path for data storage.","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"    * ","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"    * @param filePath The path of the file to store task data.","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"    */","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"            ui.showErrorMsg(e.getMessage());","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"    public void run(){","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"        Ui.greet();","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"            try {","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"                String action \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"                String [] parts \u003d action.split(\"-\", 2);","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"                switch(parts[0]) {","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"                    case \"exit\" :","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"                        isExit \u003d true;","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"                        ui.showLineDivider();","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"                        break;","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"                    ","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"                    case \"list\" :","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"                        tasks.listTasks();","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"                        ui.showLineDivider();","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"                        break;","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"                    ","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"                    case \"markAsDone\" :","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"                        try{","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"                            int doneIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"                            tasks.markTaskAsDone(doneIndex);","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"                            ui.showUnmarkedTask(tasks.getTaskIndex(doneIndex));","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"                            storage.save(tasks.getTasks());","lastModifiedDate":"2023-09-30"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"                            ui.showErrorMsg(\"Error: ☹ OOPS!!! Task number must be an integer.\\n\");","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"                            ui.showErrorMsg(\"Please enter command in the format: mark \u003ctask number\u003e\");","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"                            System.out.println(\"An error occurred while saving tasks to the file.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"                            ui.showErrorMsg(\"Error: ☹ OOPS!!! Invalid task number.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"                        ui.showLineDivider();","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"                        break;","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"                    ","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"                    case \"markAsNotDone\" :","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"                        try{","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"                            int undoneIndex \u003d Integer.parseInt(parts[1]) -1;","lastModifiedDate":"2023-09-30"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"                            tasks.getTaskIndex(undoneIndex).markAsDone(false);","lastModifiedDate":"2023-09-30"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"                            ui.showUnmarkedTask(tasks.getTaskIndex(undoneIndex));","lastModifiedDate":"2023-09-30"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"                            storage.save(tasks.getTasks());","lastModifiedDate":"2023-09-30"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"                            ui.showErrorMsg(\"Error: ☹ OOPS!!! Task number must be an integer.\\n\");","lastModifiedDate":"2023-09-30"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"                            ui.showErrorMsg(\"Please enter command in the format: unmark \u003ctask number\u003e\");","lastModifiedDate":"2023-09-30"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"                            ui.showErrorMsg(\"Error: ☹ OOPS!!! Invalid task number.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"                            System.out.println(\"An error occurred while saving tasks to the file.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"                        ui.showLineDivider();","lastModifiedDate":"2023-09-30"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"                        break;","lastModifiedDate":"2023-09-30"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"                    case \"delete\":","lastModifiedDate":"2023-09-30"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"                        try {","lastModifiedDate":"2023-09-30"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"                            int deleteIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-09-30"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"                            if (deleteIndex \u003c 0 || deleteIndex \u003e\u003d tasks.getTaskCount()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"                                throw new DukeException(\"☹ OOPS!!! Invalid task number.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"                            }","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"                            Task taskToDelete \u003d tasks.getTaskIndex(deleteIndex);","lastModifiedDate":"2023-09-30"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"                            tasks.deleteTask(deleteIndex);","lastModifiedDate":"2023-09-30"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"                            storage.save(tasks.getTasks());","lastModifiedDate":"2023-09-30"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"                            ui.showDeletedTask(taskToDelete, tasks.getTaskCount());","lastModifiedDate":"2023-09-30"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"                            System.out.println(\"An error occurred while saving tasks to the file.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"                            ui.showErrorMsg(\"Error: ☹ OOPS!!! Task number must be an integer.\\n\");","lastModifiedDate":"2023-09-30"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"                            ui.showErrorMsg(\"Please enter command in the format: delete \u003ctask number\u003e\");","lastModifiedDate":"2023-09-30"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"                            ui.showErrorMsg(\"Error: ☹ OOPS!!! Invalid task number.\" + lineDivder);","lastModifiedDate":"2023-09-30"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"                        ui.showLineDivider();","lastModifiedDate":"2023-09-30"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"                        break;","lastModifiedDate":"2023-09-30"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"                    case \"addTodo\":","lastModifiedDate":"2023-09-30"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"                        if (parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\" + lineDivder);","lastModifiedDate":"2023-09-30"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"                        Task newTodo \u003d new Todo(parts[1]);","lastModifiedDate":"2023-09-30"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"                        tasks.addTask(newTodo);","lastModifiedDate":"2023-09-30"},{"lineNumber":122,"author":{"gitId":"bljhty"},"content":"                        ui.showAddedTask(newTodo, tasks.getTaskCount());","lastModifiedDate":"2023-09-30"},{"lineNumber":123,"author":{"gitId":"bljhty"},"content":"                        try{","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"                            storage.save(tasks.getTasks());","lastModifiedDate":"2023-09-30"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"                            System.out.println(\"An error occurred while saving tasks to the file.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"                        ui.showLineDivider();","lastModifiedDate":"2023-09-30"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"                        break;","lastModifiedDate":"2023-09-30"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"                    case \"addDeadline\":","lastModifiedDate":"2023-09-30"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"                        String[] deadlineParts \u003d parts[1].split(\"/by\", 2);","lastModifiedDate":"2023-09-30"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"                        if (deadlineParts.length \u003c 2 || deadlineParts[1].trim().isEmpty() || deadlineParts[0].trim().isEmpty()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"                            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty. \\n\" + lineDivder);","lastModifiedDate":"2023-09-30"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-09-19"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"                        Task newDeadline \u003d new Deadline(deadlineParts[0].trim(), deadlineParts[1].trim());","lastModifiedDate":"2023-09-30"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"                        tasks.addTask(newDeadline);","lastModifiedDate":"2023-09-30"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"                        ui.showAddedTask(newDeadline, tasks.getTaskCount());","lastModifiedDate":"2023-09-30"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"                        try{","lastModifiedDate":"2023-09-19"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"                            storage.save(tasks.getTasks());","lastModifiedDate":"2023-09-30"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"                            System.out.println(\"An error occurred while saving tasks to the file.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"                        ui.showLineDivider();","lastModifiedDate":"2023-09-30"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"                        break;","lastModifiedDate":"2023-09-30"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"                        case \"addEvent\":","lastModifiedDate":"2023-09-30"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"                        String[] eventParts \u003d parts[1].split(\"/from\", 2);","lastModifiedDate":"2023-09-30"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"                        if (eventParts.length \u003c 2 || eventParts[1].trim().isEmpty() || eventParts[0].trim().isEmpty()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"                            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":151,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"bljhty"},"content":"                        ","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"bljhty"},"content":"                        String[] fromToParts \u003d eventParts[1].split(\"/to\", 2);","lastModifiedDate":"2023-09-30"},{"lineNumber":154,"author":{"gitId":"bljhty"},"content":"                        if (fromToParts.length \u003c 2 || fromToParts[0].trim().isEmpty() || fromToParts[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":155,"author":{"gitId":"bljhty"},"content":"                            throw new DukeException(\"☹ OOPS!!! The start or end time for an event cannot be empty.\\n\" + lineDivder);","lastModifiedDate":"2023-09-30"},{"lineNumber":156,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-09-30"},{"lineNumber":157,"author":{"gitId":"bljhty"},"content":"                        ","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"bljhty"},"content":"                        Task newEvent \u003d new Event(eventParts[0].trim(), fromToParts[0].trim(), fromToParts[1].trim());","lastModifiedDate":"2023-09-30"},{"lineNumber":159,"author":{"gitId":"bljhty"},"content":"                        tasks.addTask(newEvent);","lastModifiedDate":"2023-09-30"},{"lineNumber":160,"author":{"gitId":"bljhty"},"content":"                        ui.showAddedTask(newEvent, tasks.getTaskCount());","lastModifiedDate":"2023-09-30"},{"lineNumber":161,"author":{"gitId":"bljhty"},"content":"                        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":162,"author":{"gitId":"bljhty"},"content":"                            storage.save(tasks.getTasks());","lastModifiedDate":"2023-09-30"},{"lineNumber":163,"author":{"gitId":"bljhty"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":164,"author":{"gitId":"bljhty"},"content":"                            System.out.println(\"An error occurred while saving tasks to the file.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":165,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-09-30"},{"lineNumber":166,"author":{"gitId":"bljhty"},"content":"                        ui.showLineDivider();","lastModifiedDate":"2023-09-30"},{"lineNumber":167,"author":{"gitId":"bljhty"},"content":"                        break;","lastModifiedDate":"2023-09-19"},{"lineNumber":168,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":169,"author":{"gitId":"bljhty"},"content":"                    case \"find\":","lastModifiedDate":"2023-09-30"},{"lineNumber":170,"author":{"gitId":"bljhty"},"content":"                        String keyword \u003d parts[1].trim();","lastModifiedDate":"2023-09-30"},{"lineNumber":171,"author":{"gitId":"bljhty"},"content":"                        if (keyword.isEmpty()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":172,"author":{"gitId":"bljhty"},"content":"                            throw new DukeException(\"☹ OOPS!!! The keyword for find cannot be empty.\\n\" + lineDivder);","lastModifiedDate":"2023-09-30"},{"lineNumber":173,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-09-30"},{"lineNumber":174,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":175,"author":{"gitId":"bljhty"},"content":"                        ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2023-09-30"},{"lineNumber":176,"author":{"gitId":"bljhty"},"content":"                        if (foundTasks.isEmpty()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":177,"author":{"gitId":"bljhty"},"content":"                            throw new DukeException(\"☹ OOPS!!! No matching tasks found with the given keyword.\\n\" + lineDivder);","lastModifiedDate":"2023-09-30"},{"lineNumber":178,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-09-30"},{"lineNumber":179,"author":{"gitId":"bljhty"},"content":"                        ui.showFoundTasks(tasks.findTasks(keyword));","lastModifiedDate":"2023-09-30"},{"lineNumber":180,"author":{"gitId":"bljhty"},"content":"                        ui.showLineDivider();","lastModifiedDate":"2023-09-30"},{"lineNumber":181,"author":{"gitId":"bljhty"},"content":"                        break;","lastModifiedDate":"2023-09-30"},{"lineNumber":182,"author":{"gitId":"bljhty"},"content":"                    default:","lastModifiedDate":"2023-09-19"},{"lineNumber":183,"author":{"gitId":"bljhty"},"content":"                        throw new DukeException(\"Unknown action\");","lastModifiedDate":"2023-09-30"},{"lineNumber":184,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":185,"author":{"gitId":"bljhty"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":186,"author":{"gitId":"bljhty"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-09-30"},{"lineNumber":187,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":189,"author":{"gitId":"bljhty"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-09-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":191,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":192,"author":{"gitId":"bljhty"},"content":"     * The main entry point of the Duke application.","lastModifiedDate":"2023-09-30"},{"lineNumber":193,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-09-30"},{"lineNumber":194,"author":{"gitId":"bljhty"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2023-09-30"},{"lineNumber":195,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-30"},{"lineNumber":197,"author":{"gitId":"bljhty"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-09-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"bljhty":194,"-":5}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package storage;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import tasks.Todo;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import tasks.DukeException;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.io.File;","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":" * Represents the storage of tasks.","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"public class Storage {","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    private String filePath;","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"     * Initializes a new Storage instance with the given file path.","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"     * @param filePath The path of the file to store task data.","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"     * @throws DukeException If the file is not found or the data format is incorrect.","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"                String data \u003d scanner.nextLine();","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"                String[] parts \u003d data.split(\" \\\\| \");","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"                ","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"                switch (parts[0]) {","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"                    case \"T\":","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"                        Todo todo \u003d new Todo(parts[2]);","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"                        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"                            todo.markAsDone(true);","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"                        tasks.add(todo);","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"                        break;","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"                    case \"D\":","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"                        Deadline deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"                        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"                            deadline.markAsDone(true);","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2023-09-30"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"                        break;","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"                    case \"E\":","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"                        if (parts.length \u003c 5) {","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"                            throw new DukeException(\"Stored Event task format is incorrect\");","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"                        Event event \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2023-09-30"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"                        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"                            event.markAsDone(true);","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"                        }","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"                        tasks.add(event);","lastModifiedDate":"2023-09-30"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"                        break;","lastModifiedDate":"2023-09-30"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"                    default:","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"                        System.out.println(\"Invalid task type\");","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"            scanner.close();","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"            System.out.println(\"Error loading file\");","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"        return tasks;","lastModifiedDate":"2023-09-30"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"     * Saves the tasks to the file.","lastModifiedDate":"2023-09-30"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-09-30"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"     * @throws IOException If there is an error writing to the file.","lastModifiedDate":"2023-09-30"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-09-30"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-30"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-30"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"            fw.write(task.toData() + \"\\n\");","lastModifiedDate":"2023-09-30"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"        fw.close();","lastModifiedDate":"2023-09-30"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"bljhty":97}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package tasks;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":" * Represents a \u0027Deadline\u0027 task in the Duke application.","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":" * ","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":" * @see Task","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"    protected String by;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"    ","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"     * Initializes a new Deadline with the given description and deadline.","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"     * @param by The deadline of the deadline.","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"            throw new IllegalArgumentException(\"description cannot be empty\");","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"     * Returns the deadline of the deadline.","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"     * @return The deadline of the deadline.","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        return this.by;","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"     * Converts the Deadline task object to a data representation for saving to a file.","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"     * @return The data representation of the Deadline task.","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"    public static Task dataToTask(String taskData) {","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"        int firstSplitIndex \u003d taskData.indexOf(\"|\");","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"        int secondSplitIndex \u003d taskData.indexOf(\"|\", firstSplitIndex + 1);","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"        boolean isDone \u003d taskData.substring(0, firstSplitIndex - 1).equals(\"1\");","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"        String desc \u003d taskData.substring(firstSplitIndex + 2, secondSplitIndex - 1);","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        String by \u003d taskData.substring(secondSplitIndex + 2);","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"        Deadline newDeadline \u003d  new Deadline(desc, by);","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"        newDeadline.isDone \u003d isDone;","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"        return newDeadline;","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"    ","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"     * Converts the Deadline task object to a data representation for saving to a file.","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"     * @return The data representation of the Deadline task.","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"    public String toData() {","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"        String done \u003d String.valueOf(this.isDone ? 1 : 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"        return \"D | \" + done + \" | \" + this.description + \" | \" + this.by;","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"     * @return The string representation of the Deadline task.","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"bljhty":70}},{"path":"src/main/java/tasks/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package tasks;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":" * Represents an exception that is thrown when an error occurs in the Duke application.","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"    public DukeException() {","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"        super();","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"        super(message);","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"    public DukeException(String message, Throwable cause) {","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"        super(message, cause);","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    public DukeException(Throwable cause) {","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"        super(cause);","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"bljhty":22}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package tasks;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":" * Represents an \u0027Event\u0027 task in the Duke application.","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"    protected String from;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"    protected String to;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"     * Initializes a new Event with the given description, start time, and end time.","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"     * @return The start time of the event.","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"    public String getFrom() {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"        return this.from;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"     * @return The end time of the event.","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"    public String getTo() {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"        return this.to;","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"     * Converts the Event task object to a data representation for saving to a file.","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"     * @return The data representation of the Event task.","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"    public String toData() {","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"        String done \u003d String.valueOf(this.isDone ? 1 : 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        return \"E | \" + done + \" | \" + this.description + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"     * Returns the string representation of the Event task.","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"     * @return The string representation of the Event task.","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"     * Returns a new Event task based on the given task data.","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"     * @param taskData The task data to be converted.","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"     * @return The new Event task.","lastModifiedDate":"2023-09-30"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"    public static Task dataToTask(String taskData) {","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"        int firstSplitIndex \u003d taskData.indexOf(\"|\");","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"        int secondSplitIndex \u003d taskData.indexOf(\"|\", firstSplitIndex + 1);","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"        int thirdSplitIndex \u003d taskData.indexOf(\"|\", secondSplitIndex + 1);","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"        boolean isDone \u003d taskData.substring(0, firstSplitIndex - 1).equals(\"1\");","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"        String desc \u003d taskData.substring(firstSplitIndex + 2, secondSplitIndex - 1);","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"        String from \u003d taskData.substring(secondSplitIndex + 2, thirdSplitIndex - 1);","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"        String to \u003d taskData.substring(thirdSplitIndex + 2);","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"        Event newEvent \u003d  new Event(desc, from, to);","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"        newEvent.isDone \u003d isDone;","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"        return newEvent;","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"bljhty":80}},{"path":"src/main/java/tasks/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package tasks;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":" * Represents a parser that parses user commands.","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"public class Parser {","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"    * Parses the user command into actionable instructions.","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"    * ","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"    * @param fullCommand The entire command entered by the user.","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"    * @return A string representation of the action to be taken.","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"    * @throws DukeException If the command is invalid or incomplete.","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"    */","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"    public static String parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"        String trimmedCommand \u003d fullCommand.trim(); // Remove leading and trailing whitespaces","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"        String commandLowerCase \u003d trimmedCommand.toLowerCase(); // Convert command to lowercase for case-insensitive matching","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"        if (commandLowerCase.equals(\"bye\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"            return \"exit\";","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"        } else if (commandLowerCase.equals(\"list\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"            return \"list\";","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"        } else if (commandLowerCase.startsWith(\"mark \")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"            return \"markAsDone-\" + trimmedCommand.substring(5);","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"        } else if (commandLowerCase.startsWith(\"unmark \")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"            return \"markAsNotDone-\" + trimmedCommand.substring(7);","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"        } else if (commandLowerCase.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"            if (commandLowerCase.length() \u003c\u003d 6 || commandLowerCase.substring(6).trim().isEmpty()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"                throw new DukeException(\"☹ OOPS!!! Please provide a task number to delete.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"            return \"delete-\" + trimmedCommand.substring(7);","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        } else if (commandLowerCase.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"            if (commandLowerCase.length() \u003c\u003d 4 || commandLowerCase.substring(4).trim().isEmpty()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"            return \"addTodo-\" + trimmedCommand.substring(5);","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"        } else if (commandLowerCase.startsWith(\"deadline \")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"            // Additional parsing for deadline command","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"            return \"addDeadline-\" + trimmedCommand.substring(9);","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"        } else if (commandLowerCase.startsWith(\"event \")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"            // Additional parsing for event command","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"            return \"addEvent-\" + trimmedCommand.substring(6);","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        } else if (commandLowerCase.startsWith(\"find \")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"            // Additional parsing for find command","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"            return \"find-\" + trimmedCommand.substring(5);","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"        } else {","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"            throw new DukeException(\"Unknown command\");","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"bljhty":51}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package tasks;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":" * Represents a task in the Duke application.","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"    protected String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"     * Initializes a new Task with the given description.","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"     * @param isDone The status of the task.","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); ","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"     * @param isDone The status of the task.","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"    public void markAsDone(boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"        return this.description;","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"     * Converts the task object to a data representation for saving to a file.","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"     * @return The data representation of the task.","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"    public abstract String toData();","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"bljhty":64}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package tasks;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"public class TaskList {","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"     * Initializes a new TaskList instance with an empty list of tasks.","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"     * Initializes a new TaskList instance with the specified list of tasks.","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"     * Removes a task from the list based on its index.","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"     * @param index The index of the task to be returned.","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"    public Task getTaskIndex(int index) {","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-09-30"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"     * Marks a specified task as done.","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-09-30"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-09-30"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"        task.markAsDone(true);","lastModifiedDate":"2023-09-30"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"     * Marks a specified task as undone.","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"     * @param index The index of the task to be marked as undone.","lastModifiedDate":"2023-09-30"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"    public void markTaskAsUndone(int index) {","lastModifiedDate":"2023-09-30"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-09-30"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"        task.markAsDone(false);","lastModifiedDate":"2023-09-30"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2023-09-30"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"    public void listTasks() {","lastModifiedDate":"2023-09-30"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-30"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"            System.out.println(\"ERROR: ☹ OOPS!!! No tasks is available.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"            return;","lastModifiedDate":"2023-09-30"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-30"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-30"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-09-30"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2023-09-30"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-30"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-30"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-30"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"     * Finds tasks that contain the specified keyword.","lastModifiedDate":"2023-09-30"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"     * @param keyword The keyword to be searched for.","lastModifiedDate":"2023-09-30"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"     * @return The list of tasks that contain the specified keyword.","lastModifiedDate":"2023-09-30"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2023-09-30"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-30"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-30"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-30"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"                foundTasks.add(task);","lastModifiedDate":"2023-09-30"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"        return foundTasks;","lastModifiedDate":"2023-09-30"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":122,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"bljhty":122}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package tasks;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":" * Represents a \u0027Todo\u0027 task in the Duke application.","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"    public Todo (String description) {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"     * Returns a new Todo task based on the given task data.","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"     * @param taskData The task data to be converted.","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"     * @return The new Todo task.","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    public static Task dataToTask(String taskData) {","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"        int firstSplitIndex \u003d taskData.indexOf(\"|\");","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"        boolean isDone \u003d taskData.substring(0, firstSplitIndex - 1).equals(\"1\");","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"        String desc \u003d taskData.substring(firstSplitIndex + 2);","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"        Todo newTodo \u003d  new Todo(desc);","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"        newTodo.isDone \u003d isDone;","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"        return newTodo;","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"     * Converts the Todo task object to a data representation for saving to a file.","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"     * @return The data representation of the Todo task.","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"     */    ","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"    public String toData() {","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        String done \u003d String.valueOf(this.isDone ? 1 : 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"        return \"T | \" + done + \" | \" + this.description;","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"    ","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"     * Returns the string representation of the Todo task.","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"     * @return The string representation of the Todo task.","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"bljhty":46}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package ui;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":" * Represents the user interface of the Duke application.","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"public class Ui {","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"    private static final String lineDivider \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"     * Initializes the Ui with a new Scanner instance.","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    public Ui() {","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"     * Displays the greeting message to the user when the application starts.","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"    public static void greet() {","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"        String logo \u003d \"  ____                  \\n\"","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"                + \" |  _ \\\\  ___  _ __ ___  \\n\"","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"                + \" | | | |/ _ \\\\| \u0027_ ` _ \\\\ \\n\"","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"                + \" | |_| | (_) | | | | | |\\n\"","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"                + \" |____/ \\\\___/|_| |_| |_|\\n\";","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        String greetings \u003d lineDivider +","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"                \"\\nHello! I\u0027m Dom\\n\" +","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"                \"What can I do for you?\\n\" +","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"                lineDivider;","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"        System.out.println(greetings);","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"    public void goodbye() {","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        String goodbye \u003d lineDivider +","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"                \"\\nBye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"                lineDivider;","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"        System.out.println(goodbye);","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"     * Displays an error message when there is a loading error.","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    public static void showLoadingError() {","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Error loading file\");","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"     * Displays the specified error message to the user.","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"     * @param errorMsg The error message to display.","lastModifiedDate":"2023-09-30"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"    public void showErrorMsg(String errorMsg) {","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"        System.out.println(errorMsg);","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"     * Reads a command from the user.","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-30"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"     * Displays a line divider to the user.","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"    public void showLineDivider() {","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"        System.out.println(lineDivider);","lastModifiedDate":"2023-09-30"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"     * Lists all tasks currently in the task list.","lastModifiedDate":"2023-09-30"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2023-09-30"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"    public void listTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-30"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-30"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"            System.out.println(\"You have no tasks in your list\");","lastModifiedDate":"2023-09-30"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"            return;","lastModifiedDate":"2023-09-30"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-30"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-30"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-09-30"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"     * Displays a message to the user when a task is marked as done.","lastModifiedDate":"2023-09-30"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-30"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2023-09-30"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as done:\\n\" + \" \"","lastModifiedDate":"2023-09-30"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"                + task.getStatusIcon() + \" \" + task.getDescription());","lastModifiedDate":"2023-09-30"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"    ","lastModifiedDate":"2023-09-30"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"     * Displays a message to the user when a task is marked as undone.","lastModifiedDate":"2023-09-30"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"     * @param task The task that was marked as undone.","lastModifiedDate":"2023-09-30"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"    public void showUnmarkedTask(Task task) {","lastModifiedDate":"2023-09-30"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as not done:\\n\" + \"   \" + task.getStatusIcon()","lastModifiedDate":"2023-09-30"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"        + \" \" + task.getDescription());","lastModifiedDate":"2023-09-30"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"     * Displays a message to the user when a task is deleted.","lastModifiedDate":"2023-09-30"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":122,"author":{"gitId":"bljhty"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-09-30"},{"lineNumber":123,"author":{"gitId":"bljhty"},"content":"     * @param taskCount The total number of tasks in the list after deletion.","lastModifiedDate":"2023-09-30"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"    public void showInvalidTaskNumberError() {","lastModifiedDate":"2023-09-30"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Error: Invalid task number.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"    ","lastModifiedDate":"2023-09-30"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"     * Displays a message to the user when a task is deleted.","lastModifiedDate":"2023-09-30"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-09-30"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"     * @param taskCount The total number of tasks in the list after deletion.","lastModifiedDate":"2023-09-30"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"    public void showEmptyTaskNumberError() {","lastModifiedDate":"2023-09-30"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Error: ☹ OOPS!!! Task number cannot be empty\\n\");","lastModifiedDate":"2023-09-30"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Please enter command in the format: unmark \u003ctask number\u003e\");","lastModifiedDate":"2023-09-30"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"    ","lastModifiedDate":"2023-09-30"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"    /*","lastModifiedDate":"2023-09-30"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"     * Displays a message to the user when a task is deleted.","lastModifiedDate":"2023-09-30"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-09-30"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"     * @param taskCount The total number of tasks in the list after deletion.","lastModifiedDate":"2023-09-30"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"    public void showInvalidTaskNumberFormatError() {","lastModifiedDate":"2023-09-30"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Error: ☹ OOPS!!! Task number must be an integer.\\n\");","lastModifiedDate":"2023-09-30"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Please enter command in the format: unmark \u003ctask number\u003e\");","lastModifiedDate":"2023-09-30"},{"lineNumber":151,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":152,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":153,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":154,"author":{"gitId":"bljhty"},"content":"     * Displays a message to the user when a task is added.","lastModifiedDate":"2023-09-30"},{"lineNumber":155,"author":{"gitId":"bljhty"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-09-30"},{"lineNumber":156,"author":{"gitId":"bljhty"},"content":"     * @param taskCount The total number of tasks in the list after addition.","lastModifiedDate":"2023-09-30"},{"lineNumber":157,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":158,"author":{"gitId":"bljhty"},"content":"    public void showAddedTask(Task task, int taskCount) {","lastModifiedDate":"2023-09-30"},{"lineNumber":159,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-30"},{"lineNumber":160,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2023-09-30"},{"lineNumber":161,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":162,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":163,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":164,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":165,"author":{"gitId":"bljhty"},"content":"     * Displays a message to the user when a task is deleted.","lastModifiedDate":"2023-09-30"},{"lineNumber":166,"author":{"gitId":"bljhty"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-09-30"},{"lineNumber":167,"author":{"gitId":"bljhty"},"content":"     * @param taskCount The total number of tasks in the list after deletion.","lastModifiedDate":"2023-09-30"},{"lineNumber":168,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":169,"author":{"gitId":"bljhty"},"content":"    public void showDeletedTask(Task task, int taskCount) {","lastModifiedDate":"2023-09-30"},{"lineNumber":170,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-30"},{"lineNumber":171,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2023-09-30"},{"lineNumber":172,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":173,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":174,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":175,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":176,"author":{"gitId":"bljhty"},"content":"     * Displays a message to the user when a task is found.","lastModifiedDate":"2023-09-30"},{"lineNumber":177,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":178,"author":{"gitId":"bljhty"},"content":"     * @param task The task that was found.","lastModifiedDate":"2023-09-30"},{"lineNumber":179,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":180,"author":{"gitId":"bljhty"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-09-30"},{"lineNumber":181,"author":{"gitId":"bljhty"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-09-30"},{"lineNumber":182,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":183,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":184,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":185,"author":{"gitId":"bljhty"},"content":"     * Displays a message to the user when a task is found.","lastModifiedDate":"2023-09-30"},{"lineNumber":186,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":187,"author":{"gitId":"bljhty"},"content":"     * @param task The task that was found.","lastModifiedDate":"2023-09-30"},{"lineNumber":188,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":189,"author":{"gitId":"bljhty"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-09-30"},{"lineNumber":190,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-30"},{"lineNumber":191,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":192,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":193,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":194,"author":{"gitId":"bljhty"},"content":"     * Displays a message to the user when a task is found.","lastModifiedDate":"2023-09-30"},{"lineNumber":195,"author":{"gitId":"bljhty"},"content":"     * ","lastModifiedDate":"2023-09-30"},{"lineNumber":196,"author":{"gitId":"bljhty"},"content":"     * @param task The task that was found.","lastModifiedDate":"2023-09-30"},{"lineNumber":197,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":198,"author":{"gitId":"bljhty"},"content":"    public void showFoundTasks(ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2023-09-30"},{"lineNumber":199,"author":{"gitId":"bljhty"},"content":"        System.out.println(lineDivider);","lastModifiedDate":"2023-09-30"},{"lineNumber":200,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-30"},{"lineNumber":201,"author":{"gitId":"bljhty"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2023-09-30"},{"lineNumber":202,"author":{"gitId":"bljhty"},"content":"            System.out.println((i + 1) + \".\" + foundTasks.get(i));","lastModifiedDate":"2023-09-30"},{"lineNumber":203,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":204,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":205,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"bljhty":205}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"if ! javac -cp /Users/bryanlee/Desktop/NUS/NUS Y3S1/CS2113/ip/src/main/java -Xlint:none -d ../bin /Users/bryanlee/Desktop/NUS/NUS Y3S1/CS2113/ip/src/main/java/Duke.java","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bljhty":1,"-":37}},{"path":"text-ui-test/tempCodeRunnerFile.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"/Users/bryanlee/Desktop/NUS/NUS Y3S1/CS2113/ip/src/main/java/Duke.java","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"bljhty":1}}]
