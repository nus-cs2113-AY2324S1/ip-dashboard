[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"# Alan project template","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"DextheChik3n"},"content":"3. After that, locate the `src/main/java/Alan.java` file, right-click it, and choose `Run Alan.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DextheChik3n":2,"-":22}},{"path":"src/main/java/Alan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"DextheChik3n"},"content":"public class Alan {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"DextheChik3n"},"content":"    public static void printGreetingMessage() {","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"DextheChik3n"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"DextheChik3n"},"content":"        String man \u003d \" @/\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"DextheChik3n"},"content":"                     \"/| \\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"DextheChik3n"},"content":"                     \"/ \\\\\";","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"DextheChik3n"},"content":"        System.out.println(man);","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"DextheChik3n"},"content":"        System.out.println(\"Hello! I\u0027m Alan\");","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"DextheChik3n"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"DextheChik3n"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"DextheChik3n"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"DextheChik3n"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"DextheChik3n"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"DextheChik3n"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"DextheChik3n"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"DextheChik3n"},"content":"        Task[] tasks \u003d new Task[101];","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"DextheChik3n"},"content":"        int currentTasksIndex \u003d 1;","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"DextheChik3n"},"content":"        printGreetingMessage();","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"DextheChik3n"},"content":"        String userInput \u003d \" \";","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"DextheChik3n"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"DextheChik3n"},"content":"        do {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"DextheChik3n"},"content":"            //Read user input","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"DextheChik3n"},"content":"            System.out.print(\"Input: \");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"DextheChik3n"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"DextheChik3n"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"DextheChik3n"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"DextheChik3n"},"content":"                printExitMessage();","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"DextheChik3n"},"content":"            } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"DextheChik3n"},"content":"                //print the tasks in the lists","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"DextheChik3n"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"DextheChik3n"},"content":"                for (int i \u003d 1; i \u003c currentTasksIndex; i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"DextheChik3n"},"content":"                    System.out.println((i) + \". [\" + tasks[i].getStatusIcon() + \"] \" + tasks[i].getDescription());","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"DextheChik3n"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"DextheChik3n"},"content":"            } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"DextheChik3n"},"content":"                //mark tasks as done","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"DextheChik3n"},"content":"                String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"DextheChik3n"},"content":"                tasks[Integer.parseInt(words[1])].setDone(true);","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"DextheChik3n"},"content":"                System.out.println(\"Alright! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"DextheChik3n"},"content":"                System.out.println(\"\\t[\" + tasks[Integer.parseInt(words[1])].getStatusIcon() + \"] \" +","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"DextheChik3n"},"content":"                        tasks[Integer.parseInt(words[1])].getDescription());","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"DextheChik3n"},"content":"            } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"DextheChik3n"},"content":"                //unmark tasks as undone","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"DextheChik3n"},"content":"                String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"DextheChik3n"},"content":"                tasks[Integer.parseInt(words[1])].setDone(false);","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"DextheChik3n"},"content":"                System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"DextheChik3n"},"content":"                System.out.println(\"\\t[\" + tasks[Integer.parseInt(words[1])].getStatusIcon() + \"] \" +","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"DextheChik3n"},"content":"                        tasks[Integer.parseInt(words[1])].getDescription());","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"DextheChik3n"},"content":"            } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"DextheChik3n"},"content":"                //add a new task to the list","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"DextheChik3n"},"content":"                Task task \u003d new Task(userInput);","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"DextheChik3n"},"content":"                tasks[currentTasksIndex] \u003d task;","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"DextheChik3n"},"content":"                currentTasksIndex++;","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"DextheChik3n"},"content":"                System.out.println(\"added: \" + userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"DextheChik3n"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"DextheChik3n"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"DextheChik3n"},"content":"        } while(!userInput.equals(\"bye\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"DextheChik3n":80,"-":2}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"public class Task {","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"DextheChik3n"},"content":"    private String description;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"DextheChik3n"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"DextheChik3n"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"DextheChik3n"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"DextheChik3n"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"DextheChik3n"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"DextheChik3n"},"content":"        return description;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"DextheChik3n"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"DextheChik3n"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"DextheChik3n"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"DextheChik3n"},"content":"        return isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"DextheChik3n"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"DextheChik3n"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"DextheChik3n"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"DextheChik3n"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"DextheChik3n"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"DextheChik3n":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"DextheChik3n"},"content":"java -classpath ..\\bin Alan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DextheChik3n":1,"-":20}}]
