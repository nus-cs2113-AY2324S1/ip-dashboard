[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"# Alan project template","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"DextheChik3n"},"content":"3. After that, locate the `src/main/java/Alan.java` file, right-click it, and choose `Run Alan.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DextheChik3n":2,"-":22}},{"path":"src/main/java/alan/Alan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"package alan;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.TaskList;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.exception.AlanException;","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"DextheChik3n"},"content":"import alan.parser.Parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"DextheChik3n"},"content":"import alan.storage.Storage;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"DextheChik3n"},"content":"import alan.ui.Ui;","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"DextheChik3n"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"DextheChik3n"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DextheChik3n"},"content":" * Represents the main class and entry point of the Alan chatbot program.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DextheChik3n"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"DextheChik3n"},"content":"public class Alan {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"DextheChik3n"},"content":"    private static Ui ui;","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"DextheChik3n"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"DextheChik3n"},"content":"    private static Storage storage;","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"DextheChik3n"},"content":"     * Represents the Alan constructor.","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"DextheChik3n"},"content":"     * Initializes the Ui, Storage and TaskList.","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"DextheChik3n"},"content":"     * @param filePath filePath of the text file used to store task data.","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"DextheChik3n"},"content":"    public Alan(String filePath) {","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"DextheChik3n"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"DextheChik3n"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"DextheChik3n"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"DextheChik3n"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"DextheChik3n"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"DextheChik3n"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"DextheChik3n"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"DextheChik3n"},"content":"     * Runs the Alan chatbot program.","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"DextheChik3n"},"content":"    public static void runAlan() {","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"DextheChik3n"},"content":"        Parser parser \u003d new Parser(tasks, ui);","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"DextheChik3n"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"DextheChik3n"},"content":"        String userInput \u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"DextheChik3n"},"content":"        do {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"DextheChik3n"},"content":"            try {","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"DextheChik3n"},"content":"                userInput \u003d ui.getUserCommand();","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"DextheChik3n"},"content":"                parser.processCommandHandler(userInput);","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"DextheChik3n"},"content":"            } catch (AlanException e) {","lastModifiedDate":"2023-10-01"},{"lineNumber":51,"author":{"gitId":"DextheChik3n"},"content":"                ui.showToUser(e.getMessage());","lastModifiedDate":"2023-10-01"},{"lineNumber":52,"author":{"gitId":"DextheChik3n"},"content":"            } finally {","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"DextheChik3n"},"content":"                ui.printHorizontalLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":54,"author":{"gitId":"DextheChik3n"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"DextheChik3n"},"content":"        } while (!userInput.equals(\"bye\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"DextheChik3n"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"DextheChik3n"},"content":"            storage.save();","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"DextheChik3n"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"DextheChik3n"},"content":"            ui.showSavingError();","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":63,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"DextheChik3n"},"content":"     * Main method of the Alan program.","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"DextheChik3n"},"content":"     * @param args","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"DextheChik3n"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-01"},{"lineNumber":69,"author":{"gitId":"DextheChik3n"},"content":"        new Alan(\"data/tasks.txt\").runAlan();","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"DextheChik3n":69,"-":2}},{"path":"src/main/java/alan/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"package alan.common;","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"DextheChik3n"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"DextheChik3n"},"content":" * Represents a class that stores all the messages sent to the user.","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DextheChik3n"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DextheChik3n"},"content":"public class Messages {","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"DextheChik3n"},"content":"    public static final String manDrawing \u003d \" @/\\n\" +","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"DextheChik3n"},"content":"            \"/| \\n\" +","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"DextheChik3n"},"content":"            \"/ \\\\\";","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"DextheChik3n"},"content":"    public static final String alanText \u003d \" ______     __         ______     __   __    \\n\" +","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"DextheChik3n"},"content":"            \"/\\\\  __ \\\\   /\\\\ \\\\       /\\\\  __ \\\\   /\\\\ \\\"-.\\\\ \\\\   \\n\" +","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"DextheChik3n"},"content":"            \"\\\\ \\\\  __ \\\\  \\\\ \\\\ \\\\____  \\\\ \\\\  __ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\n\" +","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"DextheChik3n"},"content":"            \" \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_____\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\ \\n\" +","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"DextheChik3n"},"content":"            \"  \\\\/_/\\\\/_/   \\\\/_____/   \\\\/_/\\\\/_/   \\\\/_/ \\\\/_/ \";","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"DextheChik3n"},"content":"    public static final String MESSAGE_GREET \u003d \"Sup dude! I\u0027m \\n\" + alanText + \"\\n\" + manDrawing + \"\\n\" + \"What can I do for you, my man?\";","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"DextheChik3n"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Later, dude! Can\u0027t wait to catch up again real soon!\";","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"DextheChik3n"},"content":"    public static final String MESSAGE_LIST_COMMAND \u003d \"Dude, check out these tasks on your list:\";","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"DextheChik3n"},"content":"    public static final String MESSAGE_MARK_TASK \u003d \"Alright bro! This task is officially checked off:\";","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"DextheChik3n"},"content":"    public static final String MESSAGE_UNMARK_TASK \u003d \"Ok dude, I\u0027ve marked this task as ain\u0027t done yet amigo:\";","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"DextheChik3n"},"content":"    public static final String MESSAGE_DELETE_TASK \u003d \"Got it, dude. This task is outta here:\";","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"DextheChik3n"},"content":"    public static final String MESSAGE_INVALID_INPUT_COMMAND \u003d \"Oof, I have no idea what are you saying duuude\";","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"DextheChik3n"},"content":"    public static final String MESSAGE_EMPTY_DESCRIPTION \u003d \"Oof Dude, you can\u0027t leave the description empty\";","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"DextheChik3n"},"content":"    public static final String MESSAGE_INVALID_DEADLINE_FORMAT \u003d \"Oof the deadline command isn\u0027t quite right you gotta fix the format, bro...\\n[Remember it\u0027s: \u003cdescription\u003e /by \u003cdate\u003e]\";","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"DextheChik3n"},"content":"    public static final String MESSAGE_INVALID_EVENT_FROM_FORMAT \u003d \"Oof duude, your /from formatting is whack\\n[Remember it\u0027s: \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e]\";","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"DextheChik3n"},"content":"    public static final String MESSAGE_INVALID_EVENT_TO_FORMAT \u003d \"Oof my man, you need to work on that /to formatting\\n[Remember it\u0027s: \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e]\";","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"DextheChik3n"},"content":"    public static final String MESSAGE_INVALID_TASK_NUMBER \u003d \"Oof maaaan there\u0027s no such task\";","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"DextheChik3n"},"content":"    public static final String MESSAGE_INVALID_TASK_TYPE_FOUND \u003d \"Yo I found a task type that doesn\u0027t make sense\";","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"DextheChik3n"},"content":"    public static final String MESSAGE_FIND_TASK \u003d \"Dude check it out, here are the matching tasks in your list:\";","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"DextheChik3n"},"content":"}","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"DextheChik3n":29}},{"path":"src/main/java/alan/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"package alan.data;","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.task.Deadline;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.task.Event;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.task.Task;","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.task.Todo;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"DextheChik3n"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"DextheChik3n"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"DextheChik3n"},"content":" * Represents a list of the \u003ccode\u003eTask\u003c/code\u003e objects.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DextheChik3n"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DextheChik3n"},"content":"public class TaskList {","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"DextheChik3n"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"DextheChik3n"},"content":"    public TaskList() {","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"DextheChik3n"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"DextheChik3n"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"DextheChik3n"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"DextheChik3n"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"DextheChik3n"},"content":"        return tasks;","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"DextheChik3n"},"content":"    public Task getSelectedTask(int selectedTaskIndex) {","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"DextheChik3n"},"content":"        return tasks.get(selectedTaskIndex);","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"DextheChik3n"},"content":"    public int getLastTaskIndex() {","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"DextheChik3n"},"content":"        return tasks.size() - 1;","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"DextheChik3n"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"DextheChik3n"},"content":"        return tasks.size();","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"DextheChik3n"},"content":"    public void addToDo(String description) {","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"DextheChik3n"},"content":"        tasks.add(new Todo(description));","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"DextheChik3n"},"content":"    public void addDeadline(String description, String by) {","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"DextheChik3n"},"content":"        tasks.add(new Deadline(description, by));","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"DextheChik3n"},"content":"    public void addEvent(String description, String from, String to) {","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"DextheChik3n"},"content":"        tasks.add(new Event(description, from, to));","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"DextheChik3n"},"content":"    public void markTask(int selectedTaskIndex, boolean isDone) {","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"DextheChik3n"},"content":"        tasks.get(selectedTaskIndex).setDone(isDone);","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"DextheChik3n"},"content":"    public void removeTask(int selectedTaskIndex) {","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"DextheChik3n"},"content":"        tasks.remove(selectedTaskIndex);","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"DextheChik3n"},"content":"}","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"DextheChik3n":60}},{"path":"src/main/java/alan/data/exception/AlanException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"package alan.data.exception;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.task.Task;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"DextheChik3n"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"DextheChik3n"},"content":"import static alan.common.Messages.MESSAGE_EMPTY_DESCRIPTION;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DextheChik3n"},"content":"import static alan.common.Messages.MESSAGE_INVALID_DEADLINE_FORMAT;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"DextheChik3n"},"content":"import static alan.common.Messages.MESSAGE_INVALID_EVENT_FROM_FORMAT;","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"DextheChik3n"},"content":"import static alan.common.Messages.MESSAGE_INVALID_EVENT_TO_FORMAT;","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"DextheChik3n"},"content":"import static alan.common.Messages.MESSAGE_INVALID_INPUT_COMMAND;","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"DextheChik3n"},"content":"import static alan.common.Messages.MESSAGE_INVALID_TASK_NUMBER;","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"DextheChik3n"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"DextheChik3n"},"content":" * Represents the error handling class.","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"DextheChik3n"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"DextheChik3n"},"content":"public class AlanException extends Exception {","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"DextheChik3n"},"content":"    public AlanException(String errorMessage) {","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"DextheChik3n"},"content":"        super(errorMessage);","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"DextheChik3n"},"content":"     * Checks lateral location of the specified position.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"DextheChik3n"},"content":"     * @param selectedIndex index of the selected task.","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"DextheChik3n"},"content":"     * @param taskList contains the list of tasks.","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"DextheChik3n"},"content":"     * @throws AlanException  If selected index is out of range of taskList.","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"DextheChik3n"},"content":"    public static void checkOutOfTaskListIndex(int selectedIndex, ArrayList\u003cTask\u003e taskList) throws AlanException {","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"DextheChik3n"},"content":"        int lastTaskIndex \u003d taskList.size() - 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"DextheChik3n"},"content":"        if (selectedIndex \u003e lastTaskIndex) {","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"DextheChik3n"},"content":"            throw new AlanException(MESSAGE_INVALID_TASK_NUMBER);","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"DextheChik3n"},"content":"     * Outputs message when user enters an invalid/unknown command.","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"DextheChik3n"},"content":"     * @throws AlanException If selected index is out of range of taskList.","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"DextheChik3n"},"content":"    public static void invalidInputCommand() throws AlanException {","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"DextheChik3n"},"content":"        throw new AlanException(MESSAGE_INVALID_INPUT_COMMAND);","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"DextheChik3n"},"content":"     * Checks for any description text found after the command.","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"DextheChik3n"},"content":"     * @throws AlanException If there is only 1 String element found in array.","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"DextheChik3n"},"content":"    public static void checkEmptyDescription(String userInput) throws AlanException {","lastModifiedDate":"2023-10-01"},{"lineNumber":53,"author":{"gitId":"DextheChik3n"},"content":"        String[] userInputWords \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"DextheChik3n"},"content":"        if (userInputWords.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"DextheChik3n"},"content":"            throw new AlanException(MESSAGE_EMPTY_DESCRIPTION);","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"DextheChik3n"},"content":"     * Checks for any text found after /by parameter.","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"DextheChik3n"},"content":"     * @param words contains an array of the information text split by parameter /by.","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"DextheChik3n"},"content":"     * @throws AlanException If there is only 1 String element found in array.","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"DextheChik3n"},"content":"    public static void checkDeadlineInputFormat(String[] words) throws AlanException {","lastModifiedDate":"2023-10-01"},{"lineNumber":67,"author":{"gitId":"DextheChik3n"},"content":"        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"DextheChik3n"},"content":"            throw new AlanException(MESSAGE_INVALID_DEADLINE_FORMAT);","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"DextheChik3n"},"content":"     * Checks for any text found after /from parameter.","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"DextheChik3n"},"content":"     * @param splitDescriptionAndDate contains an array of the information text split by parameter /from.","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"DextheChik3n"},"content":"     * @throws AlanException If there is only 1 String element found in array.","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"DextheChik3n"},"content":"    public static void checkEventInputFromFormat(String[] splitDescriptionAndDate) throws AlanException {","lastModifiedDate":"2023-10-01"},{"lineNumber":78,"author":{"gitId":"DextheChik3n"},"content":"        if (splitDescriptionAndDate.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"DextheChik3n"},"content":"            throw new AlanException(MESSAGE_INVALID_EVENT_FROM_FORMAT);","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":81,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"DextheChik3n"},"content":"     * Checks for any text found after /to parameter.","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"DextheChik3n"},"content":"     * @param splitFromAndTo contains an array of the information text split by parameter /to.","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"DextheChik3n"},"content":"     * @throws AlanException If there is only 1 String element found in array.","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"DextheChik3n"},"content":"    public static void checkEventInputToFormat(String[] splitFromAndTo) throws AlanException {","lastModifiedDate":"2023-10-01"},{"lineNumber":89,"author":{"gitId":"DextheChik3n"},"content":"        if (splitFromAndTo.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-14"},{"lineNumber":90,"author":{"gitId":"DextheChik3n"},"content":"            throw new AlanException(MESSAGE_INVALID_EVENT_TO_FORMAT);","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"DextheChik3n"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"DextheChik3n"},"content":"    public String toString() {","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"DextheChik3n"},"content":"        return super.getMessage();","lastModifiedDate":"2023-09-14"},{"lineNumber":97,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"DextheChik3n"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"DextheChik3n":98}},{"path":"src/main/java/alan/data/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"package alan.data.task;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"DextheChik3n"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"DextheChik3n"},"content":" * Represents a deadline task. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DextheChik3n"},"content":" * a task consisting of description, by time period and D task type","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DextheChik3n"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DextheChik3n"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"DextheChik3n"},"content":"    protected String by;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"DextheChik3n"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"DextheChik3n"},"content":"        super(description, TaskType.D);","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"DextheChik3n"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"DextheChik3n"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"DextheChik3n"},"content":"        return by;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"DextheChik3n"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"DextheChik3n"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"DextheChik3n"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"DextheChik3n"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"DextheChik3n"},"content":"        return \"[\" + super.getTaskType() + \"]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"DextheChik3n"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"DextheChik3n":26}},{"path":"src/main/java/alan/data/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"package alan.data.task;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"DextheChik3n"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"DextheChik3n"},"content":" * Represents a event task. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DextheChik3n"},"content":" * a task consisting of description, from time period, to time period and E task type","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DextheChik3n"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DextheChik3n"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"DextheChik3n"},"content":"    protected String from;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"DextheChik3n"},"content":"    protected String to;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"DextheChik3n"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"DextheChik3n"},"content":"        super(description, TaskType.E);","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"DextheChik3n"},"content":"        this.from  \u003d from;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"DextheChik3n"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"DextheChik3n"},"content":"    public String getFrom() {","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"DextheChik3n"},"content":"        return from;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"DextheChik3n"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"DextheChik3n"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"DextheChik3n"},"content":"    public String getTo() {","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"DextheChik3n"},"content":"        return to;","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"DextheChik3n"},"content":"    public void setTo(String to) {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"DextheChik3n"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"DextheChik3n"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"DextheChik3n"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"DextheChik3n"},"content":"        return \"[\" + super.getTaskType() + \"]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString() + \" (from: \" + from + \" | to: \"+ to + \")\";","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"DextheChik3n"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"DextheChik3n":36}},{"path":"src/main/java/alan/data/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"package alan.data.task;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"DextheChik3n"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"DextheChik3n"},"content":" * Represents a task.","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DextheChik3n"},"content":" * The \u003ccode\u003eTask\u003c/code\u003e class is always instantiated as a Todo, Deadline or Event task","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DextheChik3n"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DextheChik3n"},"content":"public class Task {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"DextheChik3n"},"content":"    private String description;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"DextheChik3n"},"content":"    private TaskType type;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"DextheChik3n"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"DextheChik3n"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"DextheChik3n"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"DextheChik3n"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"DextheChik3n"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"DextheChik3n"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"DextheChik3n"},"content":"        return description;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"DextheChik3n"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"DextheChik3n"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"DextheChik3n"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"DextheChik3n"},"content":"        return isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"DextheChik3n"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"DextheChik3n"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"DextheChik3n"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"DextheChik3n"},"content":"        return type;","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"DextheChik3n"},"content":"    public void setTaskType(TaskType type) {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"DextheChik3n"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"DextheChik3n"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"DextheChik3n"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"DextheChik3n"},"content":"    public int getStatusValue() {","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"DextheChik3n"},"content":"        return (isDone ? 1 : 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"DextheChik3n"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"DextheChik3n"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"DextheChik3n"},"content":"        return getDescription();","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"DextheChik3n"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"DextheChik3n":54}},{"path":"src/main/java/alan/data/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"package alan.data.task;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"DextheChik3n"},"content":"public enum TaskType {","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"DextheChik3n"},"content":"    T, D, E","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"DextheChik3n"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"DextheChik3n":5}},{"path":"src/main/java/alan/data/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"package alan.data.task;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"DextheChik3n"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"DextheChik3n"},"content":" * Represents a todo task. A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DextheChik3n"},"content":" * a task consisting of description and \u0027T\u0027 task type","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DextheChik3n"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DextheChik3n"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"DextheChik3n"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"DextheChik3n"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"DextheChik3n"},"content":"        super(description, TaskType.T);","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"DextheChik3n"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"DextheChik3n"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"DextheChik3n"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"DextheChik3n"},"content":"        return \"[\" + super.getTaskType() + \"]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"DextheChik3n"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"DextheChik3n":18}},{"path":"src/main/java/alan/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"package alan.parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.TaskList;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.exception.AlanException;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.task.Task;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"DextheChik3n"},"content":"import alan.ui.Ui;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DextheChik3n"},"content":"import static alan.common.Messages.MESSAGE_FIND_TASK;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"DextheChik3n"},"content":"import static alan.common.Messages.MESSAGE_LIST_COMMAND;","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DextheChik3n"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"DextheChik3n"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"DextheChik3n"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"DextheChik3n"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"DextheChik3n"},"content":"import static alan.data.exception.AlanException.checkEmptyDescription;","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"DextheChik3n"},"content":"import static alan.data.exception.AlanException.checkEventInputFromFormat;","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"DextheChik3n"},"content":"import static alan.data.exception.AlanException.checkEventInputToFormat;","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"DextheChik3n"},"content":"import static alan.data.exception.AlanException.checkOutOfTaskListIndex;","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"DextheChik3n"},"content":"import static alan.data.exception.AlanException.invalidInputCommand;","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"DextheChik3n"},"content":"import static alan.data.exception.AlanException.checkDeadlineInputFormat;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"DextheChik3n"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"DextheChik3n"},"content":" * Represents a parser that parses the user input.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"DextheChik3n"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"DextheChik3n"},"content":"public class Parser {","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"DextheChik3n"},"content":"    public static final String DATE_PARSE_PATTERN \u003d \"dd MMM yyyy\";","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"DextheChik3n"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"DextheChik3n"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"DextheChik3n"},"content":"    public Parser(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"DextheChik3n"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"DextheChik3n"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"DextheChik3n"},"content":"     * Handles extracting the command from the user input and executes the respective command.","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"DextheChik3n"},"content":"     * @param userInput text of the user input.","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"DextheChik3n"},"content":"     * @throws AlanException If an error is detected from any of the command handlers.","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"DextheChik3n"},"content":"    public void processCommandHandler(String userInput) throws AlanException {","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"DextheChik3n"},"content":"        String[] userInputWords \u003d userInput.split(\" \");","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"DextheChik3n"},"content":"        String command \u003d userInputWords[0];","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"DextheChik3n"},"content":"        switch (command) {","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"DextheChik3n"},"content":"        case \"bye\":","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"DextheChik3n"},"content":"            ui.showExitMessage();","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"DextheChik3n"},"content":"            break;","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"DextheChik3n"},"content":"        case \"list\":","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"DextheChik3n"},"content":"            listCommandHandler();","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"DextheChik3n"},"content":"            break;","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"DextheChik3n"},"content":"        case \"mark\":","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"DextheChik3n"},"content":"            markingCommandHandler(userInput, true);","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"DextheChik3n"},"content":"            break;","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"DextheChik3n"},"content":"        case \"unmark\":","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"DextheChik3n"},"content":"            markingCommandHandler(userInput, false);","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"DextheChik3n"},"content":"            break;","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"DextheChik3n"},"content":"        case \"todo\":","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"DextheChik3n"},"content":"            checkEmptyDescription(userInput);","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"DextheChik3n"},"content":"            todoCommandHandler(userInput);","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"DextheChik3n"},"content":"            break;","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"DextheChik3n"},"content":"        case \"deadline\":","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"DextheChik3n"},"content":"            checkEmptyDescription(userInput);","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"DextheChik3n"},"content":"            deadlineCommandHandler(userInput);","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"DextheChik3n"},"content":"            break;","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"DextheChik3n"},"content":"        case \"event\":","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"DextheChik3n"},"content":"            checkEmptyDescription(userInput);","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"DextheChik3n"},"content":"            eventCommandHandler(userInput);","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"DextheChik3n"},"content":"            break;","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"DextheChik3n"},"content":"        case \"delete\":","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"DextheChik3n"},"content":"            deleteCommandHandler(userInput);","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"DextheChik3n"},"content":"            break;","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"DextheChik3n"},"content":"        case \"find\":","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"DextheChik3n"},"content":"            findCommandHandler(userInput);","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"DextheChik3n"},"content":"            break;","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"DextheChik3n"},"content":"        default:","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"DextheChik3n"},"content":"            invalidInputCommand();","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"DextheChik3n"},"content":"     * Handles displaying all the tasks within the TaskList.","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"DextheChik3n"},"content":"    public void listCommandHandler() {","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"DextheChik3n"},"content":"        ui.showToUser(MESSAGE_LIST_COMMAND);","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"DextheChik3n"},"content":"        ui.printTasks(tasks.getTaskList());","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"DextheChik3n"},"content":"     * Checks for any text found after /from parameter.","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"DextheChik3n"},"content":"     * @param userInput text of the user input.","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"DextheChik3n"},"content":"     * @param isMark mark or unmark the selected task.","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"DextheChik3n"},"content":"     * @throws AlanException If there is only 1 String element found in array.","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"DextheChik3n"},"content":"    public void markingCommandHandler(String userInput, boolean isMark) throws AlanException {","lastModifiedDate":"2023-10-02"},{"lineNumber":97,"author":{"gitId":"DextheChik3n"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-10-02"},{"lineNumber":98,"author":{"gitId":"DextheChik3n"},"content":"        int selectedTaskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-10-02"},{"lineNumber":99,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":100,"author":{"gitId":"DextheChik3n"},"content":"        checkOutOfTaskListIndex(selectedTaskIndex, tasks.getTaskList());","lastModifiedDate":"2023-10-02"},{"lineNumber":101,"author":{"gitId":"DextheChik3n"},"content":"        Task targetTask \u003d tasks.getSelectedTask(selectedTaskIndex);","lastModifiedDate":"2023-10-02"},{"lineNumber":102,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":103,"author":{"gitId":"DextheChik3n"},"content":"        if (isMark) {","lastModifiedDate":"2023-10-02"},{"lineNumber":104,"author":{"gitId":"DextheChik3n"},"content":"            tasks.markTask(selectedTaskIndex, true);","lastModifiedDate":"2023-10-02"},{"lineNumber":105,"author":{"gitId":"DextheChik3n"},"content":"            ui.showMarkTaskMessage(targetTask);","lastModifiedDate":"2023-10-02"},{"lineNumber":106,"author":{"gitId":"DextheChik3n"},"content":"        } else {","lastModifiedDate":"2023-10-02"},{"lineNumber":107,"author":{"gitId":"DextheChik3n"},"content":"            tasks.markTask(selectedTaskIndex, false);","lastModifiedDate":"2023-10-02"},{"lineNumber":108,"author":{"gitId":"DextheChik3n"},"content":"            ui.showUnmarkTaskMessage(targetTask);","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":110,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":111,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":112,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"DextheChik3n"},"content":"     * Handles extracting description text.","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"DextheChik3n"},"content":"     * Adds \u003ccode\u003eTodo\u003c/code\u003e object to the TaskList.","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"DextheChik3n"},"content":"     * @param userInput text of the user input.","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"DextheChik3n"},"content":"    public void todoCommandHandler(String userInput) {","lastModifiedDate":"2023-10-02"},{"lineNumber":119,"author":{"gitId":"DextheChik3n"},"content":"        String description \u003d userInput.replace(\"todo \", \"\");","lastModifiedDate":"2023-10-02"},{"lineNumber":120,"author":{"gitId":"DextheChik3n"},"content":"        tasks.addToDo(description);","lastModifiedDate":"2023-10-02"},{"lineNumber":121,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":122,"author":{"gitId":"DextheChik3n"},"content":"        ui.showTaskAddedMessage(tasks.getTaskList());","lastModifiedDate":"2023-10-02"},{"lineNumber":123,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":124,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"DextheChik3n"},"content":"     * Handles extracting description and \u0027by\u0027 time period text.","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"DextheChik3n"},"content":"     * Adds \u003ccode\u003eDeadline\u003c/code\u003e object to the TaskList.","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"DextheChik3n"},"content":"     * @param userInput text of the user input.","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"DextheChik3n"},"content":"     * @throws AlanException If input format of /by is not correct.","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"DextheChik3n"},"content":"    public void deadlineCommandHandler(String userInput) throws AlanException {","lastModifiedDate":"2023-10-02"},{"lineNumber":133,"author":{"gitId":"DextheChik3n"},"content":"        String filteredUserInput \u003d userInput.replace(\"deadline \", \"\");","lastModifiedDate":"2023-10-02"},{"lineNumber":134,"author":{"gitId":"DextheChik3n"},"content":"        String[] data \u003d filteredUserInput.split(\" /by \");","lastModifiedDate":"2023-10-02"},{"lineNumber":135,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":136,"author":{"gitId":"DextheChik3n"},"content":"        checkDeadlineInputFormat(data);","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"DextheChik3n"},"content":"        String description \u003d data[0];","lastModifiedDate":"2023-10-02"},{"lineNumber":139,"author":{"gitId":"DextheChik3n"},"content":"        String by \u003d data[1];","lastModifiedDate":"2023-10-02"},{"lineNumber":140,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":141,"author":{"gitId":"DextheChik3n"},"content":"        String parsedBy \u003d parseDate(by);","lastModifiedDate":"2023-10-02"},{"lineNumber":142,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":143,"author":{"gitId":"DextheChik3n"},"content":"        tasks.addDeadline(description, parsedBy);","lastModifiedDate":"2023-10-02"},{"lineNumber":144,"author":{"gitId":"DextheChik3n"},"content":"        ui.showTaskAddedMessage(tasks.getTaskList());","lastModifiedDate":"2023-10-02"},{"lineNumber":145,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":146,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":147,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"DextheChik3n"},"content":"     * Handles extracting description, \u0027from\u0027 time period and \u0027to\u0027 time period text.","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"DextheChik3n"},"content":"     * Adds \u003ccode\u003eEvent\u003c/code\u003e object to the TaskList.","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"DextheChik3n"},"content":"     * @param userInput text of the user input.","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"DextheChik3n"},"content":"     * @throws AlanException If input format of /from or /to is not correct.","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"DextheChik3n"},"content":"    public void eventCommandHandler(String userInput) throws AlanException {","lastModifiedDate":"2023-10-02"},{"lineNumber":155,"author":{"gitId":"DextheChik3n"},"content":"        String filteredUserInput \u003d userInput.replace(\"event \", \"\");","lastModifiedDate":"2023-10-02"},{"lineNumber":156,"author":{"gitId":"DextheChik3n"},"content":"        String[] splitDescriptionAndDate \u003d filteredUserInput.split(\" /from \");","lastModifiedDate":"2023-10-02"},{"lineNumber":157,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":158,"author":{"gitId":"DextheChik3n"},"content":"        checkEventInputFromFormat(splitDescriptionAndDate);","lastModifiedDate":"2023-10-02"},{"lineNumber":159,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":160,"author":{"gitId":"DextheChik3n"},"content":"        String[] splitFromAndTo \u003d splitDescriptionAndDate[1].split(\" /to \");","lastModifiedDate":"2023-10-02"},{"lineNumber":161,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":162,"author":{"gitId":"DextheChik3n"},"content":"        checkEventInputToFormat(splitFromAndTo);","lastModifiedDate":"2023-10-02"},{"lineNumber":163,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":164,"author":{"gitId":"DextheChik3n"},"content":"        String description \u003d splitDescriptionAndDate[0];","lastModifiedDate":"2023-10-02"},{"lineNumber":165,"author":{"gitId":"DextheChik3n"},"content":"        String from \u003d splitFromAndTo[0];","lastModifiedDate":"2023-10-02"},{"lineNumber":166,"author":{"gitId":"DextheChik3n"},"content":"        String to \u003d splitFromAndTo[1];","lastModifiedDate":"2023-10-02"},{"lineNumber":167,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":168,"author":{"gitId":"DextheChik3n"},"content":"        String parsedFrom \u003d parseDate(from);","lastModifiedDate":"2023-10-02"},{"lineNumber":169,"author":{"gitId":"DextheChik3n"},"content":"        String parsedTo \u003d parseDate(to);","lastModifiedDate":"2023-10-02"},{"lineNumber":170,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":171,"author":{"gitId":"DextheChik3n"},"content":"        tasks.addEvent(description, parsedFrom, parsedTo);","lastModifiedDate":"2023-10-02"},{"lineNumber":172,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":173,"author":{"gitId":"DextheChik3n"},"content":"        ui.showTaskAddedMessage(tasks.getTaskList());","lastModifiedDate":"2023-10-02"},{"lineNumber":174,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":175,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":176,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":177,"author":{"gitId":"DextheChik3n"},"content":"     * Handles extracting the user\u0027s selected task index.","lastModifiedDate":"2023-10-03"},{"lineNumber":178,"author":{"gitId":"DextheChik3n"},"content":"     * Deletes selected task from TaskList.","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":180,"author":{"gitId":"DextheChik3n"},"content":"     * @param userInput text of the user input.","lastModifiedDate":"2023-10-03"},{"lineNumber":181,"author":{"gitId":"DextheChik3n"},"content":"     * @throws AlanException If the task index is not found in TaskList.","lastModifiedDate":"2023-10-03"},{"lineNumber":182,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"DextheChik3n"},"content":"    public void deleteCommandHandler(String userInput) throws AlanException {","lastModifiedDate":"2023-10-02"},{"lineNumber":184,"author":{"gitId":"DextheChik3n"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-10-02"},{"lineNumber":185,"author":{"gitId":"DextheChik3n"},"content":"        int selectedTaskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-10-02"},{"lineNumber":186,"author":{"gitId":"DextheChik3n"},"content":"        checkOutOfTaskListIndex(selectedTaskIndex, tasks.getTaskList());","lastModifiedDate":"2023-10-02"},{"lineNumber":187,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":188,"author":{"gitId":"DextheChik3n"},"content":"        Task targetTask \u003d tasks.getSelectedTask(selectedTaskIndex);","lastModifiedDate":"2023-10-02"},{"lineNumber":189,"author":{"gitId":"DextheChik3n"},"content":"        ui.showDeleteTaskMessage(targetTask);","lastModifiedDate":"2023-10-02"},{"lineNumber":190,"author":{"gitId":"DextheChik3n"},"content":"        tasks.removeTask(selectedTaskIndex);","lastModifiedDate":"2023-10-02"},{"lineNumber":191,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":192,"author":{"gitId":"DextheChik3n"},"content":"        int numberOfTasks \u003d tasks.getTaskListSize();","lastModifiedDate":"2023-10-02"},{"lineNumber":193,"author":{"gitId":"DextheChik3n"},"content":"        ui.showNumberOfTasksMessage(numberOfTasks);","lastModifiedDate":"2023-10-02"},{"lineNumber":194,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":195,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":196,"author":{"gitId":"DextheChik3n"},"content":"    public void findCommandHandler(String userInput) {","lastModifiedDate":"2023-10-02"},{"lineNumber":197,"author":{"gitId":"DextheChik3n"},"content":"        String findText \u003d userInput.replace(\"find \", \"\");","lastModifiedDate":"2023-10-02"},{"lineNumber":198,"author":{"gitId":"DextheChik3n"},"content":"        TaskList findResultTasks \u003d new TaskList();","lastModifiedDate":"2023-10-02"},{"lineNumber":199,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":200,"author":{"gitId":"DextheChik3n"},"content":"        for (Task task : tasks.getTaskList()) {","lastModifiedDate":"2023-10-02"},{"lineNumber":201,"author":{"gitId":"DextheChik3n"},"content":"            String taskDescription \u003d task.getDescription();","lastModifiedDate":"2023-10-02"},{"lineNumber":202,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":203,"author":{"gitId":"DextheChik3n"},"content":"            if (taskDescription.matches(\"(.*)\" + findText + \"(.*)\")) {","lastModifiedDate":"2023-10-02"},{"lineNumber":204,"author":{"gitId":"DextheChik3n"},"content":"                findResultTasks.getTaskList().add(task);","lastModifiedDate":"2023-10-02"},{"lineNumber":205,"author":{"gitId":"DextheChik3n"},"content":"            }","lastModifiedDate":"2023-10-02"},{"lineNumber":206,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":207,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":208,"author":{"gitId":"DextheChik3n"},"content":"        ui.showToUser(MESSAGE_FIND_TASK);","lastModifiedDate":"2023-10-02"},{"lineNumber":209,"author":{"gitId":"DextheChik3n"},"content":"        ui.printTasks(findResultTasks.getTaskList());","lastModifiedDate":"2023-10-02"},{"lineNumber":210,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":211,"author":{"gitId":"DextheChik3n"},"content":"    private String parseDate(String inputDate) {","lastModifiedDate":"2023-10-02"},{"lineNumber":212,"author":{"gitId":"DextheChik3n"},"content":"        if (isValidDate(inputDate)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":213,"author":{"gitId":"DextheChik3n"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(inputDate);","lastModifiedDate":"2023-10-02"},{"lineNumber":214,"author":{"gitId":"DextheChik3n"},"content":"            inputDate \u003d parsedDate.format(DateTimeFormatter.ofPattern(DATE_PARSE_PATTERN));","lastModifiedDate":"2023-10-02"},{"lineNumber":215,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":216,"author":{"gitId":"DextheChik3n"},"content":"        return inputDate;","lastModifiedDate":"2023-10-02"},{"lineNumber":217,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":218,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":219,"author":{"gitId":"DextheChik3n"},"content":"    public boolean isValidDate(String inDate) {","lastModifiedDate":"2023-10-02"},{"lineNumber":220,"author":{"gitId":"DextheChik3n"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy-mm-dd\");","lastModifiedDate":"2023-10-02"},{"lineNumber":221,"author":{"gitId":"DextheChik3n"},"content":"        dateFormat.setLenient(false);","lastModifiedDate":"2023-10-02"},{"lineNumber":222,"author":{"gitId":"DextheChik3n"},"content":"        try {","lastModifiedDate":"2023-10-02"},{"lineNumber":223,"author":{"gitId":"DextheChik3n"},"content":"            dateFormat.parse(inDate.trim());","lastModifiedDate":"2023-10-02"},{"lineNumber":224,"author":{"gitId":"DextheChik3n"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-02"},{"lineNumber":225,"author":{"gitId":"DextheChik3n"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":226,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":227,"author":{"gitId":"DextheChik3n"},"content":"        return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":228,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":229,"author":{"gitId":"DextheChik3n"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"DextheChik3n":229}},{"path":"src/main/java/alan/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"package alan.storage;","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.TaskList;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.exception.AlanException;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.task.Deadline;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.task.Event;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.task.Task;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.task.TaskType;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.task.Todo;","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"DextheChik3n"},"content":"import alan.ui.Ui;","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"DextheChik3n"},"content":"import java.io.File;","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"DextheChik3n"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"DextheChik3n"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"DextheChik3n"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"DextheChik3n"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"DextheChik3n"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"DextheChik3n"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"DextheChik3n"},"content":"import static alan.common.Messages.MESSAGE_INVALID_TASK_TYPE_FOUND;","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"DextheChik3n"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"DextheChik3n"},"content":" * Handles reading from and storing data to the text file.","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"DextheChik3n"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"DextheChik3n"},"content":"public class Storage {","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"DextheChik3n"},"content":"    private String filePath;","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"DextheChik3n"},"content":"    private ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"DextheChik3n"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"DextheChik3n"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"DextheChik3n"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"DextheChik3n"},"content":"        this.taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"DextheChik3n"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"DextheChik3n"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"DextheChik3n"},"content":"        readFileHandler();","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"DextheChik3n"},"content":"        return taskArrayList;","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"DextheChik3n"},"content":"    public void save() throws Exception {","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"DextheChik3n"},"content":"        saveFileHandler();","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"DextheChik3n"},"content":"     * Reads the text file from the specified file path and stores the tasks in an ArrayList.","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"DextheChik3n"},"content":"     * @throws FileNotFoundException If file is not found at the specified file path.","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"DextheChik3n"},"content":"    private void readFileHandler() throws FileNotFoundException {","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"DextheChik3n"},"content":"        String userWorkingDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"DextheChik3n"},"content":"        java.nio.file.Path tasksFilePath \u003d java.nio.file.Paths.get(userWorkingDirectory, filePath);","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"DextheChik3n"},"content":"        File textFile \u003d new File(String.valueOf(tasksFilePath));","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"DextheChik3n"},"content":"        if (textFile.length() !\u003d 0) {","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"DextheChik3n"},"content":"            Scanner s \u003d new Scanner(textFile);","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"DextheChik3n"},"content":"            ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"DextheChik3n"},"content":"            while (s.hasNext()){","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"DextheChik3n"},"content":"                list.add(s.nextLine());","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"DextheChik3n"},"content":"            }","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"DextheChik3n"},"content":"            s.close();","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"DextheChik3n"},"content":"            taskArrayList \u003d extractAndStoreDataInTaskList(list);","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"DextheChik3n"},"content":"     * Handles the extraction of each parameter.","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"DextheChik3n"},"content":"     * Creates a task using the extracted parameters and adds in TaskList.","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"DextheChik3n"},"content":"     *  @return ArrayList containing tasks extracted from the list of strings.","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"DextheChik3n"},"content":"    private ArrayList\u003cTask\u003e extractAndStoreDataInTaskList(ArrayList\u003cString\u003e list) {","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"DextheChik3n"},"content":"        //todo: after this line should check if the data is in correct format","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"DextheChik3n"},"content":"        for (String task : list) {","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"DextheChik3n"},"content":"            String[] splitTaskString \u003d task.split(\" \\\\| \");","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"DextheChik3n"},"content":"            String taskType \u003d splitTaskString[0];","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"DextheChik3n"},"content":"            String isDoneString \u003d splitTaskString[1];","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"DextheChik3n"},"content":"            String description \u003d splitTaskString[2];","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"DextheChik3n"},"content":"            boolean isDone \u003d isDoneStringToBoolean(isDoneString);","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"DextheChik3n"},"content":"            try {","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"DextheChik3n"},"content":"                addTaskToTaskList(taskType, description, splitTaskString);","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"DextheChik3n"},"content":"            } catch (AlanException e) {","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"DextheChik3n"},"content":"                ui.showToUser(e.getMessage());","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"DextheChik3n"},"content":"            }","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"DextheChik3n"},"content":"            int lastTaskIndex \u003d taskArrayList.size() - 1;","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"DextheChik3n"},"content":"            taskArrayList.get(lastTaskIndex).setDone(isDone);","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"DextheChik3n"},"content":"        return taskArrayList;","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"DextheChik3n"},"content":"     * Adds task to ArrayList according to the respective taskType.","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"DextheChik3n"},"content":"     * @throws AlanException If taskType read is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"DextheChik3n"},"content":"    public void addTaskToTaskList(String taskType, String description, String[] splitTaskString) throws AlanException {","lastModifiedDate":"2023-10-02"},{"lineNumber":100,"author":{"gitId":"DextheChik3n"},"content":"        switch (taskType) {","lastModifiedDate":"2023-10-02"},{"lineNumber":101,"author":{"gitId":"DextheChik3n"},"content":"        case \"T\":","lastModifiedDate":"2023-10-02"},{"lineNumber":102,"author":{"gitId":"DextheChik3n"},"content":"            taskArrayList.add(new Todo(description));","lastModifiedDate":"2023-10-02"},{"lineNumber":103,"author":{"gitId":"DextheChik3n"},"content":"            break;","lastModifiedDate":"2023-10-02"},{"lineNumber":104,"author":{"gitId":"DextheChik3n"},"content":"        case \"D\":","lastModifiedDate":"2023-10-02"},{"lineNumber":105,"author":{"gitId":"DextheChik3n"},"content":"            String by \u003d splitTaskString[3];","lastModifiedDate":"2023-10-02"},{"lineNumber":106,"author":{"gitId":"DextheChik3n"},"content":"            taskArrayList.add(new Deadline(description, by));","lastModifiedDate":"2023-10-02"},{"lineNumber":107,"author":{"gitId":"DextheChik3n"},"content":"            break;","lastModifiedDate":"2023-10-02"},{"lineNumber":108,"author":{"gitId":"DextheChik3n"},"content":"        case \"E\":","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"DextheChik3n"},"content":"            String date \u003d splitTaskString[3];","lastModifiedDate":"2023-10-02"},{"lineNumber":110,"author":{"gitId":"DextheChik3n"},"content":"            String[] splitDate \u003d date.split(\"-\");","lastModifiedDate":"2023-10-02"},{"lineNumber":111,"author":{"gitId":"DextheChik3n"},"content":"            String from \u003d splitDate[0];","lastModifiedDate":"2023-10-02"},{"lineNumber":112,"author":{"gitId":"DextheChik3n"},"content":"            String to \u003d splitDate[1];","lastModifiedDate":"2023-10-02"},{"lineNumber":113,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":114,"author":{"gitId":"DextheChik3n"},"content":"            taskArrayList.add(new Event(description, from, to));","lastModifiedDate":"2023-10-02"},{"lineNumber":115,"author":{"gitId":"DextheChik3n"},"content":"            break;","lastModifiedDate":"2023-10-02"},{"lineNumber":116,"author":{"gitId":"DextheChik3n"},"content":"        default:","lastModifiedDate":"2023-10-02"},{"lineNumber":117,"author":{"gitId":"DextheChik3n"},"content":"            new AlanException(MESSAGE_INVALID_TASK_TYPE_FOUND);","lastModifiedDate":"2023-10-02"},{"lineNumber":118,"author":{"gitId":"DextheChik3n"},"content":"            break;","lastModifiedDate":"2023-10-02"},{"lineNumber":119,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":120,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":121,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":122,"author":{"gitId":"DextheChik3n"},"content":"    private boolean isDoneStringToBoolean (String string) {","lastModifiedDate":"2023-10-02"},{"lineNumber":123,"author":{"gitId":"DextheChik3n"},"content":"        if (string.equals(\"1\")) {","lastModifiedDate":"2023-10-02"},{"lineNumber":124,"author":{"gitId":"DextheChik3n"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":126,"author":{"gitId":"DextheChik3n"},"content":"        return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":127,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":128,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":129,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"DextheChik3n"},"content":"     * Saves the tasks in a text file at th specified path.","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"DextheChik3n"},"content":"     * @throws Exception If file or folder does not exist in the specified path.","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"DextheChik3n"},"content":"    private void saveFileHandler() throws Exception {","lastModifiedDate":"2023-10-02"},{"lineNumber":135,"author":{"gitId":"DextheChik3n"},"content":"        String userWorkingDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-10-02"},{"lineNumber":136,"author":{"gitId":"DextheChik3n"},"content":"        java.nio.file.Path tasksFilePath \u003d java.nio.file.Paths.get(userWorkingDirectory, filePath);","lastModifiedDate":"2023-10-02"},{"lineNumber":137,"author":{"gitId":"DextheChik3n"},"content":"        java.nio.file.Path dataFolderPath \u003d tasksFilePath.getParent();","lastModifiedDate":"2023-10-02"},{"lineNumber":138,"author":{"gitId":"DextheChik3n"},"content":"        File textFile \u003d new File(String.valueOf(tasksFilePath));","lastModifiedDate":"2023-10-02"},{"lineNumber":139,"author":{"gitId":"DextheChik3n"},"content":"        File folder \u003d new File(String.valueOf(dataFolderPath));","lastModifiedDate":"2023-10-02"},{"lineNumber":140,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":141,"author":{"gitId":"DextheChik3n"},"content":"        if (!Files.exists(dataFolderPath)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":142,"author":{"gitId":"DextheChik3n"},"content":"            folder.mkdir();","lastModifiedDate":"2023-10-02"},{"lineNumber":143,"author":{"gitId":"DextheChik3n"},"content":"            ui.showFolderNotFoundMessage(userWorkingDirectory);","lastModifiedDate":"2023-10-02"},{"lineNumber":144,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":145,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":146,"author":{"gitId":"DextheChik3n"},"content":"        if (!Files.exists(tasksFilePath)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":147,"author":{"gitId":"DextheChik3n"},"content":"            textFile.createNewFile();","lastModifiedDate":"2023-10-02"},{"lineNumber":148,"author":{"gitId":"DextheChik3n"},"content":"            ui.showFileNotFoundMessage(dataFolderPath);","lastModifiedDate":"2023-10-02"},{"lineNumber":149,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":150,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":151,"author":{"gitId":"DextheChik3n"},"content":"        //input arraylist data into text file","lastModifiedDate":"2023-10-02"},{"lineNumber":152,"author":{"gitId":"DextheChik3n"},"content":"        for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2023-10-02"},{"lineNumber":153,"author":{"gitId":"DextheChik3n"},"content":"            String taskDataRow \u003d getStringOfTaskInformation(i);","lastModifiedDate":"2023-10-02"},{"lineNumber":154,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":155,"author":{"gitId":"DextheChik3n"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2023-10-02"},{"lineNumber":156,"author":{"gitId":"DextheChik3n"},"content":"                writeToFile(tasksFilePath.toString(), taskDataRow);","lastModifiedDate":"2023-10-02"},{"lineNumber":157,"author":{"gitId":"DextheChik3n"},"content":"            } else {","lastModifiedDate":"2023-10-02"},{"lineNumber":158,"author":{"gitId":"DextheChik3n"},"content":"                appendToFile(tasksFilePath.toString(), taskDataRow);","lastModifiedDate":"2023-10-02"},{"lineNumber":159,"author":{"gitId":"DextheChik3n"},"content":"            }","lastModifiedDate":"2023-10-02"},{"lineNumber":160,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":161,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":162,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":163,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"DextheChik3n"},"content":"     * Formats the task into a string.","lastModifiedDate":"2023-10-03"},{"lineNumber":165,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":166,"author":{"gitId":"DextheChik3n"},"content":"     * @param i index of the task in ArrayList.","lastModifiedDate":"2023-10-03"},{"lineNumber":167,"author":{"gitId":"DextheChik3n"},"content":"     * @return a string of the formatted task information to be stored in the text file.","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"DextheChik3n"},"content":"    private String getStringOfTaskInformation(int i) {","lastModifiedDate":"2023-10-02"},{"lineNumber":170,"author":{"gitId":"DextheChik3n"},"content":"        Task task \u003d taskArrayList.get(i);","lastModifiedDate":"2023-10-02"},{"lineNumber":171,"author":{"gitId":"DextheChik3n"},"content":"        String taskDataRow \u003d task.getTaskType() + \" | \" + task.getStatusValue() + \" | \" + task.getDescription();","lastModifiedDate":"2023-10-02"},{"lineNumber":172,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":173,"author":{"gitId":"DextheChik3n"},"content":"        if (task.getTaskType() \u003d\u003d TaskType.D) {","lastModifiedDate":"2023-10-02"},{"lineNumber":174,"author":{"gitId":"DextheChik3n"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-10-02"},{"lineNumber":175,"author":{"gitId":"DextheChik3n"},"content":"            taskDataRow \u003d taskDataRow + \" | \" + deadline.getBy();","lastModifiedDate":"2023-10-02"},{"lineNumber":176,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":177,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":178,"author":{"gitId":"DextheChik3n"},"content":"        if (task.getTaskType() \u003d\u003d TaskType.E) {","lastModifiedDate":"2023-10-02"},{"lineNumber":179,"author":{"gitId":"DextheChik3n"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-10-02"},{"lineNumber":180,"author":{"gitId":"DextheChik3n"},"content":"            taskDataRow \u003d taskDataRow + \" | \" + event.getFrom() + \"-\" +event.getTo();","lastModifiedDate":"2023-10-02"},{"lineNumber":181,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":182,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":183,"author":{"gitId":"DextheChik3n"},"content":"        taskDataRow \u003d taskDataRow + \"\\n\";","lastModifiedDate":"2023-10-02"},{"lineNumber":184,"author":{"gitId":"DextheChik3n"},"content":"        return taskDataRow;","lastModifiedDate":"2023-10-02"},{"lineNumber":185,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":186,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":187,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":188,"author":{"gitId":"DextheChik3n"},"content":"     * Writes text to the text file at the specified file path.","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"DextheChik3n"},"content":"     * Will overwrite all text in text file.","lastModifiedDate":"2023-10-03"},{"lineNumber":190,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"DextheChik3n"},"content":"     * @param filePath file path of the text file.","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"DextheChik3n"},"content":"     * @param textToAdd text to be written to the text file.","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"DextheChik3n"},"content":"     * @throws IOException If I/O operations are interrupted.","lastModifiedDate":"2023-10-03"},{"lineNumber":194,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"DextheChik3n"},"content":"    private void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-10-02"},{"lineNumber":196,"author":{"gitId":"DextheChik3n"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-10-02"},{"lineNumber":197,"author":{"gitId":"DextheChik3n"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-10-02"},{"lineNumber":198,"author":{"gitId":"DextheChik3n"},"content":"        fw.close();","lastModifiedDate":"2023-10-02"},{"lineNumber":199,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":200,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":201,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":202,"author":{"gitId":"DextheChik3n"},"content":"     * Appends text to the text file at the specified file path.","lastModifiedDate":"2023-10-03"},{"lineNumber":203,"author":{"gitId":"DextheChik3n"},"content":"     * Will add text to text file.","lastModifiedDate":"2023-10-03"},{"lineNumber":204,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":205,"author":{"gitId":"DextheChik3n"},"content":"     * @param filePath file path of the text file.","lastModifiedDate":"2023-10-03"},{"lineNumber":206,"author":{"gitId":"DextheChik3n"},"content":"     * @param textToAdd text to be added to the text file.","lastModifiedDate":"2023-10-03"},{"lineNumber":207,"author":{"gitId":"DextheChik3n"},"content":"     * @throws IOException If I/O operations are interrupted.","lastModifiedDate":"2023-10-03"},{"lineNumber":208,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":209,"author":{"gitId":"DextheChik3n"},"content":"    private void appendToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-10-02"},{"lineNumber":210,"author":{"gitId":"DextheChik3n"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-10-02"},{"lineNumber":211,"author":{"gitId":"DextheChik3n"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-10-02"},{"lineNumber":212,"author":{"gitId":"DextheChik3n"},"content":"        fw.close();","lastModifiedDate":"2023-10-02"},{"lineNumber":213,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":214,"author":{"gitId":"DextheChik3n"},"content":"}","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"DextheChik3n":214}},{"path":"src/main/java/alan/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"package alan.ui;","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.exception.AlanException;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DextheChik3n"},"content":"import alan.data.task.Task;","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"DextheChik3n"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"DextheChik3n"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"DextheChik3n"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"DextheChik3n"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"DextheChik3n"},"content":"import static alan.common.Messages.MESSAGE_DELETE_TASK;","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"DextheChik3n"},"content":"import static alan.common.Messages.MESSAGE_GOODBYE;","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"DextheChik3n"},"content":"import static alan.common.Messages.MESSAGE_GREET;","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"DextheChik3n"},"content":"import static alan.common.Messages.MESSAGE_MARK_TASK;","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"DextheChik3n"},"content":"import static alan.common.Messages.MESSAGE_UNMARK_TASK;","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"DextheChik3n"},"content":"import static alan.common.Messages.MESSAGE_LIST_COMMAND;","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"DextheChik3n"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"DextheChik3n"},"content":" * Represents the text UI of the application","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"DextheChik3n"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"DextheChik3n"},"content":"public class Ui {","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"DextheChik3n"},"content":"    public static final int DISPLAYED_INDEX_OFFSET \u003d 1;","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"DextheChik3n"},"content":"    private static final String horizontalDivider \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"DextheChik3n"},"content":"    private final Scanner in;","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"DextheChik3n"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"DextheChik3n"},"content":"    public Ui() {","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"DextheChik3n"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"DextheChik3n"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"DextheChik3n"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"DextheChik3n"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"DextheChik3n"},"content":"     * Reads the user input","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"DextheChik3n"},"content":"     * @return string of the user\u0027s input text","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"DextheChik3n"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-10-01"},{"lineNumber":42,"author":{"gitId":"DextheChik3n"},"content":"        System.out.print(\"Input: \");","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"DextheChik3n"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":46,"author":{"gitId":"DextheChik3n"},"content":"        showToUser(horizontalDivider);","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":48,"author":{"gitId":"DextheChik3n"},"content":"        return userInput;","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":50,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":51,"author":{"gitId":"DextheChik3n"},"content":"    public void printHorizontalLine() {","lastModifiedDate":"2023-10-01"},{"lineNumber":52,"author":{"gitId":"DextheChik3n"},"content":"        showToUser(horizontalDivider);","lastModifiedDate":"2023-10-01"},{"lineNumber":53,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":54,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"DextheChik3n"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-10-01"},{"lineNumber":56,"author":{"gitId":"DextheChik3n"},"content":"        showToUser(","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"DextheChik3n"},"content":"                horizontalDivider,","lastModifiedDate":"2023-10-01"},{"lineNumber":58,"author":{"gitId":"DextheChik3n"},"content":"                MESSAGE_GREET,","lastModifiedDate":"2023-10-01"},{"lineNumber":59,"author":{"gitId":"DextheChik3n"},"content":"                horizontalDivider);","lastModifiedDate":"2023-10-01"},{"lineNumber":60,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":61,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":62,"author":{"gitId":"DextheChik3n"},"content":"    public void showExitMessage() {","lastModifiedDate":"2023-10-01"},{"lineNumber":63,"author":{"gitId":"DextheChik3n"},"content":"        showToUser(MESSAGE_GOODBYE);","lastModifiedDate":"2023-10-01"},{"lineNumber":64,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":65,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":66,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"DextheChik3n"},"content":"     * Prints all the \u003ccode\u003eTask\u003c/code\u003e objects in a list format","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"DextheChik3n"},"content":"     * @param taskList tasks in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"DextheChik3n"},"content":"    public void printTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"DextheChik3n"},"content":"        showToUser(MESSAGE_LIST_COMMAND);","lastModifiedDate":"2023-10-01"},{"lineNumber":73,"author":{"gitId":"DextheChik3n"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-10-01"},{"lineNumber":74,"author":{"gitId":"DextheChik3n"},"content":"            System.out.print((i + DISPLAYED_INDEX_OFFSET) + \". \");","lastModifiedDate":"2023-10-01"},{"lineNumber":75,"author":{"gitId":"DextheChik3n"},"content":"            System.out.println(taskList.get(i));","lastModifiedDate":"2023-10-01"},{"lineNumber":76,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":77,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":78,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":79,"author":{"gitId":"DextheChik3n"},"content":"    public void showMarkTaskMessage(Task task) {","lastModifiedDate":"2023-10-01"},{"lineNumber":80,"author":{"gitId":"DextheChik3n"},"content":"        showToUser(MESSAGE_MARK_TASK);","lastModifiedDate":"2023-10-01"},{"lineNumber":81,"author":{"gitId":"DextheChik3n"},"content":"        System.out.println(task);","lastModifiedDate":"2023-10-01"},{"lineNumber":82,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":83,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":84,"author":{"gitId":"DextheChik3n"},"content":"    public void showUnmarkTaskMessage(Task task) {","lastModifiedDate":"2023-10-01"},{"lineNumber":85,"author":{"gitId":"DextheChik3n"},"content":"        showToUser(MESSAGE_UNMARK_TASK);","lastModifiedDate":"2023-10-01"},{"lineNumber":86,"author":{"gitId":"DextheChik3n"},"content":"        System.out.println(task);","lastModifiedDate":"2023-10-01"},{"lineNumber":87,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":88,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":89,"author":{"gitId":"DextheChik3n"},"content":"    public void showDeleteTaskMessage(Task task) {","lastModifiedDate":"2023-10-01"},{"lineNumber":90,"author":{"gitId":"DextheChik3n"},"content":"        showToUser(MESSAGE_DELETE_TASK);","lastModifiedDate":"2023-10-01"},{"lineNumber":91,"author":{"gitId":"DextheChik3n"},"content":"        System.out.println(task);","lastModifiedDate":"2023-10-01"},{"lineNumber":92,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":93,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":94,"author":{"gitId":"DextheChik3n"},"content":"    public void showNumberOfTasksMessage(int numberOfTasks) {","lastModifiedDate":"2023-10-01"},{"lineNumber":95,"author":{"gitId":"DextheChik3n"},"content":"        if (numberOfTasks \u003d\u003d 1) {","lastModifiedDate":"2023-10-01"},{"lineNumber":96,"author":{"gitId":"DextheChik3n"},"content":"            System.out.println(\"Dude! You\u0027ve got a solid \" + numberOfTasks + \" task lined up on your list now!\");","lastModifiedDate":"2023-10-01"},{"lineNumber":97,"author":{"gitId":"DextheChik3n"},"content":"        } else {","lastModifiedDate":"2023-10-01"},{"lineNumber":98,"author":{"gitId":"DextheChik3n"},"content":"            System.out.println(\"Dude! You\u0027ve got a solid \" + numberOfTasks + \" tasks lined up on your list now!\");","lastModifiedDate":"2023-10-01"},{"lineNumber":99,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":100,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":101,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":102,"author":{"gitId":"DextheChik3n"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"DextheChik3n"},"content":"     * Prints the last \u003ccode\u003eTask\u003c/code\u003e object added to the taskList","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"DextheChik3n"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"DextheChik3n"},"content":"     * @param taskList tasks in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"DextheChik3n"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"DextheChik3n"},"content":"    public void showTaskAddedMessage(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-01"},{"lineNumber":108,"author":{"gitId":"DextheChik3n"},"content":"        int numberOfTasks \u003d taskList.size();","lastModifiedDate":"2023-10-01"},{"lineNumber":109,"author":{"gitId":"DextheChik3n"},"content":"        int lastTaskIndex \u003d taskList.size() - 1;","lastModifiedDate":"2023-10-01"},{"lineNumber":110,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":111,"author":{"gitId":"DextheChik3n"},"content":"        System.out.println(\"added: \" + taskList.get(lastTaskIndex));","lastModifiedDate":"2023-10-01"},{"lineNumber":112,"author":{"gitId":"DextheChik3n"},"content":"        showNumberOfTasksMessage(numberOfTasks);","lastModifiedDate":"2023-10-01"},{"lineNumber":113,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":114,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":115,"author":{"gitId":"DextheChik3n"},"content":"    public void showFolderNotFoundMessage(String userWorkingDirectory) {","lastModifiedDate":"2023-10-01"},{"lineNumber":116,"author":{"gitId":"DextheChik3n"},"content":"        System.out.println(\"Data Folder was not found!\\nIt\u0027s ok... new data folder has been created in \" + userWorkingDirectory);","lastModifiedDate":"2023-10-01"},{"lineNumber":117,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":118,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":119,"author":{"gitId":"DextheChik3n"},"content":"    public void showFileNotFoundMessage(java.nio.file.Path dataFolderPath) {","lastModifiedDate":"2023-10-01"},{"lineNumber":120,"author":{"gitId":"DextheChik3n"},"content":"        System.out.println(\"tasks.txt was not found!\\nIt\u0027s ok... new tasks.txt has been created in \" + dataFolderPath);","lastModifiedDate":"2023-10-01"},{"lineNumber":121,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":122,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":123,"author":{"gitId":"DextheChik3n"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-10-02"},{"lineNumber":124,"author":{"gitId":"DextheChik3n"},"content":"        System.out.println(\"Yo dude something ain\u0027t loading right :/\");","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":126,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":127,"author":{"gitId":"DextheChik3n"},"content":"    public void showSavingError() {","lastModifiedDate":"2023-10-02"},{"lineNumber":128,"author":{"gitId":"DextheChik3n"},"content":"        System.out.println(\"Sorry man I can\u0027t seem to save to the text file D:\");","lastModifiedDate":"2023-10-02"},{"lineNumber":129,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":130,"author":{"gitId":"DextheChik3n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":131,"author":{"gitId":"DextheChik3n"},"content":"    public void showToUser(String... message) {","lastModifiedDate":"2023-10-01"},{"lineNumber":132,"author":{"gitId":"DextheChik3n"},"content":"        for (String m : message) {","lastModifiedDate":"2023-10-01"},{"lineNumber":133,"author":{"gitId":"DextheChik3n"},"content":"            System.out.println(m);","lastModifiedDate":"2023-10-01"},{"lineNumber":134,"author":{"gitId":"DextheChik3n"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":135,"author":{"gitId":"DextheChik3n"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":136,"author":{"gitId":"DextheChik3n"},"content":"}","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"DextheChik3n":136}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DextheChik3n"},"content":"todo borrow book","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"DextheChik3n"},"content":"list","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"DextheChik3n"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"DextheChik3n"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"DextheChik3n"},"content":"mark 1","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"DextheChik3n"},"content":"unmark 1","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"DextheChik3n"},"content":"list","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"DextheChik3n"},"content":"bye","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"DextheChik3n":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"DextheChik3n"},"content":"java -classpath ..\\bin Alan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DextheChik3n":1,"-":20}}]
