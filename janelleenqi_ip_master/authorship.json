[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"# User Guide for Luke","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"### Task List","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"Luke keeps a task list of all the todo, deadlines and events.","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"### Mark as Completed/Incomplete","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"You can mark tasks as completed or incompleted.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"### Store Memory","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"When closing Luke, all current tasks are stored in a txt file.","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"The next time Luke is opened, all tasks in the txt file is loaded back into Luke.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"### `todo` - Add todo","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"Add new task (todo) to your list.","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"Format of usage:","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"`todo DESCRIPTION`","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"Example of usage:","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"`todo read book`","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"Expected outcome:","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"New todo task added, so there will be a confirmation message.","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"    [T][ ] read book","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"    Now you have 1 tasks in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"### `deadline` - Add deadline","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"Add new task (deadline) to your list.","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"Format of usage:","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"`deadline DESCRIPTION /by DATE`","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"Example of usage:","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"`deadline return book /by next saturday`","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"Expected outcome:","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"New deadline task added, so there will be a confirmation message.","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"    [D][ ] return book (do by: next saturday)","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"### `event` - Add event","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"Add new task (event) to your list.","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"Format of usage:","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"`event DESCRIPTION /from STARTDATE /to ENDDATE`","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"Example of usage:","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"`event reading club session /from friday 4 /to 6pm`","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"Expected outcome:","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"New event task added, so there will be a confirmation message.","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"    [E][ ] reading club session (from: friday 4 to: 6pm)","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"    Now you have 1 tasks in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"### `list` - Lists all tasks","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"Lists all tasks in the task list.","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"`list`","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"Expected outcome:","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"This will display all your tasks, including their type (todo, deadline, event), their task description and their status (completed or not).","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"    1.\t[T][ ] read book","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"    2.\t[D][ ] return book (do by: next saturday)","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"    3.\t[E][ ] reading club session (from: friday 4 to: 6pm)","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"### `mark` - Mark a task as completed","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"Mark a task as completed using the \"mark\" command followed by the task number.","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"Format of usage:","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"`mark INDEX`","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"Example of usage:","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"`mark 1`","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"Expected outcome:","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"This will mark the task with index 1 as completed.","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"    Woohoo! You have accomplished:","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"    [T][X] read book","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"### `unmark` - Mark a task as incomplete","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"Mark a task as incomplete using the \"unmark\" command followed by the task number.","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"Format of usage:","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"`unmark INDEX`","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"Example of usage:","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"`unmark 1`","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"janelleenqi"},"content":"Expected outcome:","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"This will mark the task with index 1 as incomplete.","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"    HA! You still have to complete:","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"    [T][ ] read book","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"### `find` - Find user\u0027s input in tasks descriptions","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"Show the corresponding tasks.","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"Format of usage:","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"`find KEYWORD`","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":157,"author":{"gitId":"janelleenqi"},"content":"Example of usage:","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":159,"author":{"gitId":"janelleenqi"},"content":"`find book`","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"Expected outcome:","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"List of tasks that have descriptions matching the user\u0027s input.","lastModifiedDate":"2023-10-06"},{"lineNumber":164,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":165,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"janelleenqi"},"content":"    Here are the matching tasks in your list:","lastModifiedDate":"2023-10-06"},{"lineNumber":167,"author":{"gitId":"janelleenqi"},"content":"    1.\t[T][ ] read book","lastModifiedDate":"2023-10-06"},{"lineNumber":168,"author":{"gitId":"janelleenqi"},"content":"    2.\t[D][ ] return book (do by: next saturday)","lastModifiedDate":"2023-10-06"},{"lineNumber":169,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":171,"author":{"gitId":"janelleenqi"},"content":"### `delete` - Remove a task from the task list","lastModifiedDate":"2023-10-06"},{"lineNumber":172,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":173,"author":{"gitId":"janelleenqi"},"content":"To delete a task from your list, use the \"delete\" command followed by the task number.","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":175,"author":{"gitId":"janelleenqi"},"content":"Format of usage:","lastModifiedDate":"2023-10-06"},{"lineNumber":176,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":177,"author":{"gitId":"janelleenqi"},"content":"`delete INDEX`","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":179,"author":{"gitId":"janelleenqi"},"content":"Example of usage:","lastModifiedDate":"2023-10-06"},{"lineNumber":180,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":181,"author":{"gitId":"janelleenqi"},"content":"`delete 2`","lastModifiedDate":"2023-10-06"},{"lineNumber":182,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"Expected outcome:","lastModifiedDate":"2023-10-06"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":185,"author":{"gitId":"janelleenqi"},"content":"This will remove the task with index 2 from your list.","lastModifiedDate":"2023-10-06"},{"lineNumber":186,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":187,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":188,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":189,"author":{"gitId":"janelleenqi"},"content":"    Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-10-06"},{"lineNumber":190,"author":{"gitId":"janelleenqi"},"content":"    [D][ ] return book (do by: next saturday)","lastModifiedDate":"2023-10-06"},{"lineNumber":191,"author":{"gitId":"janelleenqi"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":192,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":193,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":194,"author":{"gitId":"janelleenqi"},"content":"### `bye` - Close Luke","lastModifiedDate":"2023-10-06"},{"lineNumber":195,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":196,"author":{"gitId":"janelleenqi"},"content":"Close Luke and store memory to a txt file.","lastModifiedDate":"2023-10-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":200,"author":{"gitId":"janelleenqi"},"content":"`bye`","lastModifiedDate":"2023-10-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":204,"author":{"gitId":"janelleenqi"},"content":"Message whether memory is stored safely, and Luke is closed.","lastModifiedDate":"2023-10-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":206,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":207,"author":{"gitId":"janelleenqi"},"content":"    Memory Stored Safely!","lastModifiedDate":"2023-10-06"},{"lineNumber":208,"author":{"gitId":"janelleenqi"},"content":"    Bye. Hope to see you again soon!","lastModifiedDate":"2023-10-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"janelleenqi":185,"-":24}},{"path":"src/main/java/Luke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"import luke.actions.*;","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import luke.user.LukeException;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import luke.user.Ui;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import luke.tasks.*;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import luke.files.*;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":" * The Luke Class represents the main application class for Luke, a task management application.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":" * It initializes the user interface, task storage and task list.","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":" * It runs the application loop, managing the user interface, task storage, and task list.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"public class Luke {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    public static final String folderPath \u003d \"data\";","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    private Storage storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a Luke object.","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"    public Luke() {","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"        storage \u003d new Storage(folderPath);","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"            //ui.showNoMemoryFileError();","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"     * Runs the Luke application.","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"     * It displays a welcome message, reads user commands, and executes corresponding actions.","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"     * The application continues running until the user exits.","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"    public void run() {","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"        while (!isExit) {","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"            try {","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"                //c has theActionWord and parameters","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"                //tasks has ArrayList\u003cTask\u003e mainTaskList, ui has String echo, storage has ArrayList\u003cTask\u003e tasks","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"                isExit \u003d c.isExit(); //for bye command","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"            } catch (LukeException e) { //from Parser.parse","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"                ui.showError(\"\\t☹ An error occurred.\" + e.getMessage());","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"            } finally {","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"                ui.showLine();","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"     * The main method that starts the Luke application.","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"     * @param args The command-line arguments (not used in this application).","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"        new Luke().run();","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"janelleenqi":71}},{"path":"src/main/java/luke/actions/ActionType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.actions;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":" * The ActionType enum represents the various types of actions that can be performed in the LukeTime application.","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":" * Each action corresponds to a specific user command.","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"public enum ActionType {","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"    LIST, FIND, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, BYE","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"janelleenqi":9}},{"path":"src/main/java/luke/actions/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.actions;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import luke.files.Storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import luke.tasks.*;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import luke.user.LukeException;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import luke.user.Ui;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import static luke.actions.ActionType.*;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":" * The AddCommand Class represents a command for adding a task to the Luke application.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":" * It extends the Command class and includes specific behavior for adding different types of tasks.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"     * The latest task created as a result of the add command.","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    private Task latestTask;","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"     * Constructs an AddCommand with the specified action type and parameters.","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"     * @param theAction   The action type (TODO, DEADLINE, EVENT).","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"     * @param parameters  The parameters provided with the command (task description or task details).","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"     * @throws LukeException If there are missing or invalid arguments for creating the task.","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"    public AddCommand(ActionType theAction, String parameters) throws LukeException {","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"        super(theAction, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"        if (theAction \u003d\u003d TODO) {","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"            latestTask \u003d new Todo(parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"        if (theAction \u003d\u003d DEADLINE) {","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"            try {","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"                latestTask \u003d new Deadline(parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"            } catch (LukeException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"                System.out.println(\"\\t☹ OOPS!!! You have missing/invalid arguments for deadline. No changes have been made.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"                throw new LukeException();","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"        if (theAction \u003d\u003d EVENT) {","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"            try {","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"                latestTask \u003d new Event(parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"            } catch (LukeException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"                System.out.println(\"\\t☹ OOPS!!! You have missing/invalid arguments for event. No changes have been made.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"                throw new LukeException();","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"     * Executes the AddCommand to add the latest task to the task list.","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"     * @param tasks    The task list to which the task will be added.","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"     * @param storage  The storage for saving task changes (not used in this case).","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"        tasks.addTask(latestTask);","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\" + \"\\n\" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"janelleenqi":67}},{"path":"src/main/java/luke/actions/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.actions;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import luke.files.Storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import luke.tasks.*;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import luke.user.Ui;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":" * The Command class represents an abstract command in the Luke application.","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":" * It serves as the base class for more specific command types.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"public abstract class Command {","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"     * The type of action associated with the command.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    protected ActionType theAction;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"     * Additional parameters provided with the command (e.g., task description or task number).","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    protected String parameters;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"     * Flag indicating whether the command triggers an exit from the application.","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"    private boolean isExit;","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a Command with the specified action type and parameters.","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"     * @param theAction   The type of action associated with the command.","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"     * @param parameters  Additional parameters provided with the command.","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    public Command(ActionType theAction, String parameters) {","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"        this.theAction \u003d theAction;","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"     * Executes the command with the given task list, user interface, and storage.","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"     * @param tasks    The task list used for command execution.","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"     * @param storage  The storage for saving task changes (not used in all commands).","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"     * Sets the exit flag to indicate whether the command triggers an exit from the application.","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"     * @param isExit True if the command triggers an exit, false otherwise.","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"    public void setIsExit(boolean isExit) {","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"     * Checks if the command triggers an exit from the application.","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"     * @return True if the command triggers an exit, false otherwise.","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"        return isExit;","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"janelleenqi":66}},{"path":"src/main/java/luke/actions/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.actions;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import luke.files.Storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import luke.tasks.TaskList;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import luke.user.Ui;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":" * The DeleteCommand Class represents a command for deleting a task in the Luke application.","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":" * It extends the Command class and includes specific behavior for deleting a task.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a DeleteCommand with the specified action type and parameters.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"     * @param theAction   The action type (DELETE).","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"     * @param parameters  The parameters provided with the command (task number to delete).","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    public DeleteCommand(ActionType theAction, String parameters) {","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"        super(theAction, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"     * Prints a guide to provide user instructions for giving a DeleteCommand.","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"     * @param tasks The task list to check if it is empty for a more specific user guide.","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"    public void printIntegerGuide(TaskList tasks) {","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tNo tasks in task list. Please add a task before using \" + theAction + \".\");","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"        } else {","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tPlease input an integer from 1 to \" + tasks.size() + \".\");","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"     * Executes the DeleteCommand to remove a task from the task list when given valid arguments.","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"     * @param tasks    The task list from which the task will be deleted.","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"     * @param storage  The storage for saving task changes (not used in this case).","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"            int taskNumber \u003d Integer.parseInt(parameters) - 1;","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tNoted. I\u0027ve removed this task:\\n\" + tasks.get(taskNumber));","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"            tasks.removeTask(taskNumber);","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\t☹ OOPS!!! Your argument for \" + theAction + \" exceeds your task list.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\t☹ OOPS!!! Your argument for \" + theAction + \" need to be an integer.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"        printIntegerGuide(tasks);","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"janelleenqi":58}},{"path":"src/main/java/luke/actions/DoNothingCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.actions;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":" * The DoNothingCommand class represents a null command.","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":" * It extends the Command class and is used when there are errors or invalid input in the user\u0027s command.","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"public class DoNothingCommand extends Command {","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"    public DoNothingCommand(ActionType theAction, String parameters) {","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"        super(theAction, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"janelleenqi":12}},{"path":"src/main/java/luke/actions/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.actions;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import luke.files.Storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import luke.tasks.TaskList;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import luke.user.Ui;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":" * The ExitCommand class represents a command for exiting the Luke application.","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":" * It extends the Command class and includes specific behavior for exiting the application.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"     * Constructs an ExitCommand with the specified action type and parameters.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"     * @param theAction   The action type (BYE).","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"     * @param parameters  The parameters provided with the command (not used in this case).","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    public ExitCommand(ActionType theAction, String parameters) {","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"        super(theAction, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"     * Executes the ExitCommand to store the task list and close the application.","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"     * @param tasks    The task list to be stored.","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"     * @param storage  The storage for saving task changes.","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"     * @throws IllegalArgumentException If there is an issue with storing the task list.","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IllegalArgumentException{","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"        storage.store(tasks); // Store the task list","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"        setIsExit(true);","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"        ui.closeUi(); // Close the user interface","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"janelleenqi":37}},{"path":"src/main/java/luke/actions/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.actions;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import luke.files.Storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import luke.tasks.TaskList;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import luke.user.Ui;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":" * The FindCommand Class represents a command for finding tasks in the Luke application based on a keyword.","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":" * It extends the Command class and includes specific behavior for finding tasks.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a FindCommand with the specified action type and keyword parameters.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"     * @param theAction   The action type (FIND).","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"     * @param parameters  The keyword parameters used for searching tasks.","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    public FindCommand(ActionType theAction, String parameters) {","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"        super(theAction, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"     * Executes the FindCommand to search for and display tasks that match the provided keyword.","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"     * @param tasks    The task list to search within.","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"     * @param storage  The storage for saving task changes (not used in this case).","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"        int j \u003d 1;","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i +\u003d 1) {","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"            if (tasks.get(i).getDescription().contains(parameters)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"                System.out.println(\"\\t\" + j + \".\" + tasks.get(i));","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"                j +\u003d 1;","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"janelleenqi":41}},{"path":"src/main/java/luke/actions/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.actions;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import luke.files.Storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import luke.tasks.TaskList;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import luke.user.Ui;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":" * The ListCommand Class represents a command for listing tasks in the Luke application.","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":" * It extends the Command class and includes specific behavior for listing tasks.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"    public ListCommand(ActionType theAction, String parameters) {","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"        super(theAction, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"     * Executes the ListCommand to display the list of tasks.","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"     * @param tasks    The task list to be displayed.","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"     * @param storage  The storage for saving task changes (not used in this case).","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i +\u003d 1) {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\t\" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"janelleenqi":30}},{"path":"src/main/java/luke/actions/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.actions;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import luke.files.Storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import luke.tasks.TaskList;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import luke.user.Ui;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import static luke.actions.ActionType.MARK;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import static luke.actions.ActionType.UNMARK;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":" * The MarkCommand Class represents a command for marking or unmarking tasks as done in the Luke application.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":" * It extends the Command class and includes specific behavior for marking and unmarking tasks.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"    private boolean isDone;","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a MarkCommand with the specified action type and parameters.","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"     * @param theAction   The action type (MARK or UNMARK).","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"     * @param parameters  The parameters provided with the command.","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"    public MarkCommand(ActionType theAction, String parameters) {","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"        super(theAction, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        if (theAction \u003d\u003d MARK) {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"            isDone \u003d true;","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"        if (theAction \u003d\u003d UNMARK) {","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"            isDone \u003d false;","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"     * Prints a guide to provide user instructions for giving a DeleteCommand.","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"     * @param tasks The task list to check if it is empty for a more specific user guide.","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"    public void printIntegerGuide(TaskList tasks) {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tNo tasks in task list. Please add a task before using \" + theAction + \".\");","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"        } else {","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tPlease input an integer from 1 to \" + tasks.size() + \".\");","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"     * Executes the MarkCommand to mark or unmark a task as done in the task list when given valid arguments.","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"     * @param tasks    The task list where the task should be marked or unmarked.","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"     * @param storage  The storage for saving task changes.","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"            int taskNumber \u003d Integer.parseInt(parameters) - 1;","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"            tasks.get(taskNumber).setDone(isDone);","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(tasks.get(taskNumber));","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\t☹ OOPS!!! Your argument for \" + theAction + \" exceeds your task list.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\t☹ OOPS!!! Your argument for \" + theAction + \" need to be an integer.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"        printIntegerGuide(tasks);","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"janelleenqi":68}},{"path":"src/main/java/luke/actions/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.actions;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import luke.user.LukeException;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":" * The Parser Class handles the parsing of user input into valid commands.","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"public class Parser{","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"     * Parses the user\u0027s full command and returns an appropriate Command object.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"     * @param fullCommand The full user input command.","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"     * @return A Command object corresponding to the parsed command.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"     * @throws LukeException If an error specific to the LukeTime application occurs during parsing.","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"    public static Command parse(String fullCommand) throws LukeException {","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"        ActionType theAction;","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"        String parameters;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"        String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"        //to get parameters for actions \"mark\", \"unmark\" \u0026 \"delete\"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"        Command c;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"            ActionType action \u003d ActionType.valueOf(words[0].toUpperCase());","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"            theAction \u003d action;","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"            try {","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"                switch (action) {","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"                    case LIST:","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"                        parameters \u003d \"\";","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"                        c \u003d new ListCommand(theAction, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"                        break;","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"                    case FIND:","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"                        parameters \u003d fullCommand.substring(5);","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"                        c \u003d new FindCommand(theAction, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"                        break;","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"                    case MARK: case UNMARK:","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"                        parameters \u003d words[1];","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"                        c \u003d new MarkCommand(theAction, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"                        break;","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"                    case TODO:","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"                        parameters \u003d fullCommand.substring(5);","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"                        c \u003d new AddCommand(theAction, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"                        break;","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"                        parameters \u003d fullCommand.substring(9);","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"                        try {","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"                            c \u003d new AddCommand(theAction, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"                        } catch (LukeException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"                            c \u003d new DoNothingCommand(ActionType.LIST, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"                        }","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"                        break;","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"                    case EVENT:","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"                        parameters \u003d fullCommand.substring(6);","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"                        try {","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"                            c \u003d new AddCommand(theAction, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"                        } catch (LukeException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"                            c \u003d new DoNothingCommand(ActionType.LIST, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"                        }","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"                        break;","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"                    case DELETE:","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"                        parameters \u003d words[1];","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"                        c \u003d new DeleteCommand(theAction, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"                        break;","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"                    case BYE:","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"                        parameters \u003d \"\";","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"                        c \u003d new ExitCommand(theAction, parameters);","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"                        break;","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"                    default:","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"                        c \u003d new DoNothingCommand(theAction, \"\");","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"                        assert false: \"This line should never be reached\";","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"                        break;","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"            } catch (IndexOutOfBoundsException e) { //empty for MARK, UNMARK, TO DO description, DEADLINE description, EVENT description","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"                System.out.println(\"\\t☹ OOPS!!! You have missing arguments for \" + words[0] + \". No changes have been made.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"                c \u003d new DoNothingCommand(ActionType.LIST, \"\");","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"            c \u003d new DoNothingCommand(ActionType.LIST, \"\");","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"        return c;","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"janelleenqi":93}},{"path":"src/main/java/luke/files/Memory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.files;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import luke.user.LukeException;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import luke.tasks.*;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import java.io.File;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":" * The Memory Class provides methods for reading from and storing tasks to a file.","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"public class Memory {","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"     * Reads tasks from a specified file and returns them as an ArrayList of Task objects.","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"     * @param filePath The path to the file to read tasks from.","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"     * @return An ArrayList of Task objects read from the file.","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"     * @throws FileNotFoundException If the specified file is not found.","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"    public static ArrayList\u003cTask\u003e readMemory(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"\\n\\tRetrieving memory...\");","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"            String currentLine \u003d s.nextLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\t\" + currentLine);","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"            String taskDetails \u003d currentLine.substring(0,5);","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"            String taskDescription \u003d currentLine.substring(7);","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"            char[] characters \u003d taskDetails.toCharArray();","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"            try {","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"                Task newTask;","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"                switch (characters[1]) {","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"                        newTask \u003d new Todo(taskDescription);","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"                        break;","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"                        newTask \u003d new Deadline(taskDescription);","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"                        break;","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"                        newTask \u003d new Event(taskDescription);","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"                        break;","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"                    default: //memory.txt is corrupted/in the wrong format","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"                        newTask \u003d new Todo(\"error\");","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"                        break;","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"                switch (characters[4]) {","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"                    case \u0027X\u0027:","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"                        newTask.setDone(true);","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"                        break;","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"                    case \u0027 \u0027:","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"                        newTask.setDone(false);","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"                        break;","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"            } catch (LukeException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"                System.out.println(\"\\t☹ An error occurred.\" + e.getMessage());","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"\\tMemory retrieval successful!\\n\");","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"        return tasks;","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"     * Stores a list of Task objects to a specified file.","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"     * @param filePath  The path to the file to store tasks in.","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"     * @param taskList  The ArrayList of Task objects to be stored.","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"    public static void storeMemory(String filePath, ArrayList\u003cTask\u003e taskList){","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"            FileWriter fw \u003d new FileWriter(filePath); //overwrite file","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"            for (Task currentTask : taskList) {","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"                fw.write(currentTask.memoryString() + \"\\n\");","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"            fw.close();","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tMemory Stored Safely!\");","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"            System.out.println((\"\\t☹ An error occurred.\" + e.getMessage()));","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"janelleenqi":96}},{"path":"src/main/java/luke/files/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.files;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import luke.tasks.Task;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import luke.tasks.TaskList;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import java.io.File;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":" * The Storage Class handles the reading from and writing task data to a file.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"public class Storage {","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"    protected String filePath;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    protected String folderPath;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a Storage object with the specified file path. If the file exists,","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"     * it retrieves tasks from the file. If the file does not exist, it creates a new file.","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"     * @param folderPath The path to the folder where the memory file is located.","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"    public Storage(String folderPath) {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"        filePath \u003d folderPath + \"/memory.txt\";","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"        System.out.println();","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"        createDirectory();","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"        createFile();","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"     * Creates a directory at the specified folder path if it does not already exist.","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"    public void createDirectory () {","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"        File d \u003d new File(folderPath);","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"        if (d.mkdir()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tDirectory has been successfully created!\");","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"        } else {","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tDirectory cannot be created. Directory may already exist.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"        //System.out.println(\"\\tFull path: \" + d.getAbsolutePath());","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"     * Creates a memory file at the specified file path if it does not already exist.","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"    public void createFile () {","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"                System.out.println(\"\\tNew memory file has been successfully created!\");","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"            } else {","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"                System.out.println(\"\\tNew memory file cannot be created. Memory file may already exist.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\t☹ An error occurred.\" + e.getMessage());","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"\\tFull path: \" + f.getAbsolutePath());","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"     * Loads and returns the ArrayList of Task objects retrieved from the file.","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"            tasks \u003d Memory.readMemory(filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"            return tasks;","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\t☹ An error occurred.\" + e.getMessage());","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"        return null;","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"     * Stores the main task list to a specified file path.","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"     * @param tasksToStore The TaskList object containing the main task list.","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"    public void store(TaskList tasksToStore) {","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"        //store in memory.txt","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"        Memory.storeMemory(filePath, tasksToStore.getMainTaskList());","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"janelleenqi":90}},{"path":"src/main/java/luke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.tasks;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"import luke.user.LukeException;","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":" * The Deadline Class represents a task of type \"Deadline\" in the Luke application.","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":" * It extends the Task class and includes specific behavior for deadline tasks.","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"    protected String date;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"    protected String deadlineGuide \u003d \"\\tdeadline \u003cdescription\u003e /by \u003cdate\u003e\";","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a Deadline task with the specified task description and deadline date.","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"     * @param taskDescription The description of the deadline task including the deadline date.","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"     * @throws LukeException If there are syntax or formatting errors in the task description.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    public Deadline(String taskDescription) throws LukeException {","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"        super(taskDescription);","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"        int byIndex \u003d taskDescription.indexOf(\"/by \");","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"        if (byIndex \u003d\u003d 0) {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tThere is a missing task description. Please follow this format:\");","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"            printGuide();","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"            throw new LukeException();","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        } else if (byIndex \u003c 0) {","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tThere is a syntax problem. Please follow this format:\");","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"            printGuide();","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"            throw new LukeException();","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"        description \u003d taskDescription.substring(0, byIndex);","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"        setDate(taskDescription.substring(byIndex + 4));","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"     * Gets the deadline date of the deadline task.","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"     * @return The deadline date of the deadline task.","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"    public String getDate() {","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"        return date;","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"     * Parses and sets the deadline date of the deadline task from the provided date string.","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"     * @param dateString The date string containing the deadline date information.","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"     * @throws LukeException If there are syntax or formatting errors in the date string.","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"    public void setDate(String dateString) throws LukeException {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"        if (dateString.isEmpty()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tThere is a missing date. Please follow this format:\");","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"            printGuide();","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"            throw new LukeException();","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"        date \u003d dateString;","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"     * Displays a guide on how to format a deadline task when printing an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"    public void printGuide() {","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(deadlineGuide);","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"     * Returns a string representation of the deadline task, including its completion status and deadline date.","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"    public String toString() {","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"        return \"\\t[D]\" + getIsDone() + \" \" + getDescription() + \"(do by: \" + getDate() + \")\";","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"     * Returns a string representation of the deadline task for memory storage.","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"     * @return A string representation of the deadline task for memory storage.","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"    public String memoryString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"        return \"[D]\" + getIsDone() + \" \" + getDescription() + \"/by \" + getDate();","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"janelleenqi":90}},{"path":"src/main/java/luke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.tasks;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"import luke.user.LukeException;","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":" * The Event class represents a task of type \"Event\" in the Luke application.","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":" * It extends the Task class and includes specific behavior for event tasks.","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"    protected String startDate;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"    protected String endDate;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"    protected String eventGuide \u003d \"\\tevent \u003cdescription\u003e /from \u003cstart date\u003e /to \u003cend date\u003e\";","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"     * Constructs an Event task with the specified task description, start date, and end date.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"     * @param taskDescription The description of the event task including start and end dates.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"     * @throws LukeException If there are syntax or formatting errors in the task description.","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    public Event(String taskDescription) throws LukeException {","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"        super(taskDescription);","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"        int fromIndex \u003d taskDescription.indexOf(\"/from \");","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"        int toIndex \u003d taskDescription.indexOf(\"/to \");","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"        if (fromIndex \u003d\u003d 0) {","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tThere is a missing task description. Please follow this format:\");","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"            printGuide();","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"            throw new LukeException();","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"        } else if (fromIndex \u003c 0 || toIndex \u003c\u003d fromIndex) {","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tThere is a syntax problem. Please follow this format:\");","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"            printGuide();","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"            throw new LukeException();","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"        description \u003d taskDescription.substring(0, fromIndex);","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"        setDates(taskDescription.substring(fromIndex + 6, toIndex), taskDescription.substring(toIndex + 4));","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"     * Gets the start date of the event.","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"     * @return The start date of the event.","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"    public String getStartDate() {","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"        return startDate;","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"     * Gets the end date of the event.","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"     * @return The end date of the event.","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"        return endDate;","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"     * Parses and sets the start and end dates of the event from the provided date string.","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"     * @param fromDateString The start date string.","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"     * @param toDateString   The end date string.","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"     * @throws LukeException If there are syntax or formatting errors in the date string.","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"    public void setDates(String fromDateString, String toDateString) throws LukeException {","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"        if (fromDateString.isEmpty() || toDateString.isEmpty()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tThere is a missing date. Please follow this format:\");","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"            printGuide();","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"            throw new LukeException();","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"        startDate \u003d fromDateString;","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"        endDate \u003d toDateString;","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"     * Displays a guide on how to format an event task when printing an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"    public void printGuide() {","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(eventGuide);","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"     * Returns a string representation of the event task for printing.","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"    public String toString() {","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"        return \"\\t[E]\" + getIsDone() + \" \" + getDescription() + \"(from: \" + getStartDate() + \"to: \" + getEndDate() + \")\";","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"     * Returns a string representation of the event task for memory storage.","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"     * @return A string representation of the event task for memory storage.","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"    public String memoryString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"        return \"[E]\" + getIsDone() + \" \" + getDescription() + \"/from \" + getStartDate() + \"/to \" + getEndDate();","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"janelleenqi":101}},{"path":"src/main/java/luke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.tasks;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":" * The Task Class represents an abstract class in the Luke application.","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":" * It serves as the base class for different types of tasks and provides common task attributes and methods.","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"    protected String description;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a Task object with the specified description and sets its initial completion status to false.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"        return description;","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"        return isDone;","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"     * Gets a string representation of the task\u0027s completion status.","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"     * @return \"[X]\" if the task is done, \"[ ]\" if it\u0027s not done.","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"    public String getIsDone() {","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"        if (isDone()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"            return \"[X]\";","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"        } else {","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"            return \"[ ]\";","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"     * Sets the completion status of the task and displays a corresponding message.","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"     * @param done true if the task is done, false otherwise.","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"        if (done) {","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tWoohoo! You have accomplished:\");","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"        } else {","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tHA! You still have to complete:\");","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"     * Provides a default implementation for printing a guide specific to each task type.","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"    public void printGuide() {","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"        //Default Implementation: do nothing","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"     * Returns a string representation of the task for memory storage.","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"     * @return A string representation of the task for memory storage.","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"    public String memoryString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"        return \"[T]\" + getIsDone() + \" task\" + getDescription();","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"janelleenqi":81}},{"path":"src/main/java/luke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.tasks;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import luke.user.LukeException;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":" * The TaskList Class contains the task list and provides methods to manage and retrieve tasks from the task list.","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"public class TaskList{","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"    private ArrayList\u003cTask\u003e mainTaskList;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"    public int numberOfTasks;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a TaskList object from an existing ArrayList of tasks.","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"     * @param tasklist An ArrayList of Task objects to initialize the task list with.","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"     * @throws LukeException If an error specific to the LukeTime application occurs during initialization.","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasklist) throws LukeException, NullPointerException {","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"        mainTaskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"        numberOfTasks \u003d 0;","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"        for (Task item: tasklist) {","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"            addTask(item);","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"     * Constructs an empty TaskList object.","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    public TaskList() {","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"        mainTaskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"        numberOfTasks \u003d 0;","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"     * @param taskName The Task object to be added.","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"    public void addTask(Task taskName) {","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"        mainTaskList.add(taskName);","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"        numberOfTasks +\u003d 1;","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"     * Removes a task from the task list by its index.","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"     * @param taskNumber The index of the task to be removed.","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"    public void removeTask(int taskNumber) {","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"        mainTaskList.remove(taskNumber);","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"        numberOfTasks -\u003d 1;","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"    public int size() {","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"        return numberOfTasks;","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"     * @return true if the task list is empty, false otherwise.","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"        if (numberOfTasks \u003c\u003d 0) {","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"        return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves a task from the task list by its index.","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"     * @param taskNumber The index of the task to be retrieved.","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"     * @return The Task object at the specified index.","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"     * @throws IndexOutOfBoundsException If the specified index is out of bounds.","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"    public Task get(int taskNumber) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"        return mainTaskList.get(taskNumber);","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"     * Returns the main ArrayList of Task objects containing the task list.","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"     * @return An ArrayList of Task objects representing the task list.","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cTask\u003e getMainTaskList() {","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"        return mainTaskList;","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"janelleenqi":97}},{"path":"src/main/java/luke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.tasks;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":" * The Todo class represents a task of type \"Todo\" in the Luke application.","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":" * It extends the Task class and includes specific behavior for todo tasks.","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"    protected String todoGuide \u003d \"\\ttodo \u003cdescription\u003e\";","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"        super(description); //ensures superclass is properly initialised","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"\\tThere is a missing task description. Please follow this format:\");","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"            printGuide();","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"     * Displays a guide on how to format a todo task when printing an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    public void printGuide() {","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(todoGuide);","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"     * Returns a string representation of the todo task for printing.","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"     * @return A string representation of the todo task.","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"    public String toString() {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"        return \"\\t[T]\" + getIsDone() + \" \" + getDescription();","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"     * Returns a string representation of the todo task for storing in memory.","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"     * @return A string representation of the todo task for memory storage.","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"    public String memoryString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"        return \"[T]\" + getIsDone() + \" \" + getDescription();","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"janelleenqi":52}},{"path":"src/main/java/luke/user/LukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.user;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":" * The LukeException Class represents custom exceptions specific to the Luke application.","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":" * It extends the Exception class.","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"public class LukeException extends Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"    public String getMessage() {","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"        return \"LukeException has occurred.\";","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"janelleenqi":12}},{"path":"src/main/java/luke/user/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package luke.user;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":" * The Ui Class is responsible for user interaction, including reading user input and displaying messages.","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"public class Ui {","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"    public String echo;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"    public Scanner userInput;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"    private String logo \u003d \"\\t _           _        \\n\"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"            + \"\\t| |    _   _| | _____ \\n\"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"            + \"\\t| |   | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"            + \"\\t| |___| |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"            + \"\\t|_____|\\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    private String userGuide \u003d \"\\n\\tQuick guide to using Luke...\\n\" +","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"            \"\\t\\tlist\\n\" +","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"            \"\\t\\ttodo \u003cdescription\u003e\\n\" +","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"            \"\\t\\tdeadline \u003cdescription\u003e /by \u003cdate\u003e\\n\" +","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"            \"\\t\\tevent \u003cdescription\u003e /from \u003cstart date\u003e /to \u003cend date\u003e\\n\" +","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"            \"\\t\\tmark \u003ctask number\u003e\\n\" +","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"            \"\\t\\tunmark \u003ctask_number\u003e\\n\" +","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"            \"\\t\\tdelete \u003ctask number\u003e\\n\" +","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"            \"\\t\\tfind \u003ckeyword\u003e\\n\" +","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"            \"\\t\\tbye\\n\";","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a Ui object and initializes the user input scanner.","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    public Ui () {","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"        userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"     * Closes the user input scanner.","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"    public void closeUi() {","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"        userInput.close();","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"     * Displays a welcome message with a logo when the application starts.","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"\\t\" + \"Hello! I\u0027m\\n\" + logo);","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"\\tWhat can I do for you?\");","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"        System.out.print(userGuide);","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"        showLine();","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"     * Displays a divider line to separate different sections of output.","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"    public void showLine() {","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"        // show the divider line (\"_______\")","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"     * Displays an error message for loading issues.","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"\\tError in loading memory.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"     * Displays an error message for loading issues.","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"    public void showNoMemoryFileError() {","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"\\tNo memory is loaded.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"     * @param error The error message to be displayed.","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"    public void showError(String error) {","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(error);","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"     * Reads a command from the user and returns it as a string.","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"     * @return The user\u0027s input command as a string.","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"    public String readCommand() {","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"        echo \u003d userInput.nextLine();","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"        return echo;","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"janelleenqi":94}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"todo Liow Enqi Janelle Answer CS2113 tutorial questions","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"deadline weekly CS2113 quiz /by Monday 9pm","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"list","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"event CS2113 lecture /from Friday 4 /to 6pm","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"mark 1","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"list","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"bye","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"janelleenqi":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"if ! javac -cp /Users/janelle/cs2113repo/ip/src/main/java -Xlint:none -d ../bin /Users/janelle/cs2113repo/ip/src/main/java/*.java","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"#cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"janelleenqi":5,"-":34}}]
