[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"Jerry is a desktop application designed to help you manage your tasks. It is optimized for use via Command Line Interface (CLI).","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"It handles various kind of tasks such as todos, deadlines and even events.","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"## Quick start","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"2. Download the latest Jerry.jar from here.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"3. Copy the file to the folder you want to use as the home folder for your task list.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"4. Open a command terminal, cd into the folder you put the jar file in, and use the java -jar Jerry.jar command to run the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"   A GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"### Add a Task","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"You can easily add a task to you list by using one of these keyword : `todo`, `deadline` or `event` followed by the description and the time parameters.","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"Deadlines take one argument prefixed by the `/by` keyword.","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"Events take two argument `/from` and `/to`.","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"e.g `event CS2113 lecture /from tuesday 9am /to tuesday 11am` can be used to create an event reminder.","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"### List the tasks","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"The `list` command is used to display all your current tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"### Mark a task as done","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"Once you have listed your current tasks, each one is assigned an index. You can mark a specific task as done with the `mark` command followed by the indicated index.","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"e.g `mark 2`","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"### Mark a task as not done","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"martinschnder"},"content":"The same way, you can unmark a task using the `unmark` keyword.","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"martinschnder"},"content":"e.g `unmark 2`","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"martinschnder"},"content":"### Remove a task from your list","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"martinschnder"},"content":"Using the same index mechanism, you can also remove a task from your list using the `delete` keyword.","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"martinschnder"},"content":"e.g `delete 2`","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"martinschnder"},"content":"### Find a specific task from a list of keywords","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":47,"author":{"gitId":"martinschnder"},"content":"To easily access your tasks, you can use the `find` command followed by several keywords. Any tasks containing one of the keywords will be then displayed.","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"martinschnder"},"content":"You can then use directly the indexes provided to mark a task or delete it.","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"martinschnder"},"content":"e.g `find lecture java`","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":28,"-":21}},{"path":"src/main/java/jerry/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Task;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import jerry.task.TaskList;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"import jerry.commands.Command;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"import jerry.commands.CommandResult;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"import jerry.commands.ExitCommand;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"import jerry.parser.Parser;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"import jerry.ui.TextUi;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"import jerry.storage.StorageFile;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"import jerry.storage.StorageFile.InvalidStorageFilePathException;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"import jerry.storage.StorageFile.StorageOperationException;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"import java.util.List;","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":" * Entry point of the Task List application.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"public class Main {","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"    private TextUi ui;","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"    private StorageFile storage;","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"    /** The list of tasks shown to the user most recently.  */","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"    private List\u003cTask\u003e lastShownList \u003d Collections.emptyList(); ","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"    public static void main(String[] launchArgs) {","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"        new Main().run(launchArgs);","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"    /** Runs the program until termination.  */","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"    public void run(String[] launchArgs) {","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"martinschnder"},"content":"        start(launchArgs);","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"martinschnder"},"content":"        runCommandLoopUntilExitCommand();","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"martinschnder"},"content":"        exit();","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"martinschnder"},"content":"     * Sets up the required objects, and prints the welcome message.","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"martinschnder"},"content":"    private void start(String[] launchArgs) {","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"martinschnder"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"martinschnder"},"content":"            this.ui \u003d new TextUi();","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"martinschnder"},"content":"            this.storage \u003d initializeStorage(launchArgs);","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"martinschnder"},"content":"            this.taskList \u003d storage.load();","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"martinschnder"},"content":"            ui.showWelcomeMessage();","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"martinschnder"},"content":"        } catch (InvalidStorageFilePathException | StorageOperationException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"martinschnder"},"content":"            ui.showInitFailedMessage();","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"martinschnder"},"content":"            exit();","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"martinschnder"},"content":"            // throw new RuntimeException(e);","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"martinschnder"},"content":"    /** Prints the Goodbye message and exits. */","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"martinschnder"},"content":"    private void exit() {","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"martinschnder"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"martinschnder"},"content":"        System.exit(0);","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"martinschnder"},"content":"    /** Reads the user command and executes it, until the user issues the exit command.  */","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"martinschnder"},"content":"    private void runCommandLoopUntilExitCommand() {","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"martinschnder"},"content":"        Command command;","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"martinschnder"},"content":"        do {","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"martinschnder"},"content":"            String userCommandText \u003d ui.getUserCommand();","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"martinschnder"},"content":"            command \u003d new Parser().parseCommand(userCommandText);","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"martinschnder"},"content":"            CommandResult result \u003d executeCommand(command);","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"martinschnder"},"content":"            recordResult(result);","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"martinschnder"},"content":"            ui.showResultToUser(result);","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"martinschnder"},"content":"        } while (!ExitCommand.isExit(command));","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"martinschnder"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"martinschnder"},"content":"     * @param command user command","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"martinschnder"},"content":"     * @return result of the command","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"martinschnder"},"content":"    private CommandResult executeCommand(Command command) {","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"martinschnder"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"martinschnder"},"content":"            command.setData(taskList, lastShownList);","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"martinschnder"},"content":"            CommandResult result \u003d command.execute();","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"martinschnder"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"martinschnder"},"content":"            return result;","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"martinschnder"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"martinschnder"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"martinschnder"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"martinschnder"},"content":"    /** Updates the {@link #lastShownList} if the result contains a list of tasks. */","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"martinschnder"},"content":"    private void recordResult(CommandResult result) {","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"martinschnder"},"content":"        final Optional\u003cList\u003cTask\u003e\u003e taskList \u003d result.getRelevantTasks();","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"martinschnder"},"content":"        if (taskList.isPresent()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"martinschnder"},"content":"            lastShownList \u003d taskList.get();","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"martinschnder"},"content":"     * Creates the StorageFile object based on the user specified path (if any) or the default storage path.","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"martinschnder"},"content":"     * @param launchArgs arguments supplied by the user at program launch","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"martinschnder"},"content":"     * @throws InvalidStorageFilePathException if the target file path is incorrect.","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"martinschnder"},"content":"    private StorageFile initializeStorage(String[] launchArgs) throws InvalidStorageFilePathException {","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"martinschnder"},"content":"        boolean isStorageFileSpecifiedByUser \u003d launchArgs.length \u003e 0;","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"martinschnder"},"content":"        return isStorageFileSpecifiedByUser ? new StorageFile(launchArgs[0]) : new StorageFile();","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":114}},{"path":"src/main/java/jerry/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.commands;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Task;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Todo;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Deadline;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Event;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":" * Adds a task to the task list.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"    public static final String TODO_COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"    public static final String DEADLINE_COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"    public static final String EVENT_COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_USAGE \u003d TODO_COMMAND_WORD + \": Adds a todo task to the TaskList. \"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"            + \"Parameters: DESCRIPTION \\n\"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"            + \"Example: \" + TODO_COMMAND_WORD","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"            + \" submit CS2113 survey\";","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"    private final Task toAdd;","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"     * Convenience constructor for todos.","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"    public AddCommand(String description) {","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"        this.toAdd \u003d new Todo(description);","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"     * Convenience constructor for deadlines.","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"    public AddCommand(String description, String by) {","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"martinschnder"},"content":"        this.toAdd \u003d new Deadline(description, by);","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"martinschnder"},"content":"     * Convenience constructor for events.","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"martinschnder"},"content":"    public AddCommand(String description, String from, String to) {","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"martinschnder"},"content":"        this.toAdd \u003d new Event(description, from, to);","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"martinschnder"},"content":"    public Task getTask() {","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"martinschnder"},"content":"        return toAdd;","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"martinschnder"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"martinschnder"},"content":"        taskList.addTask(toAdd);","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"martinschnder"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":57}},{"path":"src/main/java/jerry/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.commands;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import static jerry.ui.TextUi.DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"import jerry.task.TaskList;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Task;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"import jerry.common.Messages;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"import java.util.List;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":" * Represents an executable command.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"public abstract class Command {","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"    protected List\u003cTask\u003e relevantTasks;","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"    private int targetIndex \u003d -1;","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"    public Command(int targetIndex) {","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"        this.setTargetIndex(targetIndex);","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"    protected Command() {","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"    public void setData(TaskList tasklist, List\u003cTask\u003e relevantTasks) {","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"        this.taskList \u003d tasklist;","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"        this.relevantTasks \u003d relevantTasks;","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"    public abstract CommandResult execute();","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"martinschnder"},"content":"     * Find the task corresponding to the selected index in the last shown list","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"martinschnder"},"content":"     * ","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"martinschnder"},"content":"     * @return the appropriate task","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"martinschnder"},"content":"    protected Task getTargetTask() throws IndexOutOfBoundsException {","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"martinschnder"},"content":"        return relevantTasks.get(getTargetIndex() - DISPLAYED_INDEX_OFFSET);","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"martinschnder"},"content":"    public int getTargetIndex() {","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"martinschnder"},"content":"        return targetIndex;","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"martinschnder"},"content":"    public void setTargetIndex(int targetIndex) {","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"martinschnder"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"martinschnder"},"content":"     * Constructs a feedback message to summarise an operation that displayed a listing of tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"martinschnder"},"content":"     * @param tasksDisplayed used to generate summary","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"martinschnder"},"content":"     * @return summary message for tasks displayed","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"martinschnder"},"content":"    public static String getMessageForTaskListShownSummary(List\u003cTask\u003e tasksDisplayed) {","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"martinschnder"},"content":"        return String.format(Messages.MESSAGE_TASK_LISTED_OVERVIEW, tasksDisplayed.size());","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":64}},{"path":"src/main/java/jerry/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.commands;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import java.util.List;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Task;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"public class CommandResult {","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"    /** The feedback message to be shown to the user. Contains a description of the execution result */","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"    /** The list of tasks that was produced by the command */","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"    private final List\u003cTask\u003e relevantTasks;","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"        relevantTasks \u003d null;","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"    public CommandResult(String feedbackToUser, List\u003cTask\u003e relevantTasks) {","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"        this.relevantTasks \u003d relevantTasks;","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"     * Returns a list of tasks that was produced by the command, if any.","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"    public Optional\u003cList\u003cTask\u003e\u003e getRelevantTasks() {","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"        return Optional.ofNullable(relevantTasks);","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":36}},{"path":"src/main/java/jerry/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.commands;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Task;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import jerry.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"import jerry.common.Messages;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":" * Deletes a task identified using it\u0027s last displayed index from the task list.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"            + \": Deletes the task identified by the index number used in the last task listing.\\n\"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted task: %1$s\";","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"    public DeleteCommand(int targetVisibleIndex) {","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"        super(targetVisibleIndex);","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"            final Task target \u003d getTargetTask();","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"            taskList.removeTask(target);","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, target));","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"            return new CommandResult(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"        } catch (TaskNotFoundException tnfe) {","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"martinschnder"},"content":"            return new CommandResult(Messages.MESSAGE_TASK_NOT_IN_TASKLIST);","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":40}},{"path":"src/main/java/jerry/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.commands;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":" * Terminates the program.","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\\n\"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_EXIT_ACKNOWEDGEMENT \u003d \"Exiting Jerry as requested ...\";","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWEDGEMENT);","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"        return command instanceof ExitCommand; // instanceof returns false if it is null","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":22}},{"path":"src/main/java/jerry/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.commands;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import java.util.List;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Task;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":" * Finds and lists all tasks in task list whose description contains any of the argument keywords.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":" * Keyword matching is case sensitive.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose description contain any of \"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"            + \"the specified keywords (case-sensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"            + \"Example: \" + COMMAND_WORD + \" tutorial CS2113 java\";","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"    private final Set\u003cString\u003e keywords;","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"    public FindCommand(Set\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"     * Returns a copy of keywords in this command.","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"    public Set\u003cString\u003e getKeywords() {","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"        return new HashSet\u003c\u003e(keywords);","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"martinschnder"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"martinschnder"},"content":"        final List\u003cTask\u003e tasksFound \u003d getTasksWithNameContainingAnyKeyword(keywords);","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"martinschnder"},"content":"        return new CommandResult(getMessageForTaskListShownSummary(tasksFound), tasksFound);","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"martinschnder"},"content":"     * Retrieves all tasks in the address book whose names contain some of the specified keywords.","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"martinschnder"},"content":"     * @param keywords for searching","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"martinschnder"},"content":"     * @return list of tasks found","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"martinschnder"},"content":"    private List\u003cTask\u003e getTasksWithNameContainingAnyKeyword(Set\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"martinschnder"},"content":"        final List\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"martinschnder"},"content":"        for (Task task : taskList.getAllTasks()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"martinschnder"},"content":"            final Set\u003cString\u003e wordsInDescription \u003d new HashSet\u003c\u003e(task.getWordsInDescription());","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"martinschnder"},"content":"            if (!Collections.disjoint(wordsInDescription, keywords)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"martinschnder"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"martinschnder"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"martinschnder"},"content":"        return matchedTasks;","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":59}},{"path":"src/main/java/jerry/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.commands;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":" * Shows help instructions.","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"                AddCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"                + \"\\n\" + DeleteCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"                + \"\\n\" + ListCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"                + \"\\n\" + HelpCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"                + \"\\n\" + ExitCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"        );","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":23}},{"path":"src/main/java/jerry/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.commands;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":" * Represents an incorrect command. Upon execution, produces some feedback to the user.","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"    public IncorrectCommand(String feedbackToUser) {","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"        return new CommandResult(feedbackToUser);","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":20}},{"path":"src/main/java/jerry/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.commands;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Task;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import jerry.task.TaskList;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"import java.util.List;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":" * Lists all tasks in the tasklist to the user.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"            + \": Displays all tasks in the tasklist as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"        List\u003cTask\u003e allTasks \u003d taskList.getAllTasks();","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"        return new CommandResult(getMessageForTaskListShownSummary(allTasks), allTasks);","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":26}},{"path":"src/main/java/jerry/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.commands;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Task;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import jerry.common.Messages;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":" * Mark a specified task as done in the takslist","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Mark the specified task as done. \"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"            + \"Parameters:  INDEX \\n\"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"            + \" 3\";","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Nice! I\u0027ve marked this task as done: %1$s\";","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"    public MarkCommand(int targetVisibleIndex) {","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"        super(targetVisibleIndex);","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"            final Task target \u003d getTargetTask();","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"            target.markAsDone();","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, target));","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"            return new CommandResult(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":36}},{"path":"src/main/java/jerry/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.commands;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Task;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import jerry.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"import jerry.common.Messages;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":" * Mark a specified task as not done yet in the takslist","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Mark the specified task as done. \"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"            + \"Parameters:  INDEX \\n\"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"            + \" 3\";","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Ok! I\u0027ve marked this task as undone: %1$s\";","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"    public UnmarkCommand(int targetVisibleIndex) {","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"        super(targetVisibleIndex);","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"            final Task target \u003d getTargetTask();","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"            target.markAsUndone();","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, target));","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"            return new CommandResult(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":37}},{"path":"src/main/java/jerry/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.common;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":" * Container for user visible messages.","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"public class Messages {","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Good bye!\";","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_INIT_FAILED \u003d \"Failed to initialise Jerry application. Exiting...\";","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The taks index provided is invalid\";","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_TASK_NOT_IN_TASKLIST \u003d \"Task could not be found in task list\";","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_TASK_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_PROGRAM_LAUNCH_ARGS_USAGE \u003d \"Launch command format: \"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"            + \"\u003ccommand\u003e [\u003cindex\u003e] [\u003ccontent\u003e]\";","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Welcome to your TaskList!\";","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":17}},{"path":"src/main/java/jerry/exceptions/IllegalValueException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.exceptions;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"        super(message);","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":13}},{"path":"src/main/java/jerry/exceptions/InvalidTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.exceptions;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"public class InvalidTaskFormatException extends Exception {","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"    public InvalidTaskFormatException(String message) {","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"        super(message);","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"martinschnder":7}},{"path":"src/main/java/jerry/exceptions/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.exceptions;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":" * Signals that the task has not been found in the tasklist.","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"public class TaskNotFoundException extends Exception {","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"    public TaskNotFoundException(String message) {","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"        super(message);","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"martinschnder":10}},{"path":"src/main/java/jerry/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.parser;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import jerry.commands.*;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import jerry.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"import static jerry.common.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"import static jerry.common.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":" * Parses user input.","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"public class Parser {","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"    public Command parseCommand(String userInput) {","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"        String[] words \u003d userInput.trim().split(\" \", 2);  // split the input into command and arguments","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"        if (words.length \u003d\u003d 0) {","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"        final String commandWord \u003d words[0];","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"        final String arguments \u003d userInput.replaceFirst(commandWord, \"\").trim();","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"martinschnder"},"content":"        case AddCommand.TODO_COMMAND_WORD:","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"martinschnder"},"content":"            return prepareAddTodoCommand(arguments);","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"martinschnder"},"content":"        case AddCommand.DEADLINE_COMMAND_WORD:","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"martinschnder"},"content":"            return prepareAddDeadlineCommand(arguments);","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"martinschnder"},"content":"        case AddCommand.EVENT_COMMAND_WORD:","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"martinschnder"},"content":"            return prepareAddEventCommand(arguments);","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"martinschnder"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"martinschnder"},"content":"            return prepareDeleteCommand(arguments);","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"martinschnder"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"martinschnder"},"content":"            return prepareMarkCommand(arguments);","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"martinschnder"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"martinschnder"},"content":"            return prepareUnmarkCommand(arguments);","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"martinschnder"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"martinschnder"},"content":"            return new ListCommand();","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"martinschnder"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"martinschnder"},"content":"            return prepareFindCommand(arguments);","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"martinschnder"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"martinschnder"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"martinschnder"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"martinschnder"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"martinschnder"},"content":"        default:","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"martinschnder"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"martinschnder"},"content":"     * Parses arguments in the context of the add todo command.","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"martinschnder"},"content":"     * @param args full command args string","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"martinschnder"},"content":"     * @return the prepared command","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"martinschnder"},"content":"    private Command prepareAddTodoCommand(String args) {","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"martinschnder"},"content":"        Pattern pattern \u003d Pattern.compile(\"(.+)\");","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"martinschnder"},"content":"        Matcher matcher \u003d pattern.matcher(args);","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"martinschnder"},"content":"        if (matcher.matches() \u0026\u0026 matcher.groupCount() \u003d\u003d 1) {","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"martinschnder"},"content":"            String description \u003d matcher.group(1);","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"martinschnder"},"content":"            return new AddCommand(description);","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"martinschnder"},"content":"        } else {","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"martinschnder"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"martinschnder"},"content":"     * Parses arguments in the context of the add deadline command.","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"martinschnder"},"content":"     * @param args full command args string","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"martinschnder"},"content":"     * @return the prepared command","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"martinschnder"},"content":"    private Command prepareAddDeadlineCommand(String args) {","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"martinschnder"},"content":"        Pattern pattern \u003d Pattern.compile(\"(.+) /by (.+)\");","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"martinschnder"},"content":"        Matcher matcher \u003d pattern.matcher(args);","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"martinschnder"},"content":"        if (matcher.matches() \u0026\u0026 matcher.groupCount() \u003d\u003d 2) {","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"martinschnder"},"content":"            String description \u003d matcher.group(1);","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"martinschnder"},"content":"            String by \u003d matcher.group(2);","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"martinschnder"},"content":"            return new AddCommand(description, by);","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"martinschnder"},"content":"        } else {","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"martinschnder"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"martinschnder"},"content":"     * Parses arguments in the context of the add event command.","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"martinschnder"},"content":"     * @param args full command args string","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"martinschnder"},"content":"     * @return the prepared command","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"martinschnder"},"content":"    private Command prepareAddEventCommand(String args) {","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"martinschnder"},"content":"        Pattern pattern \u003d Pattern.compile(\"(.+) /from (.+) /to (.+)\");","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"martinschnder"},"content":"        Matcher matcher \u003d pattern.matcher(args);","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"martinschnder"},"content":"        if (matcher.matches() \u0026\u0026 matcher.groupCount() \u003d\u003d 3) {","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"martinschnder"},"content":"            String description \u003d matcher.group(1);","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"martinschnder"},"content":"            String from \u003d matcher.group(2);","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"martinschnder"},"content":"            String to \u003d matcher.group(3);","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"martinschnder"},"content":"            return new AddCommand(description, from, to);","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"martinschnder"},"content":"        } else {","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"martinschnder"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"martinschnder"},"content":"     * Parses arguments in the context of the delete task command.","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":129,"author":{"gitId":"martinschnder"},"content":"     * @param args full command args string","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"martinschnder"},"content":"     * @return the prepared command","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":132,"author":{"gitId":"martinschnder"},"content":"    private Command prepareDeleteCommand(String args) {","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"martinschnder"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"martinschnder"},"content":"            final int targetIndex \u003d parseArgsAsDisplayedIndex(args);","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"martinschnder"},"content":"            return new DeleteCommand(targetIndex);","lastModifiedDate":"2023-10-04"},{"lineNumber":136,"author":{"gitId":"martinschnder"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-04"},{"lineNumber":137,"author":{"gitId":"martinschnder"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-04"},{"lineNumber":138,"author":{"gitId":"martinschnder"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"martinschnder"},"content":"            return new IncorrectCommand(MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":141,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":143,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"martinschnder"},"content":"     * Parses arguments in the context of the mark task command.","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"martinschnder"},"content":"     * @param args full command args string","lastModifiedDate":"2023-10-04"},{"lineNumber":147,"author":{"gitId":"martinschnder"},"content":"     * @return the prepared command","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"martinschnder"},"content":"    private Command prepareMarkCommand(String args) {","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"martinschnder"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":151,"author":{"gitId":"martinschnder"},"content":"            final int targetIndex \u003d parseArgsAsDisplayedIndex(args);","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"martinschnder"},"content":"            return new MarkCommand(targetIndex);","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"martinschnder"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"martinschnder"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"martinschnder"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"martinschnder"},"content":"            return new IncorrectCommand(MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"martinschnder"},"content":"     * Parses arguments in the context of the mark task command.","lastModifiedDate":"2023-10-04"},{"lineNumber":162,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":163,"author":{"gitId":"martinschnder"},"content":"     * @param args full command args string","lastModifiedDate":"2023-10-04"},{"lineNumber":164,"author":{"gitId":"martinschnder"},"content":"     * @return the prepared command","lastModifiedDate":"2023-10-04"},{"lineNumber":165,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":166,"author":{"gitId":"martinschnder"},"content":"    private Command prepareUnmarkCommand(String args) {","lastModifiedDate":"2023-10-04"},{"lineNumber":167,"author":{"gitId":"martinschnder"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":168,"author":{"gitId":"martinschnder"},"content":"            final int targetIndex \u003d parseArgsAsDisplayedIndex(args);","lastModifiedDate":"2023-10-04"},{"lineNumber":169,"author":{"gitId":"martinschnder"},"content":"            return new UnmarkCommand(targetIndex);","lastModifiedDate":"2023-10-04"},{"lineNumber":170,"author":{"gitId":"martinschnder"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"martinschnder"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"martinschnder"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-10-04"},{"lineNumber":173,"author":{"gitId":"martinschnder"},"content":"            return new IncorrectCommand(MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":174,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":175,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":176,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":177,"author":{"gitId":"martinschnder"},"content":"    private Command prepareFindCommand(String args) {","lastModifiedDate":"2023-10-04"},{"lineNumber":178,"author":{"gitId":"martinschnder"},"content":"        final String[] keywords \u003d args.split(\"\\\\s+\");","lastModifiedDate":"2023-10-04"},{"lineNumber":179,"author":{"gitId":"martinschnder"},"content":"        final Set\u003cString\u003e keywordSet \u003d new HashSet\u003c\u003e(Arrays.asList(keywords));","lastModifiedDate":"2023-10-04"},{"lineNumber":180,"author":{"gitId":"martinschnder"},"content":"        return new FindCommand(keywordSet);","lastModifiedDate":"2023-10-04"},{"lineNumber":181,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":182,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":183,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":184,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":185,"author":{"gitId":"martinschnder"},"content":"     * Parses the given arguments string as a single index number.","lastModifiedDate":"2023-10-04"},{"lineNumber":186,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":187,"author":{"gitId":"martinschnder"},"content":"     * @param args arguments string to parse as index number","lastModifiedDate":"2023-10-04"},{"lineNumber":188,"author":{"gitId":"martinschnder"},"content":"     * @return the parsed index number","lastModifiedDate":"2023-10-04"},{"lineNumber":189,"author":{"gitId":"martinschnder"},"content":"     * @throws ParseException if no region of the args string could be found for the index","lastModifiedDate":"2023-10-04"},{"lineNumber":190,"author":{"gitId":"martinschnder"},"content":"     * @throws NumberFormatException the args string region is not a valid number","lastModifiedDate":"2023-10-04"},{"lineNumber":191,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":192,"author":{"gitId":"martinschnder"},"content":"    private int parseArgsAsDisplayedIndex(String args) throws ParseException, NumberFormatException {","lastModifiedDate":"2023-10-04"},{"lineNumber":193,"author":{"gitId":"martinschnder"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":194,"author":{"gitId":"martinschnder"},"content":"            throw new ParseException(\"Could not find index number to parse\");","lastModifiedDate":"2023-10-04"},{"lineNumber":195,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":196,"author":{"gitId":"martinschnder"},"content":"        return Integer.parseInt(args.split(\" \")[0]);","lastModifiedDate":"2023-10-04"},{"lineNumber":197,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":198,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":199,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":200,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":201,"author":{"gitId":"martinschnder"},"content":"     * Signals that the user input could not be parsed.","lastModifiedDate":"2023-10-04"},{"lineNumber":202,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":203,"author":{"gitId":"martinschnder"},"content":"    public static class ParseException extends Exception {","lastModifiedDate":"2023-10-04"},{"lineNumber":204,"author":{"gitId":"martinschnder"},"content":"        ParseException(String message) {","lastModifiedDate":"2023-10-04"},{"lineNumber":205,"author":{"gitId":"martinschnder"},"content":"            super(message);","lastModifiedDate":"2023-10-04"},{"lineNumber":206,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":207,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":208,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":209,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":209}},{"path":"src/main/java/jerry/storage/StorageFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.storage;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import java.util.List;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"import java.io.File;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Task;","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"import jerry.task.TaskList;","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Todo;","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Deadline;","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Event;","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"import jerry.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":" * Represents the file used to store task list data.","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"public class StorageFile {","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"    /** Default file path used if the user doesn\u0027t provide the file name. */","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"tasklist.txt\";","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"    public final Path path;","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"     * @throws InvalidStorageFilePathException if the default path is invalid","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"    public StorageFile() throws InvalidStorageFilePathException {","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"        this(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"martinschnder"},"content":"     * @throws InvalidStorageFilePathException if the given file path is invalid","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"martinschnder"},"content":"    public StorageFile(String filePath) throws InvalidStorageFilePathException {","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"martinschnder"},"content":"        path \u003d Paths.get(filePath);","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"martinschnder"},"content":"        if (!isValidPath(path)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"martinschnder"},"content":"            throw new InvalidStorageFilePathException(\"Storage file should end with \u0027.txt\u0027\");","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"martinschnder"},"content":"     * Returns true if the given path is acceptable as a storage file.","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"martinschnder"},"content":"     * The file path is considered acceptable if it ends with \u0027.txt\u0027","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"martinschnder"},"content":"    private static boolean isValidPath(Path filePath) {","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"martinschnder"},"content":"        return filePath.toString().endsWith(\".txt\");","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"martinschnder"},"content":"     * Saves the {@code taskList} data to the storage file.","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"martinschnder"},"content":"     * @throws StorageOperationException if there were errors converting and/or storing data to file.","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"martinschnder"},"content":"    public void save(TaskList taskList) throws StorageOperationException {","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"martinschnder"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"martinschnder"},"content":"            List\u003cString\u003e encodedTaskList \u003d TaskListEncoder.encodeTaskList(taskList);","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"martinschnder"},"content":"            Files.write(path, encodedTaskList);","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"martinschnder"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"martinschnder"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + path);","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"martinschnder"},"content":"     * Loads the {@code TaskList} data from this storage file, and then returns it.","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"martinschnder"},"content":"     * Returns an empty {@code TaskList} if the file does not exist, or is not a regular file.","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"martinschnder"},"content":"     * @throws StorageOperationException if there were errors reading and/or converting data from file.","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"martinschnder"},"content":"    public TaskList load() throws StorageOperationException {","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"martinschnder"},"content":"        if (!Files.exists(path) || !Files.isRegularFile(path)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"martinschnder"},"content":"            return new TaskList();","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"martinschnder"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"martinschnder"},"content":"            return TaskListDecoder.decodeTaskList(Files.readAllLines(path));","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"martinschnder"},"content":"        } catch (FileNotFoundException fnfe) {","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"martinschnder"},"content":"            throw new AssertionError(\"A non-existent file scenario is already handled earlier.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"martinschnder"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"martinschnder"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + path);","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"martinschnder"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"martinschnder"},"content":"            throw new StorageOperationException(\"File contains illegal data values; data type constraints not met\");","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"martinschnder"},"content":"    public String getPath() {","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"martinschnder"},"content":"        return path.toString();","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"martinschnder"},"content":"    /* Note: Note the use of nested classes below.","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"martinschnder"},"content":"     * More info https://docs.oracle.com/javase/tutorial/java/javaOO/nested.html","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"martinschnder"},"content":"     * Signals that the given file path does not fulfill the storage filepath constraints.","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"martinschnder"},"content":"    public static class InvalidStorageFilePathException extends IllegalValueException {","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"martinschnder"},"content":"        public InvalidStorageFilePathException(String message) {","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"martinschnder"},"content":"            super(message);","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"martinschnder"},"content":"     * Signals that some error has occured while trying to convert and read/write data between the application","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"martinschnder"},"content":"     * and the storage file.","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"martinschnder"},"content":"    public static class StorageOperationException extends Exception {","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"martinschnder"},"content":"        public StorageOperationException(String message) {","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"martinschnder"},"content":"            super(message);","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":119}},{"path":"src/main/java/jerry/storage/TaskListDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.storage;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import java.util.List;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Task;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Todo;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Deadline;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Event;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"import jerry.task.TaskList;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"import jerry.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"import jerry.storage.StorageFile.StorageOperationException;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":" * Decodes the storage data file into an {@code TaskList} object.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"public class TaskListDecoder {","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"     * Decodes {@code encodedTaskList} into an {@code TaskList} containing the decoded tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"     * @throws IllegalValueException if any of the fields in any encoded task string is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"     * @throws StorageOperationException if the {@code encodedTaskList} is in an invalid format.","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"    public static TaskList decodeTaskList(List\u003cString\u003e encodedTaskList)","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"    throws IllegalValueException {","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"        final TaskList decodedTaskList \u003d new TaskList();","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"        Task newTask;","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"        for (String encodedTask : encodedTaskList) {","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"            decodedTaskList.addTask(decodeTaskFromString(encodedTask));","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"        return decodedTaskList;","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"     * Decodes {@code encodedTask} into a {@code Task}.","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"martinschnder"},"content":"     * @throws IllegalValueException if any field in the {@code encodedTask} is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"martinschnder"},"content":"     * @throws StorageOperationException if {@code encodedTask} is in an invalid format.","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"martinschnder"},"content":"    private static Task decodeTaskFromString(String encodedTask)","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"martinschnder"},"content":"    throws IllegalValueException {","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"martinschnder"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"martinschnder"},"content":"        switch (getEncodedTaskType(encodedTask)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"martinschnder"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"martinschnder"},"content":"            task \u003d Todo.decode(encodedTask);","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"martinschnder"},"content":"            break;","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"martinschnder"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"martinschnder"},"content":"            task \u003d Deadline.decode(encodedTask);","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"martinschnder"},"content":"            break;","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"martinschnder"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"martinschnder"},"content":"            task \u003d Event.decode(encodedTask);","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"martinschnder"},"content":"            break;","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"martinschnder"},"content":"        return task;","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"martinschnder"},"content":"    private static char getEncodedTaskType(String encodedTask) {","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"martinschnder"},"content":"        return encodedTask.charAt(0);","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":61}},{"path":"src/main/java/jerry/storage/TaskListEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.storage;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import java.util.List;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Task;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"import jerry.task.TaskList;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":" * Encodes the {@code TaskList} object into a data file for storage.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"public class TaskListEncoder {","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"     * Encodes all the {@code Task} in the {@code toSave} into a list of decodable and readable string presentation","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"     * for storage.","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"    public static List\u003cString\u003e encodeTaskList(TaskList toSave) {","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"        final List\u003cString\u003e encodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"        toSave.getAllTasks().forEach(task -\u003e encodedTasks.add(task.encode()));","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"        return encodedTasks;","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":23}},{"path":"src/main/java/jerry/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"import jerry.exceptions.InvalidTaskFormatException;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"import jerry.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":" * Represents a task of type deadline in the task list.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"    private String by;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"    private static final String FORMAT_EXCEPTION_MESSAGE \u003d \"Invalid Deadline format.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"    private static final String DECODE_REGEX \u003d \"^D~(.)~(.*)~(.*)\";","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"    public String getBy() {","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"        return this.by;","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", this.getStatusIcon(), this.getDescription(), this.getBy());","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"    public String encode() {","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"        return String.format(\"D~%s~%s~%s\", this.getStatusIcon(), this.getDescription(), this.getBy());","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"martinschnder"},"content":"     * Create the adequate task according to the encode string","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"martinschnder"},"content":"     * @parameter the encoded string","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"martinschnder"},"content":"     * @returns the task","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"martinschnder"},"content":"    public static Deadline decode(String string) throws IllegalValueException {","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"martinschnder"},"content":"        Pattern pattern \u003d Pattern.compile(DECODE_REGEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"martinschnder"},"content":"        Matcher matcher \u003d pattern.matcher(string);","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"martinschnder"},"content":"        if (matcher.matches() \u0026\u0026 matcher.groupCount() \u003d\u003d 3) {","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"martinschnder"},"content":"            String isTaskDoneStr \u003d matcher.group(1);","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"martinschnder"},"content":"            String description \u003d matcher.group(2);","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"martinschnder"},"content":"            String by \u003d matcher.group(3);","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"martinschnder"},"content":"            Deadline newTask \u003d new Deadline(description, by);","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"martinschnder"},"content":"            if (isTaskDoneStr.equals(\"X\")) {","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"martinschnder"},"content":"                newTask.markAsDone();","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"martinschnder"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"martinschnder"},"content":"            return newTask;","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"martinschnder"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"martinschnder"},"content":"            throw new IllegalValueException(\"ehllooo\");","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"martinschnder":58}},{"path":"src/main/java/jerry/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"import jerry.exceptions.InvalidTaskFormatException;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"import jerry.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":" * Represents a task of type event in the task list.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"    private String from;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"    private String to;","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"    private static final String FORMAT_EXCEPTION_MESSAGE \u003d \"Invalid Event format.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"    private static final String DECODE_REGEX \u003d \"^E~(.)~(.*)~(.*)~(.*)\";","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"    public String getFrom() {","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"        return this.from;","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"    public String getTo() {","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"        return this.to;","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"        return String.format(\"[E][%s] %s (from: %s to: %s)\", this.getStatusIcon(), this.getDescription(), this.getFrom(), this.getTo());","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"martinschnder"},"content":"    public String encode() {","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"martinschnder"},"content":"        return String.format(\"E~%s~%s~%s~%s\", this.getStatusIcon(), this.getDescription(), this.getFrom(), this.getTo());","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"martinschnder"},"content":"     * Create the adequate task according to the encode string","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"martinschnder"},"content":"     * @parameter the encoded string","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"martinschnder"},"content":"     * @returns the task","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"martinschnder"},"content":"    public static Event decode(String string) throws IllegalValueException {","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"martinschnder"},"content":"        Pattern pattern \u003d Pattern.compile(DECODE_REGEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"martinschnder"},"content":"        Matcher matcher \u003d pattern.matcher(string);","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"martinschnder"},"content":"        if (matcher.matches() \u0026\u0026 matcher.groupCount() \u003d\u003d 4) {","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"martinschnder"},"content":"            String isTaskDoneStr \u003d matcher.group(1);","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"martinschnder"},"content":"            String description \u003d matcher.group(2);","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"martinschnder"},"content":"            String from \u003d matcher.group(3);","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"martinschnder"},"content":"            String to \u003d matcher.group(4);","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"martinschnder"},"content":"            Event newTask \u003d new Event(description, from, to);","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"martinschnder"},"content":"            if (isTaskDoneStr.equals(\"X\")) {","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"martinschnder"},"content":"                newTask.markAsDone();","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"martinschnder"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"martinschnder"},"content":"            return newTask;","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"martinschnder"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"martinschnder"},"content":"            throw new IllegalValueException(\"ehllooo\");","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"martinschnder":65}},{"path":"src/main/java/jerry/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"import java.util.List;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":" * Represents a task in the task list.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"    protected String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"    public Boolean isDone() {","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"    public String getStatusInt() {","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"martinschnder"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"martinschnder"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"martinschnder"},"content":"     * Retrieves a listing of every word in the description, in order.","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"martinschnder"},"content":"    public List\u003cString\u003e getWordsInDescription() {","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"martinschnder"},"content":"        return Arrays.asList(description.split(\"\\\\s+\"));","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"martinschnder"},"content":"    public abstract String toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"martinschnder"},"content":"     * Computes the string to store the task state in a file","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"martinschnder"},"content":"    public abstract String encode();","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"martinschnder":59}},{"path":"src/main/java/jerry/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import java.util.List;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"import jerry.Main;","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"import jerry.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":" * Represents the entire taks list. Contains the tasks data.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"    private List\u003cTask\u003e allTasks;","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"    private List\u003cTask\u003e lastShownList \u003d Collections.emptyList();","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"    private static final String TASK_LIST_EMPTY_MESSAGE \u003d \"You haven\u0027t added any taskList yet.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"    private static final String ONLY_ONE_TASK_MESSAGE \u003d \"You have added only one task yet.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"    private static final String TASK_INDEX_MUST_BE_POSITIF_MESSAGE \u003d \"Task index must be a positive number.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"     * Creates an empty address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"        allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"martinschnder"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"martinschnder"},"content":"        allTasks.add(task);","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"martinschnder"},"content":"    ","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"martinschnder"},"content":"    public void removeTask(Task task) throws TaskNotFoundException {","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"martinschnder"},"content":"        allTasks.remove(task);","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"martinschnder"},"content":"     * Get the right task given an index","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"martinschnder"},"content":"     * @return the task","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"martinschnder"},"content":"    public Task getTaskByIndex(int index) {","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"martinschnder"},"content":"        return allTasks.get(index - 1);","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"martinschnder"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"martinschnder"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"martinschnder"},"content":"        for (int i \u003d 0; i \u003c allTasks.size(); i++) {","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"martinschnder"},"content":"            stringBuilder.append(String.format(\"\\t%d. %s\\n\",i + 1, allTasks.get(i)));","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"martinschnder"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"martinschnder"},"content":"     * Updates the {@link #lastShownList} if the result contains a list of Tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"martinschnder"},"content":"    public void setLastShownList(List\u003cTask\u003e listInResult) {","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"martinschnder"},"content":"        if (listInResult !\u003d null) {","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"martinschnder"},"content":"            lastShownList \u003d listInResult;","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"martinschnder"},"content":"     * Returns a new list of all tasks in the taskList at the time of the call.","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"martinschnder"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"martinschnder"},"content":"        return allTasks;","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"martinschnder":82}},{"path":"src/main/java/jerry/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"import jerry.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":" * Represents a task of type todo in the task list.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"    private static final String FORMAT_EXCEPTION_MESSAGE \u003d \"Invalid Todo format.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"    private static final String DECODE_REGEX \u003d \"^T~(.)~(.+)\";","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":"        return String.format(\"[T][%s] %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"    public String encode() {","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"        return String.format(\"T~%s~%s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"     * Create the adequate task according to the encode string","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"     * @parameter the encoded string","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"     * @returns the task","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"    public static Task decode(String string) throws IllegalValueException {","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"        Pattern pattern \u003d Pattern.compile(DECODE_REGEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"martinschnder"},"content":"        Matcher matcher \u003d pattern.matcher(string);","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"martinschnder"},"content":"        if (matcher.matches() \u0026\u0026 matcher.groupCount() \u003d\u003d 2) {","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"martinschnder"},"content":"            String isTaskDoneStr \u003d matcher.group(1);","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"martinschnder"},"content":"            String description \u003d matcher.group(2);","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"martinschnder"},"content":"            Todo newTask \u003d new Todo(description);","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"martinschnder"},"content":"            if (isTaskDoneStr.equals(\"X\")) {","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"martinschnder"},"content":"                newTask.markAsDone();","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"martinschnder"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"martinschnder"},"content":"            return newTask;","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"martinschnder"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"martinschnder"},"content":"            throw new IllegalValueException(\"\");","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"martinschnder":50}},{"path":"src/main/java/jerry/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"package jerry.ui;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"import static jerry.common.Messages.MESSAGE_GOODBYE;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"import static jerry.common.Messages.MESSAGE_INIT_FAILED;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"import static jerry.common.Messages.MESSAGE_PROGRAM_LAUNCH_ARGS_USAGE;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"import static jerry.common.Messages.MESSAGE_WELCOME;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"martinschnder"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"martinschnder"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"martinschnder"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"martinschnder"},"content":"import java.util.List;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"martinschnder"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"martinschnder"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"martinschnder"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"import jerry.commands.CommandResult;","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"martinschnder"},"content":"import jerry.task.Task;","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"martinschnder"},"content":"import jerry.task.TaskList;","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"martinschnder"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"martinschnder"},"content":" * Text UI of the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"martinschnder"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"public class TextUi {","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"martinschnder"},"content":"    /** Offset required to convert between 1-indexing and 0-indexing.  */","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"martinschnder"},"content":"    public static final int DISPLAYED_INDEX_OFFSET \u003d 1;","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"martinschnder"},"content":"    /** A decorative prefix added to the beginning of lines printed by Jerry */","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"martinschnder"},"content":"    private static final String LINE_PREFIX \u003d \"|| \";","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"martinschnder"},"content":"    /** A platform independent line separator. */","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"martinschnder"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"martinschnder"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"martinschnder"},"content":"    /** Format of indexed list item */","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"martinschnder"},"content":"    private static final String MESSAGE_INDEXED_LIST_ITEM \u003d \"\\t%1$d. %2$s\";","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"martinschnder"},"content":"    /** Format of a comment input line. Comment lines are silently consumed when reading user input. */","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"martinschnder"},"content":"    private static final String COMMENT_LINE_FORMAT_REGEX \u003d \"#.*\";","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"martinschnder"},"content":"    private final Scanner in;","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"martinschnder"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"martinschnder"},"content":"    public TextUi() {","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"martinschnder"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"martinschnder"},"content":"    public TextUi(InputStream in, PrintStream out) {","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"martinschnder"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"martinschnder"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"martinschnder"},"content":"     * Returns true if the user input line should be ignored.","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"martinschnder"},"content":"     * Input should be ignored if it is parsed as a comment, is only whitespace, or is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"martinschnder"},"content":"     * @param rawInputLine full raw user input line.","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"martinschnder"},"content":"     * @return true if the entire user input line should be ignored.","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"martinschnder"},"content":"    private boolean shouldIgnore(String rawInputLine) {","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"martinschnder"},"content":"        return rawInputLine.trim().isEmpty() || isCommentLine(rawInputLine);","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"martinschnder"},"content":"     * Returns true if the user input line is a comment line.","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"martinschnder"},"content":"     * @param rawInputLine full raw user input line.","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"martinschnder"},"content":"     * @return true if input line is a comment.","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"martinschnder"},"content":"    private boolean isCommentLine(String rawInputLine) {","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"martinschnder"},"content":"        return rawInputLine.trim().matches(COMMENT_LINE_FORMAT_REGEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"martinschnder"},"content":"     * Prompts for the command and reads the text entered by the user.","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"martinschnder"},"content":"     * Ignores empty, pure whitespace, and comment lines.","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"martinschnder"},"content":"     * Echos the command back to the user.","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"martinschnder"},"content":"     * @return command (full line) entered by the user","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"martinschnder"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"martinschnder"},"content":"        out.print(LINE_PREFIX + \"Enter command: \");","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"martinschnder"},"content":"        String fullInputLine \u003d in.nextLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"martinschnder"},"content":"        // silently consume all ignored lines","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"martinschnder"},"content":"        while (shouldIgnore(fullInputLine)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"martinschnder"},"content":"            fullInputLine \u003d in.nextLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"martinschnder"},"content":"        // showToUser(\"[Command entered:\" + fullInputLine + \"]\");","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"martinschnder"},"content":"        return fullInputLine;","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"martinschnder"},"content":"     * Generates and prints the welcome message upon the start of the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"martinschnder"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"martinschnder"},"content":"        showToUser(","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"martinschnder"},"content":"                DIVIDER,","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"martinschnder"},"content":"                DIVIDER,","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"martinschnder"},"content":"                MESSAGE_WELCOME,","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"martinschnder"},"content":"                MESSAGE_PROGRAM_LAUNCH_ARGS_USAGE,","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"martinschnder"},"content":"                DIVIDER);","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"martinschnder"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"martinschnder"},"content":"        showToUser(MESSAGE_GOODBYE, DIVIDER, DIVIDER);","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"martinschnder"},"content":"    /** Shows message(s) to the user */","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"martinschnder"},"content":"    public void showToUser(String... message) {","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"martinschnder"},"content":"        for (String m : message) {","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"martinschnder"},"content":"            out.println(LINE_PREFIX + m.replace(\"\\n\", LS + LINE_PREFIX));","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"martinschnder"},"content":"     * Shows the result of a command execution to the user. Includes additional formatting to demarcate different","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"martinschnder"},"content":"     * command execution segments.","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"martinschnder"},"content":"    public void showResultToUser(CommandResult result) {","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"martinschnder"},"content":"        final Optional\u003cList\u003cTask\u003e\u003e resultTasks \u003d result.getRelevantTasks();","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"martinschnder"},"content":"        if (resultTasks.isPresent()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"martinschnder"},"content":"            showTaskListView(resultTasks.get());","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"martinschnder"},"content":"        showToUser(result.feedbackToUser, DIVIDER);","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":129,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"martinschnder"},"content":"     * Shows a list of tasks to the user, formatted as an indexed list.","lastModifiedDate":"2023-10-04"},{"lineNumber":132,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"martinschnder"},"content":"    private void showTaskListView(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"martinschnder"},"content":"        final List\u003cString\u003e formattedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"martinschnder"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-10-04"},{"lineNumber":136,"author":{"gitId":"martinschnder"},"content":"            formattedTasks.add(task.toString());","lastModifiedDate":"2023-10-04"},{"lineNumber":137,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":138,"author":{"gitId":"martinschnder"},"content":"        showToUserAsIndexedList(formattedTasks);","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":141,"author":{"gitId":"martinschnder"},"content":"    /** Shows a list of strings to the user, formatted as an indexed list. */","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"martinschnder"},"content":"    private void showToUserAsIndexedList(List\u003cString\u003e list) {","lastModifiedDate":"2023-10-04"},{"lineNumber":143,"author":{"gitId":"martinschnder"},"content":"        showToUser(getIndexedListForViewing(list));","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"martinschnder"},"content":"    ","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"martinschnder"},"content":"    public void showInitFailedMessage() {","lastModifiedDate":"2023-10-04"},{"lineNumber":147,"author":{"gitId":"martinschnder"},"content":"        showToUser(MESSAGE_INIT_FAILED, DIVIDER, DIVIDER);","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"martinschnder"},"content":"    /** Formats a list of strings as a viewable indexed list. */","lastModifiedDate":"2023-10-04"},{"lineNumber":151,"author":{"gitId":"martinschnder"},"content":"    private static String getIndexedListForViewing(List\u003cString\u003e listItems) {","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"martinschnder"},"content":"        final StringBuilder formatted \u003d new StringBuilder();","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"martinschnder"},"content":"        int displayIndex \u003d DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"martinschnder"},"content":"        for (String listItem : listItems) {","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"martinschnder"},"content":"            formatted.append(getIndexedListItem(displayIndex, listItem)).append(\"\\n\");","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"martinschnder"},"content":"            displayIndex++;","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"martinschnder"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"martinschnder"},"content":"        return formatted.toString();","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"martinschnder"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":162,"author":{"gitId":"martinschnder"},"content":"     * Formats a string as a viewable indexed list item.","lastModifiedDate":"2023-10-04"},{"lineNumber":163,"author":{"gitId":"martinschnder"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":164,"author":{"gitId":"martinschnder"},"content":"     * @param visibleIndex visible index for this listing","lastModifiedDate":"2023-10-04"},{"lineNumber":165,"author":{"gitId":"martinschnder"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":166,"author":{"gitId":"martinschnder"},"content":"    private static String getIndexedListItem(int visibleIndex, String listItem) {","lastModifiedDate":"2023-10-04"},{"lineNumber":167,"author":{"gitId":"martinschnder"},"content":"        return String.format(MESSAGE_INDEXED_LIST_ITEM, visibleIndex, listItem);","lastModifiedDate":"2023-10-04"},{"lineNumber":168,"author":{"gitId":"martinschnder"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":169,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":170,"author":{"gitId":"martinschnder"},"content":"}","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"martinschnder"},"content":"","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"martinschnder":171}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"martinschnder"},"content":"todo learn Java","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"martinschnder"},"content":"deadline wrong format","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"deadline review PR /by tomorrow","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"event team meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"list","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"bye","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"martinschnder":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"martinschnder"},"content":"# # create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"martinschnder"},"content":"# if [ ! -d \"../bin\" ]","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"martinschnder"},"content":"# then","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"martinschnder"},"content":"#     mkdir ../bin","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"martinschnder"},"content":"# fi","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"martinschnder"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../out/production/ip ../src/main/java/jerry/*.java ../src/main/java/jerry/task/*.java ../src/main/java/jerry/userInterface/*.java","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"martinschnder"},"content":"java -classpath ../out/production/ip jerry.Jerry \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"martinschnder"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"martinschnder":8,"-":30}}]
