[{"path":"src/main/java/notGPT/NotChatGPT.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenGX12"},"content":"package notGPT;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"StevenGX12"},"content":"import notGPT.task.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"StevenGX12"},"content":"import notGPT.commands.CommandResponse;  ","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"StevenGX12"},"content":"import notGPT.storage.Storage;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"StevenGX12"},"content":"import notGPT.parser.Parser;","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"StevenGX12"},"content":"import notGPT.ui.Ui;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"StevenGX12"},"content":"public class NotChatGPT {","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"StevenGX12"},"content":"    public static boolean isRunning;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"StevenGX12"},"content":"    public static Storage storage;","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"StevenGX12"},"content":"    public static TaskList taskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"StevenGX12"},"content":"    public static Parser parser;","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"StevenGX12"},"content":"    public static Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"StevenGX12"},"content":"    public NotChatGPT(String filePath) {","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"StevenGX12"},"content":"        isRunning \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"StevenGX12"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"StevenGX12"},"content":"        taskList \u003d new TaskList(storage);","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"StevenGX12"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"StevenGX12"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"StevenGX12"},"content":"    public void run () {","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"StevenGX12"},"content":"        ui.displayIntroMessage();","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"StevenGX12"},"content":"        while (isRunning) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"StevenGX12"},"content":"            String userInput  \u003d ui.getUserInput();","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"StevenGX12"},"content":"            String[] commandDetails \u003d parser.parseCommand(userInput);","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"StevenGX12"},"content":"            ui.showLine();","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"StevenGX12"},"content":"            CommandResponse.respond(commandDetails);","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"StevenGX12"},"content":"            ui.showLine();","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"StevenGX12"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"StevenGX12"},"content":"        System.exit(0);","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"StevenGX12"},"content":"    public static void main(String[] args) {    ","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"StevenGX12"},"content":"        NotChatGPT notChatGPT \u003d new NotChatGPT(\"data/tasks.txt\");","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"StevenGX12"},"content":"        notChatGPT.run();","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"StevenGX12"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"StevenGX12":40}},{"path":"src/main/java/notGPT/commands/CommandResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenGX12"},"content":"package notGPT.commands;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"StevenGX12"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"StevenGX12"},"content":"import notGPT.NotChatGPT;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"StevenGX12"},"content":"import notGPT.exception.NotChatGPTExceptions;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"StevenGX12"},"content":"import notGPT.parser.Parser;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"StevenGX12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"StevenGX12"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"StevenGX12"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"StevenGX12"},"content":" * The CommandResponse class contains methods to handle user commands and","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"StevenGX12"},"content":" * provide responses.","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"StevenGX12"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"StevenGX12"},"content":"public class CommandResponse {","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"StevenGX12"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"StevenGX12"},"content":"     * Handles the \u0027bye\u0027 command to exit the application.","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"StevenGX12"},"content":"    public static void handleBye() {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"StevenGX12"},"content":"        System.out.println(\"Bye Broski! Thank you for choosing notChatGPT :)\");","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"StevenGX12"},"content":"        NotChatGPT.isRunning \u003d false;","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"StevenGX12"},"content":"     * Handles the \u0027list\u0027 command to display the list of tasks.","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"StevenGX12"},"content":"    public static void handleList() {","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"StevenGX12"},"content":"        String[] tasks \u003d NotChatGPT.taskList.getTasks();","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"StevenGX12"},"content":"        if (tasks.length \u003d\u003d 0) {","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"You have no tasks in your list lel\");","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"StevenGX12"},"content":"        } else {","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"StevenGX12"},"content":"            for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"StevenGX12"},"content":"                if (tasks[i] !\u003d null) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"StevenGX12"},"content":"                    System.out.println((i + 1) + \". \" + tasks[i]);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"StevenGX12"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"StevenGX12"},"content":"     * Handles the \u0027mark\u0027 command to mark a task as done.","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"StevenGX12"},"content":"     * @param userInput An array of strings containing the user\u0027s input.","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"StevenGX12"},"content":"    public static void handleMark(String[] userInput) {","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"StevenGX12"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"StevenGX12"},"content":"            if (userInput.length \u003c 2) {","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Please specify the task number to mark!!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"StevenGX12"},"content":"            int taskNumber \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"StevenGX12"},"content":"            if (taskNumber \u003c 1 || taskNumber \u003e NotChatGPT.taskList.getTaskCount()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Task number is out of range!!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"StevenGX12"},"content":"            if (NotChatGPT.taskList.getTaskByNumber(taskNumber).getIsDone()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Task is already marked as done!!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"StevenGX12"},"content":"            NotChatGPT.taskList.markTaskAsDone(taskNumber);","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(NotChatGPT.taskList.getTasks()[taskNumber - 1]);","lastModifiedDate":"2023-09-28"},{"lineNumber":63,"author":{"gitId":"StevenGX12"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Error: Invalid task number. Please enter a valid number.\");","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"StevenGX12"},"content":"        } catch (NotChatGPTExceptions e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":71,"author":{"gitId":"StevenGX12"},"content":"     * Handles the \u0027unmark\u0027 command to unmark a task as not done.","lastModifiedDate":"2023-09-29"},{"lineNumber":72,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":73,"author":{"gitId":"StevenGX12"},"content":"     * @param userInput An array of strings containing the user\u0027s input.","lastModifiedDate":"2023-09-29"},{"lineNumber":74,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":75,"author":{"gitId":"StevenGX12"},"content":"    public static void handleUnmark(String[] userInput) {","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"StevenGX12"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"StevenGX12"},"content":"            if (userInput.length \u003c 2) {","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Please specify the task number to unmark!!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"StevenGX12"},"content":"            int taskNumber \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"StevenGX12"},"content":"            if (taskNumber \u003c 1 || taskNumber \u003e NotChatGPT.taskList.getTaskCount()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Task number is out of range!!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"StevenGX12"},"content":"            if (!NotChatGPT.taskList.getTaskByNumber(taskNumber).getIsDone()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Task is already marked as not done!!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"StevenGX12"},"content":"            NotChatGPT.taskList.unmarkTaskAsDone(taskNumber);","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Aight! I\u0027ve marked this task as not done yet.\");","lastModifiedDate":"2023-09-28"},{"lineNumber":89,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(NotChatGPT.taskList.getTasks()[taskNumber - 1]);","lastModifiedDate":"2023-09-28"},{"lineNumber":90,"author":{"gitId":"StevenGX12"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Error: Invalid task number. Please enter a valid number.\");","lastModifiedDate":"2023-09-28"},{"lineNumber":92,"author":{"gitId":"StevenGX12"},"content":"        } catch (NotChatGPTExceptions e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-09-28"},{"lineNumber":94,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":98,"author":{"gitId":"StevenGX12"},"content":"     * Handles the \u0027todo\u0027 command to add a new Todo task.","lastModifiedDate":"2023-09-29"},{"lineNumber":99,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":100,"author":{"gitId":"StevenGX12"},"content":"     * @param userInput An array of strings containing the user\u0027s input.","lastModifiedDate":"2023-09-29"},{"lineNumber":101,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":102,"author":{"gitId":"StevenGX12"},"content":"    public static void handleTodo(String[] userInput) {","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"StevenGX12"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"StevenGX12"},"content":"            if (userInput.length \u003c 2) {","lastModifiedDate":"2023-09-10"},{"lineNumber":105,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Please specify the task description!! (cannot be empty lah)\");","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"StevenGX12"},"content":"            NotChatGPT.taskList.addTodo(String.join(\" \", Arrays.copyOfRange(userInput, 1, userInput.length)));","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-28"},{"lineNumber":109,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(NotChatGPT.taskList.getTasks()[NotChatGPT.taskList.getTaskCount() - 1]);","lastModifiedDate":"2023-09-28"},{"lineNumber":110,"author":{"gitId":"StevenGX12"},"content":"        } catch (NotChatGPTExceptions e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-09-28"},{"lineNumber":112,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":116,"author":{"gitId":"StevenGX12"},"content":"     * Handles the \u0027deadline\u0027 command to add a new Deadline task.","lastModifiedDate":"2023-09-29"},{"lineNumber":117,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":118,"author":{"gitId":"StevenGX12"},"content":"     * @param userInput An array of strings containing the user\u0027s input.","lastModifiedDate":"2023-09-29"},{"lineNumber":119,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":120,"author":{"gitId":"StevenGX12"},"content":"    public static void handleDeadline(String[] userInput) {","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"StevenGX12"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":122,"author":{"gitId":"StevenGX12"},"content":"            int deadlineIndex \u003d -1;","lastModifiedDate":"2023-09-10"},{"lineNumber":123,"author":{"gitId":"StevenGX12"},"content":"            for (int i \u003d 1; i \u003c userInput.length; i++) {","lastModifiedDate":"2023-09-10"},{"lineNumber":124,"author":{"gitId":"StevenGX12"},"content":"                if (userInput[i].equals(\"/by\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":125,"author":{"gitId":"StevenGX12"},"content":"                    deadlineIndex \u003d i;","lastModifiedDate":"2023-09-10"},{"lineNumber":126,"author":{"gitId":"StevenGX12"},"content":"                    break;","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"StevenGX12"},"content":"                }","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"StevenGX12"},"content":"            if (userInput.length \u003c 2 || deadlineIndex \u003d\u003d 1) {","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Please specify the deadline description!! (cannot be empty lah)\");","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"StevenGX12"},"content":"            if (deadlineIndex \u003c 0) {","lastModifiedDate":"2023-09-10"},{"lineNumber":133,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Invalid deadline format. Use \u0027/by\u0027 to specify the deadline.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":134,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":135,"author":{"gitId":"StevenGX12"},"content":"            if (deadlineIndex \u003d\u003d userInput.length - 1) {","lastModifiedDate":"2023-09-10"},{"lineNumber":136,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Please specify the deadline timing!!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":137,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":138,"author":{"gitId":"StevenGX12"},"content":"            String deadlineName \u003d String.join(\" \", Arrays.copyOfRange(userInput, 1, deadlineIndex));","lastModifiedDate":"2023-09-10"},{"lineNumber":139,"author":{"gitId":"StevenGX12"},"content":"            String deadlineTimeString \u003d String.join(\" \",","lastModifiedDate":"2023-09-30"},{"lineNumber":140,"author":{"gitId":"StevenGX12"},"content":"                    Arrays.copyOfRange(userInput, deadlineIndex + 1, userInput.length));","lastModifiedDate":"2023-09-30"},{"lineNumber":141,"author":{"gitId":"StevenGX12"},"content":"            LocalDateTime deadlineTime \u003d parser.parseDateTime(deadlineTimeString);","lastModifiedDate":"2023-09-30"},{"lineNumber":142,"author":{"gitId":"StevenGX12"},"content":"            NotChatGPT.taskList.addDeadline(deadlineName, deadlineTime);","lastModifiedDate":"2023-09-10"},{"lineNumber":143,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-28"},{"lineNumber":144,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(NotChatGPT.taskList.getTasks()[NotChatGPT.taskList.getTaskCount() - 1]);","lastModifiedDate":"2023-09-28"},{"lineNumber":145,"author":{"gitId":"StevenGX12"},"content":"        } catch (NotChatGPTExceptions e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":146,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-09-28"},{"lineNumber":147,"author":{"gitId":"StevenGX12"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":148,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(","lastModifiedDate":"2023-09-30"},{"lineNumber":149,"author":{"gitId":"StevenGX12"},"content":"                    \"Error: Please use the format \u0027dd-MM-yyyy HH:mm\u0027 and ensure that the date and time entered is valid.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":150,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":151,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":152,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":153,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":154,"author":{"gitId":"StevenGX12"},"content":"     * Handles the \u0027event\u0027 command to add a new Event task.","lastModifiedDate":"2023-09-29"},{"lineNumber":155,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":156,"author":{"gitId":"StevenGX12"},"content":"     * @param userInput An array of strings containing the user\u0027s input.","lastModifiedDate":"2023-09-29"},{"lineNumber":157,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":158,"author":{"gitId":"StevenGX12"},"content":"    public static void handleEvent(String[] userInput) {","lastModifiedDate":"2023-09-10"},{"lineNumber":159,"author":{"gitId":"StevenGX12"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":160,"author":{"gitId":"StevenGX12"},"content":"            int eventStartTimeIndex \u003d -1;","lastModifiedDate":"2023-09-10"},{"lineNumber":161,"author":{"gitId":"StevenGX12"},"content":"            int eventEndTimeIndex \u003d -1;","lastModifiedDate":"2023-09-10"},{"lineNumber":162,"author":{"gitId":"StevenGX12"},"content":"            for (int i \u003d 1; i \u003c userInput.length; i++) {","lastModifiedDate":"2023-09-10"},{"lineNumber":163,"author":{"gitId":"StevenGX12"},"content":"                if (userInput[i].equals(\"/from\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":164,"author":{"gitId":"StevenGX12"},"content":"                    eventStartTimeIndex \u003d i;","lastModifiedDate":"2023-09-10"},{"lineNumber":165,"author":{"gitId":"StevenGX12"},"content":"                } else if (userInput[i].equals(\"/to\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":166,"author":{"gitId":"StevenGX12"},"content":"                    eventEndTimeIndex \u003d i;","lastModifiedDate":"2023-09-10"},{"lineNumber":167,"author":{"gitId":"StevenGX12"},"content":"                }","lastModifiedDate":"2023-09-10"},{"lineNumber":168,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":169,"author":{"gitId":"StevenGX12"},"content":"            if (userInput.length \u003c 2 || eventStartTimeIndex \u003d\u003d 1 || eventEndTimeIndex \u003d\u003d 1) {","lastModifiedDate":"2023-09-10"},{"lineNumber":170,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Please specify the event description!! (cannot be empty lah)\");","lastModifiedDate":"2023-09-10"},{"lineNumber":171,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":172,"author":{"gitId":"StevenGX12"},"content":"            if (eventStartTimeIndex \u003c 0 || eventEndTimeIndex \u003c 0 || eventEndTimeIndex \u003d\u003d userInput.length - 1) {","lastModifiedDate":"2023-09-10"},{"lineNumber":173,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Invalid event format. Use \u0027/from\u0027 and \u0027/to\u0027 to specify event timings.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":174,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":175,"author":{"gitId":"StevenGX12"},"content":"            if (eventStartTimeIndex \u003d\u003d userInput.length - 1 || eventStartTimeIndex \u003d\u003d eventEndTimeIndex - 1) {","lastModifiedDate":"2023-09-10"},{"lineNumber":176,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Please specify the event start time!!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":177,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":178,"author":{"gitId":"StevenGX12"},"content":"            if (eventEndTimeIndex \u003d\u003d userInput.length - 1) {","lastModifiedDate":"2023-09-10"},{"lineNumber":179,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Please specify the event end time!!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":180,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":181,"author":{"gitId":"StevenGX12"},"content":"            String eventName \u003d String.join(\" \", Arrays.copyOfRange(userInput, 1, eventStartTimeIndex));","lastModifiedDate":"2023-09-10"},{"lineNumber":182,"author":{"gitId":"StevenGX12"},"content":"            String eventStartTimeString \u003d String.join(\" \",","lastModifiedDate":"2023-09-30"},{"lineNumber":183,"author":{"gitId":"StevenGX12"},"content":"                    Arrays.copyOfRange(userInput, eventStartTimeIndex + 1, eventEndTimeIndex));","lastModifiedDate":"2023-09-30"},{"lineNumber":184,"author":{"gitId":"StevenGX12"},"content":"            String eventEndTimeString \u003d String.join(\" \",","lastModifiedDate":"2023-09-30"},{"lineNumber":185,"author":{"gitId":"StevenGX12"},"content":"                    Arrays.copyOfRange(userInput, eventEndTimeIndex + 1, userInput.length));","lastModifiedDate":"2023-09-30"},{"lineNumber":186,"author":{"gitId":"StevenGX12"},"content":"            LocalDateTime eventStartTime \u003d parser.parseDateTime(eventStartTimeString);","lastModifiedDate":"2023-09-30"},{"lineNumber":187,"author":{"gitId":"StevenGX12"},"content":"            LocalDateTime eventEndTime \u003d parser.parseDateTime(eventEndTimeString);","lastModifiedDate":"2023-09-30"},{"lineNumber":188,"author":{"gitId":"StevenGX12"},"content":"            if (eventStartTime.isAfter(eventEndTime)) {","lastModifiedDate":"2023-09-30"},{"lineNumber":189,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Event start time cannot be after event end time!!\");","lastModifiedDate":"2023-09-30"},{"lineNumber":190,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":191,"author":{"gitId":"StevenGX12"},"content":"            NotChatGPT.taskList.addEvent(eventName, eventStartTime, eventEndTime);","lastModifiedDate":"2023-09-10"},{"lineNumber":192,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-28"},{"lineNumber":193,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(NotChatGPT.taskList.getTasks()[NotChatGPT.taskList.getTaskCount() - 1]);","lastModifiedDate":"2023-09-28"},{"lineNumber":194,"author":{"gitId":"StevenGX12"},"content":"        } catch (NotChatGPTExceptions e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":195,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-09-28"},{"lineNumber":196,"author":{"gitId":"StevenGX12"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":197,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(","lastModifiedDate":"2023-09-30"},{"lineNumber":198,"author":{"gitId":"StevenGX12"},"content":"                    \"Error: Please use the format \u0027dd-MM-yyyy HH:mm\u0027 and ensure that the date and time entered is valid.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":199,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":200,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":201,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":202,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":203,"author":{"gitId":"StevenGX12"},"content":"     * Handles the \u0027delete\u0027 command to remove a task from the list.","lastModifiedDate":"2023-09-29"},{"lineNumber":204,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":205,"author":{"gitId":"StevenGX12"},"content":"     * @param userInput An array of strings containing the user\u0027s input.","lastModifiedDate":"2023-09-29"},{"lineNumber":206,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":207,"author":{"gitId":"StevenGX12"},"content":"    public static void handleDelete(String[] userInput) {","lastModifiedDate":"2023-09-16"},{"lineNumber":208,"author":{"gitId":"StevenGX12"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":209,"author":{"gitId":"StevenGX12"},"content":"            if (userInput.length \u003c 2) {","lastModifiedDate":"2023-09-16"},{"lineNumber":210,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Please specify the task number to delete!!\");","lastModifiedDate":"2023-09-29"},{"lineNumber":211,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":212,"author":{"gitId":"StevenGX12"},"content":"            int taskNumber \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2023-09-16"},{"lineNumber":213,"author":{"gitId":"StevenGX12"},"content":"            if (taskNumber \u003c 1 || taskNumber \u003e NotChatGPT.taskList.getTaskCount()) {","lastModifiedDate":"2023-09-16"},{"lineNumber":214,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Task number is out of range!! Please enter a valid number.\");","lastModifiedDate":"2023-09-29"},{"lineNumber":215,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":216,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-28"},{"lineNumber":217,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(NotChatGPT.taskList.getTasks()[taskNumber - 1]);","lastModifiedDate":"2023-09-16"},{"lineNumber":218,"author":{"gitId":"StevenGX12"},"content":"            NotChatGPT.taskList.deleteTask(taskNumber);","lastModifiedDate":"2023-09-16"},{"lineNumber":219,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Now you have \" + NotChatGPT.taskList.getTaskCount() + \" tasks in your list.\");","lastModifiedDate":"2023-09-28"},{"lineNumber":220,"author":{"gitId":"StevenGX12"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":221,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Error: Invalid task number. Please enter a valid number.\");","lastModifiedDate":"2023-09-28"},{"lineNumber":222,"author":{"gitId":"StevenGX12"},"content":"        } catch (NotChatGPTExceptions e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":223,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-09-28"},{"lineNumber":224,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":225,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":226,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":227,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":228,"author":{"gitId":"StevenGX12"},"content":"     * Handles the \u0027find\u0027 command to search for tasks by description or time.","lastModifiedDate":"2023-09-30"},{"lineNumber":229,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":230,"author":{"gitId":"StevenGX12"},"content":"     * @param userInput An array of strings containing the user\u0027s input.","lastModifiedDate":"2023-09-29"},{"lineNumber":231,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":232,"author":{"gitId":"StevenGX12"},"content":"    public static void handleFind(String[] userInput) {","lastModifiedDate":"2023-09-29"},{"lineNumber":233,"author":{"gitId":"StevenGX12"},"content":"        try {","lastModifiedDate":"2023-09-29"},{"lineNumber":234,"author":{"gitId":"StevenGX12"},"content":"            if (userInput.length \u003c 2) {","lastModifiedDate":"2023-09-29"},{"lineNumber":235,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Please specify the search type (description or time)!!\");","lastModifiedDate":"2023-09-30"},{"lineNumber":236,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":237,"author":{"gitId":"StevenGX12"},"content":"            String searchType \u003d userInput[1];","lastModifiedDate":"2023-09-30"},{"lineNumber":238,"author":{"gitId":"StevenGX12"},"content":"            if (!searchType.equals(\"/description\") \u0026\u0026 !searchType.equals(\"/time\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":239,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(","lastModifiedDate":"2023-09-30"},{"lineNumber":240,"author":{"gitId":"StevenGX12"},"content":"                        \"Invalid search type. Please start with \u0027find /description\u0027 or \u0027find /time\u0027.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":241,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":242,"author":{"gitId":"StevenGX12"},"content":"            if (searchType.equals(\"/description\") \u0026\u0026 userInput.length \u003c 3) {","lastModifiedDate":"2023-09-30"},{"lineNumber":243,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Please specify the search keyword!!\");","lastModifiedDate":"2023-09-30"},{"lineNumber":244,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":245,"author":{"gitId":"StevenGX12"},"content":"            String searchString \u003d String.join(\" \", Arrays.copyOfRange(userInput, 2, userInput.length));","lastModifiedDate":"2023-09-30"},{"lineNumber":246,"author":{"gitId":"StevenGX12"},"content":"            if (searchType.equals(\"/time\") \u0026\u0026 searchString.length() !\u003d 16) {","lastModifiedDate":"2023-09-30"},{"lineNumber":247,"author":{"gitId":"StevenGX12"},"content":"                throw new NotChatGPTExceptions(\"Please specify the search time in the format \u0027dd-MM-yyyy HH:mm\u0027!!\");","lastModifiedDate":"2023-09-30"},{"lineNumber":248,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":249,"author":{"gitId":"StevenGX12"},"content":"            String[] matchingTasks \u003d (searchType.equals(\"/description\"))","lastModifiedDate":"2023-09-30"},{"lineNumber":250,"author":{"gitId":"StevenGX12"},"content":"                    ? NotChatGPT.taskList.findTasks(searchString)","lastModifiedDate":"2023-09-30"},{"lineNumber":251,"author":{"gitId":"StevenGX12"},"content":"                    : NotChatGPT.taskList.findTasksByTiming(searchString);","lastModifiedDate":"2023-09-30"},{"lineNumber":252,"author":{"gitId":"StevenGX12"},"content":"            if (matchingTasks.length \u003d\u003d 0) {","lastModifiedDate":"2023-09-29"},{"lineNumber":253,"author":{"gitId":"StevenGX12"},"content":"                System.out","lastModifiedDate":"2023-09-30"},{"lineNumber":254,"author":{"gitId":"StevenGX12"},"content":"                        .println(\"No matching tasks found. Please check your search description/timing and try again.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":255,"author":{"gitId":"StevenGX12"},"content":"            } else {","lastModifiedDate":"2023-09-29"},{"lineNumber":256,"author":{"gitId":"StevenGX12"},"content":"                System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-29"},{"lineNumber":257,"author":{"gitId":"StevenGX12"},"content":"                for (int i \u003d 0; i \u003c matchingTasks.length; i++) {","lastModifiedDate":"2023-09-29"},{"lineNumber":258,"author":{"gitId":"StevenGX12"},"content":"                    System.out.println((i + 1) + \". \" + matchingTasks[i]);","lastModifiedDate":"2023-09-29"},{"lineNumber":259,"author":{"gitId":"StevenGX12"},"content":"                }","lastModifiedDate":"2023-09-29"},{"lineNumber":260,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-29"},{"lineNumber":261,"author":{"gitId":"StevenGX12"},"content":"        } catch (NotChatGPTExceptions e) {","lastModifiedDate":"2023-09-29"},{"lineNumber":262,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-09-29"},{"lineNumber":263,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-29"},{"lineNumber":264,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":265,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":266,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":267,"author":{"gitId":"StevenGX12"},"content":"     * Responds to the user\u0027s command by calling the appropriate handler method.","lastModifiedDate":"2023-09-29"},{"lineNumber":268,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":269,"author":{"gitId":"StevenGX12"},"content":"     * @param userInput An array of strings containing the user\u0027s input.","lastModifiedDate":"2023-09-29"},{"lineNumber":270,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":271,"author":{"gitId":"StevenGX12"},"content":"    public static void respond(String[] userInput) {","lastModifiedDate":"2023-09-10"},{"lineNumber":272,"author":{"gitId":"StevenGX12"},"content":"        switch (userInput[0]) {","lastModifiedDate":"2023-09-10"},{"lineNumber":273,"author":{"gitId":"StevenGX12"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-10"},{"lineNumber":274,"author":{"gitId":"StevenGX12"},"content":"                handleBye();","lastModifiedDate":"2023-09-10"},{"lineNumber":275,"author":{"gitId":"StevenGX12"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":276,"author":{"gitId":"StevenGX12"},"content":"            case \"list\":","lastModifiedDate":"2023-09-10"},{"lineNumber":277,"author":{"gitId":"StevenGX12"},"content":"                handleList();","lastModifiedDate":"2023-09-10"},{"lineNumber":278,"author":{"gitId":"StevenGX12"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":279,"author":{"gitId":"StevenGX12"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-10"},{"lineNumber":280,"author":{"gitId":"StevenGX12"},"content":"                handleMark(userInput);","lastModifiedDate":"2023-09-10"},{"lineNumber":281,"author":{"gitId":"StevenGX12"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":282,"author":{"gitId":"StevenGX12"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-10"},{"lineNumber":283,"author":{"gitId":"StevenGX12"},"content":"                handleUnmark(userInput);","lastModifiedDate":"2023-09-10"},{"lineNumber":284,"author":{"gitId":"StevenGX12"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":285,"author":{"gitId":"StevenGX12"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-10"},{"lineNumber":286,"author":{"gitId":"StevenGX12"},"content":"                handleTodo(userInput);","lastModifiedDate":"2023-09-10"},{"lineNumber":287,"author":{"gitId":"StevenGX12"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":288,"author":{"gitId":"StevenGX12"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-10"},{"lineNumber":289,"author":{"gitId":"StevenGX12"},"content":"                handleDeadline(userInput);","lastModifiedDate":"2023-09-10"},{"lineNumber":290,"author":{"gitId":"StevenGX12"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":291,"author":{"gitId":"StevenGX12"},"content":"            case \"event\":","lastModifiedDate":"2023-09-10"},{"lineNumber":292,"author":{"gitId":"StevenGX12"},"content":"                handleEvent(userInput);","lastModifiedDate":"2023-09-10"},{"lineNumber":293,"author":{"gitId":"StevenGX12"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":294,"author":{"gitId":"StevenGX12"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-16"},{"lineNumber":295,"author":{"gitId":"StevenGX12"},"content":"                handleDelete(userInput);","lastModifiedDate":"2023-09-16"},{"lineNumber":296,"author":{"gitId":"StevenGX12"},"content":"                break;","lastModifiedDate":"2023-09-16"},{"lineNumber":297,"author":{"gitId":"StevenGX12"},"content":"            case \"find\":","lastModifiedDate":"2023-09-29"},{"lineNumber":298,"author":{"gitId":"StevenGX12"},"content":"                handleFind(userInput);","lastModifiedDate":"2023-09-29"},{"lineNumber":299,"author":{"gitId":"StevenGX12"},"content":"                break;","lastModifiedDate":"2023-09-29"},{"lineNumber":300,"author":{"gitId":"StevenGX12"},"content":"            default:","lastModifiedDate":"2023-08-28"},{"lineNumber":301,"author":{"gitId":"StevenGX12"},"content":"                System.out.println(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-29"},{"lineNumber":302,"author":{"gitId":"StevenGX12"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":303,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":304,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":305,"author":{"gitId":"StevenGX12"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"StevenGX12":305}},{"path":"src/main/java/notGPT/exception/NotChatGPTExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenGX12"},"content":"package notGPT.exception;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"StevenGX12"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"StevenGX12"},"content":" * The NotChatGPTExceptions class represents custom exceptions specific to the notChatGPT application.","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"StevenGX12"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"StevenGX12"},"content":"public class NotChatGPTExceptions extends Exception {","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"StevenGX12"},"content":"    ","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"StevenGX12"},"content":"     * Constructs a new NotChatGPTExceptions object with the specified error message.","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"StevenGX12"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"StevenGX12"},"content":"    public NotChatGPTExceptions(String message) {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"StevenGX12"},"content":"        super(message);","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"StevenGX12"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"StevenGX12":16}},{"path":"src/main/java/notGPT/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenGX12"},"content":"package notGPT.parser;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"StevenGX12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"StevenGX12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"StevenGX12"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"StevenGX12"},"content":" * The Parser class is responsible for parsing user commands.","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"StevenGX12"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"StevenGX12"},"content":"public class Parser {","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"StevenGX12"},"content":"    ","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"StevenGX12"},"content":"     * Parses a user command into an array of strings based on space as the delimiter.","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"StevenGX12"},"content":"     * @param command The user command to be parsed.","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"StevenGX12"},"content":"     * @return An array of strings containing the parsed command components.","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"StevenGX12"},"content":"    public String[] parseCommand(String command) {","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"StevenGX12"},"content":"        return command.split(\" \");","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"StevenGX12"},"content":"     * Parses a string into a LocalDateTime object.","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"StevenGX12"},"content":"     * @param dateTime The string to be parsed.","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"StevenGX12"},"content":"     * @return A LocalDateTime object.","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"StevenGX12"},"content":"    public LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"StevenGX12"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"StevenGX12"},"content":"        LocalDateTime parsedDateTime \u003d null;","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"StevenGX12"},"content":"        parsedDateTime \u003d LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"StevenGX12"},"content":"        return parsedDateTime;","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"StevenGX12"},"content":"     * Format a LocalDateTime object into a string.","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"StevenGX12"},"content":"     * @param dateTime The LocalDateTime object to be parsed.","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"StevenGX12"},"content":"     * @return A string representing the LocalDateTime object.","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"StevenGX12"},"content":"    public String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"StevenGX12"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"StevenGX12"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"StevenGX12"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"StevenGX12":42}},{"path":"src/main/java/notGPT/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenGX12"},"content":"package notGPT.storage;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"StevenGX12"},"content":"import java.io.File;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"StevenGX12"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"StevenGX12"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"StevenGX12"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"StevenGX12"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"StevenGX12"},"content":"import notGPT.task.Deadlines;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"StevenGX12"},"content":"import notGPT.task.Event;","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"StevenGX12"},"content":"import notGPT.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"StevenGX12"},"content":"import notGPT.task.ToDo;","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"StevenGX12"},"content":"import notGPT.task.TaskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"StevenGX12"},"content":"import notGPT.parser.Parser;","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"StevenGX12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"StevenGX12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"StevenGX12"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"StevenGX12"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"StevenGX12"},"content":" * The Storage class manages the loading and saving of tasks to a file.","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"StevenGX12"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"StevenGX12"},"content":"public class Storage {","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"StevenGX12"},"content":"    private String filePath;","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"StevenGX12"},"content":"    private ArrayList\u003cTask\u003e buffer;","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"StevenGX12"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"StevenGX12"},"content":"     * Constructs a new Storage object with the specified file path and loads tasks from the file.","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"StevenGX12"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"StevenGX12"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"StevenGX12"},"content":"        this.buffer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"StevenGX12"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"StevenGX12"},"content":"        loadFromFile();","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"StevenGX12"},"content":"     * Loads tasks from the specified file and populates the buffer.","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"StevenGX12"},"content":"    public void loadFromFile() {","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"StevenGX12"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"StevenGX12"},"content":"            File taskListFile \u003d new File(filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"StevenGX12"},"content":"            Scanner sc \u003d new Scanner(taskListFile);","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"StevenGX12"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"StevenGX12"},"content":"                String task \u003d sc.nextLine();","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"StevenGX12"},"content":"                String[] taskDetails \u003d task.split(\"\\\\|\");","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"StevenGX12"},"content":"                switch (taskDetails[0]) {","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"StevenGX12"},"content":"                    case \"T\":","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"StevenGX12"},"content":"                        addTodoFromFile(taskDetails);","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"StevenGX12"},"content":"                        break;","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"StevenGX12"},"content":"                    case \"D\":","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"StevenGX12"},"content":"                        addDeadlineFromFile(taskDetails);","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"StevenGX12"},"content":"                        break;","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"StevenGX12"},"content":"                    case \"E\":","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"StevenGX12"},"content":"                        addEventFromFile(taskDetails);","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"StevenGX12"},"content":"                        break;","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"StevenGX12"},"content":"                }","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"StevenGX12"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"StevenGX12"},"content":"            try {","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"StevenGX12"},"content":"                File dataDirectory \u003d new File(\"./data\");","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"StevenGX12"},"content":"                if (!dataDirectory.exists()) {","lastModifiedDate":"2023-09-28"},{"lineNumber":63,"author":{"gitId":"StevenGX12"},"content":"                    dataDirectory.mkdir();","lastModifiedDate":"2023-09-28"},{"lineNumber":64,"author":{"gitId":"StevenGX12"},"content":"                }","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"StevenGX12"},"content":"                File taskListFile \u003d new File(dataDirectory, \"tasks.txt\");","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"StevenGX12"},"content":"                if (!taskListFile.exists()) {","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"StevenGX12"},"content":"                    taskListFile.createNewFile();","lastModifiedDate":"2023-09-28"},{"lineNumber":69,"author":{"gitId":"StevenGX12"},"content":"                }","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"StevenGX12"},"content":"                System.out.println(\"Unable to find data file/directory! Created new storage file at ./data/tasks.txt\");","lastModifiedDate":"2023-09-28"},{"lineNumber":71,"author":{"gitId":"StevenGX12"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2023-09-28"},{"lineNumber":72,"author":{"gitId":"StevenGX12"},"content":"                System.out.println(\"Error: Unable to create or access data file/directory!\");","lastModifiedDate":"2023-09-28"},{"lineNumber":73,"author":{"gitId":"StevenGX12"},"content":"            } catch (DateTimeException ex) {","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"StevenGX12"},"content":"                System.out.println(\"Error: Invalid date/time format in data file!\");","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-28"},{"lineNumber":76,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":77,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":78,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":79,"author":{"gitId":"StevenGX12"},"content":"    private void addTodoFromFile(String[] taskDetails) {","lastModifiedDate":"2023-09-28"},{"lineNumber":80,"author":{"gitId":"StevenGX12"},"content":"        String taskName \u003d taskDetails[2];","lastModifiedDate":"2023-09-28"},{"lineNumber":81,"author":{"gitId":"StevenGX12"},"content":"        ToDo currTodo \u003d new ToDo(taskName);","lastModifiedDate":"2023-09-28"},{"lineNumber":82,"author":{"gitId":"StevenGX12"},"content":"        if (taskDetails[1].equals(\"1\")) {","lastModifiedDate":"2023-09-28"},{"lineNumber":83,"author":{"gitId":"StevenGX12"},"content":"            currTodo.markAsDone();","lastModifiedDate":"2023-09-28"},{"lineNumber":84,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":85,"author":{"gitId":"StevenGX12"},"content":"        buffer.add(currTodo);","lastModifiedDate":"2023-09-28"},{"lineNumber":86,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":87,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":88,"author":{"gitId":"StevenGX12"},"content":"    private void addDeadlineFromFile(String[] taskDetails) {","lastModifiedDate":"2023-09-28"},{"lineNumber":89,"author":{"gitId":"StevenGX12"},"content":"        String taskName \u003d taskDetails[2];","lastModifiedDate":"2023-09-28"},{"lineNumber":90,"author":{"gitId":"StevenGX12"},"content":"        String deadlineString \u003d taskDetails[3];","lastModifiedDate":"2023-09-30"},{"lineNumber":91,"author":{"gitId":"StevenGX12"},"content":"        LocalDateTime deadline \u003d parser.parseDateTime(deadlineString);","lastModifiedDate":"2023-09-30"},{"lineNumber":92,"author":{"gitId":"StevenGX12"},"content":"        Deadlines currDeadline \u003d new Deadlines(taskName, deadline);","lastModifiedDate":"2023-09-28"},{"lineNumber":93,"author":{"gitId":"StevenGX12"},"content":"        if (taskDetails[1].equals(\"1\")) {","lastModifiedDate":"2023-09-28"},{"lineNumber":94,"author":{"gitId":"StevenGX12"},"content":"            currDeadline.markAsDone();","lastModifiedDate":"2023-09-28"},{"lineNumber":95,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":96,"author":{"gitId":"StevenGX12"},"content":"        buffer.add(currDeadline);","lastModifiedDate":"2023-09-28"},{"lineNumber":97,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":98,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":99,"author":{"gitId":"StevenGX12"},"content":"    private void addEventFromFile(String[] taskDetails) {","lastModifiedDate":"2023-09-28"},{"lineNumber":100,"author":{"gitId":"StevenGX12"},"content":"        String taskName \u003d taskDetails[2];","lastModifiedDate":"2023-09-28"},{"lineNumber":101,"author":{"gitId":"StevenGX12"},"content":"        String startTimeString \u003d taskDetails[3];","lastModifiedDate":"2023-09-30"},{"lineNumber":102,"author":{"gitId":"StevenGX12"},"content":"        String endTimeString \u003d taskDetails[4];","lastModifiedDate":"2023-09-30"},{"lineNumber":103,"author":{"gitId":"StevenGX12"},"content":"        LocalDateTime startTime \u003d parser.parseDateTime(startTimeString);","lastModifiedDate":"2023-09-30"},{"lineNumber":104,"author":{"gitId":"StevenGX12"},"content":"        LocalDateTime endTime \u003d parser.parseDateTime(endTimeString);","lastModifiedDate":"2023-09-30"},{"lineNumber":105,"author":{"gitId":"StevenGX12"},"content":"        Event currEvent \u003d new Event(taskName, startTime, endTime);","lastModifiedDate":"2023-09-28"},{"lineNumber":106,"author":{"gitId":"StevenGX12"},"content":"        if (taskDetails[1].equals(\"1\")) {","lastModifiedDate":"2023-09-28"},{"lineNumber":107,"author":{"gitId":"StevenGX12"},"content":"            currEvent.markAsDone();","lastModifiedDate":"2023-09-28"},{"lineNumber":108,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":109,"author":{"gitId":"StevenGX12"},"content":"        buffer.add(currEvent);","lastModifiedDate":"2023-09-28"},{"lineNumber":110,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":111,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":112,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":113,"author":{"gitId":"StevenGX12"},"content":"     * Saves tasks from the taskList to the file specified in the filePath.","lastModifiedDate":"2023-09-29"},{"lineNumber":114,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":115,"author":{"gitId":"StevenGX12"},"content":"     * @param taskList The TaskList containing tasks to be saved.","lastModifiedDate":"2023-09-29"},{"lineNumber":116,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":117,"author":{"gitId":"StevenGX12"},"content":"    public void saveTasks(TaskList taskList) {","lastModifiedDate":"2023-09-28"},{"lineNumber":118,"author":{"gitId":"StevenGX12"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":119,"author":{"gitId":"StevenGX12"},"content":"            File taskListFile \u003d new File(filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":120,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":121,"author":{"gitId":"StevenGX12"},"content":"            FileWriter fw \u003d new FileWriter(taskListFile);","lastModifiedDate":"2023-09-28"},{"lineNumber":122,"author":{"gitId":"StevenGX12"},"content":"            for (int i \u003d 1; i \u003c\u003d taskList.getTaskCount(); i++) {","lastModifiedDate":"2023-09-28"},{"lineNumber":123,"author":{"gitId":"StevenGX12"},"content":"                fw.write(taskList.getTaskByNumber(i).toFileString() + \"\\n\");","lastModifiedDate":"2023-09-28"},{"lineNumber":124,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-28"},{"lineNumber":125,"author":{"gitId":"StevenGX12"},"content":"            fw.close();","lastModifiedDate":"2023-09-28"},{"lineNumber":126,"author":{"gitId":"StevenGX12"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-28"},{"lineNumber":127,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Error: Unable to create or access data file/directory!\\n\"","lastModifiedDate":"2023-09-28"},{"lineNumber":128,"author":{"gitId":"StevenGX12"},"content":"                    + e.getMessage());","lastModifiedDate":"2023-09-29"},{"lineNumber":129,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":130,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":131,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":132,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":133,"author":{"gitId":"StevenGX12"},"content":"     * Retrieves the buffer containing loaded tasks.","lastModifiedDate":"2023-09-29"},{"lineNumber":134,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":135,"author":{"gitId":"StevenGX12"},"content":"     * @return The ArrayList of tasks loaded from the file.","lastModifiedDate":"2023-09-29"},{"lineNumber":136,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":137,"author":{"gitId":"StevenGX12"},"content":"    public ArrayList\u003cTask\u003e getBuffer() {","lastModifiedDate":"2023-09-28"},{"lineNumber":138,"author":{"gitId":"StevenGX12"},"content":"        return buffer;","lastModifiedDate":"2023-09-28"},{"lineNumber":139,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":140,"author":{"gitId":"StevenGX12"},"content":"}","lastModifiedDate":"2023-09-28"},{"lineNumber":141,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"StevenGX12":141}},{"path":"src/main/java/notGPT/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenGX12"},"content":"package notGPT.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"StevenGX12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"StevenGX12"},"content":"import notGPT.parser.Parser;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"StevenGX12"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"StevenGX12"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"StevenGX12"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"StevenGX12"},"content":"    public Deadlines(String taskName, LocalDateTime deadline) {","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"StevenGX12"},"content":"        super(taskName);","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"StevenGX12"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"StevenGX12"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"StevenGX12"},"content":"    public String toString() {","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"StevenGX12"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + parser.formatDateTime(deadline) + \")\";","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"StevenGX12"},"content":"    ","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"StevenGX12"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"StevenGX12"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"StevenGX12"},"content":"        return \"D\" + super.toFileString() + \"|\" + parser.formatDateTime(deadline);","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"StevenGX12"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"StevenGX12"},"content":"    public String getTaskTiming() {","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"StevenGX12"},"content":"        return parser.formatDateTime(deadline);","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"StevenGX12"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"StevenGX12":29}},{"path":"src/main/java/notGPT/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenGX12"},"content":"package notGPT.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"StevenGX12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"StevenGX12"},"content":"import notGPT.parser.Parser;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"StevenGX12"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"StevenGX12"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"StevenGX12"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"StevenGX12"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"StevenGX12"},"content":"    public Event(String taskName, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"StevenGX12"},"content":"        super(taskName);","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"StevenGX12"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"StevenGX12"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"StevenGX12"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"StevenGX12"},"content":"    public String toString() {","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"StevenGX12"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + parser.formatDateTime(startTime) + \" to \"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"StevenGX12"},"content":"                + parser.formatDateTime(endTime) + \")\";","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"StevenGX12"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"StevenGX12"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"StevenGX12"},"content":"        return \"E\" + super.toFileString() + \"|\" + parser.formatDateTime(startTime) + \"|\"","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"StevenGX12"},"content":"                + parser.formatDateTime(endTime);","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"StevenGX12"},"content":"    @Override","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"StevenGX12"},"content":"    public String getTaskTiming() {","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"StevenGX12"},"content":"        return parser.formatDateTime(startTime) + \" \" + parser.formatDateTime(endTime);","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"StevenGX12"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"StevenGX12":33}},{"path":"src/main/java/notGPT/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenGX12"},"content":"package notGPT.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"StevenGX12"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"StevenGX12"},"content":" * The Task class represents a task with a name and completion status.","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"StevenGX12"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"StevenGX12"},"content":"public class Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"StevenGX12"},"content":"    private String taskName;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"StevenGX12"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"StevenGX12"},"content":"     * Constructs a new Task with the specified name, initially marked as not done.","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"StevenGX12"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"StevenGX12"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"StevenGX12"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"StevenGX12"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"StevenGX12"},"content":"     * Gets the name of the task.","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"StevenGX12"},"content":"     * @return The task\u0027s name as a String.","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"StevenGX12"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"StevenGX12"},"content":"        return taskName;","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"StevenGX12"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"StevenGX12"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"StevenGX12"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"StevenGX12"},"content":"        return isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"StevenGX12"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"StevenGX12"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"StevenGX12"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"StevenGX12"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"StevenGX12"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"StevenGX12"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"StevenGX12"},"content":"     * Gets the task\u0027s timing.","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"StevenGX12"},"content":"     * @return An array of Strings representing the task\u0027s timing.","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"StevenGX12"},"content":"    public String getTaskTiming() {","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"StevenGX12"},"content":"        return \"\";","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":61,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":62,"author":{"gitId":"StevenGX12"},"content":"     * Converts the task to a formatted String representation.","lastModifiedDate":"2023-09-29"},{"lineNumber":63,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":64,"author":{"gitId":"StevenGX12"},"content":"     * @return A String representing the task\u0027s status and name.","lastModifiedDate":"2023-09-29"},{"lineNumber":65,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":66,"author":{"gitId":"StevenGX12"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"StevenGX12"},"content":"        String statusIcon \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"StevenGX12"},"content":"        return \"[\" + statusIcon + \"] \" + taskName;","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":72,"author":{"gitId":"StevenGX12"},"content":"     * Converts the task to a formatted String representation for file storage.","lastModifiedDate":"2023-09-29"},{"lineNumber":73,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":74,"author":{"gitId":"StevenGX12"},"content":"     * @return A String representing the task\u0027s status and name for file storage.","lastModifiedDate":"2023-09-29"},{"lineNumber":75,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":76,"author":{"gitId":"StevenGX12"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-17"},{"lineNumber":77,"author":{"gitId":"StevenGX12"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-09-17"},{"lineNumber":78,"author":{"gitId":"StevenGX12"},"content":"        return \"|\" + status + \"|\" + taskName;","lastModifiedDate":"2023-09-17"},{"lineNumber":79,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":80,"author":{"gitId":"StevenGX12"},"content":"}","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"StevenGX12":81}},{"path":"src/main/java/notGPT/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenGX12"},"content":"package notGPT.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"StevenGX12"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"StevenGX12"},"content":"import notGPT.storage.Storage;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"StevenGX12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"StevenGX12"},"content":"/**","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"StevenGX12"},"content":" * The TaskList class represents a list of tasks.","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"StevenGX12"},"content":" * Contains methods to manage tasks.","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"StevenGX12"},"content":" */","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"StevenGX12"},"content":"public class TaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"StevenGX12"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"StevenGX12"},"content":"    private int taskCount;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"StevenGX12"},"content":"     * Initializes a new TaskList with data from storage.","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"StevenGX12"},"content":"     * @param storage The storage object used to load tasks from a file.","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"StevenGX12"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"StevenGX12"},"content":"        this.taskList \u003d storage.getBuffer();","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"StevenGX12"},"content":"        this.taskCount \u003d taskList.size();","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"StevenGX12"},"content":"     * Adds a new Todo task to the task list.","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"StevenGX12"},"content":"     * @param taskName The description of the Todo task.","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"StevenGX12"},"content":"    public void addTodo(String taskName) {","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"StevenGX12"},"content":"        Task newTask \u003d new ToDo(taskName);","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"StevenGX12"},"content":"        taskList.add(newTask);","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"StevenGX12"},"content":"        taskCount++;","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"StevenGX12"},"content":"     * Adds a new Deadline task to the task list.","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"StevenGX12"},"content":"     * @param taskName The description of the Deadline task.","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"StevenGX12"},"content":"     * @param deadline The deadline associated with the task.","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"StevenGX12"},"content":"    public void addDeadline(String taskName, LocalDateTime deadline) {","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"StevenGX12"},"content":"        Task newTask \u003d new Deadlines(taskName, deadline);","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"StevenGX12"},"content":"        taskList.add(newTask);","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"StevenGX12"},"content":"        taskCount++;","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"StevenGX12"},"content":"     * Adds a new Event task to the task list.","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"StevenGX12"},"content":"     * @param taskName  The description of the Event task.","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"StevenGX12"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"StevenGX12"},"content":"     * @param endTime   The end time of the event.","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"StevenGX12"},"content":"    public void addEvent(String taskName, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"StevenGX12"},"content":"        Task newTask \u003d new Event(taskName, startTime, endTime);","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"StevenGX12"},"content":"        taskList.add(newTask);","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"StevenGX12"},"content":"        taskCount++;","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"StevenGX12"},"content":"     * Retrieves an array of task descriptions as strings.","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"StevenGX12"},"content":"     * @return An array of task descriptions.","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"StevenGX12"},"content":"    public String[] getTasks() {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"StevenGX12"},"content":"        String[] tasks \u003d new String[taskCount];","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"StevenGX12"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"StevenGX12"},"content":"            tasks[i] \u003d taskList.get(i).toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"StevenGX12"},"content":"        return tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"StevenGX12"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"StevenGX12"},"content":"     * @param taskNumber The number of the task to mark as done.","lastModifiedDate":"2023-09-30"},{"lineNumber":78,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"StevenGX12"},"content":"    public void markTaskAsDone(int taskNumber) {","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"StevenGX12"},"content":"        if (taskNumber \u003e\u003d 1 \u0026\u0026 taskNumber \u003c\u003d taskCount) {","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"StevenGX12"},"content":"            taskList.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"StevenGX12"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Invalid task number.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":88,"author":{"gitId":"StevenGX12"},"content":"     * Unmarks a task as done.","lastModifiedDate":"2023-09-30"},{"lineNumber":89,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-30"},{"lineNumber":90,"author":{"gitId":"StevenGX12"},"content":"     * @param taskNumber The number of the task to unmark as done.","lastModifiedDate":"2023-09-30"},{"lineNumber":91,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":92,"author":{"gitId":"StevenGX12"},"content":"    public void unmarkTaskAsDone(int taskNumber) {","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"StevenGX12"},"content":"        if (taskNumber \u003e\u003d 1 \u0026\u0026 taskNumber \u003c\u003d taskCount) {","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"StevenGX12"},"content":"            taskList.get(taskNumber - 1).unmarkAsDone();","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"StevenGX12"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Invalid task number.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":101,"author":{"gitId":"StevenGX12"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-09-30"},{"lineNumber":102,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-30"},{"lineNumber":103,"author":{"gitId":"StevenGX12"},"content":"     * @param taskNumber The number of the task to delete.","lastModifiedDate":"2023-09-30"},{"lineNumber":104,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":105,"author":{"gitId":"StevenGX12"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"StevenGX12"},"content":"        if (taskNumber \u003e\u003d 1 \u0026\u0026 taskNumber \u003c\u003d taskCount) {","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"StevenGX12"},"content":"            taskList.remove(taskNumber - 1);","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"StevenGX12"},"content":"            taskCount--;","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"StevenGX12"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Invalid task number.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":115,"author":{"gitId":"StevenGX12"},"content":"     * Finds tasks containing a keyword and returns them as an array of strings.","lastModifiedDate":"2023-09-30"},{"lineNumber":116,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-30"},{"lineNumber":117,"author":{"gitId":"StevenGX12"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-09-30"},{"lineNumber":118,"author":{"gitId":"StevenGX12"},"content":"     * @return An array of matching task descriptions.","lastModifiedDate":"2023-09-30"},{"lineNumber":119,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":120,"author":{"gitId":"StevenGX12"},"content":"    public String[] findTasks(String keyword) {","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"StevenGX12"},"content":"        ArrayList\u003cString\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"StevenGX12"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"StevenGX12"},"content":"            if (task.getTaskName().contains(keyword)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"StevenGX12"},"content":"                matchingTasks.add(task.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"StevenGX12"},"content":"        return matchingTasks.toArray(new String[0]);","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"StevenGX12"},"content":"    public String[] findTasksByTiming(String datetime) {","lastModifiedDate":"2023-09-30"},{"lineNumber":131,"author":{"gitId":"StevenGX12"},"content":"        ArrayList\u003cString\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-30"},{"lineNumber":132,"author":{"gitId":"StevenGX12"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-30"},{"lineNumber":133,"author":{"gitId":"StevenGX12"},"content":"            if (task.getTaskTiming().contains(datetime)) {","lastModifiedDate":"2023-09-30"},{"lineNumber":134,"author":{"gitId":"StevenGX12"},"content":"                matchingTasks.add(task.toString());","lastModifiedDate":"2023-09-30"},{"lineNumber":135,"author":{"gitId":"StevenGX12"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":136,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":137,"author":{"gitId":"StevenGX12"},"content":"        return matchingTasks.toArray(new String[0]);","lastModifiedDate":"2023-09-30"},{"lineNumber":138,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":139,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":140,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":141,"author":{"gitId":"StevenGX12"},"content":"     * Returns the count of tasks in the task list.","lastModifiedDate":"2023-09-30"},{"lineNumber":142,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-30"},{"lineNumber":143,"author":{"gitId":"StevenGX12"},"content":"     * @return The count of tasks.","lastModifiedDate":"2023-09-30"},{"lineNumber":144,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":145,"author":{"gitId":"StevenGX12"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-09-10"},{"lineNumber":146,"author":{"gitId":"StevenGX12"},"content":"        return taskCount;","lastModifiedDate":"2023-09-10"},{"lineNumber":147,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":148,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":149,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-30"},{"lineNumber":150,"author":{"gitId":"StevenGX12"},"content":"     * Retrieves a task by its number in the task list.","lastModifiedDate":"2023-09-30"},{"lineNumber":151,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-30"},{"lineNumber":152,"author":{"gitId":"StevenGX12"},"content":"     * @param taskNumber The number of the task to retrieve.","lastModifiedDate":"2023-09-30"},{"lineNumber":153,"author":{"gitId":"StevenGX12"},"content":"     * @return The task corresponding to the given number.","lastModifiedDate":"2023-09-30"},{"lineNumber":154,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-30"},{"lineNumber":155,"author":{"gitId":"StevenGX12"},"content":"    public Task getTaskByNumber(int taskNumber) {","lastModifiedDate":"2023-09-10"},{"lineNumber":156,"author":{"gitId":"StevenGX12"},"content":"        if (taskNumber \u003e\u003d 1 \u0026\u0026 taskNumber \u003c\u003d taskCount) {","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"StevenGX12"},"content":"            return taskList.get(taskNumber - 1);","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"StevenGX12"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"StevenGX12"},"content":"            System.out.println(\"Invalid task number.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"StevenGX12"},"content":"            return null;","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"StevenGX12"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":163,"author":{"gitId":"StevenGX12"},"content":"}","lastModifiedDate":"2023-08-28"},{"lineNumber":164,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"StevenGX12":165}},{"path":"src/main/java/notGPT/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenGX12"},"content":"package notGPT.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"StevenGX12"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"StevenGX12"},"content":"    public ToDo (String taskName) {","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"StevenGX12"},"content":"        super(taskName);","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"StevenGX12"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"StevenGX12"},"content":"    public String toString() {","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"StevenGX12"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"StevenGX12"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"StevenGX12"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"StevenGX12"},"content":"        return \"T\" + super.toFileString();","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"StevenGX12"},"content":"    } ","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"StevenGX12"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"StevenGX12":17}},{"path":"src/main/java/notGPT/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenGX12"},"content":"package notGPT.ui;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"StevenGX12"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"StevenGX12"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"StevenGX12"},"content":" * Represents the user interface interactions for the notChatGPT application.","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"StevenGX12"},"content":" * Supports CLI interactions with the user.","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"StevenGX12"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"StevenGX12"},"content":"public class Ui {","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"StevenGX12"},"content":"    private final Scanner input \u003d new Scanner(System.in);  // Create a Scanner object","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"StevenGX12"},"content":"     * Displays a line separator for a cleaner user interface.","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"StevenGX12"},"content":"    public void showLine() {","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"StevenGX12"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"StevenGX12"},"content":"     * Displays an introductory message when the application starts.","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"StevenGX12"},"content":"    public void displayIntroMessage() {","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"StevenGX12"},"content":"        showLine();","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"StevenGX12"},"content":"        System.out.println(","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"StevenGX12"},"content":"                \"Hello! I\u0027m notChatGPT :)\\n\" +","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"StevenGX12"},"content":"                        \"What can I do for you?\");","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"StevenGX12"},"content":"        showLine();","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"StevenGX12"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"StevenGX12"},"content":"     * Reads and retrieves user input from the console.","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"StevenGX12"},"content":"     *","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"StevenGX12"},"content":"     * @return The user\u0027s input as a String.","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"StevenGX12"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"StevenGX12"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"StevenGX12"},"content":"        String userInput \u003d input.nextLine();","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"StevenGX12"},"content":"        return userInput;","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"StevenGX12"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"StevenGX12"},"content":"}","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"StevenGX12"},"content":"","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"StevenGX12":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"StevenGX12"},"content":"hello","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"StevenGX12"},"content":"todo task1","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"StevenGX12"},"content":"deadline task2 test /by time1 ","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"StevenGX12"},"content":"event task3 test /from time2 test /to time3 test","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"StevenGX12"},"content":"list","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"StevenGX12"},"content":"mark 1","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"StevenGX12"},"content":"mark 2","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"StevenGX12"},"content":"unmark 1","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"StevenGX12"},"content":"list","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"StevenGX12"},"content":"bye","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"StevenGX12":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"StevenGX12"},"content":"java -classpath ..\\src\\main\\java NotChatGPT \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"StevenGX12":1,"-":20}}]
