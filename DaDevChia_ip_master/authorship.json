[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"# Duke project","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"## iP for CS2113 Dylan Chia Tian ","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"For more details, refer to:","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"http://DaDevChia.github.io/ip","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DaDevChia":4,"-":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"# DUKE User Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"Duke is a command line interface (CLI) application that helps you keep track of your tasks. It is cross platform and can run on any machine that has Java installed. This serves as a User Guide for the CS2113 individual project.","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"## Directory","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"- [Features](#features)","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"- [Usage](#usage)","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"  - [1. `Todo` -  Add a todo task](#1-todo----add-a-todo-task)","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"  - [2. `Deadline` -  Add a deadline task](#2-deadline----add-a-deadline-task)","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"  - [3. `Event` -  Add an event task](#3-event----add-an-event-task)","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"  - [4. `Find` -  Find tasks by keyword](#4-find----find-tasks-by-keyword)","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"  - [5. `Delete` -  Delete task by index](#5-delete----delete-task-by-index)","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"  - [6. `Mark` -  Mark task by index](#6-mark----mark-task-by-index)","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"  - [7. `Unmark` -  Unmark task by index](#7-unmark----unmark-task-by-index)","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"  - [8. `List` -  List all tasks](#8-list----list-all-tasks)","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"  - [9. `Bye` -  Exits the program](#9-bye----exits-the-program)","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"  - [Autosave and load](#autosave-and-load)","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"  ","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"## Quick Start","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"1. Ensure you have Java 11 or above installed in your Computer. ","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"2. Download the latest `duke.jar` from [here]","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"3. Copy the file to the folder you want to use as the home folder for your Duke.","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"4. Open the terminal and navigate to the folder where you saved `duke.jar`. ","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"5. Run the command `java -jar duke.jar` to start the app. ","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"6. A welcome greeting message by duke will be shown:","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"Hello! I\u0027m Duke","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"What can I do for you?","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":" ____        _        ","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"7. Type the command in the command box ```Enter command: ``` and press Enter to execute. For example typing `list` and pressing Enter will list all the tasks you have.","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"8. Refer to [Features](#features)","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"## Features ","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":61,"author":{"gitId":"DaDevChia"},"content":"1. Add todo, deadline and event tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"DaDevChia"},"content":"2. List and find tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"DaDevChia"},"content":"3. Mark and unmark tasks as done","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"DaDevChia"},"content":"4. Delete tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"DaDevChia"},"content":"5. Autosave and load from disk","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"DaDevChia"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"DaDevChia"},"content":"### 1. `Todo` -  Add a todo task","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"DaDevChia"},"content":"Adds a todo task to the task list.","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"DaDevChia"},"content":"Example of usage: ","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"DaDevChia"},"content":"`todo (DESCRIPTION)`","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"DaDevChia"},"content":"Expected input and outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"DaDevChia"},"content":"Enter command: todo apple","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"DaDevChia"},"content":"Got it. I\u0027ve added this task: Got it. I\u0027ve added this task: [T][ ] apple","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"DaDevChia"},"content":"### 2. `Deadline` -  Add a deadline task","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"DaDevChia"},"content":"Adds a deadline task to the task list.","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"DaDevChia"},"content":"`deadline (DESCRIPTION) /by (DATE)`","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"DaDevChia"},"content":"Expected input and outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"DaDevChia"},"content":"Enter command: deadline potato /by Friday","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"DaDevChia"},"content":"Got it. I\u0027ve added this task: [D][ ] potato (Friday)","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"DaDevChia"},"content":"### 3. `Event` -  Add an event task","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"DaDevChia"},"content":"Adds an event task to the task list.","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"DaDevChia"},"content":"Example of usage: ","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"DaDevChia"},"content":"`event (DESCRIPTION) /from (DATE) /to (DATE)`","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"DaDevChia"},"content":"NOTE: The order of the `/from` and `/to` is important. Ensure that `/from` comes before `/to`.","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"DaDevChia"},"content":"Expected input and outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"DaDevChia"},"content":"Enter command: event pear /from Monday /to Thursday","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"DaDevChia"},"content":"Got it. I\u0027ve added this task: [E][ ] pear (Monday to Thursday)","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"DaDevChia"},"content":"### 4. `Find` -  Find tasks by keyword","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"DaDevChia"},"content":"Prints out all tasks that contains the keyword. Search is case sensitive.","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"DaDevChia"},"content":"`find (KEYWORD)`","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"DaDevChia"},"content":"Expected input and outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"DaDevChia"},"content":"Enter command: find apple","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":141,"author":{"gitId":"DaDevChia"},"content":"Here are the matching tasks in your list: ","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"DaDevChia"},"content":"3. [T][ ] apple","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"DaDevChia"},"content":"### 5. `Delete` -  Delete task by index","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"DaDevChia"},"content":"Deletes the task at the specified index.","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"DaDevChia"},"content":"Example of usage: ","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"DaDevChia"},"content":"`delete (INDEX)`","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"DaDevChia"},"content":"Expected input and outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":157,"author":{"gitId":"DaDevChia"},"content":"Enter command: delete 3","lastModifiedDate":"2023-10-03"},{"lineNumber":158,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":159,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"DaDevChia"},"content":"Noted. I\u0027ve removed this task: [T][ ] apple","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"DaDevChia"},"content":"### 6. `Mark` -  Mark task by index","lastModifiedDate":"2023-10-03"},{"lineNumber":165,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":166,"author":{"gitId":"DaDevChia"},"content":"Marks the task at the specified index as done.","lastModifiedDate":"2023-10-03"},{"lineNumber":167,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"DaDevChia"},"content":"Example of usage: ","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":170,"author":{"gitId":"DaDevChia"},"content":"`mark (INDEX)`","lastModifiedDate":"2023-10-03"},{"lineNumber":171,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":172,"author":{"gitId":"DaDevChia"},"content":"Expected input and outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":173,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":174,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":176,"author":{"gitId":"DaDevChia"},"content":"Enter command: mark 3","lastModifiedDate":"2023-10-03"},{"lineNumber":177,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":178,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":180,"author":{"gitId":"DaDevChia"},"content":"Nice! I\u0027ve marked this task as done: [T][X] apple","lastModifiedDate":"2023-10-03"},{"lineNumber":181,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":182,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"DaDevChia"},"content":"### 7. `Unmark` -  Unmark task by index","lastModifiedDate":"2023-10-03"},{"lineNumber":184,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":185,"author":{"gitId":"DaDevChia"},"content":"Unmarks the task at the specified index as done.","lastModifiedDate":"2023-10-03"},{"lineNumber":186,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":187,"author":{"gitId":"DaDevChia"},"content":"Example of usage: ","lastModifiedDate":"2023-10-03"},{"lineNumber":188,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"DaDevChia"},"content":"`unmark (INDEX)`","lastModifiedDate":"2023-10-03"},{"lineNumber":190,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"DaDevChia"},"content":"Expected input and outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":194,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"DaDevChia"},"content":"Enter command: unmark 3","lastModifiedDate":"2023-10-03"},{"lineNumber":196,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":197,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":199,"author":{"gitId":"DaDevChia"},"content":"Nice! I\u0027ve unmarked this task as done: [T][ ] apple","lastModifiedDate":"2023-10-03"},{"lineNumber":200,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":201,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":202,"author":{"gitId":"DaDevChia"},"content":"### 8. `List` -  List all tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":203,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":204,"author":{"gitId":"DaDevChia"},"content":"Lists all tasks in the task list.","lastModifiedDate":"2023-10-03"},{"lineNumber":205,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":206,"author":{"gitId":"DaDevChia"},"content":"Example of usage: ","lastModifiedDate":"2023-10-03"},{"lineNumber":207,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":208,"author":{"gitId":"DaDevChia"},"content":"`list`","lastModifiedDate":"2023-10-03"},{"lineNumber":209,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":210,"author":{"gitId":"DaDevChia"},"content":"Expected input and outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":211,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":212,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":213,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":214,"author":{"gitId":"DaDevChia"},"content":"Enter command: list","lastModifiedDate":"2023-10-03"},{"lineNumber":215,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":216,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":217,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":218,"author":{"gitId":"DaDevChia"},"content":"Here are the tasks in your list: ","lastModifiedDate":"2023-10-03"},{"lineNumber":219,"author":{"gitId":"DaDevChia"},"content":"1. [T][ ] potato","lastModifiedDate":"2023-10-03"},{"lineNumber":220,"author":{"gitId":"DaDevChia"},"content":"2. [T][ ] banana","lastModifiedDate":"2023-10-03"},{"lineNumber":221,"author":{"gitId":"DaDevChia"},"content":"3. [T][ ] apple","lastModifiedDate":"2023-10-03"},{"lineNumber":222,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":223,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":224,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":225,"author":{"gitId":"DaDevChia"},"content":"### 9. `Bye` -  Exits the program","lastModifiedDate":"2023-10-03"},{"lineNumber":226,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":227,"author":{"gitId":"DaDevChia"},"content":"Exits the program.","lastModifiedDate":"2023-10-03"},{"lineNumber":228,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":229,"author":{"gitId":"DaDevChia"},"content":"Example of usage: ","lastModifiedDate":"2023-10-03"},{"lineNumber":230,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":231,"author":{"gitId":"DaDevChia"},"content":"`bye`","lastModifiedDate":"2023-10-03"},{"lineNumber":232,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":233,"author":{"gitId":"DaDevChia"},"content":"Expected input and outcome:","lastModifiedDate":"2023-10-03"},{"lineNumber":234,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":235,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":236,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":237,"author":{"gitId":"DaDevChia"},"content":"Enter command: bye","lastModifiedDate":"2023-10-03"},{"lineNumber":238,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":239,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":240,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":241,"author":{"gitId":"DaDevChia"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-10-03"},{"lineNumber":242,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":243,"author":{"gitId":"DaDevChia"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":244,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":245,"author":{"gitId":"DaDevChia"},"content":"### Autosave and load","lastModifiedDate":"2023-10-03"},{"lineNumber":246,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":247,"author":{"gitId":"DaDevChia"},"content":"The program will create a file /data/duke.txt to store the tasks on the disk. The tasks will be loaded from the file when the program starts and will be saved to the file when the program exits.","lastModifiedDate":"2023-10-03"},{"lineNumber":248,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":249,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":250,"author":{"gitId":"DaDevChia"},"content":"## Command summary","lastModifiedDate":"2023-10-03"},{"lineNumber":251,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":252,"author":{"gitId":"DaDevChia"},"content":"Command | Format | Description","lastModifiedDate":"2023-10-03"},{"lineNumber":253,"author":{"gitId":"DaDevChia"},"content":"--- | --- | ---","lastModifiedDate":"2023-10-03"},{"lineNumber":254,"author":{"gitId":"DaDevChia"},"content":"todo | `todo [description]` | Adds a new todo task with the given description.","lastModifiedDate":"2023-10-03"},{"lineNumber":255,"author":{"gitId":"DaDevChia"},"content":"deadline | `deadline [description] /by [date/time]` | Adds a new deadline task with the given description and due date/time.","lastModifiedDate":"2023-10-03"},{"lineNumber":256,"author":{"gitId":"DaDevChia"},"content":"event | `event [description] /from [start time] /to [end time]` | Adds a new event task with the given description and from/to times.","lastModifiedDate":"2023-10-03"},{"lineNumber":257,"author":{"gitId":"DaDevChia"},"content":"bye | `bye` | Exits the program.","lastModifiedDate":"2023-10-03"},{"lineNumber":258,"author":{"gitId":"DaDevChia"},"content":"list | `list` | Lists all tasks.","lastModifiedDate":"2023-10-03"},{"lineNumber":259,"author":{"gitId":"DaDevChia"},"content":"mark | `mark [index]` | Marks the specified task as done.","lastModifiedDate":"2023-10-03"},{"lineNumber":260,"author":{"gitId":"DaDevChia"},"content":"unmark | `unmark [index]` | Unmarks the specified task as done.","lastModifiedDate":"2023-10-03"},{"lineNumber":261,"author":{"gitId":"DaDevChia"},"content":"delete | `delete [index]` | Deletes the specified task.","lastModifiedDate":"2023-10-03"},{"lineNumber":262,"author":{"gitId":"DaDevChia"},"content":"find | `find [keyword]` | Finds all tasks that contain the specified keyword.","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"DaDevChia":235,"-":27}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Tasklist;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import duke.storage.FileRW;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":" * The main class for Duke.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"public class Duke {","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"     * The main method for Duke.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"            // Create a new Tasklist object to store the tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"            Tasklist tasks \u003d new Tasklist();","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"            // Read the tasks from the file and add them to the Tasklist object","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"            FileRW.readFromFile(tasks);","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"            // Show the welcome message to the user","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"            Ui.showWelcome();","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"            // Create a new Command object to store the next command to be executed","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"            Command nextCommand \u003d new Command();","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"            // Keep looping until the user enters the \"bye\" command","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"            while (!nextCommand.isExit()) {","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"                try {","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"                    // Read the user\u0027s input and parse it into a Command object","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"                    String input \u003d Ui.readCommand();","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"                    nextCommand \u003d Parser.parse(input);","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"                    // Execute the Command object on the Tasklist object","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"                    nextCommand.execute(tasks);","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"                    // If there is an error, show the error message to the user","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"                    Ui.showMessage(e.getMessage());","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"                }","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"            ","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"            // Show the goodbye message to the user","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"            Ui.showGoodbye();","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"            // Write the tasks to the file","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"            FileRW.writeToFile(tasks);","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"            // If there is an error, show the error message to the user","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"            Ui.showMessage(e.getMessage());","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"DaDevChia":55,"-":2}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.commands;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Tasklist;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ADD;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":" * Represents a command to add a deadline task.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"    private String description;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    private String by;","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"     * Constructs a new AddDeadlineCommand object with the given description and deadline.","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"     * @param by The deadline of the deadline task.","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"    public AddDeadlineCommand(String description , String by) {","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"     * Executes the AddDeadlineCommand by adding a new deadline task to the Tasklist.","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"     * @param tasks The Tasklist object to modify.","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If there is an error adding the deadline task.","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"    public void execute(Tasklist tasks) throws DukeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"        tasks.add(new Deadline(description , by));","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"        Ui.showMessage(MESSAGE_ADD + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"DaDevChia":39}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.commands;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Tasklist;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ADD;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":" * Represents a command to add an event task.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"    private String description;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    private String from;","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"    private String to;","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"     * Constructs a new AddEventCommand object with the given description, start time and end time.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"     * @param from The start time of the event task.","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"     * @param to The end time of the event task.","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"    public AddEventCommand(String description , String from , String to) {","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"     * Executes the AddEventCommand by adding a new event task to the Tasklist.","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"     * @param tasks The Tasklist object to modify.","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If there is an error adding the event task.","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"    public void execute(Tasklist tasks) throws DukeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"        tasks.add(new Event(description, from, to));","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"        Ui.showMessage(MESSAGE_ADD + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"DaDevChia":43}},{"path":"src/main/java/duke/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.commands;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Tasklist;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ADD;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":" * Represents a command to add a todo task.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"    private String description;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"     * Constructs a new AddTodoCommand object with the given description.","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"     * Executes the AddTodoCommand by adding a new todo task to the Tasklist.","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"     * @param tasks The Tasklist object to modify.","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If there is an error adding the todo task.","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"    public void execute(Tasklist tasks) throws DukeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"        tasks.add(new Todo(description));","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"        Ui.showMessage(MESSAGE_ADD + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"DaDevChia":37}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.commands;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":" * Represents a command to exit Duke.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"     * Returns whether the ByeCommand is an exit command.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"     * @return True if the ByeCommand is an exit command, false otherwise.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"        return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"DaDevChia":18}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.commands;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Tasklist;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":" * Represents a command to be executed by Duke.","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"public class Command {","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"     * Constructs a new Command object.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"    public Command() {","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"     * Executes the Command by modifying the given Tasklist.","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"     * @param tasks The Tasklist object to modify.","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"    public void execute(Tasklist tasks) throws DukeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"     * Returns whether the Command is an exit command.","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"     * @return True if the Command is an exit command, false otherwise.","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"        return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"DaDevChia":36}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.commands;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Tasklist;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_DELETE;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ERROR_INVALID_TASK_NUMBER;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":" * Represents a command to delete a task from the Tasklist.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"    private int index;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"     * Constructs a new DeleteCommand object with the given task index.","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"     * Executes the DeleteCommand by deleting the task at the given index from the Tasklist.","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"     * @param tasks The Tasklist object to modify.","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If the task index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"    public void execute(Tasklist tasks) throws DukeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"        if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_INVALID_TASK_NUMBER);","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"        Ui.showMessage(MESSAGE_DELETE + tasks.get(index).toString());","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"DaDevChia":40}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Tasklist;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_FIND;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":" * Represents a command to find tasks that contain a certain keyword.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"    private String keyword;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"     * Constructs a FindCommand object with the given keyword.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"     * Executes the FindCommand on the given Tasklist object.","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"     * @param tasks The Tasklist object to execute the command on.","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"    public void execute(Tasklist tasks) throws DukeException {","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"        Ui.showMessage(MESSAGE_FIND + \"\\n\" + tasks.findTasksToString(keyword));","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"DaDevChia":34}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.commands;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Tasklist;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_LIST;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":" * Represents a command to list all tasks in the Tasklist.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"     * Executes the ListCommand by displaying all tasks in the Tasklist.","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"     * @param tasks The Tasklist object to display.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"    public void execute(Tasklist tasks) {","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"        Ui.showMessage(MESSAGE_LIST + \"\\n\" + tasks.tasksToString());","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"DaDevChia":23}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.commands;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Tasklist;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_MARK;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ERROR_INVALID_TASK_NUMBER;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    private int index;","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"     * Constructs a new MarkCommand object with the given task index.","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"     * Executes the MarkCommand by marking the task at the given index as done.","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"     * @param tasks The Tasklist object to modify.","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If the task index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"    public void execute(Tasklist tasks) throws DukeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"        if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_INVALID_TASK_NUMBER);","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"        tasks.get(index).setDone(true);","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"        Ui.showMessage(MESSAGE_MARK + tasks.get(index).toString());","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"DaDevChia":40}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.commands;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Tasklist;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_UNMARK;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ERROR_INVALID_TASK_NUMBER;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":" * Represents a command to unmark a task as done.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"    private int index;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"     * Constructs a new UnmarkCommand object with the given task index.","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"     * @param index The index of the task to unmark as done.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"     * Executes the UnmarkCommand by unmarking the task at the given index as done.","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"     * @param tasks The Tasklist object to modify.","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If the task index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"    public void execute(Tasklist tasks) throws DukeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"        if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_INVALID_TASK_NUMBER);","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"        tasks.get(index).setDone(false);","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"        Ui.showMessage(MESSAGE_UNMARK + tasks.get(index).toString());","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"DaDevChia":39}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.exception;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":" * Represents an exception specific to Duke.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"     * Constructs a new DukeException object with the given error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"    public DukeException(String message){","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"       super(message);","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"DaDevChia":17}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import duke.commands.AddDeadlineCommand;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import duke.commands.AddEventCommand;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import duke.commands.AddTodoCommand;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ERROR_INVALID_TASK_NUMBER;","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ERROR_EMPTY_DESCRIPTION;","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ERROR_FROM_TIME_MISSING;","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ERROR_TO_TIME_MISSING;","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ERROR_TO_BEFORE_FROM;","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ERROR_DEADLINE_BY;","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ERROR_COMMAND;","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ERROR_FIND_MISSING;","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"import static duke.parser.TaskConstants.DEADLINE;","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"import static duke.parser.TaskConstants.EVENT;","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"import static duke.parser.TaskConstants.TODO;","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"import static duke.parser.TaskConstants.BYE;","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"import static duke.parser.TaskConstants.LIST;","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"import static duke.parser.TaskConstants.MARK;","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"import static duke.parser.TaskConstants.UNMARK;","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"import static duke.parser.TaskConstants.DELETE;","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"import static duke.parser.TaskConstants.FIND;","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"import static duke.parser.TaskConstants.FROM_DELIMITER;","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"import static duke.parser.TaskConstants.TO_DELIMITER;","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"import static duke.parser.TaskConstants.BY_DELIMITER;","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":" * Represents a parser for Duke commands.","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"public class Parser {","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"     * Parses the given input and returns the corresponding Command object.","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"     * @param input The input string to parse.","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If there is an error parsing the input.","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"        String[] args \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"        String command \u003d args[0];","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"        String commandInput \u003d args.length \u003e 1 ? args[1] : \"\";","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"        switch (command) {","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"        case BYE:","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"        case LIST:","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"            return new ListCommand();","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"DaDevChia"},"content":"        case TODO:","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"DaDevChia"},"content":"            return parseTodoCommand(commandInput);","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"DaDevChia"},"content":"        case DEADLINE:","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"DaDevChia"},"content":"            return parseDeadlineCommand(commandInput);","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"DaDevChia"},"content":"        case EVENT:","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"DaDevChia"},"content":"            return parseEventCommand(commandInput);","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"DaDevChia"},"content":"        case MARK:","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"DaDevChia"},"content":"            return parseMarkCommand(commandInput);","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"DaDevChia"},"content":"        case UNMARK:","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"DaDevChia"},"content":"            return parseUnmarkCommand(commandInput);","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"DaDevChia"},"content":"        case DELETE:","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"DaDevChia"},"content":"            return parseDeleteCommand(commandInput);","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"DaDevChia"},"content":"        case FIND:","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"DaDevChia"},"content":"            return parseFindCommand(commandInput);","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"DaDevChia"},"content":"        default:","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_COMMAND);","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"DaDevChia"},"content":"     * Parses the given input and returns the corresponding AddTodoCommand object.","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"DaDevChia"},"content":"     * @param commandRawInput The raw input string to parse.","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"DaDevChia"},"content":"     * @return The corresponding AddTodoCommand object.","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If there is an error parsing the input.","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"DaDevChia"},"content":"    public static AddTodoCommand parseTodoCommand(String commandRawInput) throws DukeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"DaDevChia"},"content":"        String description \u003d commandRawInput.trim();","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"DaDevChia"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_EMPTY_DESCRIPTION);","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"DaDevChia"},"content":"        return new AddTodoCommand(description);","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"DaDevChia"},"content":"     * Parses the given input and returns the corresponding AddDeadlineCommand object.","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"DaDevChia"},"content":"     * @param commandRawInput The raw input string to parse.","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"DaDevChia"},"content":"     * @return The corresponding AddDeadlineCommand object.","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If there is an error parsing the input.","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"DaDevChia"},"content":"    public static AddDeadlineCommand parseDeadlineCommand(String commandRawInput) throws DukeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":103,"author":{"gitId":"DaDevChia"},"content":"        int byPos \u003d commandRawInput.indexOf(BY_DELIMITER);","lastModifiedDate":"2023-10-02"},{"lineNumber":104,"author":{"gitId":"DaDevChia"},"content":"        if (byPos \u003d\u003d -1) {","lastModifiedDate":"2023-10-02"},{"lineNumber":105,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_DEADLINE_BY);","lastModifiedDate":"2023-10-02"},{"lineNumber":106,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":107,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":108,"author":{"gitId":"DaDevChia"},"content":"        String description \u003d commandRawInput.substring(0, byPos).trim();","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"DaDevChia"},"content":"        String by \u003d commandRawInput.substring(byPos + 3).trim();","lastModifiedDate":"2023-10-02"},{"lineNumber":110,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":111,"author":{"gitId":"DaDevChia"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-10-02"},{"lineNumber":112,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_EMPTY_DESCRIPTION);","lastModifiedDate":"2023-10-02"},{"lineNumber":113,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":114,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":115,"author":{"gitId":"DaDevChia"},"content":"        if (by.isEmpty()) {","lastModifiedDate":"2023-10-02"},{"lineNumber":116,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_DEADLINE_BY);","lastModifiedDate":"2023-10-02"},{"lineNumber":117,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":118,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":119,"author":{"gitId":"DaDevChia"},"content":"        return new AddDeadlineCommand(description, by);","lastModifiedDate":"2023-10-02"},{"lineNumber":120,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":121,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":122,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"DaDevChia"},"content":"     * Parses the given input and returns the corresponding AddEventCommand object.","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"DaDevChia"},"content":"     * @param commandRawInput The raw input string to parse.","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"DaDevChia"},"content":"     * @return The corresponding AddEventCommand object.","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If there is an error parsing the input.","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"DaDevChia"},"content":"    public static AddEventCommand parseEventCommand(String commandRawInput) throws DukeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":130,"author":{"gitId":"DaDevChia"},"content":"        int fromPos \u003d commandRawInput.indexOf(FROM_DELIMITER);","lastModifiedDate":"2023-10-02"},{"lineNumber":131,"author":{"gitId":"DaDevChia"},"content":"        int toPos \u003d commandRawInput.indexOf(TO_DELIMITER);","lastModifiedDate":"2023-10-02"},{"lineNumber":132,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":133,"author":{"gitId":"DaDevChia"},"content":"        if (fromPos \u003d\u003d -1) {","lastModifiedDate":"2023-10-02"},{"lineNumber":134,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_FROM_TIME_MISSING);","lastModifiedDate":"2023-10-02"},{"lineNumber":135,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":136,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":137,"author":{"gitId":"DaDevChia"},"content":"        if (toPos \u003d\u003d -1) {","lastModifiedDate":"2023-10-02"},{"lineNumber":138,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_TO_TIME_MISSING);","lastModifiedDate":"2023-10-02"},{"lineNumber":139,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":140,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":141,"author":{"gitId":"DaDevChia"},"content":"        if (toPos \u003c fromPos) {","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_TO_BEFORE_FROM);","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"DaDevChia"},"content":"        //get the task name","lastModifiedDate":"2023-10-02"},{"lineNumber":146,"author":{"gitId":"DaDevChia"},"content":"        String description \u003d commandRawInput.substring(0,fromPos).trim();","lastModifiedDate":"2023-10-02"},{"lineNumber":147,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":148,"author":{"gitId":"DaDevChia"},"content":"        //get the event time ","lastModifiedDate":"2023-10-02"},{"lineNumber":149,"author":{"gitId":"DaDevChia"},"content":"        String fromTime \u003d commandRawInput.substring(fromPos+5,toPos).trim();","lastModifiedDate":"2023-10-02"},{"lineNumber":150,"author":{"gitId":"DaDevChia"},"content":"        String toTime \u003d commandRawInput.substring(toPos+3).trim();","lastModifiedDate":"2023-10-02"},{"lineNumber":151,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":152,"author":{"gitId":"DaDevChia"},"content":"        //if the taskname is empty throw an exception","lastModifiedDate":"2023-10-02"},{"lineNumber":153,"author":{"gitId":"DaDevChia"},"content":"        if(description.isEmpty()){","lastModifiedDate":"2023-10-02"},{"lineNumber":154,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_EMPTY_DESCRIPTION);","lastModifiedDate":"2023-10-02"},{"lineNumber":155,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":156,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":157,"author":{"gitId":"DaDevChia"},"content":"        //if the fromTime is empty throw an exception","lastModifiedDate":"2023-10-02"},{"lineNumber":158,"author":{"gitId":"DaDevChia"},"content":"        if(fromTime.isEmpty()){","lastModifiedDate":"2023-10-02"},{"lineNumber":159,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_FROM_TIME_MISSING);","lastModifiedDate":"2023-10-02"},{"lineNumber":160,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":161,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":162,"author":{"gitId":"DaDevChia"},"content":"        //if the toTime is empty throw an exception","lastModifiedDate":"2023-10-02"},{"lineNumber":163,"author":{"gitId":"DaDevChia"},"content":"        if(toTime.isEmpty()){","lastModifiedDate":"2023-10-02"},{"lineNumber":164,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_TO_TIME_MISSING);","lastModifiedDate":"2023-10-02"},{"lineNumber":165,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":166,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":167,"author":{"gitId":"DaDevChia"},"content":"        return new AddEventCommand(description,fromTime,toTime);","lastModifiedDate":"2023-10-02"},{"lineNumber":168,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":169,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":170,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":171,"author":{"gitId":"DaDevChia"},"content":"     * Parses the given input and returns the corresponding MarkCommand object.","lastModifiedDate":"2023-10-03"},{"lineNumber":172,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":173,"author":{"gitId":"DaDevChia"},"content":"     * @param commandRawInput The raw input string to parse.","lastModifiedDate":"2023-10-03"},{"lineNumber":174,"author":{"gitId":"DaDevChia"},"content":"     * @return The corresponding MarkCommand object.","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If there is an error parsing the input.","lastModifiedDate":"2023-10-03"},{"lineNumber":176,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":177,"author":{"gitId":"DaDevChia"},"content":"    public static MarkCommand parseMarkCommand(String commandRawInput) throws DukeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":178,"author":{"gitId":"DaDevChia"},"content":"        try {","lastModifiedDate":"2023-10-02"},{"lineNumber":179,"author":{"gitId":"DaDevChia"},"content":"            int index \u003d Integer.parseInt(commandRawInput.trim()) - 1;","lastModifiedDate":"2023-10-02"},{"lineNumber":180,"author":{"gitId":"DaDevChia"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-10-02"},{"lineNumber":181,"author":{"gitId":"DaDevChia"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-02"},{"lineNumber":182,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_INVALID_TASK_NUMBER);","lastModifiedDate":"2023-10-02"},{"lineNumber":183,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":184,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":185,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":186,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":187,"author":{"gitId":"DaDevChia"},"content":"     * Parses the given input and returns the corresponding UnmarkCommand object.","lastModifiedDate":"2023-10-03"},{"lineNumber":188,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"DaDevChia"},"content":"     * @param commandRawInput The raw input string to parse.","lastModifiedDate":"2023-10-03"},{"lineNumber":190,"author":{"gitId":"DaDevChia"},"content":"     * @return The corresponding UnmarkCommand object.","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If there is an error parsing the input.","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"DaDevChia"},"content":"    public static UnmarkCommand parseUnmarkCommand(String commandRawInput) throws DukeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":194,"author":{"gitId":"DaDevChia"},"content":"        try {","lastModifiedDate":"2023-10-02"},{"lineNumber":195,"author":{"gitId":"DaDevChia"},"content":"            int index \u003d Integer.parseInt(commandRawInput.trim()) - 1;","lastModifiedDate":"2023-10-02"},{"lineNumber":196,"author":{"gitId":"DaDevChia"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2023-10-02"},{"lineNumber":197,"author":{"gitId":"DaDevChia"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-02"},{"lineNumber":198,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_INVALID_TASK_NUMBER);","lastModifiedDate":"2023-10-02"},{"lineNumber":199,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":200,"author":{"gitId":"DaDevChia"},"content":"        ","lastModifiedDate":"2023-10-02"},{"lineNumber":201,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":202,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":203,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":204,"author":{"gitId":"DaDevChia"},"content":"     * Parses the given input and returns the corresponding DeleteCommand object.","lastModifiedDate":"2023-10-03"},{"lineNumber":205,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":206,"author":{"gitId":"DaDevChia"},"content":"     * @param commandRawInput The raw input string to parse.","lastModifiedDate":"2023-10-03"},{"lineNumber":207,"author":{"gitId":"DaDevChia"},"content":"     * @return The corresponding DeleteCommand object.","lastModifiedDate":"2023-10-03"},{"lineNumber":208,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If there is an error parsing the input.","lastModifiedDate":"2023-10-03"},{"lineNumber":209,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":210,"author":{"gitId":"DaDevChia"},"content":"    public static DeleteCommand parseDeleteCommand(String commandRawInput) throws DukeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":211,"author":{"gitId":"DaDevChia"},"content":"        try {","lastModifiedDate":"2023-10-02"},{"lineNumber":212,"author":{"gitId":"DaDevChia"},"content":"            int index \u003d Integer.parseInt(commandRawInput.trim()) - 1;","lastModifiedDate":"2023-10-02"},{"lineNumber":213,"author":{"gitId":"DaDevChia"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-10-02"},{"lineNumber":214,"author":{"gitId":"DaDevChia"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-02"},{"lineNumber":215,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_INVALID_TASK_NUMBER);","lastModifiedDate":"2023-10-02"},{"lineNumber":216,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":217,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":218,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":219,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":220,"author":{"gitId":"DaDevChia"},"content":"     * Parses the user input for the \"find\" command into a FindCommand object.","lastModifiedDate":"2023-10-03"},{"lineNumber":221,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":222,"author":{"gitId":"DaDevChia"},"content":"     * @param commandRawInput The user input for the \"find\" command.","lastModifiedDate":"2023-10-03"},{"lineNumber":223,"author":{"gitId":"DaDevChia"},"content":"     * @return The FindCommand object corresponding to the user input.","lastModifiedDate":"2023-10-03"},{"lineNumber":224,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If there is an error parsing the user input.","lastModifiedDate":"2023-10-03"},{"lineNumber":225,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":226,"author":{"gitId":"DaDevChia"},"content":"    public static FindCommand parseFindCommand(String commandRawInput) throws DukeException {","lastModifiedDate":"2023-10-03"},{"lineNumber":227,"author":{"gitId":"DaDevChia"},"content":"        String searchString \u003d commandRawInput.trim();","lastModifiedDate":"2023-10-03"},{"lineNumber":228,"author":{"gitId":"DaDevChia"},"content":"        if(searchString.isEmpty()){","lastModifiedDate":"2023-10-03"},{"lineNumber":229,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_FIND_MISSING);","lastModifiedDate":"2023-10-03"},{"lineNumber":230,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":231,"author":{"gitId":"DaDevChia"},"content":"        return new FindCommand(searchString);","lastModifiedDate":"2023-10-03"},{"lineNumber":232,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":233,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"DaDevChia":233}},{"path":"src/main/java/duke/parser/TaskConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":" * Represents a class containing constants used in Duke tasks.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"public class TaskConstants {","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"    public static final String BYE \u003d \"bye\";","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"    public static final String MARK \u003d \"mark\";","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"    public static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    public static final String FIND \u003d \"find\";","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"    public static final String FROM_DELIMITER \u003d \"/from\";","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"    public static final String TO_DELIMITER \u003d \"/to\";","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"    public static final String BY_DELIMITER \u003d \"/by\";","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"DaDevChia":21}},{"path":"src/main/java/duke/storage/FileRW.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.storage;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import java.io.File;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"import duke.tasks.Tasklist;","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ERROR_FILE_CREATION;","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ERROR_FILE_READING;","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_ERROR_FILE_WRITING;","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"import static duke.storage.StorageSettings.FILE_PATH;","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":" * Represents a class for reading and writing tasks to a file.","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"public class FileRW {","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"     * Reads tasks from the file and adds them to the given Tasklist.","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"     * @param tasks The Tasklist to add the tasks to.","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If there is an error reading the file.","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"    public static void readFromFile(Tasklist tasks) throws DukeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"        ","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"        if (!new File(FILE_PATH).exists()) {","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"            try {","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"                File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"                file.createNewFile();","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"                throw new DukeException(MESSAGE_ERROR_FILE_CREATION);","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"            }","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"            Scanner fileScan \u003d new Scanner(file);","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"            while (fileScan.hasNextLine()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"                String line \u003d fileScan.nextLine();","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"                String[] lineSplit \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"                Task newTask \u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"                if (lineSplit[0].equals(\"T\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"                    newTask \u003d new Todo(lineSplit[2]);","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"                } else if (lineSplit[0].equals(\"D\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"                    newTask \u003d new Deadline(lineSplit[2], lineSplit[3]);","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"                } else if (lineSplit[0].equals(\"E\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"DaDevChia"},"content":"                    newTask \u003d new Event(lineSplit[2], lineSplit[3], lineSplit[3]);","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"DaDevChia"},"content":"                }","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"DaDevChia"},"content":"                if (newTask !\u003d null) {","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"DaDevChia"},"content":"                    if (lineSplit[1].equals(\"true\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"DaDevChia"},"content":"                        newTask.setDone(true);","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"DaDevChia"},"content":"                    }","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"DaDevChia"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"DaDevChia"},"content":"                }","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"DaDevChia"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"DaDevChia"},"content":"            fileScan.close();","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"DaDevChia"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_FILE_READING);","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"DaDevChia"},"content":"     * Writes tasks from the given Tasklist to the file.","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"DaDevChia"},"content":"     * @param tasks The Tasklist to write the tasks from.","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"DaDevChia"},"content":"     * @throws DukeException If there is an error writing to the file.","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"DaDevChia"},"content":"    public static void writeToFile(Tasklist tasks) throws DukeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"DaDevChia"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"DaDevChia"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"DaDevChia"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"DaDevChia"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"DaDevChia"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"DaDevChia"},"content":"                    bw.write(\"T | \" + task.getIsDone() + \" | \" + task.getTaskName());","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"DaDevChia"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"DaDevChia"},"content":"                    bw.write(\"D | \" + task.getIsDone() + \" | \" + task.getTaskName() + \" | \" + ((Deadline) task).getDeadline());","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"DaDevChia"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"DaDevChia"},"content":"                    bw.write(\"E | \" + task.getIsDone() + \" | \" + task.getTaskName() + \" | \" + ((Event) task).getFromTime() + \" | \" + ((Event) task).getToTime());","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"DaDevChia"},"content":"                }","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"DaDevChia"},"content":"                bw.newLine();","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"DaDevChia"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"DaDevChia"},"content":"            bw.close();","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"DaDevChia"},"content":"            fw.close();","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"DaDevChia"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"DaDevChia"},"content":"            throw new DukeException(MESSAGE_ERROR_FILE_WRITING);","lastModifiedDate":"2023-10-02"},{"lineNumber":103,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"DaDevChia":106}},{"path":"src/main/java/duke/storage/StorageSettings.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.storage;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":" * Represents a class containing storage settings for Duke.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"public class StorageSettings {","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"     * The file path for storing Duke tasks.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"    public static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"DaDevChia":11}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"    private String deadline;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"     * Constructs a Deadline object with the given task name and deadline.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    public Deadline(String taskName, String deadline){","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"        super(taskName);","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"     * @return A string representation of the Deadline object.","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"    public String toString(){","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"        if(this.getIsDone()){","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"            return \"[D][X] \" + this.getTaskName() + \" (\" + this.deadline + \")\";","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"        }else{","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"            return \"[D][ ] \" + this.getTaskName() + \" (\" + this.deadline + \")\";","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"     * Returns the deadline of the Deadline object.","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"     * @return The deadline of the Deadline object.","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"    public String getDeadline(){","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"        return this.deadline;","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"DaDevChia":41}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":" * Represents a task with a start and end time.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"    private String fromTime;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"    private String toTime;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"     * Constructs an Event object with the given task name, start time, and end time.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"     * @param fromTime The start time of the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"     * @param toTime The end time of the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"    public Event(String taskName, String fromTime, String toTime){","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"        super(taskName);","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"     * Returns the start time of the Event object.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"     * @return The start time of the Event object.","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"    public String getFromTime(){","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"        return this.fromTime;","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"     * Sets the start time of the Event object.","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"     * @param fromTime The new start time of the Event object.","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"    public void setFromTime(String fromTime){","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"     * Returns the end time of the Event object.","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"     * @return The end time of the Event object.","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"    public String getToTime(){","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"        return this.toTime;","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"     * Sets the end time of the Event object.","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"     * @param toTime The new end time of the Event object.","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"    public void setToTime(String toTime){","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"DaDevChia"},"content":"     * @return A string representation of the Event object.","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"DaDevChia"},"content":"    public String toString(){","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"DaDevChia"},"content":"        if(this.getIsDone()){","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"DaDevChia"},"content":"            return \"[E][X] \" + this.getTaskName() + \" (\" + this.fromTime + \" to \" + this.toTime + \")\";","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"DaDevChia"},"content":"        }else{","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"DaDevChia"},"content":"            return \"[E][ ] \" + this.getTaskName() + \" (\" + this.fromTime + \" to \" + this.toTime + \")\";","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":71,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"DaDevChia":71}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":" * Represents a task.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"public class Task {","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"    private String taskName;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"     * Constructs a Task object with the given task name and sets its status to not done.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    public Task(String taskName){","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"        this.setDone(false);","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"     * Constructs a Task object with the given task name and status.","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"     * @param isDone The status of the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"    public Task(String taskName, boolean isDone){","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"        this.setDone(isDone);","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"     * Returns the status of the Task object.","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"     * @return The status of the Task object.","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"    public boolean getIsDone(){","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"        return this.isDone;","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"     * Sets the status of the Task object.","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"     * @param isDone The new status of the Task object.","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"     * Returns the name of the Task object.","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"     * @return The name of the Task object.","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"    public String getTaskName(){","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"        return this.taskName;","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"     * Sets the name of the Task object.","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"DaDevChia"},"content":"     * @param taskName The new name of the Task object.","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"DaDevChia"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"DaDevChia"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"DaDevChia"},"content":"     * Returns a string representation of the Task object.","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"DaDevChia"},"content":"     * @return A string representation of the Task object.","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"DaDevChia"},"content":"    public String toString(){","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"DaDevChia"},"content":"        if(this.isDone){","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"DaDevChia"},"content":"            return \"[X] \" + this.taskName;","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"DaDevChia"},"content":"        }else{","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"DaDevChia"},"content":"            return \"[ ] \" + this.taskName;","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":78,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"DaDevChia":80}},{"path":"src/main/java/duke/tasks/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.tasks;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"public class Tasklist extends ArrayList\u003cTask\u003e{","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"     * Returns a string representation of the tasks in the Tasklist object.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"     * @return A string representation of the tasks in the Tasklist object.","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    public String tasksToString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"        if (isEmpty()) {","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"            sb.append(\"There are no tasks in your list.\\n\");","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"        } else {","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"            for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"                sb.append(i + 1).append(\". \").append(get(i)).append(\"\\n\");","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"            }","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"    } ","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"    public String findTasksToString(String keyword) {","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"            if (get(i).getTaskName().contains(keyword)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"                sb.append(i + 1).append(\". \").append(get(i)).append(\"\\n\");","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"        if (sb.length() \u003d\u003d 0){","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"            sb.append(\"There are no matching tasks in your list.\\n\");","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"        } ","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"DaDevChia":40}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":" * Represents a todo task.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"     * Constructs a Todo object with the given task name and sets its status to not done.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"    public Todo(String taskName){","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"        super(taskName);","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"     * Returns a string representation of the Todo object.","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"     * @return A string representation of the Todo object.","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"    public String toString(){","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"        if(this.getIsDone()){","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"            return \"[T][X] \" + this.getTaskName();","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"        }else{","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"            return \"[T][ ] \" + this.getTaskName();","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"DaDevChia":29}},{"path":"src/main/java/duke/ui/MessageConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.ui;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":" * Contains all the messages that Duke will display to the user.","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"public class MessageConstants {","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"    public static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"    public static final String LOGO  \u003d ","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"                \" ____        _        \\n\"","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_LIST \u003d \"Here are the tasks in your list: \";","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_DELETE \u003d \"Noted. I\u0027ve removed this task: \";","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_ADD \u003d \"Got it. I\u0027ve added this task: \";","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_FIND \u003d \"Here are the matching tasks in your list: \";","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_MARK \u003d \"Nice! I\u0027ve marked this task as done: \";","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_UNMARK \u003d \"Nice! I\u0027ve unmarked this task as done: \";","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_ERROR_COMMAND \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that command means :-(\";","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_ERROR_INVALID_TASK_NUMBER \u003d \"☹ OOPS!!! The task number is invalid.\";","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_ERROR_EMPTY_DESCRIPTION \u003d \"☹ OOPS!!! The description of a task cannot be empty.\";","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_ERROR_FROM_TIME_MISSING \u003d \"☹ OOPS!!! The /from time of an event cannot be empty.\";","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_ERROR_TO_TIME_MISSING \u003d \"☹ OOPS!!! The /to time of an event cannot be empty.\";","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_ERROR_TO_BEFORE_FROM \u003d \"☹ OOPS!!! The /from time of an event must be typed before the /to time.\";","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_ERROR_DEADLINE_BY \u003d \"☹ OOPS!!! The /by time of a deadline cannot be empty.\";","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_ERROR_FIND_MISSING \u003d \"☹ OOPS!!! The word you are searching for cannot be empty.\";","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_ERROR_FILE_CREATION \u003d \"☹ OOPS!!! Error creating file.\";","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_ERROR_FILE_READING \u003d \"☹ OOPS!!! Error reading from file.\";","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_ERROR_FILE_WRITING \u003d \"☹ OOPS!!! Error writing to file.\";","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"DaDevChia":37}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package duke.ui;","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.LINE;","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.LOGO;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_WELCOME;","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import static duke.ui.MessageConstants.MESSAGE_GOODBYE;","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":" * Handles the user interface of Duke.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"public class Ui {","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"    private static PrintStream printer \u003d System.out;","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"    public static void showWelcome() {","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"        printer.println(LINE);","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"        printer.println(MESSAGE_WELCOME);","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"        printer.println(LOGO);","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"    public static void showGoodbye() {","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"        printer.println(LINE);","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"        printer.println();","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"        printer.println(MESSAGE_GOODBYE);","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"        printer.println(LINE);","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"     * Prints the given message.","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"    public static void showMessage(String message) {","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"        printer.println(LINE);","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"        printer.println();","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"        printer.println(message);","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"        printer.println();","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"     * Reads the next line of input.","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"     * @return The next line of input.","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"    public static String readCommand() {","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"        printer.println(LINE);","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"        printer.println();","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"        printer.print(\"Enter command: \");","lastModifiedDate":"2023-09-29"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-09-29"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-09-29"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"DaDevChia":60}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"deadline sdad / sad","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"todo asdsad","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"list","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"DaDevChia":3}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"#set java runtime to /opt/homebrew/Cellar/openjdk/20.0.1/libexec/openjdk.jdk/Contents/Home/bin/java","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"#set java compiler to /opt/homebrew/Cellar/openjdk/20.0.1/libexec/openjdk.jdk/Contents/Home/bin/javac","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"export JAVA_HOME\u003d/opt/homebrew/Cellar/openjdk/20.0.1/libexec/openjdk.jdk/Contents/Home","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"export PATH\u003d/opt/homebrew/Cellar/openjdk/20.0.1/libexec/openjdk.jdk/Contents/Home/bin:$PATH","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"cd text-ui-test","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java ","lastModifiedDate":"2020-08-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DaDevChia":7,"-":38}}]
