[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"# TUM project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Haoyuli2002"},"content":"3. After that, locate the `src/main/java/TUM.java` file, right-click it, and choose `Run TUM.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Haoyuli2002":2,"-":22}},{"path":"src/main/java/TUM.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":"public class TUM {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"    public static void greetToUsers() {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\" Hello! I\u0027m TUM\");","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Haoyuli2002"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Haoyuli2002"},"content":"        List\u003cTask\u003e taskList \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Haoyuli2002"},"content":"        greetToUsers();","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Haoyuli2002"},"content":"        String line;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Haoyuli2002"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Haoyuli2002"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Haoyuli2002"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Haoyuli2002"},"content":"            if (line.equals(\"list\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Haoyuli2002"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Haoyuli2002"},"content":"                System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Haoyuli2002"},"content":"                for(int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Haoyuli2002"},"content":"                    System.out.println(\"     \" + (i+1) + \".[\" + taskList.get(i).getStatusIcon() + \"] \" + taskList.get(i).getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Haoyuli2002"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Haoyuli2002"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Haoyuli2002"},"content":"            } else if (line.startsWith(\"mark\") || line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Haoyuli2002"},"content":"                String[] words \u003d line.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Haoyuli2002"},"content":"                int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Haoyuli2002"},"content":"                if (line.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Haoyuli2002"},"content":"                    taskList.get(index).setDone(true);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Haoyuli2002"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Haoyuli2002"},"content":"                    System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Haoyuli2002"},"content":"                    System.out.println(\"       [\" + taskList.get(index).getStatusIcon() + \"] \" + taskList.get(index).getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Haoyuli2002"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Haoyuli2002"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Haoyuli2002"},"content":"                    taskList.get(index).setDone(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Haoyuli2002"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Haoyuli2002"},"content":"                    System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Haoyuli2002"},"content":"                    System.out.println(\"       [\" + taskList.get(index).getStatusIcon() + \"] \" + taskList.get(index).getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Haoyuli2002"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Haoyuli2002"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Haoyuli2002"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Haoyuli2002"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Haoyuli2002"},"content":"                taskList.add(new Task(line));","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Haoyuli2002"},"content":"                System.out.println(\"added: \" + line);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Haoyuli2002"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Haoyuli2002"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Haoyuli2002":54}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"public class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"    protected String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Haoyuli2002"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Haoyuli2002"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Haoyuli2002"},"content":"        return description;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Haoyuli2002"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Haoyuli2002"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Haoyuli2002"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Haoyuli2002"},"content":"        return isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Haoyuli2002"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Haoyuli2002"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Haoyuli2002":29}}]
