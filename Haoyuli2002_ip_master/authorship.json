[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"# Tum ChatBot","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"The Tum ChatBot is an application that can be used as a memorandum through the Command Line Interface or JAR Files. If you have anything to do or some important appointments, you can store them in Tum Chat and a text file regarding your tasks will be automatically generated so that you can be aware of what has been done and what should be done.","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"Haoyuli2002"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"Haoyuli2002"},"content":" Hello! I\u0027m TUM","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"Haoyuli2002"},"content":" What can I do for you?","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"Haoyuli2002"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"Haoyuli2002"},"content":"## Quick Start","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"Haoyuli2002"},"content":"1. Ensure you have Java 11 installed in your Computer.","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"Haoyuli2002"},"content":"2. Download the latest IP.jar from here.","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"Haoyuli2002"},"content":"3. Copy the file to the folder you want to use as the home folder for your Tum ChatBot.","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"Haoyuli2002"},"content":"4. Open a command terminal, cd into the folder you put the jar file in, and use the java -jar IP.jar command to run the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"Haoyuli2002"},"content":"   In a few seconds, it should show that:","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Haoyuli2002"},"content":"![Screenshot of the display in terminal](https://github.com/Haoyuli2002/ip/assets/139958049/cade8150-21a1-43be-8d82-6e59374f4c7f)","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"Haoyuli2002"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing help and pressing Enter will open the help window.","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"Haoyuli2002"},"content":"Some example commands you can try:","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"Haoyuli2002"},"content":"-list: Lists all contacts.","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"Haoyuli2002"},"content":"-todo return book: add the task todo \"return book\" in your task list","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"Haoyuli2002"},"content":"-delete 1: Deletes the first task shown in the current list.","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"Haoyuli2002"},"content":"-clear: Deletes all tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"Haoyuli2002"},"content":"-bye: Exits the app.","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"Haoyuli2002"},"content":"## Features","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"Haoyuli2002"},"content":"### Adding a task: todo/deadline/event","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"Haoyuli2002"},"content":"Add a task to your TaskList. We have 3 kinds of tasks available: todo, deadline, event","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"Haoyuli2002"},"content":"Format: todo DESCRIPTION_OF_TODO","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"Haoyuli2002"},"content":"Format: deadline DESCRIPTION_OF_DEADLINE /by DEADLINE","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"Haoyuli2002"},"content":"Format: event DESCRIPTION_OF_EVENT /from START_TIME /to END_TIME","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"Haoyuli2002"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"Haoyuli2002"},"content":"todo borrow book","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"Haoyuli2002"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"Haoyuli2002"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"Haoyuli2002"},"content":"### Listing all tasks:","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"Haoyuli2002"},"content":"Shows a list of all tasks that have been stored in the task list","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"Haoyuli2002"},"content":"Format: list","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"Haoyuli2002"},"content":"### Editing the status of a task : mark or unmark","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"Haoyuli2002"},"content":"Set the status of a task based on a given index to \"DONE\" by using \"mark\" or","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"Haoyuli2002"},"content":"Set the status of a task based on a given index to \"NOT_DONE\" by using \"unmark\"","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"Haoyuli2002"},"content":"Format: mark INDEX","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"Haoyuli2002"},"content":"Format: unmark INDEX","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"Haoyuli2002"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"Haoyuli2002"},"content":"mark 1","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"Haoyuli2002"},"content":"unmark 2","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"Haoyuli2002"},"content":"### Finding all relative tasks by keywords: find","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"Haoyuli2002"},"content":"Search for all the tasks in the task list that contain the keyword given by the user","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"Haoyuli2002"},"content":"Format: find DESCRIPTION","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"Haoyuli2002"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"Haoyuli2002"},"content":"find book","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"Haoyuli2002"},"content":"### Deleting a task: delete","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"Haoyuli2002"},"content":"Deletes the specified task from the task list based on the index","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"Haoyuli2002"},"content":"Format: delete INDEX","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"Haoyuli2002"},"content":"Deletes the person at the specified INDEX.","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"Haoyuli2002"},"content":"The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"Haoyuli2002"},"content":"The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"Haoyuli2002"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"Haoyuli2002"},"content":"delete 2: deletes the 2nd person in the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"Haoyuli2002"},"content":"find Betsy followed by delete 1 deletes the 1st person in the results of the find command.","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"Haoyuli2002"},"content":"### Clearing all entries: clear","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"Haoyuli2002"},"content":"Clears all entries from the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"Haoyuli2002"},"content":"Format: clear","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"Haoyuli2002"},"content":"### Exiting the program: bye","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"Haoyuli2002"},"content":"Exits the program.","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"Haoyuli2002"},"content":"Format: bye","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"Haoyuli2002"},"content":"### Command summary","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"Haoyuli2002"},"content":"Action\t  Format,                                                            Examples","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"Haoyuli2002"},"content":"todo      todo DESCRIPTION                                                   todo return book","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"Haoyuli2002"},"content":"deadline  deadline DESCRIPTION /by DEADLINE                                  deadline return book /by Sunday","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"Haoyuli2002"},"content":"event     event DESCRIPTION_OF_EVENT /from START_TIME /to END_TIME           event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"Haoyuli2002"},"content":"delete\t  delete INDEX                                                       delete 3","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"Haoyuli2002"},"content":"mark\t  mark INDEX                                                         mark 2","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"Haoyuli2002"},"content":"unmark\t  unmark INDEX                                                       unmark 2","lastModifiedDate":"2023-10-05"},{"lineNumber":112,"author":{"gitId":"Haoyuli2002"},"content":"Find\t  find KEYWORD                                                       find book","lastModifiedDate":"2023-10-05"},{"lineNumber":113,"author":{"gitId":"Haoyuli2002"},"content":"List\t  list","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"Haoyuli2002"},"content":"Clear     clear","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"Haoyuli2002"},"content":"Help\t  help","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":117,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":129,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":132,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"Haoyuli2002":116,"-":16}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"import duke.exceptions.*;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"import java.io.File;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"Haoyuli2002"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"Haoyuli2002"},"content":" * This is the major class for our program(ChatBot),","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"Haoyuli2002"},"content":" * in other words, we call methods or use other classes inside this class","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"Haoyuli2002"},"content":" * to ensure that our program can be executed and perform the task we want","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"Haoyuli2002"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"Haoyuli2002"},"content":"public class Duke {","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"Haoyuli2002"},"content":"    public static final String NULL_INPUT_EXCEPTION \u003d \"____________________________________________________________\"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"Haoyuli2002"},"content":"        + \"At least say something! :D\"","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"Haoyuli2002"},"content":"        + \"____________________________________________________________\";","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"Haoyuli2002"},"content":"    public static final String UNDEFINED_TASKS \u003d \"____________________________________________________________\" + System.lineSeparator()","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"Haoyuli2002"},"content":"        + \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" + System.lineSeparator()","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"Haoyuli2002"},"content":"        + \"     You should tell me which kind of Tasks (todo, deadline, event) you would like to add\" + System.lineSeparator()","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"Haoyuli2002"},"content":"        + \"____________________________________________________________\" + System.lineSeparator();","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"Haoyuli2002"},"content":"    public static final String NULL_DESCRIPTION_EXCEPTION_FOR_DEADLINE \u003d \"____________________________________________________________\" + System.lineSeparator()","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"Haoyuli2002"},"content":"        + \"     ☹ OOPS!!! The description cannot be empty.\" + System.lineSeparator()","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"Haoyuli2002"},"content":"        + \"____________________________________________________________\" + System.lineSeparator();","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"Haoyuli2002"},"content":"    public static final String INDEX_OUT_OF_BOUND \u003d \"____________________________________________________________\" + System.lineSeparator()","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"Haoyuli2002"},"content":"        + \"     There are not so many tasks!\" + System.lineSeparator()","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"Haoyuli2002"},"content":"        + \"____________________________________________________________\" + System.lineSeparator();","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"Haoyuli2002"},"content":"    public static final String FILE_PATH \u003d \"duke.txt\";","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"Haoyuli2002"},"content":"    private static final List\u003cString\u003e allValidInput \u003d new ArrayList\u003c\u003e(List.of(new String[]{\"todo\", \"deadline\", \"list\", \"bye\", \"event\", \"find\", \"delete\"}));","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"Haoyuli2002"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"Haoyuli2002"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"Haoyuli2002"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"Haoyuli2002"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"Haoyuli2002"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"Haoyuli2002"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"Haoyuli2002"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"Haoyuli2002"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"Haoyuli2002"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"Haoyuli2002"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"Haoyuli2002"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"Haoyuli2002"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"Haoyuli2002"},"content":"        Duke duke \u003d new Duke(FILE_PATH);","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"Haoyuli2002"},"content":"        duke.run();","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"Haoyuli2002"},"content":"    private void run() {","lastModifiedDate":"2023-09-30"},{"lineNumber":61,"author":{"gitId":"Haoyuli2002"},"content":"        List\u003cTask\u003e taskList \u003d this.tasks;","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"Haoyuli2002"},"content":"        ui.greetToUsers();","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"Haoyuli2002"},"content":"        String line \u003d Ui.getUserInput();","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"Haoyuli2002"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"Haoyuli2002"},"content":"            if (line.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"Haoyuli2002"},"content":"                throw new NullInputException(NULL_INPUT_EXCEPTION);","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"Haoyuli2002"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"Haoyuli2002"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"Haoyuli2002"},"content":"            line \u003d Ui.getUserInput();","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"Haoyuli2002"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"Haoyuli2002"},"content":"            if (line.equals(\"list\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"Haoyuli2002"},"content":"                showList(taskList);","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"Haoyuli2002"},"content":"            } else if (line.startsWith(\"mark\") || line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"Haoyuli2002"},"content":"                markTheTask(line, taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"Haoyuli2002"},"content":"            } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"Haoyuli2002"},"content":"                try {","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"Haoyuli2002"},"content":"                    handleTheUserInput(taskList, line);","lastModifiedDate":"2023-09-30"},{"lineNumber":91,"author":{"gitId":"Haoyuli2002"},"content":"                    if (!line.startsWith(\"delete\") \u0026\u0026 !line.startsWith(\"find\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":92,"author":{"gitId":"Haoyuli2002"},"content":"                        feedbackOfTheExecution(taskList);","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"Haoyuli2002"},"content":"                    }","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"Haoyuli2002"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"Haoyuli2002"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"Haoyuli2002"},"content":"                }","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"Haoyuli2002"},"content":"            line \u003d Ui.getUserInput();","lastModifiedDate":"2023-09-30"},{"lineNumber":105,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":106,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":107,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"Haoyuli2002"},"content":"        ui.byeToUsers();","lastModifiedDate":"2023-09-30"},{"lineNumber":109,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":111,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":112,"author":{"gitId":"Haoyuli2002"},"content":"    private static void handleTheUserInput(List\u003cTask\u003e taskList, String line) throws DukeException {","lastModifiedDate":"2023-09-30"},{"lineNumber":113,"author":{"gitId":"Haoyuli2002"},"content":"        FileWriter fileWriter;","lastModifiedDate":"2023-09-30"},{"lineNumber":114,"author":{"gitId":"Haoyuli2002"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"Haoyuli2002"},"content":"            fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-09-30"},{"lineNumber":116,"author":{"gitId":"Haoyuli2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"Haoyuli2002"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"Haoyuli2002"},"content":"        String[] words \u003d line.split(\" \");","lastModifiedDate":"2023-09-30"},{"lineNumber":120,"author":{"gitId":"Haoyuli2002"},"content":"        String firstWord \u003d words[0];","lastModifiedDate":"2023-09-30"},{"lineNumber":121,"author":{"gitId":"Haoyuli2002"},"content":"        if (!allValidInput.contains(firstWord)) {","lastModifiedDate":"2023-09-30"},{"lineNumber":122,"author":{"gitId":"Haoyuli2002"},"content":"            addToFile(taskList);","lastModifiedDate":"2023-09-30"},{"lineNumber":123,"author":{"gitId":"Haoyuli2002"},"content":"            try {","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"Haoyuli2002"},"content":"                fileWriter.close();","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"Haoyuli2002"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"Haoyuli2002"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"Haoyuli2002"},"content":"            throw new NullValidInputException(UNDEFINED_TASKS);","lastModifiedDate":"2023-09-30"},{"lineNumber":129,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"Haoyuli2002"},"content":"        boolean nullDescription \u003d words.length \u003d\u003d 1;","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"Haoyuli2002"},"content":"        if (nullDescription) {","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"Haoyuli2002"},"content":"            addToFile(taskList);","lastModifiedDate":"2023-09-30"},{"lineNumber":133,"author":{"gitId":"Haoyuli2002"},"content":"            try {","lastModifiedDate":"2023-09-30"},{"lineNumber":134,"author":{"gitId":"Haoyuli2002"},"content":"                fileWriter.close();","lastModifiedDate":"2023-09-30"},{"lineNumber":135,"author":{"gitId":"Haoyuli2002"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":136,"author":{"gitId":"Haoyuli2002"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-09-30"},{"lineNumber":137,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"Haoyuli2002"},"content":"            throw new NullDescriptionInputException(NULL_DESCRIPTION_EXCEPTION_FOR_DEADLINE);","lastModifiedDate":"2023-09-30"},{"lineNumber":139,"author":{"gitId":"Haoyuli2002"},"content":"        } else {","lastModifiedDate":"2023-09-30"},{"lineNumber":140,"author":{"gitId":"Haoyuli2002"},"content":"            switch (firstWord) {","lastModifiedDate":"2023-09-09"},{"lineNumber":141,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":142,"author":{"gitId":"Haoyuli2002"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-09"},{"lineNumber":143,"author":{"gitId":"Haoyuli2002"},"content":"                Parser.handleDeadline(taskList, line);","lastModifiedDate":"2023-09-30"},{"lineNumber":144,"author":{"gitId":"Haoyuli2002"},"content":"                break;","lastModifiedDate":"2023-09-09"},{"lineNumber":145,"author":{"gitId":"Haoyuli2002"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-09"},{"lineNumber":146,"author":{"gitId":"Haoyuli2002"},"content":"                Parser.handleTodo(taskList, words);","lastModifiedDate":"2023-09-30"},{"lineNumber":147,"author":{"gitId":"Haoyuli2002"},"content":"                break;","lastModifiedDate":"2023-09-09"},{"lineNumber":148,"author":{"gitId":"Haoyuli2002"},"content":"            case \"find\":","lastModifiedDate":"2023-09-30"},{"lineNumber":149,"author":{"gitId":"Haoyuli2002"},"content":"                Parser.handleFind(taskList, words);","lastModifiedDate":"2023-09-30"},{"lineNumber":150,"author":{"gitId":"Haoyuli2002"},"content":"                break;","lastModifiedDate":"2023-09-30"},{"lineNumber":151,"author":{"gitId":"Haoyuli2002"},"content":"            case \"event\":","lastModifiedDate":"2023-09-09"},{"lineNumber":152,"author":{"gitId":"Haoyuli2002"},"content":"                Parser.handleEvent(taskList, line);","lastModifiedDate":"2023-09-30"},{"lineNumber":153,"author":{"gitId":"Haoyuli2002"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"Haoyuli2002"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"Haoyuli2002"},"content":"                deleteTask(taskList, Integer.parseInt(words[1]));","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"Haoyuli2002"},"content":"                break;","lastModifiedDate":"2023-09-09"},{"lineNumber":157,"author":{"gitId":"Haoyuli2002"},"content":"            default: {","lastModifiedDate":"2023-09-10"},{"lineNumber":158,"author":{"gitId":"Haoyuli2002"},"content":"                throw new UndefinedTaskException(UNDEFINED_TASKS);","lastModifiedDate":"2023-09-10"},{"lineNumber":159,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":160,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":161,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":162,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":163,"author":{"gitId":"Haoyuli2002"},"content":"            try {","lastModifiedDate":"2023-09-30"},{"lineNumber":164,"author":{"gitId":"Haoyuli2002"},"content":"                fileWriter.close();","lastModifiedDate":"2023-09-30"},{"lineNumber":165,"author":{"gitId":"Haoyuli2002"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":166,"author":{"gitId":"Haoyuli2002"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-09-30"},{"lineNumber":167,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":168,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":169,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":170,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":171,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":172,"author":{"gitId":"Haoyuli2002"},"content":"    private static void deleteTask(List\u003cTask\u003e taskList, int index) throws IndexOutOfBoundOfTheList {","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"Haoyuli2002"},"content":"        if (index \u003e taskList.size()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"Haoyuli2002"},"content":"            throw new IndexOutOfBoundOfTheList(INDEX_OUT_OF_BOUND);","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"       \" + taskList.get(index - 1).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"Haoyuli2002"},"content":"        taskList.remove(index - 1);","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"     Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"Haoyuli2002"},"content":"        addToFile(taskList);","lastModifiedDate":"2023-09-30"},{"lineNumber":183,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":184,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":185,"author":{"gitId":"Haoyuli2002"},"content":"    private static void feedbackOfTheExecution(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-30"},{"lineNumber":186,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-30"},{"lineNumber":187,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-30"},{"lineNumber":188,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"       \" + taskList.get(taskList.size() - 1).toString());","lastModifiedDate":"2023-09-30"},{"lineNumber":189,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"     Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":190,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-30"},{"lineNumber":191,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":192,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":193,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":194,"author":{"gitId":"Haoyuli2002"},"content":"     * This method is used to update our file whenever we add or delete our tasks.","lastModifiedDate":"2023-10-01"},{"lineNumber":195,"author":{"gitId":"Haoyuli2002"},"content":"     * @param taskList the list that stores all our current tasks","lastModifiedDate":"2023-10-01"},{"lineNumber":196,"author":{"gitId":"Haoyuli2002"},"content":"     *                 we have to add or delete the corresponding tasks in it","lastModifiedDate":"2023-10-01"},{"lineNumber":197,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":198,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":199,"author":{"gitId":"Haoyuli2002"},"content":"    public static void addToFile(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-30"},{"lineNumber":200,"author":{"gitId":"Haoyuli2002"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":201,"author":{"gitId":"Haoyuli2002"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-21"},{"lineNumber":202,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":203,"author":{"gitId":"Haoyuli2002"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":204,"author":{"gitId":"Haoyuli2002"},"content":"                file.delete();","lastModifiedDate":"2023-09-21"},{"lineNumber":205,"author":{"gitId":"Haoyuli2002"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-21"},{"lineNumber":206,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":207,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":208,"author":{"gitId":"Haoyuli2002"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH));","lastModifiedDate":"2023-09-21"},{"lineNumber":209,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":210,"author":{"gitId":"Haoyuli2002"},"content":"            // Loop through the list and write each element to the file","lastModifiedDate":"2023-09-21"},{"lineNumber":211,"author":{"gitId":"Haoyuli2002"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-30"},{"lineNumber":212,"author":{"gitId":"Haoyuli2002"},"content":"                writer.write((i+1) + \". \" + taskList.get(i).toString());","lastModifiedDate":"2023-09-30"},{"lineNumber":213,"author":{"gitId":"Haoyuli2002"},"content":"                writer.newLine(); // Add a newline to separate each item","lastModifiedDate":"2023-09-21"},{"lineNumber":214,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":215,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":216,"author":{"gitId":"Haoyuli2002"},"content":"            // Close the writer to release resources","lastModifiedDate":"2023-09-21"},{"lineNumber":217,"author":{"gitId":"Haoyuli2002"},"content":"            writer.close();","lastModifiedDate":"2023-09-21"},{"lineNumber":218,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":219,"author":{"gitId":"Haoyuli2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":220,"author":{"gitId":"Haoyuli2002"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-21"},{"lineNumber":221,"author":{"gitId":"Haoyuli2002"},"content":"            System.err.println(\"Error: Unable to save the list to the file.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":222,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":223,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":224,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":225,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":226,"author":{"gitId":"Haoyuli2002"},"content":"     * This method is used to show all the tasks that have been added by the users for now","lastModifiedDate":"2023-10-01"},{"lineNumber":227,"author":{"gitId":"Haoyuli2002"},"content":"     * @param taskList this list contains all the tasks the users have for now and should be displayed","lastModifiedDate":"2023-10-01"},{"lineNumber":228,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":229,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":230,"author":{"gitId":"Haoyuli2002"},"content":"    public static void showList(List taskList) {","lastModifiedDate":"2023-09-20"},{"lineNumber":231,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":232,"author":{"gitId":"Haoyuli2002"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-30"},{"lineNumber":233,"author":{"gitId":"Haoyuli2002"},"content":"            System.out.println(\"     You haven\u0027t added anything yet!\");","lastModifiedDate":"2023-09-30"},{"lineNumber":234,"author":{"gitId":"Haoyuli2002"},"content":"        } else {","lastModifiedDate":"2023-09-30"},{"lineNumber":235,"author":{"gitId":"Haoyuli2002"},"content":"            System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":236,"author":{"gitId":"Haoyuli2002"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":237,"author":{"gitId":"Haoyuli2002"},"content":"                System.out.println(\"     \" + (i + 1) + \".\" + taskList.get(i).toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":238,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":239,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":240,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":241,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":242,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":243,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":244,"author":{"gitId":"Haoyuli2002"},"content":"     * This method is used to execute the command \"mark\" of the user,","lastModifiedDate":"2023-10-01"},{"lineNumber":245,"author":{"gitId":"Haoyuli2002"},"content":"     * so we have to search for the corresponding task in our taskList based on the index derived for the String line","lastModifiedDate":"2023-10-01"},{"lineNumber":246,"author":{"gitId":"Haoyuli2002"},"content":"     * and then set the Status of this task to \"Done\"","lastModifiedDate":"2023-10-01"},{"lineNumber":247,"author":{"gitId":"Haoyuli2002"},"content":"     * @param line the user input where we can get the index information of the task we are going to handle","lastModifiedDate":"2023-10-01"},{"lineNumber":248,"author":{"gitId":"Haoyuli2002"},"content":"     * @param taskList the list contains all our tasks, and we have to add or delete a particular task inside it","lastModifiedDate":"2023-10-01"},{"lineNumber":249,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":250,"author":{"gitId":"Haoyuli2002"},"content":"    public static void markTheTask(String line, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-09"},{"lineNumber":251,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-09"},{"lineNumber":252,"author":{"gitId":"Haoyuli2002"},"content":"        String[] words \u003d line.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":253,"author":{"gitId":"Haoyuli2002"},"content":"        int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":254,"author":{"gitId":"Haoyuli2002"},"content":"        if (line.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":255,"author":{"gitId":"Haoyuli2002"},"content":"            taskList.get(index).setDone(true);","lastModifiedDate":"2023-08-30"},{"lineNumber":256,"author":{"gitId":"Haoyuli2002"},"content":"            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"Haoyuli2002"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":258,"author":{"gitId":"Haoyuli2002"},"content":"            taskList.get(index).setDone(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":259,"author":{"gitId":"Haoyuli2002"},"content":"            System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":260,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":261,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"       \" + taskList.get(index).toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":262,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":263,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":264,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":265,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Haoyuli2002":265}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"package duke;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"import duke.exceptions.NullValidInputException;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"import java.util.List;","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"Haoyuli2002"},"content":"import static duke.Duke.addToFile;","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"Haoyuli2002"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"Haoyuli2002"},"content":" * This class is designed to deal with making sense of the user command","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"Haoyuli2002"},"content":" * e.g. analyze user input for different command like \"todo\", \"event\", \"find\" etc.","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"Haoyuli2002"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"Haoyuli2002"},"content":"public class Parser {","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"Haoyuli2002"},"content":"     * This is used to create an event object based on the user input,","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"Haoyuli2002"},"content":"     * and add this event into the taskList","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"Haoyuli2002"},"content":"     * @param taskList the list containing all the tasks for now where we should add our new event object into","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"Haoyuli2002"},"content":"     * @param line the user input","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"Haoyuli2002"},"content":"     * @throws NullValidInputException","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"Haoyuli2002"},"content":"    public static void handleEvent(List\u003cTask\u003e taskList, String line) throws NullValidInputException {","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"Haoyuli2002"},"content":"        String[] userfulInfo \u003d handleInputForEvent(line);","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"Haoyuli2002"},"content":"        Event event \u003d new Event(userfulInfo[0], userfulInfo[1]);","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"Haoyuli2002"},"content":"        taskList.add(event);","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"Haoyuli2002"},"content":"        addToFile(taskList);","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"Haoyuli2002"},"content":"     *  This is used to create a String array based on which we can create the event object","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"Haoyuli2002"},"content":"     * @param userInput the user input","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"Haoyuli2002"},"content":"     * @return","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"Haoyuli2002"},"content":"     * @throws NullValidInputException","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"Haoyuli2002"},"content":"    public static String[] handleInputForEvent(String userInput) throws NullValidInputException {","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"Haoyuli2002"},"content":"        String usefulInput \u003d userInput.replace(\"event\", \"\").trim();","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"Haoyuli2002"},"content":"        String[] taskAndTimePeriod \u003d usefulInput.split(\"/\");","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"Haoyuli2002"},"content":"        if (taskAndTimePeriod.length \u003c 3) {","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"Haoyuli2002"},"content":"            throw new NullValidInputException(\"Not enough input for event\");","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"Haoyuli2002"},"content":"        String description \u003d taskAndTimePeriod[0];","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"Haoyuli2002"},"content":"        String timePeriod \u003d taskAndTimePeriod[1] + taskAndTimePeriod[2];","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"Haoyuli2002"},"content":"        if (timePeriod.startsWith(\"from\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"Haoyuli2002"},"content":"            timePeriod \u003d \"(\" + timePeriod.replace(\"from\", \"from:\").replace(\"to\", \"to:\") + \")\";","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"Haoyuli2002"},"content":"        } else {","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"Haoyuli2002"},"content":"            timePeriod \u003d \"(from: \" + timePeriod.replace(\"to\", \"to:\") + \")\";","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"Haoyuli2002"},"content":"        return new String[] {description, timePeriod};","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":56,"author":{"gitId":"Haoyuli2002"},"content":"     * This is used to create a deadline object based on the user input,","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"Haoyuli2002"},"content":"     * and add this event into the taskList","lastModifiedDate":"2023-10-01"},{"lineNumber":58,"author":{"gitId":"Haoyuli2002"},"content":"     * @param taskList the list containing all the tasks for now where we should add our new deadline object into","lastModifiedDate":"2023-10-01"},{"lineNumber":59,"author":{"gitId":"Haoyuli2002"},"content":"     * @param line the user input","lastModifiedDate":"2023-10-01"},{"lineNumber":60,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":61,"author":{"gitId":"Haoyuli2002"},"content":"    public static void handleDeadline(List\u003cTask\u003e taskList, String line) {","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"Haoyuli2002"},"content":"        String by \u003d line.split(\"/\")[1];","lastModifiedDate":"2023-09-30"},{"lineNumber":63,"author":{"gitId":"Haoyuli2002"},"content":"        String description \u003d line.split(\"/\")[0].replace(\"deadline\", \"\").trim();","lastModifiedDate":"2023-09-30"},{"lineNumber":64,"author":{"gitId":"Haoyuli2002"},"content":"        Deadline deadline \u003d new Deadline(description, by.replace(\"by\", \"\").trim());","lastModifiedDate":"2023-09-30"},{"lineNumber":65,"author":{"gitId":"Haoyuli2002"},"content":"        taskList.add(deadline);","lastModifiedDate":"2023-09-30"},{"lineNumber":66,"author":{"gitId":"Haoyuli2002"},"content":"        addToFile(taskList);","lastModifiedDate":"2023-09-30"},{"lineNumber":67,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":70,"author":{"gitId":"Haoyuli2002"},"content":"     * This is used to create a todo object based on the user input,","lastModifiedDate":"2023-10-01"},{"lineNumber":71,"author":{"gitId":"Haoyuli2002"},"content":"     * and add this event into the taskList","lastModifiedDate":"2023-10-01"},{"lineNumber":72,"author":{"gitId":"Haoyuli2002"},"content":"     * @param taskList the list containing all the tasks for now where we should add our new todo object into","lastModifiedDate":"2023-10-01"},{"lineNumber":73,"author":{"gitId":"Haoyuli2002"},"content":"     * @param words the String array derived by splitting the user input","lastModifiedDate":"2023-10-01"},{"lineNumber":74,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":75,"author":{"gitId":"Haoyuli2002"},"content":"    public static void handleTodo(List\u003cTask\u003e taskList, String[] words) {","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"Haoyuli2002"},"content":"        String task \u003d \"\";","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"Haoyuli2002"},"content":"        for (int i \u003d 1; i \u003c words.length; i++) {","lastModifiedDate":"2023-09-30"},{"lineNumber":78,"author":{"gitId":"Haoyuli2002"},"content":"            task +\u003d words[i] + \" \";","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":80,"author":{"gitId":"Haoyuli2002"},"content":"        Todo todo \u003d new Todo(task.trim());","lastModifiedDate":"2023-09-30"},{"lineNumber":81,"author":{"gitId":"Haoyuli2002"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-09-30"},{"lineNumber":82,"author":{"gitId":"Haoyuli2002"},"content":"        addToFile(taskList);","lastModifiedDate":"2023-09-30"},{"lineNumber":83,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":84,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":85,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":86,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":87,"author":{"gitId":"Haoyuli2002"},"content":"     * This method is designed to handle the find command","lastModifiedDate":"2023-10-01"},{"lineNumber":88,"author":{"gitId":"Haoyuli2002"},"content":"     * we try to find if we have any tasks in our taskList whose description contains the keyword for this command","lastModifiedDate":"2023-10-01"},{"lineNumber":89,"author":{"gitId":"Haoyuli2002"},"content":"     * @param taskList the list containing all the tasks for now where we should scan based on the keyword","lastModifiedDate":"2023-10-01"},{"lineNumber":90,"author":{"gitId":"Haoyuli2002"},"content":"     * @param words the user input from which we can get the keyword for find command","lastModifiedDate":"2023-10-01"},{"lineNumber":91,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":92,"author":{"gitId":"Haoyuli2002"},"content":"    public static void handleFind(List\u003cTask\u003e taskList, String[] words) {","lastModifiedDate":"2023-09-30"},{"lineNumber":93,"author":{"gitId":"Haoyuli2002"},"content":"        String keyword \u003d \"\";","lastModifiedDate":"2023-09-30"},{"lineNumber":94,"author":{"gitId":"Haoyuli2002"},"content":"        for(int i \u003d 1; i \u003c words.length; i++) {","lastModifiedDate":"2023-09-30"},{"lineNumber":95,"author":{"gitId":"Haoyuli2002"},"content":"            keyword +\u003d words[i] + \" \";","lastModifiedDate":"2023-09-30"},{"lineNumber":96,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":97,"author":{"gitId":"Haoyuli2002"},"content":"        keyword \u003d keyword.trim();","lastModifiedDate":"2023-09-30"},{"lineNumber":98,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":99,"author":{"gitId":"Haoyuli2002"},"content":"        List\u003cTask\u003e allWantedTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-30"},{"lineNumber":100,"author":{"gitId":"Haoyuli2002"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-30"},{"lineNumber":101,"author":{"gitId":"Haoyuli2002"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-30"},{"lineNumber":102,"author":{"gitId":"Haoyuli2002"},"content":"                allWantedTask.add(task);","lastModifiedDate":"2023-09-30"},{"lineNumber":103,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":104,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":105,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":106,"author":{"gitId":"Haoyuli2002"},"content":"        if (allWantedTask.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-30"},{"lineNumber":107,"author":{"gitId":"Haoyuli2002"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-30"},{"lineNumber":108,"author":{"gitId":"Haoyuli2002"},"content":"            System.out.println(\"Sorry, you haven\u0027t saved any tasks regarding the given keyword yet.\");","lastModifiedDate":"2023-09-30"},{"lineNumber":109,"author":{"gitId":"Haoyuli2002"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-30"},{"lineNumber":110,"author":{"gitId":"Haoyuli2002"},"content":"        } else {","lastModifiedDate":"2023-09-30"},{"lineNumber":111,"author":{"gitId":"Haoyuli2002"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-30"},{"lineNumber":112,"author":{"gitId":"Haoyuli2002"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-30"},{"lineNumber":113,"author":{"gitId":"Haoyuli2002"},"content":"            for (int i \u003d 0; i \u003c allWantedTask.size(); i++) {","lastModifiedDate":"2023-09-30"},{"lineNumber":114,"author":{"gitId":"Haoyuli2002"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2023-09-30"},{"lineNumber":115,"author":{"gitId":"Haoyuli2002"},"content":"                System.out.println(index + \". \" + allWantedTask.get(i));","lastModifiedDate":"2023-09-30"},{"lineNumber":116,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":117,"author":{"gitId":"Haoyuli2002"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-30"},{"lineNumber":118,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":119,"author":{"gitId":"Haoyuli2002"},"content":"        addToFile(taskList);","lastModifiedDate":"2023-09-30"},{"lineNumber":120,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":121,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":122,"author":{"gitId":"Haoyuli2002"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-30"},{"lineNumber":123,"author":{"gitId":"Haoyuli2002"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-30"},{"lineNumber":124,"author":{"gitId":"Haoyuli2002"},"content":"        taskList.add(new Todo(\"read book\"));","lastModifiedDate":"2023-09-30"},{"lineNumber":125,"author":{"gitId":"Haoyuli2002"},"content":"        taskList.add(new Todo(\"a\"));","lastModifiedDate":"2023-09-30"},{"lineNumber":126,"author":{"gitId":"Haoyuli2002"},"content":"        taskList.add(new Todo(\"c\"));","lastModifiedDate":"2023-09-30"},{"lineNumber":127,"author":{"gitId":"Haoyuli2002"},"content":"        taskList.add(new Todo(\"return book\"));","lastModifiedDate":"2023-09-30"},{"lineNumber":128,"author":{"gitId":"Haoyuli2002"},"content":"        String s \u003d \"find asddsa\";","lastModifiedDate":"2023-09-30"},{"lineNumber":129,"author":{"gitId":"Haoyuli2002"},"content":"        handleFind(taskList, s.split(\" \"));","lastModifiedDate":"2023-09-30"},{"lineNumber":130,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":131,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"Haoyuli2002":131}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"package duke;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"import java.io.*;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"import java.util.List;","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"Haoyuli2002"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"Haoyuli2002"},"content":" * This class is used to store the tasks that our user has added before","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"Haoyuli2002"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"Haoyuli2002"},"content":"public class Storage {","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"Haoyuli2002"},"content":"    private String filePath;","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"Haoyuli2002"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"Haoyuli2002"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"Haoyuli2002"},"content":"     * This method is designed to scan the text saved by our program","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"Haoyuli2002"},"content":"     * and add them back to the list when our user reopens it,","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"Haoyuli2002"},"content":"     * so that the tasks the user saved before will not be lost","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"Haoyuli2002"},"content":"     * @return the list of Tasks that the user saved before","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"Haoyuli2002"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"Haoyuli2002"},"content":"        List\u003cTask\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"Haoyuli2002"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"Haoyuli2002"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"Haoyuli2002"},"content":"            try {","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"Haoyuli2002"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"Haoyuli2002"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"Haoyuli2002"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"Haoyuli2002"},"content":"        } else {","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"Haoyuli2002"},"content":"            try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"Haoyuli2002"},"content":"                String line;","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"Haoyuli2002"},"content":"                while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"Haoyuli2002"},"content":"                    lines.add(getTheTask(line));","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"Haoyuli2002"},"content":"                }","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"Haoyuli2002"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"Haoyuli2002"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"Haoyuli2002"},"content":"            // Now \u0027lines\u0027 contains all the lines from the file","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"Haoyuli2002"},"content":"            // You can iterate through \u0027lines\u0027 or perform any other operations as needed","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"Haoyuli2002"},"content":"            // Example: Printing the lines","lastModifiedDate":"2023-09-30"},{"lineNumber":51,"author":{"gitId":"Haoyuli2002"},"content":"            if (lines.size() !\u003d 0) {","lastModifiedDate":"2023-09-30"},{"lineNumber":52,"author":{"gitId":"Haoyuli2002"},"content":"                System.out.println(\"Remember that you have already added the following tasks before!\");","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"Haoyuli2002"},"content":"            for (Task fileLine : lines) {","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"Haoyuli2002"},"content":"                System.out.println(fileLine);","lastModifiedDate":"2023-09-30"},{"lineNumber":56,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":58,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"Haoyuli2002"},"content":"        return lines;","lastModifiedDate":"2023-09-30"},{"lineNumber":60,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":61,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":62,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":63,"author":{"gitId":"Haoyuli2002"},"content":"     * This method is used to analyze every line in our file and create the corresponding task based on it","lastModifiedDate":"2023-10-01"},{"lineNumber":64,"author":{"gitId":"Haoyuli2002"},"content":"     * @param lineInTheFile the line in our File","lastModifiedDate":"2023-10-01"},{"lineNumber":65,"author":{"gitId":"Haoyuli2002"},"content":"     * @return the task we create based on the line in the file","lastModifiedDate":"2023-10-01"},{"lineNumber":66,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":67,"author":{"gitId":"Haoyuli2002"},"content":"    public Task getTheTask(String lineInTheFile) {","lastModifiedDate":"2023-09-30"},{"lineNumber":68,"author":{"gitId":"Haoyuli2002"},"content":"        if (lineInTheFile.contains(\"[T]\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"Haoyuli2002"},"content":"            String[] words \u003d lineInTheFile.split(\" \");","lastModifiedDate":"2023-09-30"},{"lineNumber":70,"author":{"gitId":"Haoyuli2002"},"content":"            String task \u003d \"\";","lastModifiedDate":"2023-09-30"},{"lineNumber":71,"author":{"gitId":"Haoyuli2002"},"content":"            Todo todo;","lastModifiedDate":"2023-09-30"},{"lineNumber":72,"author":{"gitId":"Haoyuli2002"},"content":"            if (lineInTheFile.contains(\"[X]\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":73,"author":{"gitId":"Haoyuli2002"},"content":"                for (int i \u003d 2; i \u003c words.length; i++) {","lastModifiedDate":"2023-09-30"},{"lineNumber":74,"author":{"gitId":"Haoyuli2002"},"content":"                    task +\u003d words[i] + \" \";","lastModifiedDate":"2023-09-30"},{"lineNumber":75,"author":{"gitId":"Haoyuli2002"},"content":"                }","lastModifiedDate":"2023-09-30"},{"lineNumber":76,"author":{"gitId":"Haoyuli2002"},"content":"                todo \u003d new Todo(task.trim());","lastModifiedDate":"2023-09-30"},{"lineNumber":77,"author":{"gitId":"Haoyuli2002"},"content":"                todo.setDone(true);","lastModifiedDate":"2023-09-30"},{"lineNumber":78,"author":{"gitId":"Haoyuli2002"},"content":"            } else {","lastModifiedDate":"2023-09-30"},{"lineNumber":79,"author":{"gitId":"Haoyuli2002"},"content":"                for (int i \u003d 3; i \u003c words.length; i++) {","lastModifiedDate":"2023-09-30"},{"lineNumber":80,"author":{"gitId":"Haoyuli2002"},"content":"                    task +\u003d words[i] + \" \";","lastModifiedDate":"2023-09-30"},{"lineNumber":81,"author":{"gitId":"Haoyuli2002"},"content":"                }","lastModifiedDate":"2023-09-30"},{"lineNumber":82,"author":{"gitId":"Haoyuli2002"},"content":"                todo \u003d new Todo(task.trim());","lastModifiedDate":"2023-09-30"},{"lineNumber":83,"author":{"gitId":"Haoyuli2002"},"content":"                todo.setDone(false);","lastModifiedDate":"2023-09-30"},{"lineNumber":84,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":85,"author":{"gitId":"Haoyuli2002"},"content":"            return todo;","lastModifiedDate":"2023-09-30"},{"lineNumber":86,"author":{"gitId":"Haoyuli2002"},"content":"        } else if (lineInTheFile.contains(\"[D]\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":87,"author":{"gitId":"Haoyuli2002"},"content":"            Deadline deadline \u003d transformInputToDeadline(lineInTheFile);","lastModifiedDate":"2023-09-30"},{"lineNumber":88,"author":{"gitId":"Haoyuli2002"},"content":"            return deadline;","lastModifiedDate":"2023-09-30"},{"lineNumber":89,"author":{"gitId":"Haoyuli2002"},"content":"        } else {","lastModifiedDate":"2023-09-30"},{"lineNumber":90,"author":{"gitId":"Haoyuli2002"},"content":"            Event event \u003d getEvent(lineInTheFile);","lastModifiedDate":"2023-09-30"},{"lineNumber":91,"author":{"gitId":"Haoyuli2002"},"content":"            return event;","lastModifiedDate":"2023-09-30"},{"lineNumber":92,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":93,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":94,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":95,"author":{"gitId":"Haoyuli2002"},"content":"    private static Deadline transformInputToDeadline(String lineInTheFile) {","lastModifiedDate":"2023-09-30"},{"lineNumber":96,"author":{"gitId":"Haoyuli2002"},"content":"        String by \u003d lineInTheFile.split(\"by: \")[1].replace(\")\", \"\");","lastModifiedDate":"2023-09-30"},{"lineNumber":97,"author":{"gitId":"Haoyuli2002"},"content":"        String wordsBeforeBy \u003d lineInTheFile.split(\"by: \")[0].replace(\"(\", \"\");","lastModifiedDate":"2023-09-30"},{"lineNumber":98,"author":{"gitId":"Haoyuli2002"},"content":"        Deadline deadline;","lastModifiedDate":"2023-09-30"},{"lineNumber":99,"author":{"gitId":"Haoyuli2002"},"content":"        String[] allWords \u003d wordsBeforeBy.split(\" \");","lastModifiedDate":"2023-09-30"},{"lineNumber":100,"author":{"gitId":"Haoyuli2002"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-09-30"},{"lineNumber":101,"author":{"gitId":"Haoyuli2002"},"content":"        if (lineInTheFile.contains(\"[X]\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":102,"author":{"gitId":"Haoyuli2002"},"content":"            for (int i \u003d 2; i \u003c allWords.length; i++) {","lastModifiedDate":"2023-09-30"},{"lineNumber":103,"author":{"gitId":"Haoyuli2002"},"content":"                description +\u003d allWords[i] + \" \";","lastModifiedDate":"2023-09-30"},{"lineNumber":104,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":105,"author":{"gitId":"Haoyuli2002"},"content":"            System.out.println(description);","lastModifiedDate":"2023-09-30"},{"lineNumber":106,"author":{"gitId":"Haoyuli2002"},"content":"            deadline \u003d new Deadline(description, by.replace(\"by\", \"\").trim());","lastModifiedDate":"2023-09-30"},{"lineNumber":107,"author":{"gitId":"Haoyuli2002"},"content":"            deadline.setDone(true);","lastModifiedDate":"2023-09-30"},{"lineNumber":108,"author":{"gitId":"Haoyuli2002"},"content":"        } else {","lastModifiedDate":"2023-09-30"},{"lineNumber":109,"author":{"gitId":"Haoyuli2002"},"content":"            for (int i \u003d 3; i \u003c allWords.length; i++) {","lastModifiedDate":"2023-09-30"},{"lineNumber":110,"author":{"gitId":"Haoyuli2002"},"content":"                description +\u003d allWords[i] + \" \";","lastModifiedDate":"2023-09-30"},{"lineNumber":111,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":112,"author":{"gitId":"Haoyuli2002"},"content":"            deadline \u003d new Deadline(description, by.replace(\"by\", \"\").trim());","lastModifiedDate":"2023-09-30"},{"lineNumber":113,"author":{"gitId":"Haoyuli2002"},"content":"            deadline.setDone(false);","lastModifiedDate":"2023-09-30"},{"lineNumber":114,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":115,"author":{"gitId":"Haoyuli2002"},"content":"        return deadline;","lastModifiedDate":"2023-09-30"},{"lineNumber":116,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":117,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":118,"author":{"gitId":"Haoyuli2002"},"content":"    private static Event getEvent(String lineInTheFile) {","lastModifiedDate":"2023-09-30"},{"lineNumber":119,"author":{"gitId":"Haoyuli2002"},"content":"        String[] words \u003d lineInTheFile.split(\"from: \");","lastModifiedDate":"2023-09-30"},{"lineNumber":120,"author":{"gitId":"Haoyuli2002"},"content":"        String timeperiod \u003d \"from \" + words[1].replace(\")\", \"\");","lastModifiedDate":"2023-09-30"},{"lineNumber":121,"author":{"gitId":"Haoyuli2002"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-09-30"},{"lineNumber":122,"author":{"gitId":"Haoyuli2002"},"content":"        String[] potentailDescription \u003d words[0].replace(\"(\", \"\").split(\" \");","lastModifiedDate":"2023-09-30"},{"lineNumber":123,"author":{"gitId":"Haoyuli2002"},"content":"        if (lineInTheFile.contains(\"[X]\")) {","lastModifiedDate":"2023-09-30"},{"lineNumber":124,"author":{"gitId":"Haoyuli2002"},"content":"            for (int i \u003d 2; i \u003c potentailDescription.length; i++) {","lastModifiedDate":"2023-09-30"},{"lineNumber":125,"author":{"gitId":"Haoyuli2002"},"content":"                description +\u003d potentailDescription[i] + \" \";","lastModifiedDate":"2023-09-30"},{"lineNumber":126,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":127,"author":{"gitId":"Haoyuli2002"},"content":"        } else {","lastModifiedDate":"2023-09-30"},{"lineNumber":128,"author":{"gitId":"Haoyuli2002"},"content":"            for (int i \u003d 3; i \u003c potentailDescription.length; i++) {","lastModifiedDate":"2023-09-30"},{"lineNumber":129,"author":{"gitId":"Haoyuli2002"},"content":"                description +\u003d potentailDescription[i] + \" \";","lastModifiedDate":"2023-09-30"},{"lineNumber":130,"author":{"gitId":"Haoyuli2002"},"content":"            }","lastModifiedDate":"2023-09-30"},{"lineNumber":131,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":132,"author":{"gitId":"Haoyuli2002"},"content":"        Event event \u003d new Event(description, timeperiod);","lastModifiedDate":"2023-09-30"},{"lineNumber":133,"author":{"gitId":"Haoyuli2002"},"content":"        return event;","lastModifiedDate":"2023-09-30"},{"lineNumber":134,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":135,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"Haoyuli2002":135}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"package duke;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"import java.util.Collection;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":" * List to store all tasks added by the user","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"Haoyuli2002"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"Haoyuli2002"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"Haoyuli2002"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"Haoyuli2002"},"content":"    public TaskList(Collection\u003c? extends Task\u003e c) throws DukeException {","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"Haoyuli2002"},"content":"        super(c);","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"Haoyuli2002"},"content":"        if (c \u003d\u003d null) {","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"Haoyuli2002"},"content":"            throw new DukeException(\"Nothing in there!\");","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"Haoyuli2002"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"Haoyuli2002":22}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"package duke;","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":"public class Ui {","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"     * This method is designed to get the user input","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"     * @return user input","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"Haoyuli2002"},"content":"    public static String getUserInput() {","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"Haoyuli2002"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"Haoyuli2002"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"Haoyuli2002"},"content":"        return line;","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"Haoyuli2002"},"content":"     * if error occurs, then print this error message","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"Haoyuli2002"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"Can\u0027t display the list due to unknown errors\");","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"Haoyuli2002"},"content":"     * This is a greeting from our program to user who uses it","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"Haoyuli2002"},"content":"    public void greetToUsers() {","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\" Hello! I\u0027m TUM\");","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"Haoyuli2002"},"content":"     * When the user decides to exit, then say farewell to him","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"Haoyuli2002"},"content":"    public void byeToUsers() {","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-30"},{"lineNumber":39,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"Haoyuli2002"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"Haoyuli2002":43}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":" * Superclass of all potential exceptions in our program","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"    public DukeException() {","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"        super();","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"Haoyuli2002"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"Haoyuli2002"},"content":"        super(message);","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"Haoyuli2002":14}},{"path":"src/main/java/duke/exceptions/IndexOutOfBoundOfTheList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":" * An exception in case that the index given by the user is greater than the size of our task list","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"public class IndexOutOfBoundOfTheList extends DukeException{","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"    public IndexOutOfBoundOfTheList(String message) {","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"        super(message);","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"Haoyuli2002":11}},{"path":"src/main/java/duke/exceptions/NullDescriptionInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":" * An exception in case that the user only types command without description","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"public class NullDescriptionInputException extends DukeException{","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"    public NullDescriptionInputException(String message) {","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"        super(message);","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"Haoyuli2002":10}},{"path":"src/main/java/duke/exceptions/NullInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":" * An exception in case that the user types nothing","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"public class NullInputException extends DukeException{","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"    public NullInputException(String message) {","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"        super(message);","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"Haoyuli2002":10}},{"path":"src/main/java/duke/exceptions/NullValidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":" * An exception in case that the user types command that is not valid or supported in our program","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"public class NullValidInputException extends DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"    public NullValidInputException(String message) {","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"        super(message);","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"Haoyuli2002":10}},{"path":"src/main/java/duke/exceptions/UndefinedTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":" * An exception in case that the user types invalid command","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"public class UndefinedTaskException extends DukeException{","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"    public UndefinedTaskException(String message) {","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"        super(message);","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"Haoyuli2002":10}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":" * A subclass extends Task that handles the command \"deadline\"","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"    protected String by;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"        super(description);","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Haoyuli2002"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"Haoyuli2002"},"content":"     * Override the toString() method of the superclass,","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"Haoyuli2002"},"content":"     * so it can return its own description","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"Haoyuli2002"},"content":"     * @return the description of deadline object","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"Haoyuli2002"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"Haoyuli2002"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"Haoyuli2002"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Haoyuli2002":22}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"import duke.exceptions.NullValidInputException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":" * A subclass extends Task that handles the command \"event\"","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"    protected String timePeriod;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Haoyuli2002"},"content":"    public Event(String description, String timePeriod) {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Haoyuli2002"},"content":"        super(description);","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"Haoyuli2002"},"content":"        this.timePeriod \u003d timePeriod;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"Haoyuli2002"},"content":"     * Override the toString() method of the superclass,","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"Haoyuli2002"},"content":"     * so it can return its own description","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"Haoyuli2002"},"content":"     * @return the description of event object","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"Haoyuli2002"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"Haoyuli2002"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"Haoyuli2002"},"content":"        return \"[E]\" + super.toString() + timePeriod;","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Haoyuli2002":25}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":" * Superclass of all the potential classes for the command \"todo\", \"event\", \"deadline\"","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"public class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"    protected String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Haoyuli2002"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Haoyuli2002"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"Haoyuli2002"},"content":"     * To display the corresponding Icon for the current status","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"Haoyuli2002"},"content":"     * @return A String represents its current status","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"Haoyuli2002"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"Haoyuli2002"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Haoyuli2002"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Haoyuli2002"},"content":"        return description;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Haoyuli2002"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Haoyuli2002"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"Haoyuli2002"},"content":"     * Override the toString() method of the superclass Object,","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"Haoyuli2002"},"content":"     * so it can return its own description","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"Haoyuli2002"},"content":"     * @return the description of task object","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"Haoyuli2002"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"Haoyuli2002"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"Haoyuli2002"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Haoyuli2002":40}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"     * A subclass extends Task that handles the command \"todo\"","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"        super(description);","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Haoyuli2002"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"Haoyuli2002"},"content":"     * Override the toString() method of the superclass,","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"Haoyuli2002"},"content":"     * so it can return its own description","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"Haoyuli2002"},"content":"     * @return the description of todo object","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"Haoyuli2002"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"Haoyuli2002"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"Haoyuli2002"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"Haoyuli2002"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"Haoyuli2002"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"Haoyuli2002"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Haoyuli2002":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Haoyuli2002"},"content":"todo borrow book","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Haoyuli2002"},"content":"list","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"Haoyuli2002"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"Haoyuli2002"},"content":"list","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Haoyuli2002"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Haoyuli2002"},"content":"mark 1","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Haoyuli2002"},"content":"list","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Haoyuli2002"},"content":"unmark 1","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Haoyuli2002"},"content":"list","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Haoyuli2002"},"content":"bye","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Haoyuli2002"},"content":"","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Haoyuli2002":12}}]
