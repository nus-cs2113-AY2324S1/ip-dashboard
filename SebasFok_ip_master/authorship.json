[{"path":"src/main/java/simon/Simon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package simon;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import simon.exception.*;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"import simon.task.*;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"import static simon.constant.TaskConstants.*;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"import static simon.UI.Printer.*;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"import static simon.command.Commands.*;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"public class Simon {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"        //Initialise variables","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"        Task[] tasks \u003d new Task[MAX_TASKS];","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"        //Print out greeting when user starts the program.","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"        printGreeting();","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"        //Take in user input","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"            processUserInput(userInput, tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"    public static void processUserInput(String userInput, Task[] tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"        String[] splitInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"        switch (splitInput[0]) {","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"        //If user types \"list ...\"","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"        case \"list\":","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"            printList(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"        //If user types \"mark \u0027n\u0027\", where n is a number referring to the task number","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"            markTask(splitInput[1], tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"        //If user types \"unmark \u0027n\u0027\", where n is a number referring to the task number","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"            unmarkTask(splitInput[1], tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"        //If user types \"todo ...\"","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"            try {","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"SebasFok"},"content":"                addTodo(splitInput[1], tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"            } catch (IndexOutOfBoundsException e) { //Empty description","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"SebasFok"},"content":"            } catch (SimonException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t☹ OOPS!!! You have reached the maximum number of tasks.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"SebasFok"},"content":"        //If user types \"event ... /from ... /to ...\"","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"SebasFok"},"content":"        case \"event\":","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"SebasFok"},"content":"            try {","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"SebasFok"},"content":"                addEvent(splitInput[1], tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"SebasFok"},"content":"            } catch (IndexOutOfBoundsException e) { //Empty description","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"SebasFok"},"content":"            } catch (SimonException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t☹ OOPS!!! You have reached the maximum number of tasks.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"SebasFok"},"content":"        //If user types \"deadline ... /by ...\"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"SebasFok"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"SebasFok"},"content":"            try {","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"SebasFok"},"content":"                addDeadline(splitInput[1], tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"SebasFok"},"content":"            } catch (IndexOutOfBoundsException e) { //Empty description","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"SebasFok"},"content":"            } catch (SimonException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t☹ OOPS!!! You have reached the maximum number of tasks.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"SebasFok"},"content":"                System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"SebasFok"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"SebasFok"},"content":"            printFarewell();","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"SebasFok"},"content":"        default:","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"SebasFok"},"content":"            //If unable to understand user input","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"SebasFok"},"content":"            printUnknownInputMessage();","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"SebasFok":101}},{"path":"src/main/java/simon/UI/Printer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package simon.UI;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import simon.task.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"public class Printer {","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"    public static final String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"    public static final String logo \u003d","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"            \"\\t   _____ _____ __  __  ____  _   _ \\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"            \"\\t  / ____|_   _|  \\\\/  |/ __ \\\\| \\\\ | |\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"            \"\\t | (___   | | | \\\\  / | |  | |  \\\\| |\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"            \"\\t  \\\\___ \\\\  | | | |\\\\/| | |  | | . ` |\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"            \"\\t  ____) |_| |_| |  | | |__| | |\\\\  |\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"            \"\\t |_____/|_____|_|  |_|\\\\____/|_| \\\\_|\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"            \"\\t                                   \\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"    public static void printGreeting() {","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + \"Hello I\u0027m\\n\" + logo);","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + \"What can I do for you?\");","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"    public static void  printUnknownInputMessage() {","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"    public static void printFarewell() {","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"    public static void printList(Task[] tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"        for (int i \u003d 0; i \u003c Task.getNumberOfTask(); i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"\\t\" + (i + 1) + \".\" + tasks[i]);","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"    public static void printAddTaskMessage(Task[] tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t  \" + tasks[Task.getNumberOfTask() - 1]);","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"SebasFok"},"content":"    public static void printNumberOfTasks(Task[] tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\tNow you have \" + Task.getNumberOfTask() + \" tasks in the list.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"SebasFok":53}},{"path":"src/main/java/simon/command/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package simon.command;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import simon.exception.*;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"import simon.task.*;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"import static simon.UI.Printer.*;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"import static simon.constant.TaskConstants.*;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"public class Commands {","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"    public static void markTask(String taskNumber, Task[] tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"        //Convert task number to element in tasks array","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"        int target \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"            tasks[target].markAsDone();","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"\\t  [X] \" + tasks[target].getDescription());","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"\\tSorry! There is no task associated with this number\");","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"\\tSorry! The tasks number inputted is out of bounds\");","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"\\tPlease key in a number from 1-\" + MAX_TASKS);","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"    public static void unmarkTask(String taskNumber, Task[] tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"        //Convert task number to element in tasks array","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"        int target \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"            tasks[target].unmarkAsDone();","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"\\tOkay, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"\\t  [] \" + tasks[target].getDescription());","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"\\tSorry! There is no task associated with this number\");","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"\\tSorry! The tasks number inputted is out of bounds\");","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"\\tPlease key in a number from 1-\" + MAX_TASKS);","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"    public static void addTodo(String description, Task[] tasks) throws SimonException {","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"        if (Task.getNumberOfTask() \u003d\u003d MAX_TASKS) {","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"            throw new SimonException();","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"        tasks[Task.getNumberOfTask()] \u003d new Todo(description);","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"SebasFok"},"content":"        printAddTaskMessage(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"        printNumberOfTasks(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"SebasFok"},"content":"    public static void addEvent(String event, Task[] tasks) throws SimonException {","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"SebasFok"},"content":"        if (Task.getNumberOfTask() \u003d\u003d MAX_TASKS) {","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"SebasFok"},"content":"            throw new SimonException();","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"SebasFok"},"content":"            //Split between \u0027description\u0027 and \u0027/from and /to\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"SebasFok"},"content":"            String[] splitEvent \u003d event.split(\" /from \", 2);","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"SebasFok"},"content":"            String description \u003d splitEvent[0];","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"SebasFok"},"content":"            //Split between \u0027/from\u0027 and \u0027/to\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"SebasFok"},"content":"            String[] time \u003d splitEvent[1].split(\" /to \", 2);","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"SebasFok"},"content":"            String from \u003d time[0];","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"SebasFok"},"content":"            String to \u003d time[1];","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"SebasFok"},"content":"            tasks[Task.getNumberOfTask()] \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"SebasFok"},"content":"            printAddTaskMessage(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"SebasFok"},"content":"            printNumberOfTasks(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"SebasFok"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"\\tPlease include when the time of your event in the following format:\");","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"\\tevent [description] /from [start time] /to [end time]\");","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"SebasFok"},"content":"    public static void addDeadline(String deadline, Task[] tasks) throws SimonException {","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"SebasFok"},"content":"        if (Task.getNumberOfTask() \u003d\u003d MAX_TASKS) {","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"SebasFok"},"content":"            throw new SimonException();","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"SebasFok"},"content":"            //Split between \u0027description\u0027 and \u0027/by\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"            String[] splitDeadline \u003d deadline.split(\" /by \", 2);","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"SebasFok"},"content":"            String description \u003d splitDeadline[0];","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"SebasFok"},"content":"            String by \u003d splitDeadline[1];","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"SebasFok"},"content":"            tasks[Task.getNumberOfTask()] \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"SebasFok"},"content":"            printAddTaskMessage(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"SebasFok"},"content":"            printNumberOfTasks(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"SebasFok"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"\\tPlease include when the deadline of your task is in the following format:\");","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"\\tdeadline [description] /by [deadline]\");","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"SebasFok"},"content":"     * public static void addTask(String userInput, duke.task.Task[] tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"SebasFok"},"content":"     *         tasks[duke.task.Task.getNumberOfTask()] \u003d new duke.task.Task(userInput);","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"SebasFok"},"content":"     *         System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"SebasFok"},"content":"     *         System.out.println(\"\\t\" + \"added: \" + userInput);","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"SebasFok"},"content":"     *         System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"SebasFok"},"content":"     *         }","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"SebasFok":109}},{"path":"src/main/java/simon/constant/TaskConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package simon.constant;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"public class TaskConstants {","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"    public static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"SebasFok":5}},{"path":"src/main/java/simon/exception/SimonException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package simon.exception;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"public class SimonException extends Exception{","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"SebasFok":4}},{"path":"src/main/java/simon/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package simon.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"    protected String by;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"        super(description);","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"    public String toString() {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"SebasFok":16}},{"path":"src/main/java/simon/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package simon.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"    protected String from;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"    protected String to;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"        super(description);","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"    public String toString() {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"SebasFok":18}},{"path":"src/main/java/simon/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package simon.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"public class Task {","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"    protected String description;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"    private static int numberOfTask \u003d 0;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"        numberOfTask++;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"        return description;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"        return isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"    public static int getNumberOfTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"        return numberOfTask;","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"    public String toString() {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + getDescription();","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"SebasFok":36}},{"path":"src/main/java/simon/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package simon.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"        super(description);","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"    public String toString() {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"SebasFok":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"java -classpath ..\\bin simon.Simon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SebasFok":1,"-":20}}]
