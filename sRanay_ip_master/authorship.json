[{"path":"src/main/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"package Command;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"sRanay"},"content":"import Parser.Parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"sRanay"},"content":"import Storage.Storage;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"sRanay"},"content":"import TaskList.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"sRanay"},"content":"import Ui.Ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"public class Command extends Parser {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"sRanay"},"content":"    private boolean isExit;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"sRanay"},"content":"    public Command() {","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"sRanay"},"content":"        super();","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"sRanay"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"sRanay"},"content":"    public String getCommand() {","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"sRanay"},"content":"        return command;","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"sRanay"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"sRanay"},"content":"        return isExit;","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"sRanay"},"content":"    public void setCommand(String command) {","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"sRanay"},"content":"        super.command \u003d command;","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"sRanay"},"content":"     * Executes the commands and prints out the output.","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"sRanay"},"content":"     * @param storage Storage object to store the data of the task list. ","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"sRanay"},"content":"     * @param ui Ui object to print UI messages to the console.","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"sRanay"},"content":"     * @param taskList TaskList object where task list operation happens.","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"sRanay"},"content":"    public void execute(Storage storage, Ui ui, TaskList taskList) {","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"sRanay"},"content":"        ui.printLineDivider();","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"sRanay"},"content":"        switch (command) {","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"sRanay"},"content":"        case \"list\":","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"sRanay"},"content":"            ui.printList(taskList);","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"sRanay"},"content":"            break;","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"sRanay"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"sRanay"},"content":"            isExit \u003d true;","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"sRanay"},"content":"            return;","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"sRanay"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"sRanay"},"content":"            try {","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"sRanay"},"content":"                setToDoArguments();","lastModifiedDate":"2023-09-23"},{"lineNumber":49,"author":{"gitId":"sRanay"},"content":"                ui.printTask(taskList.addToDoToList(getDescription()), false);","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"sRanay"},"content":"            } catch (IllegalArgumentException exception) {","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"sRanay"},"content":"                ui.printToDoUsage();","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"sRanay"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"sRanay"},"content":"            break;","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"sRanay"},"content":"        case \"event\":","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"sRanay"},"content":"            try {","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"sRanay"},"content":"                setEventArguments();","lastModifiedDate":"2023-09-23"},{"lineNumber":57,"author":{"gitId":"sRanay"},"content":"                ui.printTask(taskList.addEventToList(getDescription(), getFrom(), getTo()), false);","lastModifiedDate":"2023-09-23"},{"lineNumber":58,"author":{"gitId":"sRanay"},"content":"                ui.printListLength(taskList);","lastModifiedDate":"2023-09-24"},{"lineNumber":59,"author":{"gitId":"sRanay"},"content":"            } catch(IllegalArgumentException exception) {","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"sRanay"},"content":"                ui.printEventUsage();","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"sRanay"},"content":"            } catch(ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"sRanay"},"content":"                ui.printEventUsage();","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"sRanay"},"content":"            } catch(DateTimeParseException exception) {","lastModifiedDate":"2023-09-23"},{"lineNumber":64,"author":{"gitId":"sRanay"},"content":"                ui.printEventUsage();","lastModifiedDate":"2023-09-23"},{"lineNumber":65,"author":{"gitId":"sRanay"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"sRanay"},"content":"            break;","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"sRanay"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"sRanay"},"content":"            try {","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"sRanay"},"content":"                setDeadlineArguments();","lastModifiedDate":"2023-09-23"},{"lineNumber":70,"author":{"gitId":"sRanay"},"content":"                ui.printTask(taskList.addDeadlineToList(getDescription(), getBy()), false);","lastModifiedDate":"2023-09-23"},{"lineNumber":71,"author":{"gitId":"sRanay"},"content":"                ui.printListLength(taskList);","lastModifiedDate":"2023-09-24"},{"lineNumber":72,"author":{"gitId":"sRanay"},"content":"            } catch(IllegalArgumentException exception) {","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"sRanay"},"content":"                ui.printDeadlineUsage();","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"sRanay"},"content":"            } catch(ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"sRanay"},"content":"                ui.printDeadlineUsage();","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"sRanay"},"content":"            } catch(DateTimeParseException exception) {","lastModifiedDate":"2023-09-23"},{"lineNumber":77,"author":{"gitId":"sRanay"},"content":"                ui.printDeadlineUsage();","lastModifiedDate":"2023-09-23"},{"lineNumber":78,"author":{"gitId":"sRanay"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"sRanay"},"content":"            break;","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"sRanay"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"sRanay"},"content":"            try {","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"sRanay"},"content":"                ui.printMarked(taskList.markList(getIndex(), false));","lastModifiedDate":"2023-09-24"},{"lineNumber":83,"author":{"gitId":"sRanay"},"content":"            } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"sRanay"},"content":"                ui.printUnmarkUsage();","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"sRanay"},"content":"            } catch (NumberFormatException exception) {","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"sRanay"},"content":"                ui.printUnmarkUsage();","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"sRanay"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"sRanay"},"content":"            break;","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"sRanay"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"sRanay"},"content":"            try {","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"sRanay"},"content":"                ui.printMarked(taskList.markList(getIndex(), true));","lastModifiedDate":"2023-09-24"},{"lineNumber":92,"author":{"gitId":"sRanay"},"content":"            } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"sRanay"},"content":"                ui.printMarkUsage();","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"sRanay"},"content":"            } catch (NumberFormatException exeption) {","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"sRanay"},"content":"                ui.printMarkUsage();","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"sRanay"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"sRanay"},"content":"            break;","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"sRanay"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"sRanay"},"content":"            try {","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"sRanay"},"content":"                ui.printTask(taskList.deleteTaskFromList(getIndex()), true);","lastModifiedDate":"2023-09-24"},{"lineNumber":101,"author":{"gitId":"sRanay"},"content":"                ui.printListLength(taskList);","lastModifiedDate":"2023-09-24"},{"lineNumber":102,"author":{"gitId":"sRanay"},"content":"            } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"sRanay"},"content":"                ui.printDeleteUsage();","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"sRanay"},"content":"            } catch (IllegalArgumentException exception) {","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"sRanay"},"content":"                ui.printDeleteUsage();","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"sRanay"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"sRanay"},"content":"            break;","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"sRanay"},"content":"        case \"find\":","lastModifiedDate":"2023-09-24"},{"lineNumber":109,"author":{"gitId":"sRanay"},"content":"            try {","lastModifiedDate":"2023-09-24"},{"lineNumber":110,"author":{"gitId":"sRanay"},"content":"                setFindArguments();","lastModifiedDate":"2023-09-24"},{"lineNumber":111,"author":{"gitId":"sRanay"},"content":"                ui.printFindList(taskList, getKeyword());","lastModifiedDate":"2023-09-24"},{"lineNumber":112,"author":{"gitId":"sRanay"},"content":"            } catch (IllegalArgumentException exception) {","lastModifiedDate":"2023-09-24"},{"lineNumber":113,"author":{"gitId":"sRanay"},"content":"                ui.printFindUsage();","lastModifiedDate":"2023-09-24"},{"lineNumber":114,"author":{"gitId":"sRanay"},"content":"            }","lastModifiedDate":"2023-09-24"},{"lineNumber":115,"author":{"gitId":"sRanay"},"content":"            break;","lastModifiedDate":"2023-09-24"},{"lineNumber":116,"author":{"gitId":"sRanay"},"content":"        default:","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"sRanay"},"content":"            ui.printInvalidMessage();","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"sRanay"},"content":"        ui.printLineDivider();","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"sRanay"},"content":"        storage.refreshData(taskList);","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"sRanay"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"sRanay":122}},{"path":"src/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"import duke.Bot;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"sRanay"},"content":"        Bot ranayBot \u003d new Bot();","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"sRanay"},"content":"        ranayBot.runBot();","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sRanay":6,"-":2}},{"path":"src/main/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"package Parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"sRanay"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"sRanay"},"content":"public class Parser {","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"sRanay"},"content":"    ","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"sRanay"},"content":"    protected String command;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"    protected String arguments;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"sRanay"},"content":"    protected String description;","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"sRanay"},"content":"    protected String keyword;","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"sRanay"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"sRanay"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"sRanay"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"sRanay"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM uuuu\");","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"sRanay"},"content":"    public Parser() {","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"sRanay"},"content":"        this.command \u003d \"\";","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"sRanay"},"content":"        this.arguments \u003d \"\";","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"sRanay"},"content":"    public String getCommand() {","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"sRanay"},"content":"        return command;","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"sRanay"},"content":"    public String getArguments() {","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"sRanay"},"content":"        return arguments;","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"sRanay"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"sRanay"},"content":"        return description;","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":34,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":35,"author":{"gitId":"sRanay"},"content":"    public String getKeyword() {","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"sRanay"},"content":"        return keyword;","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"sRanay"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2023-09-23"},{"lineNumber":40,"author":{"gitId":"sRanay"},"content":"        return by;","lastModifiedDate":"2023-09-23"},{"lineNumber":41,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":42,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":43,"author":{"gitId":"sRanay"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2023-09-23"},{"lineNumber":44,"author":{"gitId":"sRanay"},"content":"        return from;","lastModifiedDate":"2023-09-23"},{"lineNumber":45,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":47,"author":{"gitId":"sRanay"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2023-09-23"},{"lineNumber":48,"author":{"gitId":"sRanay"},"content":"        return to;","lastModifiedDate":"2023-09-23"},{"lineNumber":49,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":51,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":52,"author":{"gitId":"sRanay"},"content":"     * Converts user input and stores it as a command and an arguments respectively. ","lastModifiedDate":"2023-09-24"},{"lineNumber":53,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":54,"author":{"gitId":"sRanay"},"content":"     * @param userInput The user input that is taken from the user.","lastModifiedDate":"2023-09-24"},{"lineNumber":55,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":56,"author":{"gitId":"sRanay"},"content":"    public void convertInput(String userInput) {","lastModifiedDate":"2023-09-24"},{"lineNumber":57,"author":{"gitId":"sRanay"},"content":"        this.arguments \u003d \"\";","lastModifiedDate":"2023-09-24"},{"lineNumber":58,"author":{"gitId":"sRanay"},"content":"        this.command \u003d userInput.split(\" \", 2)[0];","lastModifiedDate":"2023-09-24"},{"lineNumber":59,"author":{"gitId":"sRanay"},"content":"        if(userInput.split(\" \", 2).length !\u003d 1) {","lastModifiedDate":"2023-09-24"},{"lineNumber":60,"author":{"gitId":"sRanay"},"content":"            this.arguments \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2023-09-24"},{"lineNumber":61,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":62,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":63,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":64,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":65,"author":{"gitId":"sRanay"},"content":"     * Checks if the from variable is a blank string and throws a IllegalArgumentException if it is blank.","lastModifiedDate":"2023-09-24"},{"lineNumber":66,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":67,"author":{"gitId":"sRanay"},"content":"     * @param from The from variable to be stored in the object.","lastModifiedDate":"2023-09-24"},{"lineNumber":68,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":69,"author":{"gitId":"sRanay"},"content":"    public void checkFrom(String from) {","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"sRanay"},"content":"        if(from.isBlank()) {","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"sRanay"},"content":"            throw new IllegalArgumentException(\"From Blank\");","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":76,"author":{"gitId":"sRanay"},"content":"     * Checks if the description variable is a blank string and throws a IllegalArgumentException if it is blank.","lastModifiedDate":"2023-09-24"},{"lineNumber":77,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":78,"author":{"gitId":"sRanay"},"content":"     * @param description The description variable to be stored in the object.","lastModifiedDate":"2023-09-24"},{"lineNumber":79,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":80,"author":{"gitId":"sRanay"},"content":"    public void checkDescription(String description) {","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"sRanay"},"content":"        if(description.isBlank()) {","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"sRanay"},"content":"            throw new IllegalArgumentException(\"Description Blank\");","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":87,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":88,"author":{"gitId":"sRanay"},"content":"     * Checks if the description variable is a blank string and throws a IllegalArgumentException if it is blank.","lastModifiedDate":"2023-09-24"},{"lineNumber":89,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":90,"author":{"gitId":"sRanay"},"content":"     * @param to The to variable to be stored in the object.","lastModifiedDate":"2023-09-24"},{"lineNumber":91,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":92,"author":{"gitId":"sRanay"},"content":"    public void checkTo(String to) {","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"sRanay"},"content":"        if(to.isBlank()) {","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"sRanay"},"content":"            throw new IllegalArgumentException(\"To Blank\");","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":99,"author":{"gitId":"sRanay"},"content":"     * Calls the function to check whether description, from and to variables is blank.","lastModifiedDate":"2023-09-24"},{"lineNumber":100,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":101,"author":{"gitId":"sRanay"},"content":"     * @param description The description variable to be stored in the object.","lastModifiedDate":"2023-09-24"},{"lineNumber":102,"author":{"gitId":"sRanay"},"content":"     * @param from The from variable to be stored in the object.","lastModifiedDate":"2023-09-24"},{"lineNumber":103,"author":{"gitId":"sRanay"},"content":"     * @param to The to variable to be stored in the object.","lastModifiedDate":"2023-09-24"},{"lineNumber":104,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":105,"author":{"gitId":"sRanay"},"content":"    public void checkEventArgs(String description, String from, String to) {","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"sRanay"},"content":"        checkDescription(description);","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"sRanay"},"content":"        checkFrom(from);","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"sRanay"},"content":"        checkTo(to);","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":112,"author":{"gitId":"sRanay"},"content":"     * Checks if the by variable is a blank string and throws a IllegalArgumentException if it is blank.","lastModifiedDate":"2023-09-24"},{"lineNumber":113,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":114,"author":{"gitId":"sRanay"},"content":"     * @param by The by variable to be stored in the object.","lastModifiedDate":"2023-09-24"},{"lineNumber":115,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":116,"author":{"gitId":"sRanay"},"content":"    public void checkBy(String by) {","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"sRanay"},"content":"        if(by.isBlank()) {","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"sRanay"},"content":"            throw new IllegalArgumentException(\"By Blank\");","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":123,"author":{"gitId":"sRanay"},"content":"     * Calls the function to check whether description and by variables is blank.","lastModifiedDate":"2023-09-24"},{"lineNumber":124,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":125,"author":{"gitId":"sRanay"},"content":"     * @param description The description variable to be stored in the object.","lastModifiedDate":"2023-09-24"},{"lineNumber":126,"author":{"gitId":"sRanay"},"content":"     * @param by The by variable to be stored in the object.","lastModifiedDate":"2023-09-24"},{"lineNumber":127,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":128,"author":{"gitId":"sRanay"},"content":"    public void checkDeadlineArgs(String description, String by) {","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"sRanay"},"content":"        checkDescription(description);","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"sRanay"},"content":"        checkBy(by);","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":134,"author":{"gitId":"sRanay"},"content":"     * Converts from and to variables into LocalDate type.","lastModifiedDate":"2023-09-24"},{"lineNumber":135,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":136,"author":{"gitId":"sRanay"},"content":"     * @param from From date in string format.","lastModifiedDate":"2023-09-24"},{"lineNumber":137,"author":{"gitId":"sRanay"},"content":"     * @param to To date in string format.","lastModifiedDate":"2023-09-24"},{"lineNumber":138,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":139,"author":{"gitId":"sRanay"},"content":"    public void checkEventDate(String from, String to) {","lastModifiedDate":"2023-09-23"},{"lineNumber":140,"author":{"gitId":"sRanay"},"content":"        this.from \u003d LocalDate.parse(from, FORMATTER);","lastModifiedDate":"2023-09-23"},{"lineNumber":141,"author":{"gitId":"sRanay"},"content":"        this.to \u003d LocalDate.parse(to, FORMATTER);","lastModifiedDate":"2023-09-23"},{"lineNumber":142,"author":{"gitId":"sRanay"},"content":"        if(this.to.isBefore(this.from)) {","lastModifiedDate":"2023-09-23"},{"lineNumber":143,"author":{"gitId":"sRanay"},"content":"            throw new DateTimeParseException(\"To before from\", to, 0);","lastModifiedDate":"2023-09-23"},{"lineNumber":144,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-23"},{"lineNumber":145,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":146,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":147,"author":{"gitId":"sRanay"},"content":"    public void checkDeadlineDate(String by) {","lastModifiedDate":"2023-09-23"},{"lineNumber":148,"author":{"gitId":"sRanay"},"content":"        this.by \u003d LocalDate.parse(by, FORMATTER);","lastModifiedDate":"2023-09-23"},{"lineNumber":149,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":150,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":151,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":152,"author":{"gitId":"sRanay"},"content":"     * Sets the arguments to be used for creating an Event object.","lastModifiedDate":"2023-09-24"},{"lineNumber":153,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":154,"author":{"gitId":"sRanay"},"content":"     * @throws ArrayIndexOutOfBoundsException If arguments does not contains the proper format.","lastModifiedDate":"2023-09-24"},{"lineNumber":155,"author":{"gitId":"sRanay"},"content":"     * @throws IllegalArgumentException If description, from, to is blank string.","lastModifiedDate":"2023-09-24"},{"lineNumber":156,"author":{"gitId":"sRanay"},"content":"     * @throws DateTimeParseException If from and to cannot be converted to LocalDate type or to is before from.","lastModifiedDate":"2023-09-24"},{"lineNumber":157,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":158,"author":{"gitId":"sRanay"},"content":"    public void setEventArguments() throws ArrayIndexOutOfBoundsException, IllegalArgumentException, DateTimeParseException {","lastModifiedDate":"2023-09-23"},{"lineNumber":159,"author":{"gitId":"sRanay"},"content":"        checkDescription(arguments);","lastModifiedDate":"2023-09-22"},{"lineNumber":160,"author":{"gitId":"sRanay"},"content":"        String[] argumentsList \u003d arguments.split(\"/from\");","lastModifiedDate":"2023-09-22"},{"lineNumber":161,"author":{"gitId":"sRanay"},"content":"        this.description \u003d argumentsList[0].trim().replace(\",\", \"\");","lastModifiedDate":"2023-09-23"},{"lineNumber":162,"author":{"gitId":"sRanay"},"content":"        argumentsList \u003d argumentsList[1].split(\"/to\");","lastModifiedDate":"2023-09-22"},{"lineNumber":163,"author":{"gitId":"sRanay"},"content":"        String from \u003d argumentsList[0].trim().replace(\",\", \"\");","lastModifiedDate":"2023-09-22"},{"lineNumber":164,"author":{"gitId":"sRanay"},"content":"        String to \u003d argumentsList[1].trim().replace(\",\", \"\");","lastModifiedDate":"2023-09-22"},{"lineNumber":165,"author":{"gitId":"sRanay"},"content":"        checkEventArgs(description, from, to);","lastModifiedDate":"2023-09-22"},{"lineNumber":166,"author":{"gitId":"sRanay"},"content":"        checkEventDate(from, to);","lastModifiedDate":"2023-09-23"},{"lineNumber":167,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":168,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":169,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":170,"author":{"gitId":"sRanay"},"content":"     * Sets the arguments to be used for creating a Deadline object.","lastModifiedDate":"2023-09-24"},{"lineNumber":171,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":172,"author":{"gitId":"sRanay"},"content":"     * @throws ArrayIndexOutOfBoundsException If arguments does not contain the proper format.","lastModifiedDate":"2023-09-24"},{"lineNumber":173,"author":{"gitId":"sRanay"},"content":"     * @throws IllegalArgumentException If description and by is blank string.","lastModifiedDate":"2023-09-24"},{"lineNumber":174,"author":{"gitId":"sRanay"},"content":"     * @throws DateTimeParseException If by cannot be converted to LocalDate type.","lastModifiedDate":"2023-09-24"},{"lineNumber":175,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":176,"author":{"gitId":"sRanay"},"content":"    public void setDeadlineArguments() throws ArrayIndexOutOfBoundsException, IllegalArgumentException, DateTimeParseException {","lastModifiedDate":"2023-09-23"},{"lineNumber":177,"author":{"gitId":"sRanay"},"content":"        checkDescription(arguments);","lastModifiedDate":"2023-09-22"},{"lineNumber":178,"author":{"gitId":"sRanay"},"content":"        String[] argumentsList \u003d arguments.split(\"/by\");","lastModifiedDate":"2023-09-22"},{"lineNumber":179,"author":{"gitId":"sRanay"},"content":"        this.description \u003d argumentsList[0].trim().replace(\",\", \"\");","lastModifiedDate":"2023-09-23"},{"lineNumber":180,"author":{"gitId":"sRanay"},"content":"        String by \u003d argumentsList[1].trim().replace(\",\", \"\");","lastModifiedDate":"2023-09-22"},{"lineNumber":181,"author":{"gitId":"sRanay"},"content":"        checkDeadlineArgs(description, by);","lastModifiedDate":"2023-09-22"},{"lineNumber":182,"author":{"gitId":"sRanay"},"content":"        checkDeadlineDate(by);","lastModifiedDate":"2023-09-23"},{"lineNumber":183,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":184,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":185,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":186,"author":{"gitId":"sRanay"},"content":"     * Sets the arguments to be used for creating a ToDo object.","lastModifiedDate":"2023-09-24"},{"lineNumber":187,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":188,"author":{"gitId":"sRanay"},"content":"     * @throws IllegalArgumentException If arguments is blank.","lastModifiedDate":"2023-09-24"},{"lineNumber":189,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":190,"author":{"gitId":"sRanay"},"content":"    public void setToDoArguments() throws IllegalArgumentException {","lastModifiedDate":"2023-09-23"},{"lineNumber":191,"author":{"gitId":"sRanay"},"content":"        checkDescription(arguments);","lastModifiedDate":"2023-09-22"},{"lineNumber":192,"author":{"gitId":"sRanay"},"content":"        this.description \u003d arguments.replace(\",\", \"\");","lastModifiedDate":"2023-09-23"},{"lineNumber":193,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":194,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":195,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":196,"author":{"gitId":"sRanay"},"content":"     * Gets the index of the task in the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":197,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":198,"author":{"gitId":"sRanay"},"content":"     * @return Index of the object.","lastModifiedDate":"2023-09-24"},{"lineNumber":199,"author":{"gitId":"sRanay"},"content":"     * @throws NumberFormatException If arguments cannot be converted into an Integer type.","lastModifiedDate":"2023-09-24"},{"lineNumber":200,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":201,"author":{"gitId":"sRanay"},"content":"    public int getIndex() throws NumberFormatException {","lastModifiedDate":"2023-09-24"},{"lineNumber":202,"author":{"gitId":"sRanay"},"content":"        int index \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-09-22"},{"lineNumber":203,"author":{"gitId":"sRanay"},"content":"        return index;","lastModifiedDate":"2023-09-22"},{"lineNumber":204,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":205,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":206,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":207,"author":{"gitId":"sRanay"},"content":"     * Checks if the keyword variable is blank or empty and throws an IllegalArgumentException error if it is not.","lastModifiedDate":"2023-09-24"},{"lineNumber":208,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":209,"author":{"gitId":"sRanay"},"content":"     * @param keyword Keyword to be searched in the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":210,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":211,"author":{"gitId":"sRanay"},"content":"    public void checkKeyword(String keyword) {","lastModifiedDate":"2023-09-24"},{"lineNumber":212,"author":{"gitId":"sRanay"},"content":"        if(keyword.isBlank() || keyword.isEmpty()) {","lastModifiedDate":"2023-09-24"},{"lineNumber":213,"author":{"gitId":"sRanay"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2023-09-24"},{"lineNumber":214,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":215,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":216,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":217,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":218,"author":{"gitId":"sRanay"},"content":"     * Sets the arguments to be used for the find command.","lastModifiedDate":"2023-09-24"},{"lineNumber":219,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":220,"author":{"gitId":"sRanay"},"content":"     * @throws IllegalArgumentException If arguments is blank or empty.","lastModifiedDate":"2023-09-24"},{"lineNumber":221,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":222,"author":{"gitId":"sRanay"},"content":"    public void setFindArguments() throws IllegalArgumentException {","lastModifiedDate":"2023-09-24"},{"lineNumber":223,"author":{"gitId":"sRanay"},"content":"        checkKeyword(arguments);","lastModifiedDate":"2023-09-24"},{"lineNumber":224,"author":{"gitId":"sRanay"},"content":"        this.keyword \u003d arguments;","lastModifiedDate":"2023-09-24"},{"lineNumber":225,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":226,"author":{"gitId":"sRanay"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"sRanay":226}},{"path":"src/main/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"package Storage;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"import java.io.File;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"sRanay"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"sRanay"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"sRanay"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"sRanay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"sRanay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"sRanay"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"sRanay"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"sRanay"},"content":"import Task.Deadline;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"sRanay"},"content":"import Task.Event;","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"sRanay"},"content":"import Task.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"sRanay"},"content":"import Task.ToDo;","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"sRanay"},"content":"import TaskList.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"sRanay"},"content":"public class Storage {","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"sRanay"},"content":"    ","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"sRanay"},"content":"    private static final String FILE_IO_ERROR \u003d \"error with file\";","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"sRanay"},"content":"    private static final String FILE_PATH \u003d \"data\\\\\";","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"sRanay"},"content":"    private static final String FILE_NAME \u003d \"data.txt\";","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"sRanay"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM uuuu\");","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"sRanay"},"content":"    private File file;","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"sRanay"},"content":"    public Storage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"sRanay"},"content":"        this.file \u003d new File(FILE_PATH + FILE_NAME);    ","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"sRanay"},"content":"     * Writes data to file.","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"sRanay"},"content":"     * @param data Data to be written into the file.","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"sRanay"},"content":"    public void writeToFile(String data) {","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"sRanay"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"sRanay"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH + FILE_NAME, true);","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"sRanay"},"content":"            fw.write(data + \"\\n\");","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"sRanay"},"content":"            fw.close();","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"sRanay"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"sRanay"},"content":"            System.out.println(FILE_IO_ERROR);","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"sRanay"},"content":"     * Refreshes the data taken from taskList and updates and write to file.","lastModifiedDate":"2023-09-24"},{"lineNumber":49,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":50,"author":{"gitId":"sRanay"},"content":"     * @param taskList TaskList object that contains the updated task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":51,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":52,"author":{"gitId":"sRanay"},"content":"    public void refreshData(TaskList taskList) {","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"sRanay"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"sRanay"},"content":"            PrintWriter writer \u003d new PrintWriter(FILE_PATH +FILE_NAME);","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"sRanay"},"content":"            writer.close();","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"sRanay"},"content":"        } catch (FileNotFoundException exception) {","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"sRanay"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"sRanay"},"content":"        Iterator\u003cTask\u003e taskListIter \u003d taskList.getTaskList().iterator();","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"sRanay"},"content":"        while(taskListIter.hasNext()) {","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"sRanay"},"content":"            Task task \u003d taskListIter.next();","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"sRanay"},"content":"            if(task instanceof ToDo) {","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"sRanay"},"content":"                ToDo todo \u003d (ToDo)task;","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"sRanay"},"content":"                writeToFile(todo.toFile());","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"sRanay"},"content":"            } else if(task instanceof Deadline) {","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"sRanay"},"content":"                Deadline deadline \u003d (Deadline)task;","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"sRanay"},"content":"                writeToFile(deadline.toFile());","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"sRanay"},"content":"            } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"sRanay"},"content":"                Event event \u003d (Event)task;","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"sRanay"},"content":"                writeToFile(event.toFile());","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"sRanay"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":76,"author":{"gitId":"sRanay"},"content":"     * Converts data from file and stores into the TaskList object.","lastModifiedDate":"2023-09-24"},{"lineNumber":77,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":78,"author":{"gitId":"sRanay"},"content":"     * @param task Task to be stored into the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":79,"author":{"gitId":"sRanay"},"content":"     * @param isCompleted Used to check whether task is completed or not completed.","lastModifiedDate":"2023-09-24"},{"lineNumber":80,"author":{"gitId":"sRanay"},"content":"     * @param taskList TaskList object that the task is going to be stored in.","lastModifiedDate":"2023-09-24"},{"lineNumber":81,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":82,"author":{"gitId":"sRanay"},"content":"    public void dataToList(Task task, String isCompleted, TaskList taskList) {","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"sRanay"},"content":"        if(isCompleted.equals(\"1\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"sRanay"},"content":"            task.setCompleted(true);","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"sRanay"},"content":"        } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"sRanay"},"content":"            task.setCompleted(false);","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"sRanay"},"content":"        taskList.getTaskList().add(task);","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":92,"author":{"gitId":"sRanay"},"content":"     * Gets the file data and parses it into dataToList function.","lastModifiedDate":"2023-09-24"},{"lineNumber":93,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":94,"author":{"gitId":"sRanay"},"content":"     * @param taskList TaskList object that the task is going to be stored in.","lastModifiedDate":"2023-09-24"},{"lineNumber":95,"author":{"gitId":"sRanay"},"content":"     * @throws IOException If the file cannot be found.","lastModifiedDate":"2023-09-24"},{"lineNumber":96,"author":{"gitId":"sRanay"},"content":"     * @throws DateTimeParseException If data in file is not in the correct format.","lastModifiedDate":"2023-09-24"},{"lineNumber":97,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":98,"author":{"gitId":"sRanay"},"content":"    public void getFileData(TaskList taskList) throws IOException, DateTimeParseException {","lastModifiedDate":"2023-09-23"},{"lineNumber":99,"author":{"gitId":"sRanay"},"content":"        try{","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"sRanay"},"content":"            Scanner reader \u003d new Scanner(file);","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"sRanay"},"content":"            while(reader.hasNextLine()) {","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"sRanay"},"content":"                String[] dataSplit \u003d (reader.nextLine()).split(\",\");","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"sRanay"},"content":"                String isCompleted \u003d dataSplit[1];","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"sRanay"},"content":"                if(dataSplit[0].equals(\"T\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"sRanay"},"content":"                    ToDo todoTask \u003d new ToDo(dataSplit[2]);","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"sRanay"},"content":"                    dataToList(todoTask, isCompleted, taskList);","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"sRanay"},"content":"                } else if(dataSplit[0].equals(\"D\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"sRanay"},"content":"                    Deadline deadlineTask \u003d new Deadline(dataSplit[2], LocalDate.parse(dataSplit[3], FORMATTER));","lastModifiedDate":"2023-09-23"},{"lineNumber":109,"author":{"gitId":"sRanay"},"content":"                    dataToList(deadlineTask, isCompleted, taskList);","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"sRanay"},"content":"                } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"sRanay"},"content":"                    LocalDate from \u003d LocalDate.parse(dataSplit[3], FORMATTER);","lastModifiedDate":"2023-09-23"},{"lineNumber":112,"author":{"gitId":"sRanay"},"content":"                    LocalDate to \u003d LocalDate.parse(dataSplit[4], FORMATTER);","lastModifiedDate":"2023-09-23"},{"lineNumber":113,"author":{"gitId":"sRanay"},"content":"                    if(from.isAfter(to)) {","lastModifiedDate":"2023-09-23"},{"lineNumber":114,"author":{"gitId":"sRanay"},"content":"                        throw new IOException(\"Error\");","lastModifiedDate":"2023-09-23"},{"lineNumber":115,"author":{"gitId":"sRanay"},"content":"                    }","lastModifiedDate":"2023-09-23"},{"lineNumber":116,"author":{"gitId":"sRanay"},"content":"                    Event eventTask \u003d new Event(dataSplit[2], from, to);","lastModifiedDate":"2023-09-23"},{"lineNumber":117,"author":{"gitId":"sRanay"},"content":"                    dataToList(eventTask, isCompleted, taskList);","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"sRanay"},"content":"                }","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"sRanay"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"sRanay"},"content":"            reader.close();","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"sRanay"},"content":"        } catch (FileNotFoundException exception) {","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"sRanay"},"content":"            System.out.println(FILE_IO_ERROR);","lastModifiedDate":"2023-09-24"},{"lineNumber":123,"author":{"gitId":"sRanay"},"content":"        } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"sRanay"},"content":"            System.out.println(FILE_IO_ERROR);","lastModifiedDate":"2023-09-24"},{"lineNumber":125,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":129,"author":{"gitId":"sRanay"},"content":"     * Get the file and store into TaskList object.","lastModifiedDate":"2023-09-24"},{"lineNumber":130,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":131,"author":{"gitId":"sRanay"},"content":"     * @param taskList TaskList object that the task is going to be stored in.","lastModifiedDate":"2023-09-24"},{"lineNumber":132,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":133,"author":{"gitId":"sRanay"},"content":"    public void importToArrayList(TaskList taskList) {","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"sRanay"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"sRanay"},"content":"            File directory \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"sRanay"},"content":"            directory.mkdir();","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"sRanay"},"content":"            if(file.exists()) {","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"sRanay"},"content":"                getFileData(taskList);","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"sRanay"},"content":"            } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"sRanay"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"sRanay"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":142,"author":{"gitId":"sRanay"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"sRanay"},"content":"            System.out.println(FILE_IO_ERROR);","lastModifiedDate":"2023-09-24"},{"lineNumber":144,"author":{"gitId":"sRanay"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2023-09-23"},{"lineNumber":145,"author":{"gitId":"sRanay"},"content":"            System.out.println(FILE_IO_ERROR);","lastModifiedDate":"2023-09-24"},{"lineNumber":146,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"sRanay"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"sRanay":148}},{"path":"src/main/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"package Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"sRanay"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"sRanay"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"sRanay"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"sRanay"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"sRanay"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"sRanay"},"content":"        return by.format(formatter);","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"sRanay"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"sRanay"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"sRanay"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"sRanay"},"content":"     * Converts the object into a string format to be stored in the file.","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"sRanay"},"content":"     * @return Formatted string to be stored in the file.","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"sRanay"},"content":"    public String toFile() {","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"sRanay"},"content":"        return \"D,\" + (isCompleted() ? \"1\" : \"0\") + \",\" + getName() + \",\" + getBy();","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"sRanay"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"sRanay":30}},{"path":"src/main/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"package Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"sRanay"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"sRanay"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"sRanay"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"sRanay"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"sRanay"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"sRanay"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"sRanay"},"content":"    ","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"sRanay"},"content":"    public String getFrom() {","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"sRanay"},"content":"        return from.format(formatter);","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"sRanay"},"content":"    public String getTo() {","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"sRanay"},"content":"        return to.format(formatter);","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"sRanay"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"sRanay"},"content":"    public String toString() {","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"sRanay"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getFrom() + \" to: \" + getTo() +  \")\";","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"sRanay"},"content":"     * Converts the object into a string format to be stored in the file.","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"sRanay"},"content":"     * @return Formatted string to be stored in the file.","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"sRanay"},"content":"    public String toFile() {","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"sRanay"},"content":"        return \"E,\" + (isCompleted() ? \"1\" : \"0\") + \",\" + getName() + \",\" + getFrom()  + \",\" + getTo();","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"sRanay"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"sRanay":36}},{"path":"src/main/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"package Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"sRanay"},"content":"public class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"sRanay"},"content":"    ","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"sRanay"},"content":"    private String name;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"sRanay"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"sRanay"},"content":"    protected DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM uuuu\");","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"sRanay"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"sRanay"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"sRanay"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"sRanay"},"content":"    public String getName() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"sRanay"},"content":"        return name;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"sRanay"},"content":"    public void setName(String name) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"sRanay"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"sRanay"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"sRanay"},"content":"        return isCompleted;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"sRanay"},"content":"    public void setCompleted(boolean isCompleted) {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"sRanay"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"sRanay"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"sRanay"},"content":"        return \"[\" + (isCompleted ? \"X\" : \" \") + \"] \" + name;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"sRanay"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"sRanay":32}},{"path":"src/main/Task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"package Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"sRanay"},"content":"    public ToDo (String description) {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"sRanay"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"sRanay"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"sRanay"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"sRanay"},"content":"     * Converts the object into a string format to be stored in the file.","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"sRanay"},"content":"     * @return Formatted string to be stored in the file.","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"sRanay"},"content":"    public String toFile() {","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"sRanay"},"content":"        return \"T,\" + (isCompleted() ? \"1\" : \"0\") + \",\" + getName();","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"sRanay"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"sRanay":22}},{"path":"src/main/TaskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"package TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"sRanay"},"content":"import Task.Deadline;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"sRanay"},"content":"import Task.Event;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"sRanay"},"content":"import Task.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"sRanay"},"content":"import Task.ToDo;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"sRanay"},"content":"public class TaskList {","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"sRanay"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"sRanay"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"sRanay"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"sRanay"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"sRanay"},"content":"        return taskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"sRanay"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"sRanay"},"content":"     * @return Size of ArrayList.","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"sRanay"},"content":"    public int getLength() {","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"sRanay"},"content":"        return taskList.size();","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"sRanay"},"content":"     * Marks the task as completed or incompleted in the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"sRanay"},"content":"     * @param index Index of the task in the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"sRanay"},"content":"     * @param status True if mark as completed or False if mark as uncompleted.","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"sRanay"},"content":"     * @return Task that is marked or unmarked.","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"sRanay"},"content":"     * @throws IndexOutOfBoundsException If index is out of the size of the ArrayList.","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"sRanay"},"content":"    public Task markList(int index, boolean status) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"sRanay"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"sRanay"},"content":"        task.setCompleted(status);","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"sRanay"},"content":"        taskList.set(index, task);","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"sRanay"},"content":"        return task;","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":47,"author":{"gitId":"sRanay"},"content":"     * Creates a Deadline object and stores into the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":49,"author":{"gitId":"sRanay"},"content":"     * @param description The description variable of the Deadline object.","lastModifiedDate":"2023-09-24"},{"lineNumber":50,"author":{"gitId":"sRanay"},"content":"     * @param by The by variable of the Deadline object.","lastModifiedDate":"2023-09-24"},{"lineNumber":51,"author":{"gitId":"sRanay"},"content":"     * @return Deadline object that was created.","lastModifiedDate":"2023-09-24"},{"lineNumber":52,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":53,"author":{"gitId":"sRanay"},"content":"    public Deadline addDeadlineToList(String description, LocalDate by) {","lastModifiedDate":"2023-09-23"},{"lineNumber":54,"author":{"gitId":"sRanay"},"content":"            Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-23"},{"lineNumber":55,"author":{"gitId":"sRanay"},"content":"            taskList.add(deadline);","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"sRanay"},"content":"            return deadline;","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":60,"author":{"gitId":"sRanay"},"content":"     * Creates a Event object and stores into the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":61,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":62,"author":{"gitId":"sRanay"},"content":"     * @param description The description variable of the Event object.","lastModifiedDate":"2023-09-24"},{"lineNumber":63,"author":{"gitId":"sRanay"},"content":"     * @param from The from variable of the Event object.","lastModifiedDate":"2023-09-24"},{"lineNumber":64,"author":{"gitId":"sRanay"},"content":"     * @param to The to variable of the Event object.","lastModifiedDate":"2023-09-24"},{"lineNumber":65,"author":{"gitId":"sRanay"},"content":"     * @return Event object that was created.","lastModifiedDate":"2023-09-24"},{"lineNumber":66,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":67,"author":{"gitId":"sRanay"},"content":"    public Event addEventToList(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-09-23"},{"lineNumber":68,"author":{"gitId":"sRanay"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-23"},{"lineNumber":69,"author":{"gitId":"sRanay"},"content":"        taskList.add(event);","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"sRanay"},"content":"        return event;","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":74,"author":{"gitId":"sRanay"},"content":"     * Creates a ToDo object and stores into the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":75,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":76,"author":{"gitId":"sRanay"},"content":"     * @param description The description variable of the ToDo object.","lastModifiedDate":"2023-09-24"},{"lineNumber":77,"author":{"gitId":"sRanay"},"content":"     * @return ToDo object that was created.","lastModifiedDate":"2023-09-24"},{"lineNumber":78,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":79,"author":{"gitId":"sRanay"},"content":"    public ToDo addToDoToList(String description) {","lastModifiedDate":"2023-09-23"},{"lineNumber":80,"author":{"gitId":"sRanay"},"content":"        ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2023-09-23"},{"lineNumber":81,"author":{"gitId":"sRanay"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"sRanay"},"content":"        return todo;","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"sRanay"},"content":"    ","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":86,"author":{"gitId":"sRanay"},"content":"     * Deletes the Task from the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":87,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":88,"author":{"gitId":"sRanay"},"content":"     * @param index Index of the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":89,"author":{"gitId":"sRanay"},"content":"     * @return The object that was Deleted.","lastModifiedDate":"2023-09-24"},{"lineNumber":90,"author":{"gitId":"sRanay"},"content":"     * @throws IndexOutOfBoundsException","lastModifiedDate":"2023-09-24"},{"lineNumber":91,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":92,"author":{"gitId":"sRanay"},"content":"    public Task deleteTaskFromList(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-09-24"},{"lineNumber":93,"author":{"gitId":"sRanay"},"content":"        Task deletedTask \u003d taskList.get(index);","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"sRanay"},"content":"        taskList.remove(index);","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"sRanay"},"content":"        return deletedTask;","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"sRanay"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"sRanay":97}},{"path":"src/main/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"package Ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"sRanay"},"content":"import Task.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"sRanay"},"content":"import TaskList.TaskList;","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"sRanay"},"content":"public class Ui {","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"sRanay"},"content":"    private static final String BOT_NAME \u003d \"JS\";","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"    private static final String LINE_DIVIDER \u003d \"----------------------------------------\";","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"sRanay"},"content":"    private static final String TODO_USAGE_MSG \u003d \"Usage: todo \u003cdescription\u003e\";","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"sRanay"},"content":"    private static final String EVENT_USAGE_MSG \u003d \"Usage: event \u003cdescription\u003e /from \u003cdd mmm yyyy\u003e /to \u003cdd mmm yyyy\u003e\";","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"sRanay"},"content":"    private static final String DEADLINE_USAGE_MSG \u003d \"Usage: deadline \u003cdescription\u003e /by \u003cdd mmm yyyy\u003e\";","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"sRanay"},"content":"    private static final String MARK_LIST_USAGE_MSG \u003d \"Usage: mark \u003cindex\u003e\";","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"sRanay"},"content":"    private static final String UNMARK_LIST_USAGE_MSG \u003d \"Usage: unmark \u003cindex\u003e\";","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"sRanay"},"content":"    private static final String DELETE_TASK_USAGE_MSG \u003d \"Usage: delete \u003cindex\u003e\";","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"sRanay"},"content":"    private static final String FIND_TASK_USAGE_MSG \u003d \"Usage: find \u003ckeyword\u003e\";","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"sRanay"},"content":"    public void printByeMessage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"sRanay"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"sRanay"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"sRanay"},"content":"    public void printBotMessage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"sRanay"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"sRanay"},"content":"        System.out.println(\"Hello! I\u0027m \" + BOT_NAME);","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"sRanay"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"sRanay"},"content":"    public void printLineDivider() {","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"sRanay"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"sRanay"},"content":"    public void printListLength(TaskList taskList) {","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"sRanay"},"content":"        System.out.println(\"Now you have \" + taskList.getTaskList() + \" task in the list\");","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"sRanay"},"content":"     * Prints the all the task in the task list.","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"sRanay"},"content":"     * @param taskList TaskList object to be used.","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"sRanay"},"content":"    public void printList(TaskList taskList) {","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"sRanay"},"content":"        System.out.println(\"Here are the task in your list:\");","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"sRanay"},"content":"        Iterator\u003cTask\u003e taskListIter \u003d taskList.getTaskList().iterator();","lastModifiedDate":"2023-09-24"},{"lineNumber":46,"author":{"gitId":"sRanay"},"content":"        for(int i \u003d 1; taskListIter.hasNext(); i++) {","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"sRanay"},"content":"            Task task \u003d taskListIter.next();","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"sRanay"},"content":"            System.out.println(i + \".\" + task);","lastModifiedDate":"2023-09-24"},{"lineNumber":49,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":53,"author":{"gitId":"sRanay"},"content":"     * Prints the tasks that contains the keyword","lastModifiedDate":"2023-09-24"},{"lineNumber":54,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":55,"author":{"gitId":"sRanay"},"content":"     * @param taskList TaskList object to be searched through.","lastModifiedDate":"2023-09-24"},{"lineNumber":56,"author":{"gitId":"sRanay"},"content":"     * @param find Keyword to be used in the search.","lastModifiedDate":"2023-09-24"},{"lineNumber":57,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":58,"author":{"gitId":"sRanay"},"content":"    public void printFindList(TaskList taskList, String find) {","lastModifiedDate":"2023-09-24"},{"lineNumber":59,"author":{"gitId":"sRanay"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2023-09-24"},{"lineNumber":60,"author":{"gitId":"sRanay"},"content":"        String output \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-24"},{"lineNumber":61,"author":{"gitId":"sRanay"},"content":"        Iterator\u003cTask\u003e taskListIter \u003d taskList.getTaskList().iterator();","lastModifiedDate":"2023-09-24"},{"lineNumber":62,"author":{"gitId":"sRanay"},"content":"        for(int i \u003d 1; taskListIter.hasNext();) {","lastModifiedDate":"2023-09-24"},{"lineNumber":63,"author":{"gitId":"sRanay"},"content":"            Task task \u003d taskListIter.next();","lastModifiedDate":"2023-09-24"},{"lineNumber":64,"author":{"gitId":"sRanay"},"content":"            if(task.getName().contains(find)) {","lastModifiedDate":"2023-09-24"},{"lineNumber":65,"author":{"gitId":"sRanay"},"content":"                output +\u003d i + \".\" + task + \"\\n\";","lastModifiedDate":"2023-09-24"},{"lineNumber":66,"author":{"gitId":"sRanay"},"content":"                isFound \u003d true;","lastModifiedDate":"2023-09-24"},{"lineNumber":67,"author":{"gitId":"sRanay"},"content":"                i++;","lastModifiedDate":"2023-09-24"},{"lineNumber":68,"author":{"gitId":"sRanay"},"content":"            }","lastModifiedDate":"2023-09-24"},{"lineNumber":69,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":70,"author":{"gitId":"sRanay"},"content":"        if(isFound) {","lastModifiedDate":"2023-09-24"},{"lineNumber":71,"author":{"gitId":"sRanay"},"content":"            System.out.print(output);","lastModifiedDate":"2023-09-24"},{"lineNumber":72,"author":{"gitId":"sRanay"},"content":"        } else {","lastModifiedDate":"2023-09-24"},{"lineNumber":73,"author":{"gitId":"sRanay"},"content":"            System.out.println(\"No Tasks Found\");","lastModifiedDate":"2023-09-24"},{"lineNumber":74,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":75,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":76,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":77,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":78,"author":{"gitId":"sRanay"},"content":"     * Prints task that is added or deleted","lastModifiedDate":"2023-09-24"},{"lineNumber":79,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":80,"author":{"gitId":"sRanay"},"content":"     * @param task Newly created task or deleted task","lastModifiedDate":"2023-09-24"},{"lineNumber":81,"author":{"gitId":"sRanay"},"content":"     * @param isDelete check if it is new task or deleted task","lastModifiedDate":"2023-09-24"},{"lineNumber":82,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":83,"author":{"gitId":"sRanay"},"content":"    public void printTask(Task task, boolean isDelete) {","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"sRanay"},"content":"        if(task \u003d\u003d null) {","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"sRanay"},"content":"            return;","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"sRanay"},"content":"        if(isDelete) {","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"sRanay"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"sRanay"},"content":"        } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"sRanay"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"sRanay"},"content":"        System.out.print(\"  \");","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"sRanay"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":97,"author":{"gitId":"sRanay"},"content":"     * Print task that is marked or unmarked","lastModifiedDate":"2023-09-24"},{"lineNumber":98,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-24"},{"lineNumber":99,"author":{"gitId":"sRanay"},"content":"     * @param task Task that is marked or unmarked.","lastModifiedDate":"2023-09-24"},{"lineNumber":100,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":101,"author":{"gitId":"sRanay"},"content":"    public void printMarked(Task task) {","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"sRanay"},"content":"        if(task \u003d\u003d null) {","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"sRanay"},"content":"            return;","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"sRanay"},"content":"        if(task.isCompleted()) {","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"sRanay"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"sRanay"},"content":"            System.out.println(task);","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"sRanay"},"content":"        } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"sRanay"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"sRanay"},"content":"            System.out.println(task);","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"sRanay"},"content":"    public void printInvalidMessage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"sRanay"},"content":"        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"sRanay"},"content":"    public void printEventUsage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"sRanay"},"content":"        System.out.println(EVENT_USAGE_MSG);","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"sRanay"},"content":"    public void printToDoUsage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"sRanay"},"content":"        System.out.println(TODO_USAGE_MSG);","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"sRanay"},"content":"    public void printDeadlineUsage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"sRanay"},"content":"        System.out.println(DEADLINE_USAGE_MSG);","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"sRanay"},"content":"    public void printMarkUsage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"sRanay"},"content":"        System.out.println(MARK_LIST_USAGE_MSG);","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"sRanay"},"content":"    public void printUnmarkUsage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"sRanay"},"content":"        System.out.println(UNMARK_LIST_USAGE_MSG);","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"sRanay"},"content":"    public void printDeleteUsage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"sRanay"},"content":"        System.out.println(DELETE_TASK_USAGE_MSG);","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":142,"author":{"gitId":"sRanay"},"content":"    public void printFindUsage() {","lastModifiedDate":"2023-09-24"},{"lineNumber":143,"author":{"gitId":"sRanay"},"content":"        System.out.println(FIND_TASK_USAGE_MSG);","lastModifiedDate":"2023-09-24"},{"lineNumber":144,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":145,"author":{"gitId":"sRanay"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"sRanay":145}},{"path":"src/main/duke/Bot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"package duke;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"sRanay"},"content":"import Command.Command;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"sRanay"},"content":"import Storage.Storage;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"sRanay"},"content":"import TaskList.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"sRanay"},"content":"import Ui.Ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"public class Bot {","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"sRanay"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"sRanay"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"sRanay"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"sRanay"},"content":"    private Scanner input;","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"sRanay"},"content":"    ","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"sRanay"},"content":"    public Bot() {","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"sRanay"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"sRanay"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"sRanay"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"sRanay"},"content":"        input \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"sRanay"},"content":"     * Runs the chat bot","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"sRanay"},"content":"    public void runBot() {","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"sRanay"},"content":"        storage.importToArrayList(taskList);","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"sRanay"},"content":"        ui.printBotMessage();","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"sRanay"},"content":"        ui.printLineDivider();","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"sRanay"},"content":"        Command command \u003d new Command();","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"sRanay"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"sRanay"},"content":"        while (!(isExit)) {","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"sRanay"},"content":"            command.convertInput(input.nextLine());","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"sRanay"},"content":"            command.execute(storage, ui, taskList);","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"sRanay"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"sRanay"},"content":"        ui.printByeMessage();","lastModifiedDate":"2023-09-23"},{"lineNumber":38,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"sRanay"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"sRanay":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"todo borrow book","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"list","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"sRanay":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"javac  -cp ..\\src\\main -Xlint:none -d ..\\bin ..\\src\\main\\*.java","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sRanay":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"sRanay"},"content":"if ! javac -cp ../src/main -Xlint:none -d ../bin ../src/main/*.java","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sRanay":1,"-":37}}]
