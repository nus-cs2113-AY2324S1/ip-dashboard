[{"path":"src/main/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"    protected String by;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"sRanay"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"sRanay"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"sRanay"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"sRanay"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"sRanay"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"sRanay":13}},{"path":"src/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"sRanay"},"content":"    public static final String BOT_NAME \u003d \"JS\";","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"sRanay"},"content":"    public static final String LINE_DIVIDER \u003d \"----------------------------------------\";","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"     * Mark or unmark task status and updates in the ArrayList","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"sRanay"},"content":"     * @param taskList contains all the tasks stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"sRanay"},"content":"     * @param position task number on the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"sRanay"},"content":"     * @param status task marked as done or not done.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"sRanay"},"content":"    public static void markList(ArrayList\u003cTask\u003e taskList, String position, boolean status) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"sRanay"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"sRanay"},"content":"            int index \u003d Integer.parseInt(position) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"sRanay"},"content":"            Task event \u003d taskList.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"sRanay"},"content":"            event.setCompleted(status);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"sRanay"},"content":"            taskList.set(index, event);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"sRanay"},"content":"            if(event.isCompleted()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"sRanay"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"sRanay"},"content":"                System.out.println(event);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"sRanay"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"sRanay"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"sRanay"},"content":"                System.out.println(event);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"sRanay"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"sRanay"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"sRanay"},"content":"            System.out.println(\"Invalid Input\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"sRanay"},"content":"     * Print all the tasks stored","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"sRanay"},"content":"     * @param taskList contains all the tasks stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"sRanay"},"content":"    public static void printList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"sRanay"},"content":"        System.out.println(\"Here are the task in your list:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"sRanay"},"content":"        Iterator\u003cTask\u003e taskListIter \u003d taskList.iterator();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"sRanay"},"content":"        for(int i \u003d 1; taskListIter.hasNext() ; i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"sRanay"},"content":"            Task event \u003d taskListIter.next();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"sRanay"},"content":"            System.out.println(i + \".\" + event);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"sRanay"},"content":"     * Prints the length of the list in a fixed format","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"sRanay"},"content":"     * @param taskList contains all the tasks stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"sRanay"},"content":"    public static void printListLength(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"sRanay"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" task in the list\");","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"sRanay"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"sRanay"},"content":"     * Prints out the new task added","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"sRanay"},"content":"     * @param taskList contains all the tasks stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"sRanay"},"content":"     * @param task new task that is created","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"sRanay"},"content":"    public static void printNewTask(ArrayList\u003cTask\u003e taskList, Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"sRanay"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"sRanay"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"sRanay"},"content":"        printListLength(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"sRanay"},"content":"     * Add deadline to the ArrayList","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"sRanay"},"content":"     * @param taskList contains all the tasks stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"sRanay"},"content":"     * @param arugments arguments of the commands that is used","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"sRanay"},"content":"    public static void addDeadlineToList(ArrayList\u003cTask\u003e taskList, String arguments) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"sRanay"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"sRanay"},"content":"            String[] argumentsList \u003d arguments.split(\" /by \");","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"sRanay"},"content":"            Deadline newDeadline \u003d new Deadline(argumentsList[0], argumentsList[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"sRanay"},"content":"            taskList.add(newDeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"sRanay"},"content":"            printNewTask(taskList, newDeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"sRanay"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"sRanay"},"content":"            System.out.println(\"Invalid Input\");","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"sRanay"},"content":"     * Add Event to the ArrayList","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"sRanay"},"content":"     * @param taskList contains all the tasks stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"sRanay"},"content":"     * @param arugments arguments of the commands that is used","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"sRanay"},"content":"    public static void addEventToList(ArrayList\u003cTask\u003e taskList, String arguments) {","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"sRanay"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"sRanay"},"content":"            String[] argumentsList \u003d arguments.split(\" /from \");","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"sRanay"},"content":"            String description \u003d argumentsList[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"sRanay"},"content":"            argumentsList \u003d argumentsList[1].split(\" /to \");","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"sRanay"},"content":"            Event newEvent \u003d new Event(description, argumentsList[0], argumentsList[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"sRanay"},"content":"            taskList.add(newEvent);","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"sRanay"},"content":"            printNewTask(taskList, newEvent);","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"sRanay"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"sRanay"},"content":"            System.out.println(\"Invalid Input\");","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"sRanay"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"sRanay"},"content":"     * Add ToDo to the ArrayList","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"sRanay"},"content":"     * ","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"sRanay"},"content":"     * @param taskList contains all the tasks stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"sRanay"},"content":"     * @param arugments arguments of the commands that is used","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"sRanay"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"sRanay"},"content":"    public static void addToDoToList(ArrayList\u003cTask\u003e taskList, String arguments) {","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"sRanay"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"sRanay"},"content":"            if(arguments.isBlank()){","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"sRanay"},"content":"                System.out.println(\"Invalid Input\");","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"sRanay"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"sRanay"},"content":"                ToDo newToDo \u003d new ToDo(arguments);","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"sRanay"},"content":"                taskList.add(newToDo);","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"sRanay"},"content":"                printNewTask(taskList, newToDo);","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"sRanay"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"sRanay"},"content":"            ","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"sRanay"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"sRanay"},"content":"            System.out.println(\"Invalid Input\");","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"sRanay"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"sRanay"},"content":"    ","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"sRanay"},"content":"        String userInput, command;","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"sRanay"},"content":"        String arguments \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"sRanay"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"sRanay"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-08-19"},{"lineNumber":132,"author":{"gitId":"sRanay"},"content":"        System.out.println(\"Hello! I\u0027m \" + BOT_NAME);","lastModifiedDate":"2023-08-19"},{"lineNumber":133,"author":{"gitId":"sRanay"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-19"},{"lineNumber":134,"author":{"gitId":"sRanay"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-08-19"},{"lineNumber":135,"author":{"gitId":"sRanay"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"sRanay"},"content":"        do {","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"sRanay"},"content":"            userInput \u003d input.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"sRanay"},"content":"            command \u003d userInput.split(\" \", 2)[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"sRanay"},"content":"            if(userInput.split(\" \", 2).length !\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"sRanay"},"content":"                arguments \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"sRanay"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"sRanay"},"content":"            switch(command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"sRanay"},"content":"            case \"list\":","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"sRanay"},"content":"                System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-08-26"},{"lineNumber":145,"author":{"gitId":"sRanay"},"content":"                printList(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"sRanay"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"sRanay"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"sRanay"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"sRanay"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"sRanay"},"content":"                System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"sRanay"},"content":"                addToDoToList(taskList, arguments);","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"sRanay"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"sRanay"},"content":"            case \"event\":","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"sRanay"},"content":"                System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"sRanay"},"content":"                addEventToList(taskList, arguments);","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"sRanay"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"sRanay"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"sRanay"},"content":"                System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"sRanay"},"content":"                addDeadlineToList(taskList, arguments);","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"sRanay"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"sRanay"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"sRanay"},"content":"                System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"sRanay"},"content":"                markList(taskList, arguments, false);","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"sRanay"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"sRanay"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"sRanay"},"content":"                System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"sRanay"},"content":"                markList(taskList, arguments, true);","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"sRanay"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"sRanay"},"content":"            default:","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"sRanay"},"content":"                System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"sRanay"},"content":"                System.out.println(\"Invalid command\");","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"sRanay"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":173,"author":{"gitId":"sRanay"},"content":"            System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-08-26"},{"lineNumber":174,"author":{"gitId":"sRanay"},"content":"        } while (!(command.equals(\"bye\")));","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"sRanay"},"content":"        input.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"sRanay"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-19"},{"lineNumber":177,"author":{"gitId":"sRanay"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-08-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sRanay":175,"-":4}},{"path":"src/main/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"    protected String from;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"    protected String to;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"sRanay"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"sRanay"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"sRanay"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"sRanay"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"sRanay"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"sRanay"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"sRanay"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to +  \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"sRanay"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"sRanay":15}},{"path":"src/main/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"public class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"    ","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"    private String name;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"    private boolean completed;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"sRanay"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"sRanay"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"sRanay"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"    public String getName() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"sRanay"},"content":"        return name;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"sRanay"},"content":"    public void setName(String name) {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"sRanay"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"sRanay"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"sRanay"},"content":"        return completed;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"sRanay"},"content":"    public void setCompleted(boolean completed) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"sRanay"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"sRanay"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"sRanay"},"content":"        return \"[\" + (completed ? \"X\" : \" \") + \"] \" + name;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"sRanay"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"sRanay":27}},{"path":"src/main/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"    public ToDo (String description) {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"sRanay"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"sRanay"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"sRanay"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"sRanay"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"sRanay"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"sRanay":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sRanay"},"content":"todo borrow book","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"sRanay"},"content":"list","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"sRanay"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"sRanay"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"sRanay":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"sRanay"},"content":"javac  -cp ..\\src\\main -Xlint:none -d ..\\bin ..\\src\\main\\*.java","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sRanay":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"sRanay"},"content":"if ! javac -cp ../src/main -Xlint:none -d ../bin ../src/main/*.java","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sRanay":1,"-":37}}]
