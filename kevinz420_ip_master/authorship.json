[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"# KevBot Guide","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"### List","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"List all outstanding todos, deadlines, and events.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"### Find","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"Filter the listed tasks by a specific keyword(s).","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"### Mark","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"Mark a task as completed/incomplete.","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"### Delete","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"Delete a specific task.","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"### Add","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"Add a new todo, deadline, or event task.","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"### `list` - List all tasks","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"`list`","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"### `find` - Match tasks by keyword","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"Example of usage:","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"`find (keyword)`","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"### `mark` - Mark a task","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"Marks an undone task as done and vice versa. Task index is 1-based as displayed in the list command.","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"`mark (task index)`","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"### `delete` - Remove a task","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"Task index is 1-based as displayed in the list command.","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"Example of usage:","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"`delete (task index)`","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"### `todo` - Add a todo","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"kevinz420"},"content":"Example of usage:","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"`todo (description)`","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"kevinz420"},"content":"### `deadline` - Add a deadline","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"kevinz420"},"content":"Example of usage:","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"kevinz420"},"content":"`deadline (description) /by (end time)`","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"kevinz420"},"content":"### `event` - Add an event","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"kevinz420"},"content":"Example of usage:","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"kevinz420"},"content":"`event (description) /from (start time) /to (end time)`","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"kevinz420":45,"-":24}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"T|false|asdfkasdh","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"T|true|re98ui","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"D|true|return book|tmrw","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"E|false|proj meeting|today|forever","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"T|false|hu","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"T|true|deez","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"kevinz420":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import duke.command.DukeException;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"import duke.storage.StorageFile;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"    private TextUi ui;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"    private Parser parser;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    private StorageFile storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"        ui \u003d new TextUi();","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"        storage \u003d new StorageFile(filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"            ui.showInitFailedMessage();","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"    public void run() {","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"        String userCommandText \u003d ui.getUserCommand();","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"        while (!userCommandText.equals(\"bye\")) {","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"            String result \u003d handleCommand(userCommandText);","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"            ui.showResultToUser(result);","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"            userCommandText \u003d ui.getUserCommand();","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"    public String handleCommand(String userInput) {","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"            return tasks.getIndexedTasks();","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"kevinz420"},"content":"        } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"            try {","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"                String result \u003d parser.executeCommand(userInput, tasks);","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"kevinz420"},"content":"                storage.saveTasks(tasks);","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"                return result;","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"                return e.getMessage();","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"kevinz420"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"        new Duke(\"duke.txt\").run();","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kevinz420":57,"-":2}},{"path":"src/main/java/duke/command/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package duke.command;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Wrapper for an exception throw within Duke","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"public class DukeException extends  Exception {","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"        super(message);","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"kevinz420":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package duke.parser;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import duke.command.DukeException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"import duke.task.Event;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":" * A \u003ccode\u003eParser\u003c/code\u003e object is responsible for parsing and executing","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":" * a user provided command string.","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"public class Parser {","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"    public Parser() {}","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"     * Returns a human-readable result of the command","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"     * executed.","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"     * @param line inputted by user.","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"     * @param tasks that are currently in the TaskList","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"     * @return A human-readable string of the command\u0027s result.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"     * @throws DukeException If command has issues.","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"    public String executeCommand(String line, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"        int divider \u003d line.indexOf(\" \");","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"        if (divider \u003d\u003d -1) {","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"            throw new DukeException(\"Sorry! Not sure what you mean\");","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"        if (divider \u003d\u003d line.length() - 1) {","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"            throw new DukeException(\"Please enter a non-empty parameter value\");","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"        if (line.startsWith(\"todo\")){","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"            String description \u003d line.substring(divider + 1);","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"            return tasks.addTask(new Todo(description));","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"        } else if (line.startsWith(\"find\")) {","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"            String keyword \u003d line.substring(divider + 1);","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"            return tasks.getIndexedTasksByKeyword(keyword);","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"        if (line.contains(\"mark\") || line.startsWith(\"delete\")) {","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"kevinz420"},"content":"            int idx \u003d Integer.parseInt(line.substring(divider + 1)) - 1;","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"            if (idx \u003c 0 || idx \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"                throw new DukeException(\"Sorry! That\u0027s not a valid task\");","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"            if (line.contains(\"mark\")) {","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"                return tasks.markTask(idx, line.startsWith(\"mark\"));","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"kevinz420"},"content":"            } else {","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"kevinz420"},"content":"                return tasks.removeTask(idx);","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"kevinz420"},"content":"        HashMap\u003cString, String\u003e parameters \u003d parseParameters(line);","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"kevinz420"},"content":"        String description \u003d parameters.get(\"description\");","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"kevinz420"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"kevinz420"},"content":"            throw new DukeException(\"Sorry! Please provide a valid description\");","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"kevinz420"},"content":"        if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"kevinz420"},"content":"            String by \u003d parameters.get(\"by\");","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"kevinz420"},"content":"            if (by \u003d\u003d null) {","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"kevinz420"},"content":"                throw new DukeException(\"Sorry! Please provide a valid `by`\");","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"kevinz420"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"kevinz420"},"content":"            return tasks.addTask(new Deadline(description, by));","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"kevinz420"},"content":"        } else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"kevinz420"},"content":"            String from \u003d parameters.get(\"from\");","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"kevinz420"},"content":"            String to \u003d parameters.get(\"to\");","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"kevinz420"},"content":"            if (from \u003d\u003d null || to \u003d\u003d null) {","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"kevinz420"},"content":"                throw new DukeException(\"Sorry! Please provide a valid `from` and/or `to`\");","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"kevinz420"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"kevinz420"},"content":"            return tasks.addTask(new Event(description, from, to));","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"kevinz420"},"content":"        } else {","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"kevinz420"},"content":"            throw new DukeException(\"Sorry! Please enter a valid command\");","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"kevinz420"},"content":"    private static HashMap\u003cString, String\u003e parseParameters(String line) throws DukeException {","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"kevinz420"},"content":"        HashMap\u003cString, String\u003e fieldToValue \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"kevinz420"},"content":"        int startDescription \u003d line.indexOf(\" \");","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"kevinz420"},"content":"        int endOfDescription \u003d line.indexOf(\" /\");","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"kevinz420"},"content":"        if (startDescription \u003d\u003d endOfDescription || startDescription \u003d\u003d -1 || endOfDescription \u003d\u003d -1) {","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"kevinz420"},"content":"            throw new DukeException(\"Sorry! Not sure what you mean\");","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"kevinz420"},"content":"        fieldToValue.put(\"description\", line.substring(startDescription + 1, endOfDescription));","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"kevinz420"},"content":"        String[] splitParams \u003d line.split(\" /\");","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"kevinz420"},"content":"        for (int i \u003d 1; i \u003c splitParams.length; i++) {","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"kevinz420"},"content":"            String rawParam \u003d splitParams[i];","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"kevinz420"},"content":"            int divider \u003d rawParam.indexOf(\" \");","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"kevinz420"},"content":"            if (divider \u003d\u003d -1) {","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"kevinz420"},"content":"                throw new DukeException(\"Sorry! Please enter valid inputs\");","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"kevinz420"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"kevinz420"},"content":"            String field \u003d rawParam.substring(0, divider);","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"kevinz420"},"content":"            String value \u003d rawParam.substring(divider + 1);","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"kevinz420"},"content":"            fieldToValue.put(field, value);","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"kevinz420"},"content":"        return fieldToValue;","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"kevinz420":108}},{"path":"src/main/java/duke/storage/StorageFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package duke.storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import duke.command.DukeException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"import duke.task.Event;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"import java.io.File;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"import java.util.List;","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":" * Handles Duke\u0027s storage capabilities. A \u003ccode\u003eStorageFile\u003c/code\u003e object handles the","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":" * loading and saving aspects of new tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"public class StorageFile {","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"    String filePath;","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"    public StorageFile(String filePath) {","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"     * Loads all tasks from the .txt file","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"     * when the program is first ran.","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"     * @return List of Task objects representing saved tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"     * @throws DukeException If there is an issue loading tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"        try {","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"            f.createNewFile();","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"                String[] parsed \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"                String taskType \u003d parsed[0];","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"kevinz420"},"content":"                String description \u003d parsed[2];","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"                switch (taskType) {","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"kevinz420"},"content":"                case \"T\":","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"                    tasks.add(new Todo(description));","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"                    break;","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"                case \"D\":","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"                    String by \u003d parsed[3];","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"                    tasks.add(new Deadline(description, by));","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"                    break;","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"kevinz420"},"content":"                case \"E\":","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"kevinz420"},"content":"                    String from \u003d parsed[3];","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"                    String to \u003d parsed[4];","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"                    tasks.add(new Event(description, from, to));","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"kevinz420"},"content":"                    break;","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"kevinz420"},"content":"                default:","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"kevinz420"},"content":"                    throw new DukeException(\"Unknown task type detected\");","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"kevinz420"},"content":"                }","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"kevinz420"},"content":"                if (parsed[1].equals(\"true\")) {","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"kevinz420"},"content":"                    tasks.get(tasks.size() - 1).setStatus(true);","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"kevinz420"},"content":"                }","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"kevinz420"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"kevinz420"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"kevinz420"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"kevinz420"},"content":"        return tasks;","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"kevinz420"},"content":"     * Saves all tasks to the .txt file after","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"kevinz420"},"content":"     * a command that modifies the TaskList","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"kevinz420"},"content":"     * @param tasks to be written to the file","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"kevinz420"},"content":"     * @throws DukeException If there is an error writing.","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"kevinz420"},"content":"    public void saveTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"kevinz420"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"kevinz420"},"content":"        try {","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"kevinz420"},"content":"            FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"kevinz420"},"content":"            fw.write(tasks.getSerializedTasks());","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"kevinz420"},"content":"            fw.close();","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"kevinz420"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"kevinz420"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"kevinz420":93}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package duke.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Type of task that represents a deadline with end time.","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"    private String by;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"        super(description);","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"    public String getFormattedTask() {","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"        return \"[D] \" + super.getFormattedTask() + \" (by: \" + by  + \")\";","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"    public String getSerializedString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"        return \"D|\" + super.getSerializedString() + \"|\" + by;","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"kevinz420":22}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package duke.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Type of task that represents an event with start/end times.","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"    private String from;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"    private String to;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"        super(description);","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"    public String getFormattedTask() {","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"        return \"[E] \" + super.getFormattedTask() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"    public String getSerializedString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"        return \"E|\" + super.getSerializedString() + \"|\" + from + \"|\" + to;","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"kevinz420":24}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package duke.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Generic task class. Contains different methods to format a task.","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"public class Task {","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"    protected String description;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"     * Returns a formatted task string for printing purposes.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"     * @return String of formatted task.","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"    public String getFormattedTask() {","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"     * Setter to allow isDone status to be modified","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"     * @param isDone boolean of new status","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"    public void setStatus(boolean isDone) {","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"     * Returns a string of the task serialized to be saved","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"     * in the text file.","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"     * @return Serialized string","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"    public String getSerializedString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"        return isDone + \"|\" + description;","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"     * Returns description of the task.","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"     * @return Task description.","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"    public String getDescription() {","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"        return description;","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"kevinz420":54}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package duke.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Type of task that represents a to-do object.","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"        super(description);","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"    public String getFormattedTask() {","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"        return \"[T] \" + super.getFormattedTask();","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"    public String getSerializedString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"        return \"T|\" + super.getSerializedString();","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"kevinz420":20}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package duke.tasklist;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"import java.util.List;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":" * Wrapper around the List\u003cTask\u003e to allow for controlled access and formatting methods.","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"public class TaskList {","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"    private List\u003cTask\u003e tasks \u003d  new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    public TaskList() {}","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"     * Marks specific task as either done or undone","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"     * and returns the status of the marking.","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"     * @param index of task to be marked.","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"     * @param isDone boolean representing status of the task.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"     * @return Status of marking as string.","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"    public String markTask(int index, boolean isDone) {","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"        final StringBuilder formatted \u003d new StringBuilder();","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"        tasks.get(index).setStatus(isDone);","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"        if (isDone) {","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"            formatted.append(\"Nice! I\u0027ve marked this task as done:\").append(\"\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"        } else {","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"            formatted.append(\"OK, I\u0027ve marked this task as not done yet:\").append(\"\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"        formatted.append(tasks.get(index).getFormattedTask());","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"        return formatted.toString();","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"     * Adds a new task to the TaskList and returns","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"     * the status of the addition.","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"     * @param task to be added","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"     * @return Status of the addition.","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"        tasks.add(task);","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task.getFormattedTask() + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"kevinz420"},"content":"     * Removes a task from the TaskList by index and","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"     * returns the status of the removal.","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"kevinz420"},"content":"     * @param idx of task to be removed","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"kevinz420"},"content":"     * @return Status of the removal","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"kevinz420"},"content":"    public String removeTask(int idx) {","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"kevinz420"},"content":"        Task removedTask \u003d tasks.remove(idx);","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"kevinz420"},"content":"        return \"Got it. I\u0027ve removed this task:\\n\" + removedTask.getFormattedTask() + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"kevinz420"},"content":"     * Returns a task object by index.","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"kevinz420"},"content":"     * @param idx Index of task to return.","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"kevinz420"},"content":"     * @return task object","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"kevinz420"},"content":"    public Task get(int idx) {","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"kevinz420"},"content":"        return tasks.get(idx);","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"kevinz420"},"content":"     * Returns a formatted version of all tasks","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"kevinz420"},"content":"     * in TaskList with 1-based indexing.","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"kevinz420"},"content":"     * @return String formatted list","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"kevinz420"},"content":"    public String getIndexedTasks() {","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"kevinz420"},"content":"        StringBuilder formatted \u003d new StringBuilder();","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"kevinz420"},"content":"        for (int i \u003d 0; i \u003c tasks.size() \u0026\u0026 tasks.get(i) !\u003d null; i++) {","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"kevinz420"},"content":"            formatted.append(i + 1).append(\". \").append(tasks.get(i).getFormattedTask()).append(\"\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"kevinz420"},"content":"        return formatted.toString();","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"kevinz420"},"content":"    public int size() {","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"kevinz420"},"content":"        return tasks.size();","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"kevinz420"},"content":"     * Returns a serialized version of all tasks","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"kevinz420"},"content":"     * in TaskList for saving into the .txt file.","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"kevinz420"},"content":"     * @return String serialized list","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"kevinz420"},"content":"    public String getSerializedTasks() {","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"kevinz420"},"content":"        StringBuilder formatted \u003d new StringBuilder();","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"kevinz420"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"kevinz420"},"content":"            formatted.append(task.getSerializedString()).append(\"\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"kevinz420"},"content":"        return formatted.toString();","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":112,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":113,"author":{"gitId":"kevinz420"},"content":"     * Returns a formatted version of all tasks","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"kevinz420"},"content":"     * in TaskList with 1-based indexing that match","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"kevinz420"},"content":"     * the specified keyword parameter.","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":117,"author":{"gitId":"kevinz420"},"content":"     * @param keyword string to match against description of tasks","lastModifiedDate":"2023-10-05"},{"lineNumber":118,"author":{"gitId":"kevinz420"},"content":"     * @return String formatted list","lastModifiedDate":"2023-10-05"},{"lineNumber":119,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":120,"author":{"gitId":"kevinz420"},"content":"    public String getIndexedTasksByKeyword(String keyword) {","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"kevinz420"},"content":"        int idx \u003d 1;","lastModifiedDate":"2023-10-05"},{"lineNumber":122,"author":{"gitId":"kevinz420"},"content":"        StringBuilder formatted \u003d new StringBuilder();","lastModifiedDate":"2023-10-05"},{"lineNumber":123,"author":{"gitId":"kevinz420"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-10-05"},{"lineNumber":124,"author":{"gitId":"kevinz420"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"kevinz420"},"content":"                formatted.append(idx++).append(\". \").append(task.getFormattedTask()).append(\"\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":126,"author":{"gitId":"kevinz420"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":127,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":129,"author":{"gitId":"kevinz420"},"content":"        return formatted.toString();","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":131,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"kevinz420":131}},{"path":"src/main/java/duke/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package duke.ui;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":" * TextUi object is responsible for all messages displayed to the user.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":" * All formatting is specified and followed in this class.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"public class TextUi {","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m KevBot\";","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"    private static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_INIT_FAILED \u003d \"Failed to initialise address book application. Exiting...\";","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"    /** A decorative prefix added to the beginning of lines printed by AddressBook */","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"    private static final String LINE_PREFIX \u003d \"|| \";","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"    /** A platform independent line separator. */","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"    private final Scanner in;","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"    public TextUi() {","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"    public TextUi(InputStream in, PrintStream out) {","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"        showToUser(","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"                DIVIDER,","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"                DIVIDER,","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"                MESSAGE_WELCOME,","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"                DIVIDER);","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"        showToUser(MESSAGE_GOODBYE, DIVIDER, DIVIDER);","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"    public void showResultToUser(String result) {","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"        showToUser(result, DIVIDER);","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"        return in.nextLine();","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"    private void showToUser(String... message) {","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"kevinz420"},"content":"        for (String m : message) {","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"kevinz420"},"content":"            out.println(LINE_PREFIX + m.replace(\"\\n\", LS + LINE_PREFIX));","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"kevinz420"},"content":"    public void showInitFailedMessage() {","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"kevinz420"},"content":"        showToUser(MESSAGE_INIT_FAILED, DIVIDER, DIVIDER);","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"kevinz420":63}}]
