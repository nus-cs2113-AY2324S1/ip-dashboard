[{"path":"data/backup_taskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"1. [T][X] read book","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"2. [D][X] read book (by: 10月 22 2023 12:00 下午)","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"3. [E][ ] read book (from: 10月 20 2023 12:00 下午 to: 10月 27 2023 11:59 下午)","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"J-Y-Yan":3}},{"path":"data/taskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"1. [T][X] read book","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"2. [D][X] read book (by: 10月 22 2023 12:00 下午)","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"3. [E][ ] read book (from: 10月 20 2023 12:00 下午 to: 10月 27 2023 11:59 下午)","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"J-Y-Yan":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"# User Guide for Oriento","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"Oriento is a desktop application designed to help you manage your tasks and guide your life in the right direction. It is optimized for use through Command Line Interface(CLI). If you can type fast, it would run faster than a traditional GUI app.","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"## Quick Start","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"2. Download the latest `ip.jar` from [here](https://github.com/J-Y-Yan/ip/releases/download/v2.0.2/ip.jar).","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"3. Copy the file to the folder you want to use as the *home folder* for Oriento.","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar ip.jar` command to run the application.","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"   ","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"5. Use `list` command to see if you have any saved task data","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"### Notes about the input command format","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"- For each type command, a specific `COMMAND FORMAT` is required. Please go to the following to look for the details of each command.","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"  e.g. \"todo description\" means to start with keyword todo and follows by the content","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"- Both `CAPITAL LETTER` and `small letter` are acceptable. But consecutive white space will be eliminated automatically.","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"- Tasks such as dealine and event task would required time limit. Please use only `Date Time`:","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"  1. Date-Time format: `DD/MM/YYYY HHMM`. e.g. 21/10/2023 1730","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"  2. if the `time is not specified`, please use 2359 by default.","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"  ","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"  General Time: Apart from the DateTime format, the current version of app will treat `any time input` as valid time.","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"  e.g. Friday, Birthday of Ethan, etc. Please make wise use of the time input.","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"## Command Type","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"### `Todo` - Adding a todo task","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"A todo task is a general task that doesn\u0027t need any time constraint.","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"Format: `todo Descrption`","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"J-Y-Yan"},"content":"Example: todo read book","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"J-Y-Yan"},"content":"```","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"J-Y-Yan"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"J-Y-Yan"},"content":"[T][ ] read book","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"J-Y-Yan"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"J-Y-Yan"},"content":"```","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"J-Y-Yan"},"content":"### `Deadline` - Adding a deadline task","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"J-Y-Yan"},"content":"A deadline task typically refers to task with a due time.","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"J-Y-Yan"},"content":"Format: `deadline Description /by Date Time`","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"J-Y-Yan"},"content":"Example: deadline read book /by 22/10/2023 1200","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"J-Y-Yan"},"content":"Expected outcome (In Chinese):","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"J-Y-Yan"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"J-Y-Yan"},"content":"[D][ ] read book (by: 10月 22 2023 12:00 下午)","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"J-Y-Yan"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"J-Y-Yan"},"content":"### `Event` - Adding a event task","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"J-Y-Yan"},"content":"A event task refers to task over a specific period","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"J-Y-Yan"},"content":"Format: `event Description /from Date Time /to Date Time`","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"J-Y-Yan"},"content":"Example: event read book /from 20/10/2023 1200 /to 27/10/2023 2359","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"J-Y-Yan"},"content":"Expected outcome (In Chinese):","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"J-Y-Yan"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"J-Y-Yan"},"content":"[E][ ] read book (from: 10月 20 2023 12:00 下午 to: 10月 27 2023 11:59 下午)","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"J-Y-Yan"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"J-Y-Yan"},"content":"## Control Task List","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"J-Y-Yan"},"content":"  Refers to the following as some alternative methods to use the app:","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"J-Y-Yan"},"content":"  - **List**: View all the existing tasks created","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"J-Y-Yan"},"content":"  - **Mark**: Mark an existing task as finished","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"J-Y-Yan"},"content":"  - **Unmark**: Change a finished task to unfinished","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"J-Y-Yan"},"content":"  - **Delete**: Remove an existing task, regardless of its finish statue","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"J-Y-Yan"},"content":"  - **Find**: Look for a specific task","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"J-Y-Yan"},"content":"  - **Bye**: Exit the program","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"J-Y-Yan"},"content":"  - **Help**: Look for hints of using the app","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"J-Y-Yan"},"content":"### Format of the above funationalities","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"J-Y-Yan"},"content":"  Please follows either format for the input, where index refers to the task number of a task, which can be found after list out the tasks","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"J-Y-Yan"},"content":"### 1. `Without Index` : `list`, `help`, `bye` for the corresponding function","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"J-Y-Yan"},"content":"   ","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"J-Y-Yan"},"content":"### 2. `With index` - Control a target task: ","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"J-Y-Yan"},"content":"   ","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"J-Y-Yan"},"content":"    Format: Action Index","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"J-Y-Yan"},"content":"   ","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"J-Y-Yan"},"content":"    Example: mark 1","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"J-Y-Yan"},"content":"    Expected outcome:","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"J-Y-Yan"},"content":"    ```","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"J-Y-Yan"},"content":"      Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"J-Y-Yan"},"content":"      [X] read book","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"J-Y-Yan"},"content":"    ```","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"J-Y-Yan"},"content":"    More examples: unmark 2, delete 10","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"J-Y-Yan"},"content":"   ","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"J-Y-Yan"},"content":"### 3. `Find` - look for a task:","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"J-Y-Yan"},"content":"   Format: Find Content","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"J-Y-Yan"},"content":"   ","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"J-Y-Yan"},"content":"   Example: Find read book","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"J-Y-Yan"},"content":"### Limitations on the functions","lastModifiedDate":"2023-10-21"},{"lineNumber":122,"author":{"gitId":"J-Y-Yan"},"content":"Note that each functions may limit its usage. And these could possibly be supported in the future.","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"J-Y-Yan"},"content":"1. Find function could only look for a task content. Search by time is  `NOT` supported yet","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"J-Y-Yan"},"content":"2. Delete, mark, and unmark function can only control one targte task at each time of execution","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"J-Y-Yan"},"content":"3. Don\u0027t use list with index as it is not yet supported","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"J-Y-Yan"},"content":"4. Current only Date Time format is supported. Date format is not allowed. But you can use it as a general time format. However, general time format `Does NOT` support time validating function.","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"J-Y-Yan":103,"-":23}},{"path":"src/main/java/Oriento/Oriento.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package Oriento;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import command.Command;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"import commandFormat.CommandFormat;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"import commandFormat.CommandType;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"import task.*;","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"import message.Text;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"import exception.OrientoException;","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"import fileIO.FileIO;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":" * Starting point of program","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"public class Oriento {","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"    public static int taskCount \u003d 0;","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"    public static Task[] list \u003d new Task[100];","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"        Text.printWelcomeMessage();","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"        Scanner keyboard \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"        FileIO.outputFileInitialization();","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"        executeCommand(keyboard);","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"     * this method will loop until user type in exit command","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"     * @param keyboard represents user input source","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"    private static void executeCommand(Scanner keyboard) {","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"        while (!isExit) {","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"            String cmd \u003d keyboard.nextLine();","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"J-Y-Yan"},"content":"            cmd \u003d CommandFormat.formattedCommand(cmd);","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"J-Y-Yan"},"content":"            String[] commandSplits \u003d cmd.split(\" \");","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"J-Y-Yan"},"content":"            if (CommandFormat.missingOrExtraTaskDescription(commandSplits)){","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"J-Y-Yan"},"content":"                continue;","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"J-Y-Yan"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"J-Y-Yan"},"content":"            try {","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"J-Y-Yan"},"content":"                Command command \u003d CommandType.parseCommand(cmd);","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"J-Y-Yan"},"content":"                command.executeCommand();","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"J-Y-Yan"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"J-Y-Yan"},"content":"                FileIO.backupTaskFile();","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"J-Y-Yan"},"content":"                Text.printdottedline();","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"J-Y-Yan"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"J-Y-Yan"},"content":"                System.out.println(\"Hey, please input your command with the correct task number.\");","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"J-Y-Yan"},"content":"            } catch (NullPointerException npe){","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"J-Y-Yan"},"content":"                System.out.println(\"Your target task doesn\u0027t exist. Please input a correct task.\");","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"J-Y-Yan"},"content":"            } catch (OrientoException e){","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"J-Y-Yan"},"content":"                e.incorrectFormatException(commandSplits[0]);","lastModifiedDate":"2023-09-24"},{"lineNumber":60,"author":{"gitId":"J-Y-Yan"},"content":"            } catch (FileNotFoundException fnf){","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"J-Y-Yan"},"content":"                System.out.println(\"Sorry, I cannot find the task source. Please check the task file.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"J-Y-Yan"},"content":"            } catch (IOException io){","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"J-Y-Yan"},"content":"                System.out.println(\"OMG! Something went wrong! Please check if the source files are available.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"J-Y-Yan"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":67,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"J-Y-Yan":69}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package command;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":" * general command features with user raw command and","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"    protected String command;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"     * initialize the inherited isExit field as false","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"     * @param cmd represents raw user Command","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"    public AddCommand(String cmd){","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"        super(false);","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"        this.command \u003d cmd;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":17}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package command;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import message.Text;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"import fileIO.FileIO;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"     * only bye message can change isExit field to true","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"        super(true);","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"     * only print bye message when running bye execution","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"    public void executeCommand() {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"            Text.printByeMessage();","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":25}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package command;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":" * parent class representing all user instructions","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"public abstract class Command {","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"     * use isExit to keep tract if the user want to quit","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"    private boolean isExit;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"    public Command(boolean isExit){","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"    public boolean isExit(){","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"        return isExit;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws IOException file input output error in case file cannot be found","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"    public abstract void executeCommand() throws IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":29}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package command;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import Oriento.Oriento;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import exception.OrientoException;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"import exception.InvalidTimeException;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"import message.Text;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"import task.Deadline;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"public class DeadlineCommand extends AddCommand {","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"     * reusing the constructor of AddCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"     * @param ddlCmd represents raw user command starts from \"deadline\"","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"    public DeadlineCommand(String ddlCmd){","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"        super(ddlCmd);","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"     * Exception could occur in the following cases:","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"     * 1. Input deadline command is in wrong format","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"     * 2. Failed to write into output file","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"     * 3. Inappropriate deadline is detected, e.g. deadline is pass already","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"    public void executeCommand(){","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"            Oriento.list[Oriento.taskCount] \u003d Deadline.newDdl(this.command);","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"            Text.createTaskSuccessMsg();","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (OrientoException e) {","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"            e.incorrectFormatException(\"deadline\");","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (IOException io){","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"OMG! Something went wrong! Please check if the source files are available.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (InvalidTimeException ite){","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Deadline is over already!\");","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":41}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package command;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import Oriento.Oriento;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import message.Text;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"import task.Task;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"import static commandFormat.CommandFormat.getTaskNo;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"import static fileIO.FileIO.overwriteToFile;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"    private final String index;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"    public DeleteCommand(String index) {","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"        super(false);","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"     * delete command uses to delete a task at particular index i, i\u003e0","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws IOException if failed to access file","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"    public void executeCommand() throws IOException {","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"            int deleteIndex \u003d getTaskNo(this.index);","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"            deleteTask(deleteIndex);","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Hey, please input your command with the correct task number.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"     * the taskCount is updated in the method deleteTaskSuccessMsg","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"    private static void deleteTask(int deleteIndex) throws IOException{","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"        if (deleteIndex \u003c\u003d 0 || deleteIndex\u003e Oriento.taskCount){","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Oh, No! invalid index! You don\u0027t have that task. Please try again.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"J-Y-Yan"},"content":"            return;","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"J-Y-Yan"},"content":"        Text.deleteTaskSuccessMsg(deleteIndex);","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"J-Y-Yan"},"content":"        Oriento.list \u003d Task.updatedTaskList(deleteIndex - 1);","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"J-Y-Yan"},"content":"        overwriteToFile(\"data/taskList.txt\", Task.getConcatenateTasks());","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":50}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package command;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import Oriento.Oriento;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import exception.OrientoException;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"import exception.InvalidTimeException;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"import message.Text;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"import task.Event;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"public class EventCommand extends AddCommand {","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"    public EventCommand(String eventTask){","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"        super(eventTask);","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"     *  eventTask represent the whole raw user command starts from \"event\"","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"     *  Exception could occur in the following cases:","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"     *  1. Input event command is with wrong format","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"     *  2. Failed to write into the output file","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"     *  3. Inappropriate period is detected, e.g. event period pass already","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"    public void executeCommand(){","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"            Oriento.list[Oriento.taskCount] \u003d Event.newEventTask(this.command);","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"            Text.createTaskSuccessMsg();","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (OrientoException e) {","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"            e.incorrectFormatException(\"event\");","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (IOException io){","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"OMG! Something went wrong! Please check if the source files are available.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (InvalidTimeException d){","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(d.getMessage());","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":39}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package command;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import Oriento.Oriento;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"    private String keyword;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"    public FindCommand(String keyword){","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"        super(false);","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"     * the find method implement by comparing all the task descriptions with the keyword","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"     * @return string containing all lines of results found","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"    private String findResult() {","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"        for (int i \u003d 0; i \u003c Oriento.taskCount; i++) {","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"            if(Oriento.list[i].getDescription().contains(this.keyword)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"                String taskAppend \u003d (i +1) + \". \" +  Oriento.list[i].toString();","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"                sb.append(taskAppend).append(\"\\n\");","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"     * The find execution works by simple implementation of","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"     * checking if the description of a task contains the target","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"    public void executeCommand() {","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"        if(! this.findResult().isEmpty()){","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Great! I have find some similar result for you.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(this.findResult());","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"        } else {","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"I am sorry but I cannot find any result for you...\");","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":43}},{"path":"src/main/java/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package command;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import message.Text;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"    public HelpCommand(){","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"        super(false);","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"     * use to print help message only","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"    public void executeCommand() {","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"        Text.printHelpMessage();","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"J-Y-Yan":20}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package command;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import message.Text;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"    public ListCommand(){","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"        super(false);","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"     * list out all the tasks by print out all content in the saved file","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"     * raises exception if failed to access or locate the output file","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"    public void executeCommand() {","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"            Text.printList();","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (IOException io) {","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"OMG! Something went wrong! Please check if the source files are available.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":25}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package command;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import Oriento.Oriento;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import task.Task;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"import static commandFormat.CommandFormat.getTaskNo;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"import static fileIO.FileIO.overwriteToFile;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"    private String index;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"     * @param index points to the target task","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"    public MarkCommand(String index) {","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"        super(false);","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"     * overwriteFile update the whole saved file with updated content, i.e. one task has been marked","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"     * raises exception if input incorrect number, such as in invalid range; or Failed to access output file","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"    public void executeCommand(){","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"            int taskNo \u003d getTaskNo(this.index);","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"            Oriento.list[taskNo - 1].setDone(taskNo, Oriento.taskCount, Oriento.list);","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"            overwriteToFile(\"data/taskList.txt\", Task.getConcatenateTasks());","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Hey, please input your command with the correct task number.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Oh NO! Failed to find save file!\");","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":41}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package command;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import Oriento.Oriento;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import exception.OrientoException;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"import message.Text;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"import task.Todo;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"public class TodoCommand extends AddCommand{","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"     * @param todoCmd represents thw whole original user command starts from \"todo“","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"    public TodoCommand(String todoCmd){","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"        super(todoCmd);","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"     * add a new todo task into the taskList","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"     * raises exception if todo command is in incorrect format or the output file cannot be accessed","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"    public void executeCommand(){","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"            Oriento.list[Oriento.taskCount] \u003d Todo.newTodoTask(this.command);","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"            Text.createTaskSuccessMsg();","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (OrientoException e) {","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"            e.incorrectFormatException(\"todo\");","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (IOException io){","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"OMG! Something went wrong! Please check if the source files are available.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":34}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package command;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import Oriento.Oriento;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import task.Task;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"import static commandFormat.CommandFormat.getTaskNo;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"import static fileIO.FileIO.overwriteToFile;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"    private String index;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"     * similar to mark","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"    public UnmarkCommand(String index) {","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"        super(false);","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"     * change the task statue to unfinished","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"     * only applicable to finished task","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"     * It gives error message when wrong index is used or the output file cannot be found","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"    public void executeCommand() {","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"            int taskNo \u003d getTaskNo(this.index);","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"            Oriento.list[taskNo - 1].setNotDone(taskNo, Oriento.taskCount, Oriento.list);","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"            overwriteToFile(\"data/taskList.txt\", Task.getConcatenateTasks());","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Hey, please input your command with the correct task number.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Oh NO! Failed to find save file!\");","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":40}},{"path":"src/main/java/commandFormat/CommandFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package commandFormat;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"public class CommandFormat {","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"    /**This method is to transform the user command into \u0027expected\u0027 format for parsing purpose","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"     * User Input is transformed to smaller letter,","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"     * removed leading and ending space, and contracted any consecutive space","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"     * @param cmd user command","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"     * @return updated command","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"    public static String formattedCommand(String cmd){","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"        cmd \u003d cmd.trim().toLowerCase();","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"        cmd \u003d cmd.replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"        return cmd;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"     * raises exception when taskNum is not number, or containing non-numerical value","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"    public static int getTaskNo(String taskNum) {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"        return Integer.parseInt(taskNum);","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"     * use to tackle cases with valid starting input like \"todo\", \"event\", \"list\",","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"     * but lacking in index or having extra index/content","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"     * e.g. find command should have content while list should not","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"    public static boolean missingOrExtraTaskDescription(String[] cmd){","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"        if (cmd.length \u003d\u003d 1){","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"            if(cmd[0].equals(\"todo\") || cmd[0].equals(\"event\") || cmd[0].equals(\"deadline\")","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"                    || cmd[0].equals(\"mark\") || cmd[0].equals(\"unmark\") || cmd[0].equals(\"delete\")","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"                    || cmd[0].equals(\"find\")){","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"                System.out.println(\"Please describe your target.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"                return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"        else if (cmd.length\u003e\u003d2 \u0026\u0026 cmd[0].equals(\"list\") ){","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Do you mean to see the list? Please try again using \u0027list\u0027.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"J-Y-Yan"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"J-Y-Yan"},"content":"        }else if (cmd.length\u003e\u003d2 \u0026\u0026 cmd[0].equals(\"save\") ){","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Do you mean to save the tasks? Please try again using \u0027save\u0027.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"J-Y-Yan"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"J-Y-Yan"},"content":"        return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":51}},{"path":"src/main/java/commandFormat/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package commandFormat;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import command.*;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import exception.OrientoException;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"public class CommandType {","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"     * The parseCommand will parse the user input and generate a respective command object","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"     * e.g. if the user command aims to add a todo task, it should return a todo command","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"     * @param input represents raw user command","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"     * @return Command object of correct type","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws OrientoException if input is in none of the expected cases","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"    public static Command parseCommand(String input) throws OrientoException {","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"        String[] commandSplits \u003d input.split(\" \");","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"        Command command;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"        switch (commandSplits[0]) {","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"        case \"list\":","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"            break;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"        case \"todo\":","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"            command \u003d new TodoCommand(input);","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"            break;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"        case \"deadline\":","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"            command \u003d new DeadlineCommand(input);","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"            break;","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"        case \"event\":","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"            command \u003d new EventCommand(input);","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"            break;","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"        case \"find\":","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"            command \u003d new FindCommand(commandSplits[1]);","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"            break;","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"        case \"mark\":","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"            command \u003d new MarkCommand(commandSplits[1]);","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"            break;","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"        case \"unmark\":","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"            command \u003d new UnmarkCommand(commandSplits[1]);","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"            break;","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"J-Y-Yan"},"content":"        case \"delete\":","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"J-Y-Yan"},"content":"            command \u003d new DeleteCommand(commandSplits[1]);","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"J-Y-Yan"},"content":"            break;","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"J-Y-Yan"},"content":"        case \"bye\":","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"J-Y-Yan"},"content":"            command \u003d new ByeCommand();","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"J-Y-Yan"},"content":"            break;","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"J-Y-Yan"},"content":"        case \"help\":","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"J-Y-Yan"},"content":"            command \u003d new HelpCommand();","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"J-Y-Yan"},"content":"            break;","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"J-Y-Yan"},"content":"        default:","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"J-Y-Yan"},"content":"            throw new OrientoException();","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"J-Y-Yan"},"content":"        return command;","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":59}},{"path":"src/main/java/commandFormat/TimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package commandFormat;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"public class TimeParser {","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"     * This changes a string of time into a dataTIme object","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"     * It only supports string with format of DDMMYYYY HHMM format","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"     * @param input time string","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"     * @return LocalDataTIme object","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"    public static LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"        return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"     * This method can transform a dataTime object into a string information of dateTime","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"     * @param dateTime object of LocalDateTime","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"     * @return converted string","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"    public static String convertDateTimetoString(LocalDateTime dateTime) {","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":33}},{"path":"src/main/java/exception/InvalidTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package exception;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"public class InvalidTimeException extends Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"    public InvalidTimeException(String message) {","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"        super(message);","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":9}},{"path":"src/main/java/exception/OrientoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package exception;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"public class OrientoException extends Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"    public OrientoException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"    public OrientoException(String message) {","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"        super(message);","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"    private void sendIncorrectMsg(String taskType){","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"Sorry, your command for \" + taskType + \" task is not in the correct format. Please try again.\");","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"     * Use to raises exception when incorrect format is found","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"     * tell the users what is correct format for the current input task","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"     * @param taskType represents the task type string such as \"todo\", \"deadline\", etc.","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"    public void incorrectFormatException(String taskType) {","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"        switch (taskType){","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"            sendIncorrectMsg(\"todo\");","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Correct format: todo \u0027Your Todo Task\u0027 \");","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Example: todo read book\");","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"            break;","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"            sendIncorrectMsg(\"deadline\");","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Correct format: deadline \u0027Your Deadline Task\u0027 /by \u0027Due Time\u0027 \");","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Example: deadline return book /by Sunday 6pm\");","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"            break;","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"        case \"event\":","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"            sendIncorrectMsg(\"event\");","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Correct format: event \u0027Your Event Task\u0027 /from \u0027Starting Time\u0027 /to \u0027End Time\u0027 \");","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Example: event project meeting /from Mon 2pm /to 4pm\");","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"            break;","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"        default:","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Please start with the supported task types: \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027. \");","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"J-Y-Yan":49}},{"path":"src/main/java/fileIO/FileIO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package fileIO;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import Oriento.Oriento;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import exception.OrientoException;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"import exception.InvalidTimeException;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"import task.Task;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"import task.Todo;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"import message.Text;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.File;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"public class FileIO {","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"     * This method check if target repository and input,output files is found","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"     * if not, create the file for users","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"     * if error occurs in restoring data, e.g. the saved content contains invalid contents,","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"     * clear All the data and starts with a empty file","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws IOException once cannot access file or file not found","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws OrientoException from method restoreSavedData","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"    public static void outputFileInitialization() throws IOException {","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"        checkAndCreateDataFolder();","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"        checkAndCreateFile(\"data/taskList.txt\");","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"        checkAndCreateFile(\"data/backup_taskList.txt\");","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"        clearData();","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"        try{","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"            restoreSavedData(\"data/backup_taskList.txt\");","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (Exception e){","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Failed to load the saved file. Please check if your backup is in the correct format.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"We will start with a new empty file.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"            clearData();","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"J-Y-Yan"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"J-Y-Yan"},"content":"     * @param path represents the output file path","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws IOException only when file is not found and failed to create a new file","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"J-Y-Yan"},"content":"    private static void checkAndCreateFile(String path) throws IOException {","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"J-Y-Yan"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"J-Y-Yan"},"content":"        if(!f.exists()){","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"J-Y-Yan"},"content":"            if(!f.createNewFile()){","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"J-Y-Yan"},"content":"                throw new IOException();","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"J-Y-Yan"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"J-Y-Yan"},"content":"     * similar to checkAndCreateFile","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"J-Y-Yan"},"content":"    private static void checkAndCreateDataFolder() throws IOException {","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"J-Y-Yan"},"content":"        File folder \u003d new File(\"data\");","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"J-Y-Yan"},"content":"        if (!folder.isDirectory()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"J-Y-Yan"},"content":"            if(!folder.mkdirs()){","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"J-Y-Yan"},"content":"                throw new IOException();","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"J-Y-Yan"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"J-Y-Yan"},"content":"     * save all the current content to another backup file","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"J-Y-Yan"},"content":"    public static void backupTaskFile() {","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"J-Y-Yan"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"J-Y-Yan"},"content":"            String currentContent \u003d Task.getConcatenateTasks();","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"J-Y-Yan"},"content":"            overwriteToFile(\"data/backup_taskList.txt\", currentContent);","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Oh No! I cannot save the file. Please check if the backup file is available.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"J-Y-Yan"},"content":"     * clear all the saved data and set the taskList as an empty list","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"J-Y-Yan"},"content":"     * use when error occurs in restoring data, e.g. containing message in wrong format","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws IOException if failed to access the file","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"J-Y-Yan"},"content":"    private static void clearData() throws IOException {","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"J-Y-Yan"},"content":"        Path clearFile \u003d Paths.get(\"data/taskList.txt\");","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"J-Y-Yan"},"content":"        if (Files.size(clearFile) !\u003d 0) {","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"J-Y-Yan"},"content":"            Files.write(clearFile, new byte[0], StandardOpenOption.WRITE, StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"J-Y-Yan"},"content":"        Task[] emptylist \u003d new Task[100];","lastModifiedDate":"2023-10-08"},{"lineNumber":93,"author":{"gitId":"J-Y-Yan"},"content":"        Oriento.list \u003d emptylist;","lastModifiedDate":"2023-10-08"},{"lineNumber":94,"author":{"gitId":"J-Y-Yan"},"content":"        Oriento.taskCount \u003d 0;","lastModifiedDate":"2023-10-08"},{"lineNumber":95,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"J-Y-Yan"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"J-Y-Yan"},"content":"     * @param filePath path of target file","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"J-Y-Yan"},"content":"     * @param taskAppend the content to replace","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws IOException if failed to access target file","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"J-Y-Yan"},"content":"    public static void overwriteToFile(String filePath, String taskAppend) throws IOException {","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"J-Y-Yan"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"J-Y-Yan"},"content":"        fw.write(taskAppend);","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"J-Y-Yan"},"content":"        fw.close();","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"J-Y-Yan"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"J-Y-Yan"},"content":"     * this method aims to restore all saved data from backup file once start the program","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"J-Y-Yan"},"content":"     * it implements by forming old user command for creating tasks,","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"J-Y-Yan"},"content":"     * and generate the task list using the command one by one","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"J-Y-Yan"},"content":"    private static void restoreOneTask(Scanner keyboard) throws IndexOutOfBoundsException,","lastModifiedDate":"2023-10-08"},{"lineNumber":116,"author":{"gitId":"J-Y-Yan"},"content":"            InvalidTimeException, OrientoException, IOException {","lastModifiedDate":"2023-10-08"},{"lineNumber":117,"author":{"gitId":"J-Y-Yan"},"content":"        String line \u003d keyboard.nextLine();","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"J-Y-Yan"},"content":"        line \u003d removeNumberAndDot(line).trim();  //each line looks like [T][ ] Description","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"J-Y-Yan"},"content":"        boolean isDone \u003d line.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"J-Y-Yan"},"content":"        String description \u003d line.substring(7);  //remove brackets [T][ ]","lastModifiedDate":"2023-10-08"},{"lineNumber":121,"author":{"gitId":"J-Y-Yan"},"content":"            switch (line.charAt(1)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"J-Y-Yan"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"J-Y-Yan"},"content":"                String todoCmd \u003d \"todo \" + description;","lastModifiedDate":"2023-10-08"},{"lineNumber":124,"author":{"gitId":"J-Y-Yan"},"content":"                Oriento.list[Oriento.taskCount] \u003d Todo.newTodoTask(todoCmd);","lastModifiedDate":"2023-10-08"},{"lineNumber":125,"author":{"gitId":"J-Y-Yan"},"content":"                if (isDone){","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"J-Y-Yan"},"content":"                    Oriento.list[Oriento.taskCount].restoreIsDone();","lastModifiedDate":"2023-10-08"},{"lineNumber":127,"author":{"gitId":"J-Y-Yan"},"content":"                }","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"J-Y-Yan"},"content":"                Oriento.taskCount++;","lastModifiedDate":"2023-10-08"},{"lineNumber":129,"author":{"gitId":"J-Y-Yan"},"content":"                Text.restoreTaskIntoFile();","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"J-Y-Yan"},"content":"                break;","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"J-Y-Yan"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"J-Y-Yan"},"content":"                //3.[D][ ] return book (by: Friday)","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"J-Y-Yan"},"content":"                String due \u003d ddlExtract(description);","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"J-Y-Yan"},"content":"                String ddltask \u003d description.substring(0, description.indexOf(\"(by: \")).trim();","lastModifiedDate":"2023-10-08"},{"lineNumber":136,"author":{"gitId":"J-Y-Yan"},"content":"                String ddlCmd \u003d \"deadline \" + ddltask + \" /by \" + due;","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"J-Y-Yan"},"content":"                Oriento.list[Oriento.taskCount] \u003d task.Deadline.newDdl(ddlCmd);","lastModifiedDate":"2023-10-08"},{"lineNumber":138,"author":{"gitId":"J-Y-Yan"},"content":"                if (isDone){","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"J-Y-Yan"},"content":"                    Oriento.list[Oriento.taskCount].restoreIsDone();","lastModifiedDate":"2023-10-08"},{"lineNumber":140,"author":{"gitId":"J-Y-Yan"},"content":"                }","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"J-Y-Yan"},"content":"                Oriento.taskCount++;","lastModifiedDate":"2023-10-08"},{"lineNumber":142,"author":{"gitId":"J-Y-Yan"},"content":"                Text.restoreTaskIntoFile();","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"J-Y-Yan"},"content":"                break;","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"J-Y-Yan"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"J-Y-Yan"},"content":"                String eventCmd \u003d getEventCmd(description);","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"J-Y-Yan"},"content":"                Oriento.list[Oriento.taskCount] \u003d task.Event.newEventTask(eventCmd);","lastModifiedDate":"2023-10-08"},{"lineNumber":148,"author":{"gitId":"J-Y-Yan"},"content":"                if (isDone){","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"J-Y-Yan"},"content":"                    Oriento.list[Oriento.taskCount].restoreIsDone();","lastModifiedDate":"2023-10-08"},{"lineNumber":150,"author":{"gitId":"J-Y-Yan"},"content":"                }","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"J-Y-Yan"},"content":"                Oriento.taskCount++;","lastModifiedDate":"2023-10-08"},{"lineNumber":152,"author":{"gitId":"J-Y-Yan"},"content":"                Text.restoreTaskIntoFile();","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"J-Y-Yan"},"content":"                break;","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"J-Y-Yan"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":157,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"J-Y-Yan"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":159,"author":{"gitId":"J-Y-Yan"},"content":"     * helper function to generate the old user input based on saved file","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"J-Y-Yan"},"content":"    private static String getEventCmd(String description) throws IndexOutOfBoundsException{","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"J-Y-Yan"},"content":"        int indexOfFrom \u003d description.indexOf(\"(from\");","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"J-Y-Yan"},"content":"        int indexOfTo \u003d description.indexOf(\"to:\");","lastModifiedDate":"2023-10-06"},{"lineNumber":164,"author":{"gitId":"J-Y-Yan"},"content":"        int indexOfEnd \u003d description.indexOf(\")\");","lastModifiedDate":"2023-10-08"},{"lineNumber":165,"author":{"gitId":"J-Y-Yan"},"content":"        String start \u003d description.substring(indexOfFrom + 7, indexOfTo).trim();","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"J-Y-Yan"},"content":"        String end \u003d description.substring(indexOfTo + 4, indexOfEnd);","lastModifiedDate":"2023-10-08"},{"lineNumber":167,"author":{"gitId":"J-Y-Yan"},"content":"        String eventTask \u003d description.substring(0, indexOfFrom);","lastModifiedDate":"2023-10-06"},{"lineNumber":168,"author":{"gitId":"J-Y-Yan"},"content":"        return  \"event \" + eventTask + \" /from \" + start + \" /to \" + end;","lastModifiedDate":"2023-10-06"},{"lineNumber":169,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":171,"author":{"gitId":"J-Y-Yan"},"content":"    private static String removeNumberAndDot(String input) {","lastModifiedDate":"2023-10-06"},{"lineNumber":172,"author":{"gitId":"J-Y-Yan"},"content":"        return input.replaceFirst(\"^\\\\d+\\\\.\\\\s*\", \"\");","lastModifiedDate":"2023-10-06"},{"lineNumber":173,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":175,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":176,"author":{"gitId":"J-Y-Yan"},"content":"     * helper function to extract deadline task descriptions from user input","lastModifiedDate":"2023-10-06"},{"lineNumber":177,"author":{"gitId":"J-Y-Yan"},"content":"     * expected input format: 5. [D][ ] asw (by: mon)","lastModifiedDate":"2023-10-08"},{"lineNumber":178,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":179,"author":{"gitId":"J-Y-Yan"},"content":"    private static String ddlExtract(String description) {","lastModifiedDate":"2023-10-06"},{"lineNumber":180,"author":{"gitId":"J-Y-Yan"},"content":"        int startIndex \u003d description.indexOf(\"(by: \") + 5;","lastModifiedDate":"2023-10-06"},{"lineNumber":181,"author":{"gitId":"J-Y-Yan"},"content":"        int endIndex \u003d description.indexOf(\")\");","lastModifiedDate":"2023-10-06"},{"lineNumber":182,"author":{"gitId":"J-Y-Yan"},"content":"        return description.substring(startIndex, endIndex);","lastModifiedDate":"2023-10-06"},{"lineNumber":183,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":184,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":185,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"J-Y-Yan"},"content":"     * This method will restore the saved data, but scanner the old data,","lastModifiedDate":"2023-10-21"},{"lineNumber":187,"author":{"gitId":"J-Y-Yan"},"content":"     * and simple generate a new taskList again with the saved data","lastModifiedDate":"2023-10-21"},{"lineNumber":188,"author":{"gitId":"J-Y-Yan"},"content":"     * @param DATA_PATH path of backUp file","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws IOException if failed to access files","lastModifiedDate":"2023-10-21"},{"lineNumber":190,"author":{"gitId":"J-Y-Yan"},"content":"     * Exception is generated when creating a task using the saved data","lastModifiedDate":"2023-10-21"},{"lineNumber":191,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":192,"author":{"gitId":"J-Y-Yan"},"content":"    public static void restoreSavedData(String DATA_PATH) throws IOException, OrientoException, IndexOutOfBoundsException{","lastModifiedDate":"2023-10-08"},{"lineNumber":193,"author":{"gitId":"J-Y-Yan"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":194,"author":{"gitId":"J-Y-Yan"},"content":"            File file \u003d new File(DATA_PATH);","lastModifiedDate":"2023-10-06"},{"lineNumber":195,"author":{"gitId":"J-Y-Yan"},"content":"            Scanner scan \u003d new Scanner(file);","lastModifiedDate":"2023-10-06"},{"lineNumber":196,"author":{"gitId":"J-Y-Yan"},"content":"            while (scan.hasNext()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":197,"author":{"gitId":"J-Y-Yan"},"content":"                restoreOneTask(scan);","lastModifiedDate":"2023-10-06"},{"lineNumber":198,"author":{"gitId":"J-Y-Yan"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":199,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (IndexOutOfBoundsException | InvalidTimeException ofb) {","lastModifiedDate":"2023-10-06"},{"lineNumber":200,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Failed to load the saved file. Please check if your backup is in the correct format.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":201,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"We will start with a new empty file.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":202,"author":{"gitId":"J-Y-Yan"},"content":"            clearData();","lastModifiedDate":"2023-10-06"},{"lineNumber":203,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":204,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":205,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":205}},{"path":"src/main/java/message/Text.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package message;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.File;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"import static Oriento.Oriento.list;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"import static Oriento.Oriento.taskCount;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"public class Text {","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"     * this class contains all user interacting messages","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"Hello! I\u0027m Oriento.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"What can I help you?\");","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"    public static void printHelpMessage() {","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"Sorry I do not tell you use how to give commands. Please see the following hints.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"Hint1: To create a task, please start with \u0027todo\u0027, \u0027event\u0027, \u0027deadline\u0027.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"Hint2: To modify task statue, please start with \u0027mark\u0027 or \u0027unmark\u0027.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"please use \u0027list\u0027 to look for your task list, or \u0027delete\u0027 to remove a task.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"You may use \u0027find\u0027 to search for your task.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"    public static void printByeMessage(){","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"    private static void printFileContents(String filePath) throws IOException {","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(s.nextLine());","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"J-Y-Yan"},"content":"     * Instead of printing from current list, this method print the content from a output file","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws IOException if failed to access file","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"J-Y-Yan"},"content":"    public static void printList() throws IOException{","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"J-Y-Yan"},"content":"        if (taskCount \u003d\u003d 0){","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"You don\u0027t have any tasks now. Do you want to add a new task?\");","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"J-Y-Yan"},"content":"            return;","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"J-Y-Yan"},"content":"        printFileContents(\"data/taskList.txt\");","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"J-Y-Yan"},"content":"     * write into output file every time new task is created successfully","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws IOException if failed to access tasks","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"J-Y-Yan"},"content":"    public static void createTaskSuccessMsg() throws IOException{","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(list[taskCount]);","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"J-Y-Yan"},"content":"        taskCount++;","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"J-Y-Yan"},"content":"        String taskAppend \u003d taskCount + \". \" +  list[taskCount - 1].toString() + \"\\n\";","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"J-Y-Yan"},"content":"        writeToFile(\"data/taskList.txt\", taskAppend);","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"J-Y-Yan"},"content":"    public static void restoreTaskIntoFile() throws IOException {","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"J-Y-Yan"},"content":"        String taskAppend \u003d taskCount + \". \" +  list[taskCount - 1].toString() + \"\\n\";","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"J-Y-Yan"},"content":"        writeToFile(\"data/taskList.txt\", taskAppend);","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"J-Y-Yan"},"content":"    private static void writeToFile(String filePath, String taskAppend) throws IOException {","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"J-Y-Yan"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"J-Y-Yan"},"content":"        fw.write(taskAppend);","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"J-Y-Yan"},"content":"        fw.close();","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"J-Y-Yan"},"content":"     * tell the user the task is deleted successfully","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"J-Y-Yan"},"content":"     * decrement the taskCount by 1","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"J-Y-Yan"},"content":"     * @param deleteIndex index of the deleted task","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"J-Y-Yan"},"content":"    public static void deleteTaskSuccessMsg(int deleteIndex) {","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(list[deleteIndex - 1]);","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"J-Y-Yan"},"content":"        taskCount--;","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"J-Y-Yan"},"content":"    public static void printdottedline() {","lastModifiedDate":"2023-10-08"},{"lineNumber":92,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-08"},{"lineNumber":93,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":94,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":95,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":95}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import commandFormat.TimeParser;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import exception.OrientoException;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"import exception.InvalidTimeException;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"    protected String due;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"    public Deadline(String description, String due) {","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"        super(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"        this.due \u003d due;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"     * @param userCommand  Whole userInput start from \"deadline\"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"     * @return Deadline object","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws OrientoException  Raises exception if invalid due time while able to parse the input time","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"     *                        If failed to parse the time, just assume valid input","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"    public static Deadline newDdl(String userCommand) throws OrientoException, InvalidTimeException {","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"        // command format: deadline return book /by Sunday","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"        if (!(userCommand.contains(\"/by\"))){","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"            throw new OrientoException(\"Oh, no! I cannot detect the keyword \u0027/by\u0027 \");","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"        userCommand \u003d userCommand.substring(9);  //remove \"deadline\"","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"        if(userCommand.startsWith(\"/by\")){","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"            throw new OrientoException(\"Cannot find deadline description. Please try again.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"        int indexOfBy \u003d userCommand.indexOf(\"/by\");","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"        String ddlTask \u003d userCommand.substring(0, indexOfBy).trim();","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"        String due \u003d userCommand.substring(indexOfBy + 4);","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"        try{","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"J-Y-Yan"},"content":"            LocalDateTime  dueTime \u003d TimeParser.parseDateTime(due);","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"J-Y-Yan"},"content":"            LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"J-Y-Yan"},"content":"             if (dueTime.isBefore(now)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"J-Y-Yan"},"content":"                 throw new InvalidTimeException(\"Invalid Time! Deadline is over already!\");","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"J-Y-Yan"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (DateTimeParseException d){","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"J-Y-Yan"},"content":"            /* do nothing */","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"J-Y-Yan"},"content":"        return new Deadline(ddlTask, due);","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"J-Y-Yan"},"content":"     * print example: [D][ ] return book (by: Friday)","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"J-Y-Yan"},"content":"     * if failed to parse input time, assume user input is valid","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"J-Y-Yan"},"content":"     * @return string of task message","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"J-Y-Yan"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"J-Y-Yan"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"J-Y-Yan"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"J-Y-Yan"},"content":"            LocalDateTime  time \u003d TimeParser.parseDateTime(this.due);","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"J-Y-Yan"},"content":"            String dueTime \u003d TimeParser.convertDateTimetoString(time);","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"J-Y-Yan"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + dueTime + \")\";","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"J-Y-Yan"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + this.due + \")\";","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"J-Y-Yan":69}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import commandFormat.TimeParser;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import exception.OrientoException;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"import exception.InvalidTimeException;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"    protected String start, end;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"        super(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"     * extreact start and end from userCommand first","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"     * then test if the input is valid","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"     * if failed to parse input, assume the user is true","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"     * @InvalidTimeException caught in EventCommand class","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"    public static Event newEventTask(String userCommand) throws OrientoException,InvalidTimeException {","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"        //command format: event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"        if (!(userCommand.contains(\"/from\")) || !(userCommand.contains(\"/to\"))){","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"            throw new OrientoException(\"Oh, no! There is no \u0027/from\u0027 or \u0027/to\u0027 \");","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"        userCommand \u003d userCommand.substring(6);  //remove \"event\"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"        if(userCommand.startsWith(\"/from\")){","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"            throw new OrientoException(\"Cannot find event description. Please try again.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"        int indexOfFrom \u003d userCommand.indexOf(\"/from\");","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"        int indexOfTo \u003d userCommand.indexOf(\"/to\");","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"        String start \u003d userCommand.substring(indexOfFrom + 6, indexOfTo).trim();","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"        String end \u003d userCommand.substring(indexOfTo + 4).trim();","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"        String eventTask \u003d userCommand.substring(0, indexOfFrom).trim();","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"        testTimeInput(start, end);","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"J-Y-Yan"},"content":"        return new Event(eventTask, start, end);","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"J-Y-Yan"},"content":"     * test if the user input period for event is valid","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"J-Y-Yan"},"content":"     * @param startTime the starting time of event","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"J-Y-Yan"},"content":"     * @param endTime the end time of event","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws InvalidTimeException if the input time is invalid, which could happen in the following cases:","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"J-Y-Yan"},"content":"     * 1. end time occurs before start time","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"J-Y-Yan"},"content":"     * 2. end time is over already","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"J-Y-Yan"},"content":"    private static void testTimeInput(String startTime, String endTime) throws InvalidTimeException {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"J-Y-Yan"},"content":"        try{","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"J-Y-Yan"},"content":"            LocalDateTime start \u003d TimeParser.parseDateTime(startTime);","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"J-Y-Yan"},"content":"            LocalDateTime end \u003d TimeParser.parseDateTime(endTime);","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"J-Y-Yan"},"content":"            LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"J-Y-Yan"},"content":"            if(end.isBefore(now)){","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"J-Y-Yan"},"content":"                throw new InvalidTimeException(\"The event is ended. Please check the end time again.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"J-Y-Yan"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"J-Y-Yan"},"content":"            if(end.isBefore(start)){","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"J-Y-Yan"},"content":"                throw new InvalidTimeException(\"End time is early than start time.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"J-Y-Yan"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"J-Y-Yan"},"content":"        } catch(DateTimeParseException d) {","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"J-Y-Yan"},"content":"            /* do nothing */","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"J-Y-Yan"},"content":"     * print example: [E][ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"J-Y-Yan"},"content":"     * @return string containing event task information","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"J-Y-Yan"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"J-Y-Yan"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"J-Y-Yan"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"J-Y-Yan"},"content":"            LocalDateTime  tmp \u003d TimeParser.parseDateTime(this.start);","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"J-Y-Yan"},"content":"            String startTime \u003d TimeParser.convertDateTimetoString(tmp);","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"J-Y-Yan"},"content":"            tmp \u003d TimeParser.parseDateTime(this.end);","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"J-Y-Yan"},"content":"            String endTime \u003d TimeParser.convertDateTimetoString(tmp);","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"J-Y-Yan"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + startTime +  \" to: \" + endTime + \")\";","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"J-Y-Yan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"J-Y-Yan"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + this.start +  \" to: \" + this.end + \")\";","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"J-Y-Yan":87}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import Oriento.Oriento;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"public class Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"    protected String description;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"     * @param taskNo the index of the target task","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"     * @param taskCount total number of existing task in the list","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"     * @param list the target taskList (there will only be one list in this application).","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"    public void setDone(int taskNo, int taskCount, Task[] list) {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"        if ( (taskNo \u003e taskCount ) || (taskNo \u003c1) ){","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Oops! You don\u0027t have any task in this positions.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"        } else if(this.isDone){","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"You have already completed the task.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"        } else{","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"  Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"                    + \"  [X] \" + list[taskNo - 1].description);","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"    public void restoreIsDone(){","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"J-Y-Yan"},"content":"     * similar to setDone method","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"J-Y-Yan"},"content":"    public void setNotDone(int taskNo, int taskCount, Task[] list) {","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"J-Y-Yan"},"content":"        if ( (taskNo \u003e taskCount ) || (taskNo \u003c1) ){","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Oops! You don\u0027t have any task in this position.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"J-Y-Yan"},"content":"        } else if(!this.isDone){","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Oh, you haven\u0027t finished this yet.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"J-Y-Yan"},"content":"        } else{","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"J-Y-Yan"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"J-Y-Yan"},"content":"                    + \"  [ ] \" + list[taskNo - 1].description);","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"J-Y-Yan"},"content":"     * only use to update list array once an objected is deleted and removed","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"J-Y-Yan"},"content":"     * @param indexOfDelete target index","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"J-Y-Yan"},"content":"     * @return a new list object array","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"J-Y-Yan"},"content":"    public static Task[] updatedTaskList(int indexOfDelete){","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"J-Y-Yan"},"content":"        Task[] newList \u003d new  Task[100];","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"J-Y-Yan"},"content":"        int numOfCopy \u003d Oriento.list.length - indexOfDelete - 1;","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"J-Y-Yan"},"content":"        System.arraycopy(Oriento.list, 0, newList, 0, indexOfDelete);","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"J-Y-Yan"},"content":"        System.arraycopy(Oriento.list, indexOfDelete + 1, newList, indexOfDelete, numOfCopy);","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"J-Y-Yan"},"content":"        return newList;","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"J-Y-Yan"},"content":"     * This method will only read the global taskList","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"J-Y-Yan"},"content":"     * @return string contains all task data inside the global taskList","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"J-Y-Yan"},"content":"    public static String getConcatenateTasks() {","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"J-Y-Yan"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"J-Y-Yan"},"content":"        for (int i \u003d 0; i \u003c Oriento.taskCount; i++) {","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"J-Y-Yan"},"content":"            String taskAppend \u003d (i +1) + \". \" +  Oriento.list[i].toString();","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"J-Y-Yan"},"content":"            stringBuilder.append(taskAppend).append(\"\\n\");","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"J-Y-Yan"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"J-Y-Yan"},"content":"    public String getDescription() {","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"J-Y-Yan"},"content":"        return description;","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"J-Y-Yan"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"J-Y-Yan"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"J-Y-Yan"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"J-Y-Yan":91}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import exception.OrientoException;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"        super(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"    public static Todo newTodoTask(String userCommand) throws OrientoException {","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"        String[] todoSplit \u003d userCommand.split(\" \", 2);","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"        if ( todoSplit[1].isEmpty() ){","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"            throw new OrientoException(\"You got nothing to create. Please try again.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"        return new Todo(todoSplit[1]);","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"     * print example: [T][ ] read book","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"     * @return string contains todo task information","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"        return \"[T]\" + super.toString() ;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"J-Y-Yan":27}},{"path":"src/text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"Hello! I\u0027m Oriento.","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"What can I do for you?","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"[T][ ] read book","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"[T][ ] play piano","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"  Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"  [X] play piano","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"[D][ ] return book (by: Friday)","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"[E][ ] java lesson (from: Friday 4pm to: 6pm)","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"Oh, you haven\u0027t finished this yet.","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"1.[T][ ] read book","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"2.[T][X] play piano","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"3.[D][ ] return book (by: Friday)","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"4.[E][ ] java lesson (from: Friday 4pm to: 6pm)","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"J-Y-Yan":22}},{"path":"src/text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"todo read book","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"todo play piano","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"mark 2","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"deadline return book /by Friday","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"event java lesson /from Friday 4pm /to 6pm","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"unmark 4","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"list","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"bye","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"J-Y-Yan":8}},{"path":"src/text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"@ECHO OFF","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"REM delete output from previous run","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"    exit /b 1","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":")","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"REM compare the output to the expected output","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"J-Y-Yan":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"todo read book","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"todo play piano","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"mark 2","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"deadline return book /by Friday","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"event java lesson /from Friday 4pm /to 6pm","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"unmark 4","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"list","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"bye","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"J-Y-Yan":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"J-Y-Yan":1,"-":20}}]
