[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Cazh1"},"content":"# Nuke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Cazh1"},"content":"3. After that, locate the `src/main/java/Nuke.java` file, right-click it, and choose `Run Nuke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Cazh1":2,"-":22}},{"path":"src/main/java/Nuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cazh1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Cazh1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Cazh1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Cazh1"},"content":"public class Nuke {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Cazh1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Cazh1"},"content":"    public static void printGreetingMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Cazh1"},"content":"        printLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Cazh1"},"content":"        System.out.println(\"     Hello! I\u0027m Nuke\\n\" + \"     What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Cazh1"},"content":"        printLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Cazh1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Cazh1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Cazh1"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Cazh1"},"content":"        printLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Cazh1"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Cazh1"},"content":"        printLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Cazh1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Cazh1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Cazh1"},"content":"    public static void printLine() {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Cazh1"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Cazh1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Cazh1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Cazh1"},"content":"    public static void echo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Cazh1"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Cazh1"},"content":"        String item \u003d input.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Cazh1"},"content":"        if (item.equals(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Cazh1"},"content":"            printExitMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Cazh1"},"content":"            return;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Cazh1"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Cazh1"},"content":"            printLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Cazh1"},"content":"            System.out.println(item);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Cazh1"},"content":"            printLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Cazh1"},"content":"            echo();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Cazh1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Cazh1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Cazh1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Cazh1"},"content":"    public static void dialogue(ArrayList\u003cString\u003e itemList, ArrayList\u003cString\u003e markList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Cazh1"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Cazh1"},"content":"        String item \u003d input.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Cazh1"},"content":"         if (item.equals(\"bye\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Cazh1"},"content":"            printExitMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Cazh1"},"content":"            return;","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Cazh1"},"content":"        } else if (item.equals(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Cazh1"},"content":"            list(itemList, markList);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Cazh1"},"content":"        } else if (item.length() \u003e 4 \u0026\u0026 item.substring(0, 4).equals(\"mark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Cazh1"},"content":"            String[] splitItem \u003d item.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Cazh1"},"content":"            int listIndex \u003d Integer.parseInt(splitItem[1]);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Cazh1"},"content":"            mark(itemList, markList, listIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Cazh1"},"content":"        } else if (item.length() \u003e 6 \u0026\u0026 item.substring(0, 6).equals(\"unmark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Cazh1"},"content":"            String[] splitItem \u003d item.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Cazh1"},"content":"            int listIndex \u003d Integer.parseInt(splitItem[1]);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Cazh1"},"content":"            unmark(itemList, markList, listIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Cazh1"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"Cazh1"},"content":"            add(itemList, markList, item);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Cazh1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Cazh1"},"content":"        dialogue(itemList, markList);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Cazh1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Cazh1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Cazh1"},"content":"    public static void add(ArrayList\u003cString\u003e itemList, ArrayList\u003cString\u003e markList, String item) {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Cazh1"},"content":"            printLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"Cazh1"},"content":"            itemList.add(item);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Cazh1"},"content":"            markList.add(\"[ ]\");","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"Cazh1"},"content":"            System.out.printf(\"     added: %s\\n\", item);","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Cazh1"},"content":"            printLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"Cazh1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Cazh1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Cazh1"},"content":"    public static void list(ArrayList\u003cString\u003e itemList, ArrayList\u003cString\u003e markList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Cazh1"},"content":"        printLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"Cazh1"},"content":"        System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Cazh1"},"content":"        for (int i \u003d 0; i \u003c itemList.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Cazh1"},"content":"            System.out.printf(\"     %d.%s %s\\n\", i+1, markList.get(i), itemList.get(i));","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Cazh1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"Cazh1"},"content":"        printLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"Cazh1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Cazh1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Cazh1"},"content":"    public static void mark(ArrayList\u003cString\u003e itemList, ArrayList\u003cString\u003e markList, int listIndex) {","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"Cazh1"},"content":"        printLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"Cazh1"},"content":"        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"Cazh1"},"content":"        markList.set(listIndex - 1, \"[X]\");","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"Cazh1"},"content":"        System.out.printf(\"       %s %s\\n\", markList.get(listIndex - 1), itemList.get(listIndex - 1));","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"Cazh1"},"content":"        printLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"Cazh1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"Cazh1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Cazh1"},"content":"    public static void unmark(ArrayList\u003cString\u003e itemList, ArrayList\u003cString\u003e markList, int listIndex) {","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"Cazh1"},"content":"        printLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"Cazh1"},"content":"        System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"Cazh1"},"content":"        markList.set(listIndex - 1, \"[ ]\");","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"Cazh1"},"content":"        System.out.printf(\"       %s %s\\n\", markList.get(listIndex - 1), itemList.get(listIndex - 1));","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"Cazh1"},"content":"        printLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"Cazh1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"Cazh1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"Cazh1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Cazh1"},"content":"        printGreetingMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"Cazh1"},"content":"        ArrayList\u003cString\u003e itemList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"Cazh1"},"content":"        ArrayList\u003cString\u003e markList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"Cazh1"},"content":"        dialogue(itemList, markList);","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"Cazh1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Cazh1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Cazh1":97}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Cazh1"},"content":"java -classpath ..\\bin Nuke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Cazh1":1,"-":20}}]
