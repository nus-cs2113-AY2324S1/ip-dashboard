[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"# Nupjuk project template","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"3. After that, locate the `src/main/java/Nupjuk.java` file, right-click it, and choose `Run Nupjuk.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"junhyeong0411":2,"-":22}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":" *  Deadline class","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":" *  tasks with deadline","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"    public Deadline(String description, LocalDateTime deadline){","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"        super(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"    public String getTypeIcon(){","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"        return \"D\";","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"     * Make description with datetimeformat","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"     * @return description in deadline format","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"    public String getDescription(){","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\", Locale.ENGLISH);","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"        // delete \"(by:\" and \")\"","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"        return String.format(\"%s (by: %s)\", description, deadline.format(formatter));","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"junhyeong0411":34}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":" *  Event class","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":" *  extends Task class","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":" *  tasks with start and end time","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":"public class Event extends Task{","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to){","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"        super(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"    public String getTypeIcon(){","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"        return \"E\";","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"     * Make description with datetimeformat","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"     * @return description in event format","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"    public String getDescription(){","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\", Locale.ENGLISH);","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"        return String.format(\"%s (from: %s to: %s)\", description, from.format(formatter), to.format(formatter));","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"junhyeong0411":34}},{"path":"src/main/java/FormatChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":" * Check format of User command","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":" * If there is a problem, throws exceptions","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"public class FormatChecker {","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"     * Raise exception if the string is not numeric","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"     * @param s given string that have to be checked if numeric","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"     * @return parsed integer","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"    public static boolean isNumeric(String s){","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"        try{","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"            Integer.parseInt(s);","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"            return true;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"        } catch(NumberFormatException e){","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"            return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"     * Raise exception if command argument is not enough","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"     * @param input given string to be checked","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"     * @throws InputFormatException if command doesn\u0027t have enough arguments","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"    public static void checkInputFormat(String[] input) throws InputFormatException{","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"        if(input.length !\u003d2){","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"            throw new InputFormatException();","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"     * check deadline format","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"     * @param schedules string in deadline format","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"     * @throws InputFormatException if command is not in deadline format","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"    /* function for check deadline input format */","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"    public static void checkDeadlineFormat(String[] schedules) throws InputFormatException{","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"        if(schedules.length !\u003d2 || !schedules[1].trim().startsWith(\"by\")){","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"            throw new InputFormatException();","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"     * check event format","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"     * @param schedules string in event format","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"     * @throws InputFormatException if command is not in event format","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"    public static void checkEventFormat(String[] schedules) throws InputFormatException{","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"        if(schedules.length !\u003d3 ||","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"                !schedules[1].trim().startsWith(\"from\") ||","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"                !schedules[2].trim().startsWith(\"to\")){","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"            throw new InputFormatException();","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"junhyeong0411":63}},{"path":"src/main/java/InputFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":" * Exception for Nupjuk","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":" * Raised when command is not in format of Nupjuk Command","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"public class InputFormatException extends Exception {","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"junhyeong0411":7}},{"path":"src/main/java/Nupjuk.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"import java.io.*;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"public class Nupjuk {","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"    /* for file output */","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"    static PrintWriter pw;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":"    private static Storage storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"    private static Ui ui;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"    public Nupjuk(String filePath){","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"            tasks \u003d new TaskList(storage.loadTask());","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"            ui.printLine (\"Creating New File\");","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"     * runs the program until user says \"Bye\"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"     * @throws IOException if problem in input and parsing","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"    public void run() throws IOException{","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"        boolean isTerminate \u003d false;","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"        while(!isTerminate){ // run program until terminate","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"            String cmd \u003d input.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"            isTerminate \u003d ui.runCommand(cmd, tasks, storage);","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"        ui.exitProg();","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"    public static void main(String[] args) throws IOException{","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"        new Nupjuk(\"./nupjuk.txt\").run();","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"junhyeong0411":46,"-":2}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"import java.io.File;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":" * Read \u0026 save txt file","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":" * If no file exist, create new one","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"public class Storage {","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"    // path for save and load txt","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"    protected String path;","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"    public Storage(String path){","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"     * Save tasks to disk","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"     * @param tasks the list of todos / deadlines / events","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"     * @throws IOException when problems in format","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"    public void saveTask(TaskList tasks) throws IOException {","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"        FileWriter fw \u003d new FileWriter(\"./nupjuk.txt\");","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"        for(int i\u003d0;i\u003ctasks.getSize();i++){","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"            fw.write(String.format(\"%s | %d | %s\\r\\n\",","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"                    task.getTypeIcon(), task.isDone?1:0 , task.getDescription()));","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"        fw.close();","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"     * Automatically load tasks from disk","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"     * @return list of todos / deadlines / events","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"     * @throws FileNotFoundException when there is no file in given path","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"    public ArrayList\u003cTask\u003e loadTask() throws FileNotFoundException {","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"        ArrayList \u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"        File f \u003d new File (this.path);","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"            String[] taskTokens \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"            if(taskTokens[0].trim().equals(\"T\")){","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"                Todo todo \u003d new Todo(taskTokens[2].trim());","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"                if(taskTokens[1].trim().equals(\"1\")){","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"                    todo.doMark();","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"                }","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"                tasks.add(todo);","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"            } else if(taskTokens[0].trim().equals(\"D\")){","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"                // task (by: deadline)","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"junhyeong0411"},"content":"                String[] schedules \u003d taskTokens[2].split(\" \\\\(by: \");","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"junhyeong0411"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\", Locale.ENGLISH);","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"junhyeong0411"},"content":"                // delete \"(by:\" and \")\"","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"junhyeong0411"},"content":"                Deadline deadline \u003d new Deadline(schedules[0].trim(),","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"junhyeong0411"},"content":"                        LocalDateTime.parse(schedules[1].substring(0, schedules[1].length()-1).trim(), formatter));","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"junhyeong0411"},"content":"                if(taskTokens[1].trim().equals(\"1\")){","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"junhyeong0411"},"content":"                    deadline.doMark();","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"junhyeong0411"},"content":"                }","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"junhyeong0411"},"content":"                tasks.add(deadline);","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"junhyeong0411"},"content":"            } else{","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"junhyeong0411"},"content":"                // task (from: t to: t)","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"junhyeong0411"},"content":"                String[] schedules \u003d taskTokens[2].split(\" \\\\(from: \");","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"junhyeong0411"},"content":"                String[] times \u003d schedules[1].split(\" to: \");","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"junhyeong0411"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\", Locale.ENGLISH);","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"junhyeong0411"},"content":"                Event event \u003d new Event(schedules[0].trim(),","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"junhyeong0411"},"content":"                        LocalDateTime.parse(times[0].trim(), formatter),","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"junhyeong0411"},"content":"                        LocalDateTime.parse(times[1].substring(0, times[1].length()-1).trim(),formatter));","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"junhyeong0411"},"content":"                if(taskTokens[1].trim().equals(\"1\")){","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"junhyeong0411"},"content":"                    event.doMark();","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"junhyeong0411"},"content":"                }","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"junhyeong0411"},"content":"                tasks.add(event);","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"junhyeong0411"},"content":"        return tasks;","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"junhyeong0411":89}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":" * Task class","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":" * including description and check whether it has been completed","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"public class Task{","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"    protected String description;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"    public Task(String description){","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"        return description;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"    public String getTypeIcon(){","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"        return \" \";","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"    public void doMark(){","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"    public void unMark(){","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"junhyeong0411":34}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":" * List of tasks","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":" * Based on ArrayList","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"public class TaskList {","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":"    public TaskList(){","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"    /* get ith Task */","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"    public Task getTask(int idx){","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"        return tasks.get(idx);","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"    public void addTask(Task task){","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"        tasks.add(task);","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"    public void removeTask(int idx){","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"        tasks.remove(idx);","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"    public int getSize(){","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"        return tasks.size();","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"junhyeong0411":34}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":" *  Todo class","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":" *  extends Task class","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":" *  tasks without any date/time attached to it","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"    public Todo(String description){","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"        super(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"    public String getTypeIcon(){","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"        return \"T\";","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"junhyeong0411":15}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":" * Shows the User Interface","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":" * Print things in specific format","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"public class Ui {","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"    public Ui(){","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"        printLine(\"Hello! I\u0027m Nupjuk\");","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"        printLine(\"What can I do for you?\");","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"     * print a line starts with four spaces","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"     * @param s String to print out","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"    public void printLine(String s){","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"        System.out.println(\"     \" + s);","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"     * run the user-input commmand","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"     * If user inputs \"bye\", returns true to terminate infinite loop of run() function","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"     * Otherwise, returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"     * @param cmd command string that user inputted","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"     * @param tasks List of Todos/Deadlines/Events","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"     * @param storage Where to save and load","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"     * @return terminates or not","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"     * @throws IOException if problem in input and parsing","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"    public boolean runCommand(String cmd, TaskList tasks, Storage storage) throws IOException {","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"        String[] tokens \u003d cmd.split(\" \", 2);","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"        //System.out.println(tokens[0]);","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"        if(cmd.equals(\"bye\")){ // bye command","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"            return true;","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"        } else if(cmd.equals(\"list\")){","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"            if(tasks.getSize() \u003d\u003d 0){","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"Nothing in the list\");","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"            else{","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"                for(int i\u003d0;i\u003ctasks.getSize();i++){","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"                    Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"                    printLine(String.format(\"%d.[%s][%s] %s\",","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"                            i+1, task.getTypeIcon(), task.getStatusIcon(), task.getDescription()));","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"                }","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"            System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"junhyeong0411"},"content":"        } else if(tokens[0].equals(\"mark\")){","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"junhyeong0411"},"content":"            int mark_idx;","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"junhyeong0411"},"content":"            try {","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"junhyeong0411"},"content":"                mark_idx \u003d Integer.parseInt(tokens[1]) - 1; // index starts from 0","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"junhyeong0411"},"content":"            } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"☹ OOPS!!! \u003cmark\u003e needs one integer parameter!\");","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"junhyeong0411"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"junhyeong0411"},"content":"                return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"junhyeong0411"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"☹ OOPS!!! Task number should be one integer!\");","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"junhyeong0411"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"junhyeong0411"},"content":"                return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"junhyeong0411"},"content":"            try {","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"junhyeong0411"},"content":"                tasks.getTask(mark_idx).doMark();","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"junhyeong0411"},"content":"            } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"☹ OOPS!!! Task number is out of List!\");","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"junhyeong0411"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"junhyeong0411"},"content":"                return true;","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"junhyeong0411"},"content":"            printLine(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"junhyeong0411"},"content":"            printLine(\" [\" + tasks.getTask(mark_idx).getStatusIcon() + \"] \" + tasks.getTask(mark_idx).getDescription());","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"junhyeong0411"},"content":"            System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"junhyeong0411"},"content":"            storage.saveTask(tasks);","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"junhyeong0411"},"content":"        } else if(tokens[0].equals(\"unmark\")){","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"junhyeong0411"},"content":"            int mark_idx;","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"junhyeong0411"},"content":"            try {","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"junhyeong0411"},"content":"                mark_idx \u003d Integer.parseInt(tokens[1]) - 1; // index starts from 0","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"junhyeong0411"},"content":"            } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"☹ OOPS!!! \u003cunmark\u003e needs one integer parameter!\");","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"junhyeong0411"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"junhyeong0411"},"content":"                return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"junhyeong0411"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"☹ OOPS!!! Task number should be one integer!\");","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"junhyeong0411"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"junhyeong0411"},"content":"                return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"junhyeong0411"},"content":"            try {","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"junhyeong0411"},"content":"                tasks.getTask(mark_idx).doMark();","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"junhyeong0411"},"content":"            } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"☹ OOPS!!! Task number is out of List!\");","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"junhyeong0411"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"junhyeong0411"},"content":"                return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":112,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":113,"author":{"gitId":"junhyeong0411"},"content":"            printLine(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"junhyeong0411"},"content":"            printLine(\" [\" + tasks.getTask(mark_idx).getStatusIcon() + \"] \" + tasks.getTask(mark_idx).getDescription());","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"junhyeong0411"},"content":"            System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"junhyeong0411"},"content":"            storage.saveTask(tasks);","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"junhyeong0411"},"content":"        } else if(tokens[0].equals(\"todo\")) {","lastModifiedDate":"2023-10-05"},{"lineNumber":118,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":119,"author":{"gitId":"junhyeong0411"},"content":"            try{","lastModifiedDate":"2023-10-05"},{"lineNumber":120,"author":{"gitId":"junhyeong0411"},"content":"                FormatChecker.checkInputFormat(tokens);","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"junhyeong0411"},"content":"            } catch (InputFormatException e){","lastModifiedDate":"2023-10-05"},{"lineNumber":122,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"☹ OOPS!!! \u003ctodo\u003e should be with task description\");","lastModifiedDate":"2023-10-05"},{"lineNumber":123,"author":{"gitId":"junhyeong0411"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":124,"author":{"gitId":"junhyeong0411"},"content":"                return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":126,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":127,"author":{"gitId":"junhyeong0411"},"content":"            // make and add to list","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"junhyeong0411"},"content":"            printLine(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-10-05"},{"lineNumber":129,"author":{"gitId":"junhyeong0411"},"content":"            Todo todo \u003d new Todo(tokens[1]);","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"junhyeong0411"},"content":"            tasks.addTask(todo);","lastModifiedDate":"2023-10-05"},{"lineNumber":131,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":132,"author":{"gitId":"junhyeong0411"},"content":"            printLine(String.format(\"  [%s][%s] %s\",","lastModifiedDate":"2023-10-05"},{"lineNumber":133,"author":{"gitId":"junhyeong0411"},"content":"                    todo.getTypeIcon(), todo.getStatusIcon(), todo.getDescription()));","lastModifiedDate":"2023-10-05"},{"lineNumber":134,"author":{"gitId":"junhyeong0411"},"content":"            printLine(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));","lastModifiedDate":"2023-10-05"},{"lineNumber":135,"author":{"gitId":"junhyeong0411"},"content":"            System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":136,"author":{"gitId":"junhyeong0411"},"content":"            storage.saveTask(tasks);","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":138,"author":{"gitId":"junhyeong0411"},"content":"        } else if(tokens[0].equals(\"deadline\")){","lastModifiedDate":"2023-10-05"},{"lineNumber":139,"author":{"gitId":"junhyeong0411"},"content":"            // error handling","lastModifiedDate":"2023-10-05"},{"lineNumber":140,"author":{"gitId":"junhyeong0411"},"content":"            try{","lastModifiedDate":"2023-10-05"},{"lineNumber":141,"author":{"gitId":"junhyeong0411"},"content":"                FormatChecker.checkInputFormat(tokens);","lastModifiedDate":"2023-10-05"},{"lineNumber":142,"author":{"gitId":"junhyeong0411"},"content":"            } catch (InputFormatException e){","lastModifiedDate":"2023-10-05"},{"lineNumber":143,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"☹ OOPS!!! \u003cdeadline\u003e should be with task description and deadline\");","lastModifiedDate":"2023-10-05"},{"lineNumber":144,"author":{"gitId":"junhyeong0411"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":145,"author":{"gitId":"junhyeong0411"},"content":"                return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":146,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":147,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":148,"author":{"gitId":"junhyeong0411"},"content":"            // input format: description / deadline","lastModifiedDate":"2023-10-05"},{"lineNumber":149,"author":{"gitId":"junhyeong0411"},"content":"            String[] schedules \u003d tokens[1].split(\"/\", 2);","lastModifiedDate":"2023-10-05"},{"lineNumber":150,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":151,"author":{"gitId":"junhyeong0411"},"content":"            // error handling","lastModifiedDate":"2023-10-05"},{"lineNumber":152,"author":{"gitId":"junhyeong0411"},"content":"            try{","lastModifiedDate":"2023-10-05"},{"lineNumber":153,"author":{"gitId":"junhyeong0411"},"content":"                FormatChecker.checkDeadlineFormat(schedules);","lastModifiedDate":"2023-10-05"},{"lineNumber":154,"author":{"gitId":"junhyeong0411"},"content":"            } catch (InputFormatException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":155,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"☹ OOPS!!! \u003cdeadline\u003e needs argument like (work/by time)\");","lastModifiedDate":"2023-10-05"},{"lineNumber":156,"author":{"gitId":"junhyeong0411"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":157,"author":{"gitId":"junhyeong0411"},"content":"                return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":158,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":159,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":160,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"junhyeong0411"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\", Locale.ENGLISH);","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"junhyeong0411"},"content":"            LocalDateTime date;","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"junhyeong0411"},"content":"            // using datetime format","lastModifiedDate":"2023-10-06"},{"lineNumber":164,"author":{"gitId":"junhyeong0411"},"content":"            try{","lastModifiedDate":"2023-10-06"},{"lineNumber":165,"author":{"gitId":"junhyeong0411"},"content":"                date \u003d LocalDateTime.parse(schedules[1].trim().substring(2).trim(), formatter);","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"junhyeong0411"},"content":"            } catch (DateTimeParseException e){","lastModifiedDate":"2023-10-06"},{"lineNumber":167,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"☹ OOPS!!! time must be this form: dd-MM-yyyy hhmm\");","lastModifiedDate":"2023-10-06"},{"lineNumber":168,"author":{"gitId":"junhyeong0411"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-06"},{"lineNumber":169,"author":{"gitId":"junhyeong0411"},"content":"                return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":171,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":172,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":173,"author":{"gitId":"junhyeong0411"},"content":"            // make and add to list","lastModifiedDate":"2023-10-05"},{"lineNumber":174,"author":{"gitId":"junhyeong0411"},"content":"            printLine(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-10-05"},{"lineNumber":175,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":176,"author":{"gitId":"junhyeong0411"},"content":"            Deadline deadline \u003d new Deadline(schedules[0].trim(), date);","lastModifiedDate":"2023-10-06"},{"lineNumber":177,"author":{"gitId":"junhyeong0411"},"content":"            tasks.addTask(deadline);","lastModifiedDate":"2023-10-05"},{"lineNumber":178,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":179,"author":{"gitId":"junhyeong0411"},"content":"            printLine(String.format(\"  [%s][%s] %s\",","lastModifiedDate":"2023-10-05"},{"lineNumber":180,"author":{"gitId":"junhyeong0411"},"content":"                    deadline.getTypeIcon(), deadline.getStatusIcon(), deadline.getDescription()));","lastModifiedDate":"2023-10-05"},{"lineNumber":181,"author":{"gitId":"junhyeong0411"},"content":"            printLine(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));","lastModifiedDate":"2023-10-05"},{"lineNumber":182,"author":{"gitId":"junhyeong0411"},"content":"            System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":183,"author":{"gitId":"junhyeong0411"},"content":"            storage.saveTask(tasks);","lastModifiedDate":"2023-10-06"},{"lineNumber":184,"author":{"gitId":"junhyeong0411"},"content":"        } else if(tokens[0].equals(\"event\")){","lastModifiedDate":"2023-10-05"},{"lineNumber":185,"author":{"gitId":"junhyeong0411"},"content":"            // error handling","lastModifiedDate":"2023-10-05"},{"lineNumber":186,"author":{"gitId":"junhyeong0411"},"content":"            try{","lastModifiedDate":"2023-10-05"},{"lineNumber":187,"author":{"gitId":"junhyeong0411"},"content":"                FormatChecker.checkInputFormat(tokens);","lastModifiedDate":"2023-10-05"},{"lineNumber":188,"author":{"gitId":"junhyeong0411"},"content":"            } catch (InputFormatException e){","lastModifiedDate":"2023-10-05"},{"lineNumber":189,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"☹ OOPS!!! \u003cevent\u003e should be with task description and start/end time\");","lastModifiedDate":"2023-10-05"},{"lineNumber":190,"author":{"gitId":"junhyeong0411"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":191,"author":{"gitId":"junhyeong0411"},"content":"                return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":192,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":193,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":194,"author":{"gitId":"junhyeong0411"},"content":"            // input format: description / deadline","lastModifiedDate":"2023-10-05"},{"lineNumber":195,"author":{"gitId":"junhyeong0411"},"content":"            String[] schedules \u003d tokens[1].split(\"/\", 3);","lastModifiedDate":"2023-10-05"},{"lineNumber":196,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":197,"author":{"gitId":"junhyeong0411"},"content":"            // error handling","lastModifiedDate":"2023-10-05"},{"lineNumber":198,"author":{"gitId":"junhyeong0411"},"content":"            try{","lastModifiedDate":"2023-10-05"},{"lineNumber":199,"author":{"gitId":"junhyeong0411"},"content":"                FormatChecker.checkEventFormat(schedules);","lastModifiedDate":"2023-10-05"},{"lineNumber":200,"author":{"gitId":"junhyeong0411"},"content":"            } catch (InputFormatException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":201,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"☹ OOPS!!! \u003cevent\u003e needs input like (work /from start /to end)\");","lastModifiedDate":"2023-10-05"},{"lineNumber":202,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"time must be this form: dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-10-06"},{"lineNumber":203,"author":{"gitId":"junhyeong0411"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-06"},{"lineNumber":204,"author":{"gitId":"junhyeong0411"},"content":"                return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":205,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":206,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":207,"author":{"gitId":"junhyeong0411"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\", Locale.ENGLISH);","lastModifiedDate":"2023-10-06"},{"lineNumber":208,"author":{"gitId":"junhyeong0411"},"content":"            LocalDateTime from;","lastModifiedDate":"2023-10-06"},{"lineNumber":209,"author":{"gitId":"junhyeong0411"},"content":"            LocalDateTime to;","lastModifiedDate":"2023-10-06"},{"lineNumber":210,"author":{"gitId":"junhyeong0411"},"content":"            // using datetime format","lastModifiedDate":"2023-10-06"},{"lineNumber":211,"author":{"gitId":"junhyeong0411"},"content":"            try{","lastModifiedDate":"2023-10-06"},{"lineNumber":212,"author":{"gitId":"junhyeong0411"},"content":"                from \u003d LocalDateTime.parse(schedules[1].trim().substring(4).trim(), formatter);","lastModifiedDate":"2023-10-06"},{"lineNumber":213,"author":{"gitId":"junhyeong0411"},"content":"                to \u003d LocalDateTime.parse(schedules[2].trim().substring(2).trim(), formatter);","lastModifiedDate":"2023-10-06"},{"lineNumber":214,"author":{"gitId":"junhyeong0411"},"content":"            } catch (DateTimeParseException e){","lastModifiedDate":"2023-10-06"},{"lineNumber":215,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"☹ OOPS!!! time must be this form: dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-10-06"},{"lineNumber":216,"author":{"gitId":"junhyeong0411"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":217,"author":{"gitId":"junhyeong0411"},"content":"                return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":218,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":219,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":220,"author":{"gitId":"junhyeong0411"},"content":"            // make and add to list","lastModifiedDate":"2023-10-05"},{"lineNumber":221,"author":{"gitId":"junhyeong0411"},"content":"            printLine(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-10-05"},{"lineNumber":222,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":223,"author":{"gitId":"junhyeong0411"},"content":"            Event event \u003d new Event(schedules[0].trim(), from, to);","lastModifiedDate":"2023-10-06"},{"lineNumber":224,"author":{"gitId":"junhyeong0411"},"content":"            tasks.addTask(event);","lastModifiedDate":"2023-10-05"},{"lineNumber":225,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":226,"author":{"gitId":"junhyeong0411"},"content":"            printLine(String.format(\"  [%s][%s] %s\",","lastModifiedDate":"2023-10-05"},{"lineNumber":227,"author":{"gitId":"junhyeong0411"},"content":"                    event.getTypeIcon(), event.getStatusIcon(), event.getDescription()));","lastModifiedDate":"2023-10-05"},{"lineNumber":228,"author":{"gitId":"junhyeong0411"},"content":"            printLine(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));","lastModifiedDate":"2023-10-05"},{"lineNumber":229,"author":{"gitId":"junhyeong0411"},"content":"            System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":230,"author":{"gitId":"junhyeong0411"},"content":"            storage.saveTask(tasks);","lastModifiedDate":"2023-10-06"},{"lineNumber":231,"author":{"gitId":"junhyeong0411"},"content":"        } else if(tokens[0].equals(\"delete\")){","lastModifiedDate":"2023-10-05"},{"lineNumber":232,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":233,"author":{"gitId":"junhyeong0411"},"content":"            int del_idx;","lastModifiedDate":"2023-10-05"},{"lineNumber":234,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":235,"author":{"gitId":"junhyeong0411"},"content":"            try {","lastModifiedDate":"2023-10-05"},{"lineNumber":236,"author":{"gitId":"junhyeong0411"},"content":"                del_idx \u003d Integer.parseInt(tokens[1]) - 1; // index starts from 0","lastModifiedDate":"2023-10-05"},{"lineNumber":237,"author":{"gitId":"junhyeong0411"},"content":"            } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2023-10-05"},{"lineNumber":238,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"☹ OOPS!!! \u003cdelete\u003e needs one integer parameter!\");","lastModifiedDate":"2023-10-05"},{"lineNumber":239,"author":{"gitId":"junhyeong0411"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":240,"author":{"gitId":"junhyeong0411"},"content":"                return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":241,"author":{"gitId":"junhyeong0411"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":242,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"☹ OOPS!!! Task number should be one integer!\");","lastModifiedDate":"2023-10-05"},{"lineNumber":243,"author":{"gitId":"junhyeong0411"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":244,"author":{"gitId":"junhyeong0411"},"content":"                return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":245,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":246,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":247,"author":{"gitId":"junhyeong0411"},"content":"            Task del_task;","lastModifiedDate":"2023-10-05"},{"lineNumber":248,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":249,"author":{"gitId":"junhyeong0411"},"content":"            try {","lastModifiedDate":"2023-10-05"},{"lineNumber":250,"author":{"gitId":"junhyeong0411"},"content":"                del_task \u003d tasks.getTask(del_idx);","lastModifiedDate":"2023-10-05"},{"lineNumber":251,"author":{"gitId":"junhyeong0411"},"content":"                tasks.removeTask(del_idx);","lastModifiedDate":"2023-10-05"},{"lineNumber":252,"author":{"gitId":"junhyeong0411"},"content":"            } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-10-05"},{"lineNumber":253,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"☹ OOPS!!! Task number is out of List!\");","lastModifiedDate":"2023-10-05"},{"lineNumber":254,"author":{"gitId":"junhyeong0411"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":255,"author":{"gitId":"junhyeong0411"},"content":"                return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":256,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":257,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":258,"author":{"gitId":"junhyeong0411"},"content":"            printLine(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-10-05"},{"lineNumber":259,"author":{"gitId":"junhyeong0411"},"content":"            printLine(\" [\" + del_task.getStatusIcon() + \"] \" + del_task.getDescription());","lastModifiedDate":"2023-10-05"},{"lineNumber":260,"author":{"gitId":"junhyeong0411"},"content":"            printLine(String.format(\"now you have %d tasks in the list\", tasks.getSize()));","lastModifiedDate":"2023-10-05"},{"lineNumber":261,"author":{"gitId":"junhyeong0411"},"content":"            System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":262,"author":{"gitId":"junhyeong0411"},"content":"            storage.saveTask(tasks);","lastModifiedDate":"2023-10-06"},{"lineNumber":263,"author":{"gitId":"junhyeong0411"},"content":"        } else if(tokens[0].equals(\"find\")){","lastModifiedDate":"2023-10-06"},{"lineNumber":264,"author":{"gitId":"junhyeong0411"},"content":"            int foundTasks \u003d 0;","lastModifiedDate":"2023-10-06"},{"lineNumber":265,"author":{"gitId":"junhyeong0411"},"content":"            for(int i\u003d0;i\u003ctasks.getSize();i++){","lastModifiedDate":"2023-10-06"},{"lineNumber":266,"author":{"gitId":"junhyeong0411"},"content":"                Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-10-06"},{"lineNumber":267,"author":{"gitId":"junhyeong0411"},"content":"                String description \u003d task.getDescription();","lastModifiedDate":"2023-10-06"},{"lineNumber":268,"author":{"gitId":"junhyeong0411"},"content":"                if(description.contains(tokens[1].trim())){","lastModifiedDate":"2023-10-06"},{"lineNumber":269,"author":{"gitId":"junhyeong0411"},"content":"                    foundTasks++;","lastModifiedDate":"2023-10-06"},{"lineNumber":270,"author":{"gitId":"junhyeong0411"},"content":"                    if(foundTasks \u003d\u003d 1){","lastModifiedDate":"2023-10-06"},{"lineNumber":271,"author":{"gitId":"junhyeong0411"},"content":"                        printLine(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-10-06"},{"lineNumber":272,"author":{"gitId":"junhyeong0411"},"content":"                    }","lastModifiedDate":"2023-10-05"},{"lineNumber":273,"author":{"gitId":"junhyeong0411"},"content":"                    printLine(String.format(\"%d.[%s][%s] %s\",","lastModifiedDate":"2023-10-06"},{"lineNumber":274,"author":{"gitId":"junhyeong0411"},"content":"                            foundTasks, task.getTypeIcon(), task.getStatusIcon(), task.getDescription()));","lastModifiedDate":"2023-10-06"},{"lineNumber":275,"author":{"gitId":"junhyeong0411"},"content":"                }","lastModifiedDate":"2023-10-06"},{"lineNumber":276,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":277,"author":{"gitId":"junhyeong0411"},"content":"            if(foundTasks \u003d\u003d 0){","lastModifiedDate":"2023-10-06"},{"lineNumber":278,"author":{"gitId":"junhyeong0411"},"content":"                printLine(\"Cannot found any matching Tasks\");","lastModifiedDate":"2023-10-06"},{"lineNumber":279,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":280,"author":{"gitId":"junhyeong0411"},"content":"            System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-06"},{"lineNumber":281,"author":{"gitId":"junhyeong0411"},"content":"        } else{","lastModifiedDate":"2023-10-06"},{"lineNumber":282,"author":{"gitId":"junhyeong0411"},"content":"            // command not matched","lastModifiedDate":"2023-10-05"},{"lineNumber":283,"author":{"gitId":"junhyeong0411"},"content":"            printLine(\"☹ Sorry, I cannot understand your command: \" + cmd);","lastModifiedDate":"2023-10-05"},{"lineNumber":284,"author":{"gitId":"junhyeong0411"},"content":"            System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":285,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":286,"author":{"gitId":"junhyeong0411"},"content":"        return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":287,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":288,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":289,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":290,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":291,"author":{"gitId":"junhyeong0411"},"content":"     * Prints a termination message.","lastModifiedDate":"2023-10-06"},{"lineNumber":292,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":293,"author":{"gitId":"junhyeong0411"},"content":"    public void exitProg(){","lastModifiedDate":"2023-10-05"},{"lineNumber":294,"author":{"gitId":"junhyeong0411"},"content":"        // exit the program","lastModifiedDate":"2023-10-05"},{"lineNumber":295,"author":{"gitId":"junhyeong0411"},"content":"        System.out.println(\"      Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-10-05"},{"lineNumber":296,"author":{"gitId":"junhyeong0411"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-10-05"},{"lineNumber":297,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":298,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"junhyeong0411":298}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"todo BANG JUNHYEONG: Answer CS2113 tutorial questions","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"deadline weekly CS2113 quiz /by Monday 9pm","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"list","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"event CS2113 lecture /from Friday 4 /to 6pm","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"mark 1","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"list","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"junhyeong0411":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"java -classpath ..\\bin Nupjuk \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"junhyeong0411":1}}]
