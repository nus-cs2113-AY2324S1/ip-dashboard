[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"# Duke* project template","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_*. Given below are instructions on how to use it. ","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"*It has since been renamed by the author. ","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"3. After that, locate the `src/bob/Bob.java` file, right-click it, and choose `Run Bob.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"   ```text","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"    Hello! I\u0027m","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"       ___    ___  ___ ","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"      / __\\  /___\\/ __\\","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"     /__\\// //  //__\\/\\","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"    / \\/  \\/ \\_// \\/  \\","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"    \\_____/\\___/\\_____/","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"   ","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"    What can I do for you?","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"   ","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"lctxct":15,"-":14}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide ","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"Bob provides a command-line tool for managing your tasks. It helps you track the completion status of your todos, deadlines and event, and makes managing your life so much easier! ","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"- [Features](#features)","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"    - [Listing Items](#listing-items-list): `list`","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"    - [Adding todo](#adding-todo-todo): `todo`","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"    - [Adding deadline](#adding-deadline-deadline): `deadline`","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"    - [Adding event](#adding-event-event): `event`","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"    - [Marking Items](#marking-items-mark): `mark`","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"    - [Unmarking Items](#unmarking-items-unmark): `unmark`","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"    - [Finding Items](#finding-items-find): `find`","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"    - [Deleting Items](#deleting-items-delete): `delete`","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    - [Exiting the program](#exiting-the-program-bye): `bye`","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"    - [Saving the data](#saving-the-data)","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"- [Command reference](#command-reference)","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"    ","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"## Quick Start","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"1. Ensure you have Java `11` or above installed in your computer. ","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"2. Download the latest `ip.jar` from [here](https://github.com/lctxct/ip/releases/tag/A-Resubmission).","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"3. Copy the file to the folder you want to use as the *home folder* for Bob. ","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"4. Open a command terminal, locate the path to the folder you put the jar file in, and `cd` (change directory) into that folder. For example, if your file path is `C:\\Users\\potato\\bob\\ip.jar`, the full command will be ","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"    ```","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"    cd C:\\Users\\potato\\bob\\ip.jar","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"    ```","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"5. Once you\u0027re in the directory, use the following command to run the application.","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"    ```","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"    java -jar ip.jar","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"    ```","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"    If the application starts successfully, you should see the following","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"    ```","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"    Hello! I\u0027m","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"       ___    ___  ___","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"lctxct"},"content":"      / __\\  /___\\/ __\\","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"lctxct"},"content":"     /__\\// //  //__\\/\\","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"lctxct"},"content":"    / \\/  \\/ \\_// \\/  \\","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"lctxct"},"content":"    \\_____/\\___/\\_____/","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"lctxct"},"content":"    What can I do for you?","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"lctxct"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"lctxct"},"content":"    ```","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"lctxct"},"content":"    If you encounter the error message \"Unable to find file. Defaulting to empty list...\", this means that Bob is unable to find a save file at the default path `./data/bob.txt`. If this happens, Bob will automatically help to create a new save file at `./data/bob.txt`. ","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"lctxct"},"content":"6. Now that the application is running, here are some sample commands you can try: ","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"lctxct"},"content":"    * [`todo water plants`](#adding-todo-todo): Creates a new todo \"water plants\". ","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"lctxct"},"content":"    * [`list`](#listing-items-list): List all tasks. ","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"lctxct"},"content":"    * [`mark 1`](#marking-items-mark): Marks task at index 1 as complete. This task should be the first item in the `list`.  ","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"lctxct"},"content":"    * [`bye`](#exiting-the-program-bye): Exits the app.","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"lctxct"},"content":"7. To find out more about each command, view [Features](#features). To get an overview of all available commands, see the [Table of Contents](#user-guide) above or the [Command reference](#command-reference) below. ","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"lctxct"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"lctxct"},"content":"### Listing Items: `list`","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"lctxct"},"content":"Lists all items currently in the task list. ","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"lctxct"},"content":"Format: `list` ","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":63,"author":{"gitId":"lctxct"},"content":"### Adding todo: `todo`","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"lctxct"},"content":"Adds new todo to the task list, with an accompanying description of the todo. ","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"lctxct"},"content":"Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"lctxct"},"content":"Example: `todo water dog`","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"lctxct"},"content":"### Adding deadline: `deadline`","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"lctxct"},"content":"Adds new deadline to the task list, with an accompanying description of the task and the deadline. ","lastModifiedDate":"2023-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"lctxct"},"content":"Format:`deadline \u003cdescription\u003e /by \u003cdeadline\u003e`","lastModifiedDate":"2023-09-27"},{"lineNumber":73,"author":{"gitId":"lctxct"},"content":"\u003e :bulb: **Note**: The deadline should be in the form yyyy-mm-dd. ","lastModifiedDate":"2023-09-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"lctxct"},"content":"Example: `deadline pet dog /by 2023-10-06`","lastModifiedDate":"2023-09-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"lctxct"},"content":"### Adding event: `event`","lastModifiedDate":"2023-09-27"},{"lineNumber":78,"author":{"gitId":"lctxct"},"content":"Adds a new event to the task list, with an accompanying description of the event, as well as the start time and the end time of the event. ","lastModifiedDate":"2023-09-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"lctxct"},"content":"Format: `event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e`","lastModifiedDate":"2023-09-27"},{"lineNumber":81,"author":{"gitId":"lctxct"},"content":"Example: `event give dog food /from 1000 /to 1030`","lastModifiedDate":"2023-09-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"lctxct"},"content":"### Marking Items: `mark`","lastModifiedDate":"2023-09-27"},{"lineNumber":84,"author":{"gitId":"lctxct"},"content":"Marks item in task list as complete. When item is marked as complete, an \"X\" should show up in the second checkbox preceding the task description when the `list` command is executed. ","lastModifiedDate":"2023-09-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"lctxct"},"content":"Format: `mark \u003cindex\u003e`","lastModifiedDate":"2023-09-27"},{"lineNumber":87,"author":{"gitId":"lctxct"},"content":"\u003e :bulb: **Note**: `\u003cindex\u003e` follows the index of the task as per displayed by the `list` command. For instance, `mark 1` marks the first item in the list as complete. ","lastModifiedDate":"2023-09-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"lctxct"},"content":"Example: `mark 1`","lastModifiedDate":"2023-09-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":91,"author":{"gitId":"lctxct"},"content":"### Unmarking Items: `unmark`","lastModifiedDate":"2023-09-27"},{"lineNumber":92,"author":{"gitId":"lctxct"},"content":"Marks item in task list as incomplete.  When item is marked an incomplete, an \"X\" previously in the second checkbox preceding the task description when the `list` command is executed will be replaced by a space \" \".","lastModifiedDate":"2023-09-27"},{"lineNumber":93,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":94,"author":{"gitId":"lctxct"},"content":"Format: `unmark \u003cindex\u003e`","lastModifiedDate":"2023-09-27"},{"lineNumber":95,"author":{"gitId":"lctxct"},"content":"\u003e :bulb: **Note**: `\u003cindex\u003e` follows the index of the task as per displayed by the `list` command. For instance, `unmark 1` marks the first item in the list as incomplete. ","lastModifiedDate":"2023-09-27"},{"lineNumber":96,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":97,"author":{"gitId":"lctxct"},"content":"Example: `unmark 1`","lastModifiedDate":"2023-09-27"},{"lineNumber":98,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":99,"author":{"gitId":"lctxct"},"content":"### Finding Items: `find`","lastModifiedDate":"2023-09-27"},{"lineNumber":100,"author":{"gitId":"lctxct"},"content":"Finds item in the task list with the corresponding keyword. ","lastModifiedDate":"2023-09-27"},{"lineNumber":101,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":102,"author":{"gitId":"lctxct"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2023-09-27"},{"lineNumber":103,"author":{"gitId":"lctxct"},"content":"Example: `find dog`","lastModifiedDate":"2023-09-27"},{"lineNumber":104,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":105,"author":{"gitId":"lctxct"},"content":"### Deleting Items: `delete`","lastModifiedDate":"2023-09-27"},{"lineNumber":106,"author":{"gitId":"lctxct"},"content":"Deletes an item from the task list. ","lastModifiedDate":"2023-09-27"},{"lineNumber":107,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":108,"author":{"gitId":"lctxct"},"content":"Format: `delete \u003cindex\u003e`","lastModifiedDate":"2023-09-27"},{"lineNumber":109,"author":{"gitId":"lctxct"},"content":"\u003e :bulb: **Note**: `\u003cindex\u003e` follows the index of the task as per displayed by the `list` command. For instance, `delete 1` marks the first item in the list as complete. The item that was previously second in the list will now have index 1, the third index 2, and so on. ","lastModifiedDate":"2023-09-27"},{"lineNumber":110,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":111,"author":{"gitId":"lctxct"},"content":"Example: `delete 1`","lastModifiedDate":"2023-09-27"},{"lineNumber":112,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":113,"author":{"gitId":"lctxct"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2023-09-27"},{"lineNumber":114,"author":{"gitId":"lctxct"},"content":"Exits the program. If the save file `./data/bob.txt` exists, contents of the task list will be written into the save file. View [Saving the data](#saving-the-data) for more information on creating the save file. ","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":116,"author":{"gitId":"lctxct"},"content":"### Saving the data","lastModifiedDate":"2023-09-27"},{"lineNumber":117,"author":{"gitId":"lctxct"},"content":"If the save file `.\\data\\bob.txt` exists, the app will load the items contained within the next time Bob is launched. ","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":119,"author":{"gitId":"lctxct"},"content":"If the save file cannot be found, upon starting up Bob will prepend to the welcome message the following error: \"Unable to find file. Defaulting to empty list...\", before helpfully creating a save file for you!","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":121,"author":{"gitId":"lctxct"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":122,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":123,"author":{"gitId":"lctxct"},"content":"## Command Reference ","lastModifiedDate":"2023-09-27"},{"lineNumber":124,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":125,"author":{"gitId":"lctxct"},"content":"| Action       | Format                                        |","lastModifiedDate":"2023-09-27"},{"lineNumber":126,"author":{"gitId":"lctxct"},"content":"| ------------ | --------------------------------------------- |","lastModifiedDate":"2023-09-27"},{"lineNumber":127,"author":{"gitId":"lctxct"},"content":"| List items   | `list`                                        |","lastModifiedDate":"2023-09-27"},{"lineNumber":128,"author":{"gitId":"lctxct"},"content":"| Add todo     | `todo \u003cdescription\u003e`                          |","lastModifiedDate":"2023-09-27"},{"lineNumber":129,"author":{"gitId":"lctxct"},"content":"| Add deadline | `deadline \u003cdescription\u003e /by \u003cdeadline\u003e`       |","lastModifiedDate":"2023-09-27"},{"lineNumber":130,"author":{"gitId":"lctxct"},"content":"| Add event    | `event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e` |","lastModifiedDate":"2023-09-27"},{"lineNumber":131,"author":{"gitId":"lctxct"},"content":"| Mark items   | `mark \u003cindex\u003e`                                |","lastModifiedDate":"2023-09-27"},{"lineNumber":132,"author":{"gitId":"lctxct"},"content":"| Unmark items | `unmark \u003cindex\u003e`                              |","lastModifiedDate":"2023-09-27"},{"lineNumber":133,"author":{"gitId":"lctxct"},"content":"| Find items   | `find \u003ckeyword\u003e`                              |","lastModifiedDate":"2023-09-27"},{"lineNumber":134,"author":{"gitId":"lctxct"},"content":"| Delete items | `delete \u003cindex\u003e`                              |","lastModifiedDate":"2023-09-27"},{"lineNumber":135,"author":{"gitId":"lctxct"},"content":"| Exit         | `bye`                                         |","lastModifiedDate":"2023-09-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"lctxct":114,"-":22}},{"path":"src/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.commands.*;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.parser.BobParser;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"import bob.storage.Storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"import bob.tasklist.TaskList;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"import bob.ui.Ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"import java.io.File;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":" * Bob task manager.","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"public class Bob {","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"     * Initializes Bob with a default save file ./data/bob.txt.","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"    public Bob() {","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"        this(\"./data/bob.txt\");","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"     * Initializes Bob. Loads saved tasks from file path provided by filePath if the file","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"     * exists, else creates a new empty list.","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"     * @param filePath path to an existing Bob savefile.","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"    public Bob(String filePath) {","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"lctxct"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"lctxct"},"content":"            ui.printLoadingError();","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"lctxct"},"content":"            File directory \u003d file.getParentFile();","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"lctxct"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"lctxct"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"lctxct"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"lctxct"},"content":"            try {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"lctxct"},"content":"                file.createNewFile();","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"lctxct"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"lctxct"},"content":"                ui.println(String.valueOf(e));","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"lctxct"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"lctxct"},"content":"            ui.createNewFileMessage();","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"lctxct"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"lctxct"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"lctxct"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"lctxct"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"lctxct"},"content":"            ui.println(String.valueOf(e));","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"lctxct"},"content":"     * Runs Bob. Reads in user input and processes commands until \"bye\" command is received.","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"lctxct"},"content":"    public void run() {","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"lctxct"},"content":"        // String command, arguments;","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"lctxct"},"content":"        String result;","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"lctxct"},"content":"        ui.printWelcome();","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"lctxct"},"content":"        do {","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"lctxct"},"content":"            try {","lastModifiedDate":"2023-09-16"},{"lineNumber":75,"author":{"gitId":"lctxct"},"content":"                Command command \u003d new BobParser().parseCommand(ui.getCommand());","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"lctxct"},"content":"                result \u003d command.execute(tasks);","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"lctxct"},"content":"            } catch (BobException e) {","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"lctxct"},"content":"                result \u003d String.valueOf(e);","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"lctxct"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":80,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"lctxct"},"content":"            ui.printLine();","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"lctxct"},"content":"            if (result.equals(\"bye\")) {","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"lctxct"},"content":"                break;","lastModifiedDate":"2023-09-25"},{"lineNumber":85,"author":{"gitId":"lctxct"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":87,"author":{"gitId":"lctxct"},"content":"            ui.printCommandResult(result);","lastModifiedDate":"2023-09-25"},{"lineNumber":88,"author":{"gitId":"lctxct"},"content":"            ui.printLine();","lastModifiedDate":"2023-09-25"},{"lineNumber":89,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":90,"author":{"gitId":"lctxct"},"content":"        } while (true);","lastModifiedDate":"2023-09-25"},{"lineNumber":91,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"lctxct"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"lctxct"},"content":"            storage.writeTasksToFile(tasks.handleWriteList());","lastModifiedDate":"2023-09-25"},{"lineNumber":94,"author":{"gitId":"lctxct"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"lctxct"},"content":"            ui.println(String.valueOf(e));","lastModifiedDate":"2023-09-25"},{"lineNumber":96,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"lctxct"},"content":"        ui.printFarewell();","lastModifiedDate":"2023-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":101,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":102,"author":{"gitId":"lctxct"},"content":"     * Creates and starts running a new instance of Bob.","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":104,"author":{"gitId":"lctxct"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-27"},{"lineNumber":105,"author":{"gitId":"lctxct"},"content":"        new Bob().run();","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lctxct":106,"-":2}},{"path":"src/bob/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"public class BobException extends Exception {","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"    public BobException(String str) {","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"        super(str);","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"lctxct":7}},{"path":"src/bob/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.tasklist.TaskList;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":" * Signals application to exit.","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"        return \"bye\";","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":16}},{"path":"src/bob/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.BobException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.tasklist.TaskList;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":" * Represents a command that Bob can execute.","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"public abstract class Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"     * Executes command.","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"     * @param taskList List of tasks upon which command will execute on.","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"     * @return Feedback from executed command.","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"    public abstract String execute(TaskList taskList) throws BobException;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":19}},{"path":"src/bob/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.deadline.Deadline;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.tasklist.TaskList;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":" * Adds a new deadline to the task list.","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    private final Deadline newDeadline;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"     * Creates a DeadlineCommand to add a new {@code Deadline}.","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"     * @param deadline Deadline to add","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"    public DeadlineCommand(Deadline deadline) {","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"        newDeadline \u003d deadline;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"        return taskList.handleCreateDeadline(newDeadline);","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":30}},{"path":"src/bob/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.BobException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.tasklist.TaskList;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":" * Deletes item in task list at specified index.","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"    private final int deleteIdx;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"     * Creates a DeleteCommand to delete item in list at specified index.","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"     * @param deleteIdx Index of item to delete","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"    public DeleteCommand(int deleteIdx) {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"        this.deleteIdx \u003d deleteIdx;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"    public DeleteCommand(String line) {","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"        this.deleteIdx \u003d Integer.parseInt(line) - 1;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"    public String execute(TaskList taskList) throws BobException {","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"        return taskList.handleDeleteTask(deleteIdx);","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":32}},{"path":"src/bob/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.event.Event;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.tasklist.TaskList;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":" * Adds a new event to task list.","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"    private final Event newEvent;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"     * Creates a new EventCommand to add a new {@code Event}.","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"     * @param event Event to add into task list.","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"    public EventCommand(Event event) {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"        newEvent \u003d event;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"        return taskList.handleCreateEvent(newEvent);","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":29}},{"path":"src/bob/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.BobException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.tasklist.TaskList;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":" * Finds tasks which contain specified keyword.","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"    private final String keyword;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"     * Creates FindCommand to find keyword in task list.","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"     * @param line Keyword to look for in task list.","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"    public FindCommand(String line) throws BobException {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"        if (line.isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"            throw new BobException(\"No keyword specified.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"        keyword \u003d line;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"        return taskList.handleFindTask(keyword);","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":33}},{"path":"src/bob/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.tasklist.TaskList;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":" * Lists items in task list.","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"        return taskList.handleGetList();","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":16}},{"path":"src/bob/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.BobException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.tasklist.TaskList;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":" * Marks task in task list as complete.","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"    private final int markIdx;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"     * Creates MarkCommand to mark task at {@code markIdx} as complete.","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"     * @param markIdx Index of task to mark as complete.","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"    public MarkCommand(int markIdx) {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"        this.markIdx \u003d markIdx;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"    public String execute(TaskList taskList) throws BobException {","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"        return taskList.markItem(markIdx);","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":28}},{"path":"src/bob/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.tasklist.TaskList;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.todo.Todo;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":" * Adds a new todo to task list.","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"    private final Todo newTodo;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"     * Creates a new TodoCommand to add a new {@code Todo}.","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"     * @param todo Todo to add","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"    public TodoCommand(Todo todo) {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"        newTodo \u003d todo;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"        return taskList.handleCreateTodo(newTodo);","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":29}},{"path":"src/bob/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.BobException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.tasklist.TaskList;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":" * Marks a task in task list as incomplete.","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"    private final int markIdx;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"     * Creates UnmarkCommand to mark task at {@code markIdx} as incomplete.","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"     * @param markIdx Index of task to mark as incomplete.","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"    public UnmarkCommand(int markIdx) {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"        this.markIdx \u003d markIdx;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"    public UnmarkCommand(String line) {","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"        this.markIdx \u003d Integer.parseInt(line) - 1;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"    public String execute(TaskList taskList) throws BobException {","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"        return taskList.unmarkItem(markIdx);","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":33}},{"path":"src/bob/deadline/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.deadline;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"import bob.task.Task;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"     * Constructs new Deadline.","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"     * @param description description of the task.","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"     * @param deadline date to complete task by.","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"        super(description);","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"        return \"D\";","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"    public String getTask() {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"        return String.format(\"[%s][%s] %s (by: %s)\",","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"                getTypeIcon(), getStatusIcon(), description, deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"    public String getTaskForFile() {","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"        return String.format(\"%s | %b | %s | %s\", getTypeIcon(), isDone, description, deadline);","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lctxct":38}},{"path":"src/bob/event/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.event;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.task.Task;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"    protected String from;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"    protected String to;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"     * Constructs new event.","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"     * @param description description of event.","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"     * @param from start time of event.","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"     * @param to end time of event.","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"        super(description);","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"        return \"E\";","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"    public String getTask() {","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"        return String.format(\"[%s][%s] %s (from: %s to: %s)\",","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"                getTypeIcon(), getStatusIcon(), description, from, to);","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"    public String getTaskForFile() {","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"        return String.format(\"%s | %b | %s | %s | %s\", getTypeIcon(), isDone, description, from, to);","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lctxct":37}},{"path":"src/bob/parser/BobParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.BobException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.commands.*;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":" * Parses Bob commands.","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"public class BobParser {","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"     * Pattern used to parse Bob commands.","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*?)\");","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"     * Parses Bob command from {@param userInput}. Returns an Array of length 2 in the form","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"     * [commandWord, arguments].","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"     * @param userInput command sent by user.","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"     * @return Array of length two containing [commandWord, arguments].","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"    public Command parseCommand(String userInput) throws BobException {","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"        Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput);","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"            throw new BobException(\"Invalid command!\");","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"        String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"        String arguments \u003d matcher.group(\"arguments\").trim();","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"            return new ListCommand();","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"lctxct"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"lctxct"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"lctxct"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"lctxct"},"content":"            return new UnmarkCommandParser().parse(arguments);","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"lctxct"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"lctxct"},"content":"            return new TodoCommandParser().parse(arguments);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"lctxct"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"lctxct"},"content":"            return new DeadlineCommandParser().parse(arguments);","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"lctxct"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"lctxct"},"content":"            return new EventCommandParser().parse(arguments);","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"lctxct"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"lctxct"},"content":"            return new FindCommand(arguments);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"lctxct"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"lctxct"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"lctxct"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"lctxct"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"lctxct"},"content":"        default:","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"lctxct"},"content":"            throw new BobException(\"I don\u0027t know that command.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":59}},{"path":"src/bob/parser/DeadlineCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.BobException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.commands.DeadlineCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"import bob.deadline.Deadline;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"public class DeadlineCommandParser implements Parser\u003cDeadlineCommand\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003cdescription\u003e.+) (?\u003cby\u003e/by)(?\u003cdeadline\u003e[^/]+)\");","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"    public DeadlineCommand parse(String input) throws BobException {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"        final Matcher matcher \u003d COMMAND_FORMAT.matcher(input);","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"            String missing \u003d \"\";","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"            int byIdx \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"            if (byIdx \u003d\u003d -1) {","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"                missing +\u003d \"The /by of a deadline must be specified\";","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"            // Extract task description and deadline from user input","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"            if (byIdx \u003d\u003d 0 || input.isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"                missing +\u003d missing.isEmpty() ? \"\" : \"\\n\\t\";","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"                missing +\u003d \"The description of a deadline cannot be empty\";","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"            int deadlineIdx \u003d byIdx+ \"/by \".length();","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"            if (deadlineIdx \u003e\u003d input.length()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"                missing +\u003d missing.isEmpty() ? \"\" : \"\\n\\t\";","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"                missing +\u003d \"The /by of a deadline cannot be empty\";","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"lctxct"},"content":"            throw new BobException(missing);","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"lctxct"},"content":"        final String description \u003d matcher.group(\"description\").trim();","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"lctxct"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"lctxct"},"content":"            final LocalDate deadline \u003d LocalDate.parse(matcher.group(\"deadline\").trim());","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"lctxct"},"content":"            Deadline newDeadline \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"lctxct"},"content":"            return new DeadlineCommand(newDeadline);","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"lctxct"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"lctxct"},"content":"            throw new BobException(\"Date is in an incorrect format.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":52}},{"path":"src/bob/parser/DeleteCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.BobException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.commands.DeleteCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e{","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"    public DeleteCommand parse(String input) throws BobException {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"            int deleteIdx \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"            return new DeleteCommand(deleteIdx);","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"            throw new BobException(\"Unable to parse input into int.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":17}},{"path":"src/bob/parser/EventCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.BobException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.commands.EventCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"import bob.event.Event;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"public class EventCommandParser implements Parser\u003cEventCommand\u003e{","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003cdescription\u003e.+)\"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"            + \" /from (?\u003cstart\u003e[^ ]+)\"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"            + \" /to (?\u003cend\u003e[^ ]+)\");","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"    public EventCommand parse(String input) throws BobException {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"        final Matcher matcher \u003d COMMAND_FORMAT.matcher(input);","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"            throw new BobException(\"Format of command is incorrect.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"        final String description \u003d matcher.group(\"description\").trim();","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"        final String start \u003d matcher.group(\"start\").trim();","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"        final String end \u003d matcher.group(\"end\").trim();","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"        Event newEvent \u003d new Event(description, start, end);","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"        return new EventCommand(newEvent);","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":30}},{"path":"src/bob/parser/MarkCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.BobException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.commands.MarkCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"    public MarkCommand parse(String input) throws BobException {","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"            int markIdx \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"            return new MarkCommand(markIdx);","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"            throw new BobException(\"Unable to parse input into int.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":16}},{"path":"src/bob/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.BobException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.commands.Command;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"    T parse(String input) throws BobException;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"lctxct":9}},{"path":"src/bob/parser/TodoCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.BobException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.commands.TodoCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"import bob.todo.Todo;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"public class TodoCommandParser implements Parser\u003cTodoCommand\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"    public TodoCommand parse(String input) throws BobException {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"            throw new BobException(\"The description of a todo cannot be empty\");","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"        return new TodoCommand(new Todo(input));","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":16}},{"path":"src/bob/parser/UnmarkCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.BobException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.commands.UnmarkCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"public class UnmarkCommandParser implements Parser\u003cUnmarkCommand\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"    public UnmarkCommand parse(String input) throws BobException {","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"            int markIdx \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"            return new UnmarkCommand(markIdx);","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"            throw new BobException(\"Unable to parse input into int.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"lctxct":16}},{"path":"src/bob/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.BobException;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.deadline.Deadline;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"import bob.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"import bob.task.Task;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"import bob.todo.Todo;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"import java.io.File;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":" * Loads and stores task list from and to a given text file.","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"public class Storage {","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"    protected String fileName;","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"     * Constructs new Storage from {@param fileName}. Tasks will be loaded and saved into","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"     * this file.","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"     * @param fileName path to file used to store tasks.","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"    protected Task createTaskFromFile(String line) {","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"        String[] details \u003d line.split(\"[|]\");","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"        for (int i \u003d 0; i \u003c details.length; i++) {","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"            details[i] \u003d details[i].trim();","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"lctxct"},"content":"        Task task;","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"lctxct"},"content":"        char todoType \u003d details[0].charAt(0);","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"lctxct"},"content":"        boolean isDone \u003d Boolean.parseBoolean(details[1]);","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"lctxct"},"content":"        switch(todoType) {","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"lctxct"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"lctxct"},"content":"                task \u003d new Todo(details[2]);","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"lctxct"},"content":"                break;","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"lctxct"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"lctxct"},"content":"                task \u003d new Event(details[2], details[3], details[4]);","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"lctxct"},"content":"                break;","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"lctxct"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"lctxct"},"content":"                task \u003d new Deadline(details[2], LocalDate.parse(details[3]));","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"lctxct"},"content":"                break;","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"lctxct"},"content":"            default:","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"lctxct"},"content":"                task \u003d new Task(\"\");","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"lctxct"},"content":"        task.setIsDone(isDone);","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"lctxct"},"content":"        return task;","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"lctxct"},"content":"     * Loads previously saved tasks from file used for storage.","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"lctxct"},"content":"     * @return ArrayList of tasks from save file.","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"lctxct"},"content":"     * @throws BobException if unable to read from file.","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"lctxct"},"content":"    public ArrayList\u003cTask\u003e load() throws BobException {","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"lctxct"},"content":"        Scanner s;","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"lctxct"},"content":"        File taskFile \u003d new File(fileName);","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"lctxct"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"lctxct"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"lctxct"},"content":"            s \u003d new Scanner(taskFile);","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"lctxct"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"lctxct"},"content":"            throw new BobException(\"Unable to read from file.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"lctxct"},"content":"        String line;","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"lctxct"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"lctxct"},"content":"            line \u003d s.nextLine();","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"lctxct"},"content":"            Task task \u003d createTaskFromFile(line);","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"lctxct"},"content":"            taskList.add(task);","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"lctxct"},"content":"        return taskList;","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":91,"author":{"gitId":"lctxct"},"content":"     * Writes tasks into save file.","lastModifiedDate":"2023-09-27"},{"lineNumber":92,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":93,"author":{"gitId":"lctxct"},"content":"     * @param tasks prepared list of tasks in the form of a String to be written into","lastModifiedDate":"2023-09-27"},{"lineNumber":94,"author":{"gitId":"lctxct"},"content":"     *              the save file.","lastModifiedDate":"2023-09-27"},{"lineNumber":95,"author":{"gitId":"lctxct"},"content":"     * @throws IOException thrown if unable to write to file.","lastModifiedDate":"2023-09-27"},{"lineNumber":96,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":97,"author":{"gitId":"lctxct"},"content":"    public void writeTasksToFile(String tasks) throws IOException {","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"lctxct"},"content":"        FileWriter fw \u003d new FileWriter(fileName);","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"lctxct"},"content":"        fw.write(tasks);","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"lctxct"},"content":"        fw.close();","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"lctxct":104}},{"path":"src/bob/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.task;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"     * Constructs a new Task.","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"     * @param description contains description of Task.","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"     * Gets deadline type icon (D).","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"     * @return deadline type icon.","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"        return \" \";","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"     * Gets completion status of task. If task is completed, returns \"X\". Else returns \" \".","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"     * @return Returns status icon.","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"     * Gets message to show when a new task is added to the task list.","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"lctxct"},"content":"     * @param taskCount Gets index of the task in the task list. This should be 1-indexed.","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"lctxct"},"content":"     * @return Returns the formatted message reflecting the added task.","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"lctxct"},"content":"    public String getTaskAdded(int taskCount) {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"lctxct"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"lctxct"},"content":"                        \"\\t  %s\\n\" +","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"lctxct"},"content":"                        \"\\tNow you have %d %s in the list\",","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"lctxct"},"content":"                getTask(), taskCount, (taskCount \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"lctxct"},"content":"    public String getTaskDeleted(int taskCount) {","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"lctxct"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"lctxct"},"content":"                        \"\\t  %s\\n\" +","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"lctxct"},"content":"                        \"\\tNow you have %d %s in the list\",","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"lctxct"},"content":"                getTask(), taskCount, (taskCount \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"lctxct"},"content":"     * Gets formatted task for printing.","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"lctxct"},"content":"     * @return formatted task for printing.","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"lctxct"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"lctxct"},"content":"        return String.format(\"[%s][%s] %s\", getTypeIcon(), getStatusIcon(), description);","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"lctxct"},"content":"     * Gets formatted task to be stored in file.","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"lctxct"},"content":"     * @return formatted task to be stored in file.","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"lctxct"},"content":"    public String getTaskForFile() {","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"lctxct"},"content":"        return String.format(\"%s | %b | %s\", getTypeIcon(), isDone, description);","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":74,"author":{"gitId":"lctxct"},"content":"     * Sets status of task. Mark {@param isDone} as {@code true} when task is complete, and","lastModifiedDate":"2023-09-27"},{"lineNumber":75,"author":{"gitId":"lctxct"},"content":"     * {@code false} otherwise.","lastModifiedDate":"2023-09-27"},{"lineNumber":76,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":77,"author":{"gitId":"lctxct"},"content":"     * @param isDone Boolean value to set the task completion status.","lastModifiedDate":"2023-09-27"},{"lineNumber":78,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":79,"author":{"gitId":"lctxct"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"lctxct"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lctxct":82}},{"path":"src/bob/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.tasklist;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.BobException;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import bob.deadline.Deadline;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"import bob.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"import bob.task.Task;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"import bob.todo.Todo;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"public class TaskList {","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"    private ArrayList\u003cTask\u003e taskItems;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"     * Constructs a TaskList. Populates TaskList with a given ArrayList of tasks.","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"     * @param tasks list of tasks to add into task list.","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"        taskItems \u003d tasks;","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"     * Marks item in task as complete. Returns message confirming that task has been","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"     * marked as complete.","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"     * @param markIdx index of task to be marked as complete.","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"     * @return formatted message declaring that the task has been marked as complete.","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"    public String markItem(int markIdx) throws BobException {","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"lctxct"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"lctxct"},"content":"            taskItems.get(markIdx).setIsDone(true);","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"lctxct"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"lctxct"},"content":"            throw new BobException(\"Index outside acceptable realm.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"lctxct"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done: \\n\\t  \"","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"lctxct"},"content":"                + taskItems.get(markIdx).getTask());","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"lctxct"},"content":"     * Marks item as incomplete. Returns message confirming that task has been marked as","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"lctxct"},"content":"     * incomplete.","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"lctxct"},"content":"     * @param markIdx index of task to be marked as incomplete as a String.","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"lctxct"},"content":"     * @return formatted message declaring that the task has been marked as incomplete.","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"lctxct"},"content":"    public String unmarkItem(int markIdx) throws BobException {","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"lctxct"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"lctxct"},"content":"            taskItems.get(markIdx).setIsDone(false);","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"lctxct"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"lctxct"},"content":"            throw new BobException(\"Index outside acceptable realm.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"lctxct"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as undone: \\n\\t  \" +","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"lctxct"},"content":"                taskItems.get(markIdx).getTask());","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":65,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"lctxct"},"content":"     * Handler for creating a new Todo.","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"lctxct"},"content":"     * @param Todo todo to add.","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"lctxct"},"content":"     * @return Message declaring that todo has been added.","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"lctxct"},"content":"    public String handleCreateTodo(Todo todo) {","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"lctxct"},"content":"        taskItems.add(todo);","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"lctxct"},"content":"        return taskItems.get(taskItems.size()-1).getTaskAdded(taskItems.size());","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":79,"author":{"gitId":"lctxct"},"content":"     * Handler for adding a new deadline to the list of tasks.","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":81,"author":{"gitId":"lctxct"},"content":"     * @param deadline Deadline to add into list of tasks.","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"lctxct"},"content":"     * @return Message indicating that deadline has been added.","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":84,"author":{"gitId":"lctxct"},"content":"    public String handleCreateDeadline(Deadline deadline) {","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"lctxct"},"content":"        taskItems.add(deadline);","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":87,"author":{"gitId":"lctxct"},"content":"        return taskItems.get(taskItems.size()-1).getTaskAdded(taskItems.size());","lastModifiedDate":"2023-09-25"},{"lineNumber":88,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":89,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":90,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":91,"author":{"gitId":"lctxct"},"content":"     * Handler for creating a new event.","lastModifiedDate":"2023-09-27"},{"lineNumber":92,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":93,"author":{"gitId":"lctxct"},"content":"     * @param event Event to add into list of tasks.","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"lctxct"},"content":"     * @return Message indicating that event has been added.","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":96,"author":{"gitId":"lctxct"},"content":"    public String handleCreateEvent(Event event) {","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"lctxct"},"content":"        taskItems.add(event);","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":99,"author":{"gitId":"lctxct"},"content":"        return taskItems.get(taskItems.size()-1).getTaskAdded(taskItems.size());","lastModifiedDate":"2023-09-25"},{"lineNumber":100,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":101,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":102,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":103,"author":{"gitId":"lctxct"},"content":"     * Handler for deleting a task.","lastModifiedDate":"2023-09-27"},{"lineNumber":104,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":105,"author":{"gitId":"lctxct"},"content":"     * @param deleteIdx index of task to delete.","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"lctxct"},"content":"     * @return message confirming task has been deleted.","lastModifiedDate":"2023-09-27"},{"lineNumber":107,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":108,"author":{"gitId":"lctxct"},"content":"    public String handleDeleteTask(int deleteIdx) throws BobException {","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"lctxct"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"lctxct"},"content":"            String deleteMessage \u003d taskItems.get(deleteIdx).getTaskDeleted(taskItems.size()-1);","lastModifiedDate":"2023-09-25"},{"lineNumber":111,"author":{"gitId":"lctxct"},"content":"            taskItems.remove(deleteIdx);","lastModifiedDate":"2023-09-25"},{"lineNumber":112,"author":{"gitId":"lctxct"},"content":"            return deleteMessage;","lastModifiedDate":"2023-09-25"},{"lineNumber":113,"author":{"gitId":"lctxct"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"lctxct"},"content":"            throw new BobException(\"Index outside acceptable realm.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":117,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":118,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":119,"author":{"gitId":"lctxct"},"content":"     * Handler to find a task containing a specific keyword.","lastModifiedDate":"2023-09-27"},{"lineNumber":120,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":121,"author":{"gitId":"lctxct"},"content":"     * @param keyword used to locate tasks containing keyword in list.","lastModifiedDate":"2023-09-27"},{"lineNumber":122,"author":{"gitId":"lctxct"},"content":"     * @return formatted list of tasks containing the keyword.","lastModifiedDate":"2023-09-27"},{"lineNumber":123,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":124,"author":{"gitId":"lctxct"},"content":"    public String handleFindTask(String keyword) {","lastModifiedDate":"2023-09-25"},{"lineNumber":125,"author":{"gitId":"lctxct"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-25"},{"lineNumber":126,"author":{"gitId":"lctxct"},"content":"        for (int i \u003d 0; i \u003c taskItems.size(); i++) {","lastModifiedDate":"2023-09-25"},{"lineNumber":127,"author":{"gitId":"lctxct"},"content":"            if (taskItems.get(i).getTask().contains(keyword)) {","lastModifiedDate":"2023-09-25"},{"lineNumber":128,"author":{"gitId":"lctxct"},"content":"                result +\u003d String.format(\"%d. %s\\n\\t\", i+1, taskItems.get(i).getTask()) ;","lastModifiedDate":"2023-09-25"},{"lineNumber":129,"author":{"gitId":"lctxct"},"content":"            }","lastModifiedDate":"2023-09-25"},{"lineNumber":130,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":131,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":132,"author":{"gitId":"lctxct"},"content":"        return result.trim();","lastModifiedDate":"2023-09-25"},{"lineNumber":133,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":134,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":135,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":136,"author":{"gitId":"lctxct"},"content":"     * Handler to get list of tasks when list command is entered.","lastModifiedDate":"2023-09-27"},{"lineNumber":137,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":138,"author":{"gitId":"lctxct"},"content":"     * @return String containing a formatted list of all tasks.","lastModifiedDate":"2023-09-27"},{"lineNumber":139,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":140,"author":{"gitId":"lctxct"},"content":"    public String handleGetList() {","lastModifiedDate":"2023-09-25"},{"lineNumber":141,"author":{"gitId":"lctxct"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-25"},{"lineNumber":142,"author":{"gitId":"lctxct"},"content":"        for (int i \u003d 0; i \u003c taskItems.size(); i++) {","lastModifiedDate":"2023-09-25"},{"lineNumber":143,"author":{"gitId":"lctxct"},"content":"            result +\u003d String.format(\"%d. %s\\n\\t\", i+1, taskItems.get(i).getTask()) ;","lastModifiedDate":"2023-09-25"},{"lineNumber":144,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":145,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":146,"author":{"gitId":"lctxct"},"content":"        return result.trim();","lastModifiedDate":"2023-09-25"},{"lineNumber":147,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":148,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":149,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":150,"author":{"gitId":"lctxct"},"content":"     * Handler to obtain a list of tasks to be saved into file as a formatted String.","lastModifiedDate":"2023-09-27"},{"lineNumber":151,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":152,"author":{"gitId":"lctxct"},"content":"     * @return formatted list of tasks to be saved into a save file.","lastModifiedDate":"2023-09-27"},{"lineNumber":153,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":154,"author":{"gitId":"lctxct"},"content":"    public String handleWriteList() {","lastModifiedDate":"2023-09-25"},{"lineNumber":155,"author":{"gitId":"lctxct"},"content":"        String tasksToWrite \u003d \"\";","lastModifiedDate":"2023-09-25"},{"lineNumber":156,"author":{"gitId":"lctxct"},"content":"        for (Task task : taskItems) {","lastModifiedDate":"2023-09-25"},{"lineNumber":157,"author":{"gitId":"lctxct"},"content":"            tasksToWrite +\u003d task.getTaskForFile() + \u0027\\n\u0027;","lastModifiedDate":"2023-09-25"},{"lineNumber":158,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":159,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":160,"author":{"gitId":"lctxct"},"content":"        return tasksToWrite;","lastModifiedDate":"2023-09-25"},{"lineNumber":161,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":162,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"lctxct":162}},{"path":"src/bob/todo/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.todo;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import bob.task.Task;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"     * Constructs a new Todo.","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"     * @param description contains description of Todo.","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"        super(description);","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"        return \"T\";","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lctxct":21}},{"path":"src/bob/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package bob.ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":" * Reads in user input and displays output.","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"public class Ui {","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"    private final Scanner in;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"    private static final String BOB \u003d \"\\t   ___    ___  ___ \\n\"","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"            + \"\\t  / __\\\\  /___\\\\/ __\\\\\\n\"","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"            + \"\\t /__\\\\// //  //__\\\\/\\\\\\n\"","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"            + \"\\t/ \\\\/  \\\\/ \\\\_// \\\\/  \\\\\\n\"","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"            + \"\\t\\\\_____/\\\\___/\\\\_____/\\n\";","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"     * Constructs a new Ui.","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"    public Ui() {","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"     * Prepends tab character to {@param line} and prints.","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"     * @param line contents to print.","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"    public void println(String line) {","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"     * Prints a line separator for aesthetic.","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"lctxct"},"content":"    public void printLine() {","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"lctxct"},"content":"        println(LINE);","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"lctxct"},"content":"     * Prints greeting for when the application is first started.","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"lctxct"},"content":"    public void printWelcome() {","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"lctxct"},"content":"        printLine();","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"lctxct"},"content":"        println(\"Hello! I\u0027m\\n\" + BOB);","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"lctxct"},"content":"        println(\"What can I do for you?\");","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"lctxct"},"content":"        printLine();","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"lctxct"},"content":"     * Prints farewell when user exits the application.","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"lctxct"},"content":"    public void printFarewell() {","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"lctxct"},"content":"        println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"lctxct"},"content":"        printLine();","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"lctxct"},"content":"     * Prints output of command.","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"lctxct"},"content":"     * @param result output of command.","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"lctxct"},"content":"    public void printCommandResult(String result) {","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"lctxct"},"content":"        println(result);","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":71,"author":{"gitId":"lctxct"},"content":"     * Prints error message for when application is unable to load Bob save file.","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":73,"author":{"gitId":"lctxct"},"content":"    public void printLoadingError() {","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"lctxct"},"content":"        println(\"Unable to find file. Defaulting to empty list...\");","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"lctxct"},"content":"     * Prints message to notify reader of creation of \"./data/bob.txt\".","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"lctxct"},"content":"    public void createNewFileMessage() { println(\"Creating data/bob.txt...\"); }","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":83,"author":{"gitId":"lctxct"},"content":"     * Reads in user input.","lastModifiedDate":"2023-09-27"},{"lineNumber":84,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":85,"author":{"gitId":"lctxct"},"content":"     * @return Returns read line of user input.","lastModifiedDate":"2023-09-27"},{"lineNumber":86,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":87,"author":{"gitId":"lctxct"},"content":"    public String getCommand() {","lastModifiedDate":"2023-09-25"},{"lineNumber":88,"author":{"gitId":"lctxct"},"content":"        return in.nextLine();","lastModifiedDate":"2023-09-25"},{"lineNumber":89,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":90,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"lctxct":90}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"todo borrow book","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"list","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"bye","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lctxct":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"javac  -cp ..\\src\\bob -Xlint:none -d ..\\bin ..\\src\\bob\\*.java","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lctxct":1,"-":20}}]
