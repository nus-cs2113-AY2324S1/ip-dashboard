[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"D | false | return book | 2019-08-10","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"lctxct":1}},{"path":"src/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package duke;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":" * Duke task manager.","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"     * Initializes Duke with a default save file ./data/duke.txt.","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"    public Duke() {","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"        this(\"./data/duke.txt\");","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"     * Initializes Duke. Loads saved tasks from file path provided by filePath if the file","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"     * exists, else creates a new empty list.","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"     * @param filePath path to an existing Duke savefile.","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"lctxct"},"content":"            ui.printLoadingError();","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"lctxct"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"lctxct"},"content":"     * Runs Duke. Reads in user input and processes commands until \"bye\" command is received.","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"lctxct"},"content":"    public void run() {","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"lctxct"},"content":"        String command, arguments;","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"lctxct"},"content":"        String result;","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"lctxct"},"content":"        ui.printWelcome();","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"lctxct"},"content":"        do {","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"lctxct"},"content":"            String[] line \u003d new Parser().parseCommand(ui.getCommand());","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"lctxct"},"content":"            command \u003d line[0];","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"lctxct"},"content":"            arguments \u003d line[1].trim();","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"lctxct"},"content":"            ui.printLine();","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"lctxct"},"content":"            switch (command) {","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"lctxct"},"content":"            case \"list\":","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"lctxct"},"content":"                result \u003d tasks.handleGetList();","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"lctxct"},"content":"                break;","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"lctxct"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"lctxct"},"content":"                result \u003d tasks.markItem(arguments);","lastModifiedDate":"2023-09-25"},{"lineNumber":65,"author":{"gitId":"lctxct"},"content":"                break;","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"lctxct"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"lctxct"},"content":"                result \u003d tasks.unmarkItem(arguments);","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"lctxct"},"content":"                break;","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"lctxct"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"lctxct"},"content":"                try {","lastModifiedDate":"2023-09-16"},{"lineNumber":71,"author":{"gitId":"lctxct"},"content":"                    result \u003d tasks.handleCreateTodo(arguments);","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"lctxct"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"lctxct"},"content":"                    result \u003d String.valueOf(e);","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"lctxct"},"content":"                }","lastModifiedDate":"2023-09-16"},{"lineNumber":75,"author":{"gitId":"lctxct"},"content":"                break;","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"lctxct"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"lctxct"},"content":"                try {","lastModifiedDate":"2023-09-16"},{"lineNumber":78,"author":{"gitId":"lctxct"},"content":"                    result \u003d tasks.handleCreateDeadline(arguments);","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"lctxct"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":80,"author":{"gitId":"lctxct"},"content":"                    result \u003d String.valueOf(e);","lastModifiedDate":"2023-09-25"},{"lineNumber":81,"author":{"gitId":"lctxct"},"content":"                }","lastModifiedDate":"2023-09-16"},{"lineNumber":82,"author":{"gitId":"lctxct"},"content":"                break;","lastModifiedDate":"2023-09-25"},{"lineNumber":83,"author":{"gitId":"lctxct"},"content":"            case \"event\":","lastModifiedDate":"2023-09-25"},{"lineNumber":84,"author":{"gitId":"lctxct"},"content":"                result \u003d tasks.handleCreateEvent(arguments);","lastModifiedDate":"2023-09-25"},{"lineNumber":85,"author":{"gitId":"lctxct"},"content":"                break;","lastModifiedDate":"2023-09-25"},{"lineNumber":86,"author":{"gitId":"lctxct"},"content":"            case \"find\":","lastModifiedDate":"2023-09-25"},{"lineNumber":87,"author":{"gitId":"lctxct"},"content":"                result \u003d tasks.handleFindTask(arguments);","lastModifiedDate":"2023-09-25"},{"lineNumber":88,"author":{"gitId":"lctxct"},"content":"                break;","lastModifiedDate":"2023-09-25"},{"lineNumber":89,"author":{"gitId":"lctxct"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-25"},{"lineNumber":90,"author":{"gitId":"lctxct"},"content":"                result \u003d tasks.handleDeleteTask(arguments);","lastModifiedDate":"2023-09-25"},{"lineNumber":91,"author":{"gitId":"lctxct"},"content":"                break;","lastModifiedDate":"2023-09-25"},{"lineNumber":92,"author":{"gitId":"lctxct"},"content":"            default:","lastModifiedDate":"2023-09-25"},{"lineNumber":93,"author":{"gitId":"lctxct"},"content":"                result \u003d \"I don\u0027t know that command\";","lastModifiedDate":"2023-09-25"},{"lineNumber":94,"author":{"gitId":"lctxct"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"lctxct"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2023-09-25"},{"lineNumber":97,"author":{"gitId":"lctxct"},"content":"                break;","lastModifiedDate":"2023-09-25"},{"lineNumber":98,"author":{"gitId":"lctxct"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":100,"author":{"gitId":"lctxct"},"content":"            ui.printCommandResult(result);","lastModifiedDate":"2023-09-25"},{"lineNumber":101,"author":{"gitId":"lctxct"},"content":"            ui.printLine();","lastModifiedDate":"2023-09-25"},{"lineNumber":102,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":103,"author":{"gitId":"lctxct"},"content":"        } while (true);","lastModifiedDate":"2023-09-25"},{"lineNumber":104,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"lctxct"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"lctxct"},"content":"            storage.writeTasksToFile(tasks.handleWriteList());","lastModifiedDate":"2023-09-25"},{"lineNumber":107,"author":{"gitId":"lctxct"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"lctxct"},"content":"            ui.println(String.valueOf(e));","lastModifiedDate":"2023-09-25"},{"lineNumber":109,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"lctxct"},"content":"        ui.printFarewell();","lastModifiedDate":"2023-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":114,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":115,"author":{"gitId":"lctxct"},"content":"     * Creates and starts running a new instance of Duke.","lastModifiedDate":"2023-09-27"},{"lineNumber":116,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":117,"author":{"gitId":"lctxct"},"content":"    public static void main() {","lastModifiedDate":"2023-09-27"},{"lineNumber":118,"author":{"gitId":"lctxct"},"content":"        new Duke().run();","lastModifiedDate":"2023-09-25"},{"lineNumber":119,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lctxct":117,"-":3}},{"path":"src/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package duke;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"    public DukeException (String str) {","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"        super(str);","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"lctxct":7}},{"path":"src/duke/deadline/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package duke.deadline;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"     * Constructs new Deadline.","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"     * @param description description of the task.","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"     * @param deadline date to complete task by.","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"        super(description);","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"        return \"D\";","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"    public String getTask() {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"        return String.format(\"[%s][%s] %s (by: %s)\",","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"                getTypeIcon(), getStatusIcon(), description, deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"    public String getTaskForFile() {","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"        return String.format(\"%s | %b | %s | %s\", getTypeIcon(), isDone, description, deadline);","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lctxct":38}},{"path":"src/duke/event/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package duke.event;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"    protected String from;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"    protected String to;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"     * Constructs new event.","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"     * @param description description of event.","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"     * @param from start time of event.","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"     * @param to end time of event.","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"        super(description);","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"        return \"E\";","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"    public String getTask() {","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"        return String.format(\"[%s][%s] %s (from: %s to: %s)\",","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"                getTypeIcon(), getStatusIcon(), description, from, to);","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"    public String getTaskForFile() {","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"        return String.format(\"%s | %b | %s | %s | %s\", getTypeIcon(), isDone, description, from, to);","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lctxct":37}},{"path":"src/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package duke.parser;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":" * Parses Duke commands.","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"public class Parser {","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"     * Pattern used to parse Duke commands.","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*?)\");","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"     * Parses Duke command from {@param userInput}. Returns an Array of length 2 in the form","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"     * [commandWord, arguments].","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"     * @param userInput command sent by user.","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"     * @return Array of length two containing [commandWord, arguments].","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"    public String[] parseCommand(String userInput) {","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"        Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput);","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"        matcher.matches();","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"        String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"        String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"        return new String[] {commandWord, arguments};","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"lctxct":33}},{"path":"src/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package duke.storage;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import duke.deadline.Deadline;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"import duke.event.Event;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"import duke.todo.Todo;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"import java.io.File;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":" * Loads and stores task list from and to a given text file.","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"public class Storage {","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"    protected String fileName;","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"     * Constructs new Storage from {@param fileName}. Tasks will be loaded and saved into","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"     * this file.","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"     * @param fileName path to file used to store tasks.","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"    protected Task createTaskFromFile(String line) {","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"        String[] details \u003d line.split(\"[|]\");","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"        for (int i \u003d 0; i \u003c details.length; i++) {","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"            details[i] \u003d details[i].trim();","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"lctxct"},"content":"        Task task;","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"lctxct"},"content":"        char todoType \u003d details[0].charAt(0);","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"lctxct"},"content":"        boolean isDone \u003d Boolean.parseBoolean(details[1]);","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"lctxct"},"content":"        switch(todoType) {","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"lctxct"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"lctxct"},"content":"                task \u003d new Todo(details[2]);","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"lctxct"},"content":"                break;","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"lctxct"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"lctxct"},"content":"                task \u003d new Event(details[2], details[3], details[4]);","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"lctxct"},"content":"                break;","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"lctxct"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"lctxct"},"content":"                task \u003d new Deadline(details[2], LocalDate.parse(details[3]));","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"lctxct"},"content":"                break;","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"lctxct"},"content":"            default:","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"lctxct"},"content":"                task \u003d new Task(\"\");","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"lctxct"},"content":"        task.setIsDone(isDone);","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"lctxct"},"content":"        return task;","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"lctxct"},"content":"     * Loads previously saved tasks from file used for storage.","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"lctxct"},"content":"     * @return ArrayList of tasks from save file.","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"lctxct"},"content":"     * @throws DukeException if unable to read from file.","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"lctxct"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"lctxct"},"content":"        Scanner s;","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"lctxct"},"content":"        File taskFile \u003d new File(fileName);","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"lctxct"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"lctxct"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"lctxct"},"content":"            s \u003d new Scanner(taskFile);","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"lctxct"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"lctxct"},"content":"            throw new DukeException(\"\");","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"lctxct"},"content":"        String line;","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"lctxct"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"lctxct"},"content":"            line \u003d s.nextLine();","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"lctxct"},"content":"            Task task \u003d createTaskFromFile(line);","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"lctxct"},"content":"            taskList.add(task);","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"lctxct"},"content":"        return taskList;","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":91,"author":{"gitId":"lctxct"},"content":"     * Writes tasks into save file.","lastModifiedDate":"2023-09-27"},{"lineNumber":92,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":93,"author":{"gitId":"lctxct"},"content":"     * @param tasks prepared list of tasks in the form of a String to be written into","lastModifiedDate":"2023-09-27"},{"lineNumber":94,"author":{"gitId":"lctxct"},"content":"     *              the save file.","lastModifiedDate":"2023-09-27"},{"lineNumber":95,"author":{"gitId":"lctxct"},"content":"     * @throws IOException thrown if unable to write to file.","lastModifiedDate":"2023-09-27"},{"lineNumber":96,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":97,"author":{"gitId":"lctxct"},"content":"    public void writeTasksToFile(String tasks) throws IOException {","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"lctxct"},"content":"        FileWriter fw \u003d new FileWriter(fileName);","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"lctxct"},"content":"        fw.write(tasks);","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"lctxct"},"content":"        fw.close();","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"lctxct":104}},{"path":"src/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package duke.task;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"     * Constructs a new Task.","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"     * @param description contains description of Task.","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"     * Gets deadline type icon (D).","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"     * @return deadline type icon.","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"        return \" \";","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"     * Gets completion status of task. If task is completed, returns \"X\". Else returns \" \".","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"     * @return Returns status icon.","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"     * Gets message to show when a new task is added to the task list.","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"lctxct"},"content":"     * @param taskCount Gets index of the task in the task list. This should be 1-indexed.","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"lctxct"},"content":"     * @return Returns the formatted message reflecting the added task.","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"lctxct"},"content":"    public String getTaskAdded(int taskCount) {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"lctxct"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"lctxct"},"content":"                        \"\\t  %s\\n\" +","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"lctxct"},"content":"                        \"\\tNow you have %d %s in the list\",","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"lctxct"},"content":"                getTask(), taskCount, (taskCount \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"lctxct"},"content":"    public String getTaskDeleted(int taskCount) {","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"lctxct"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"lctxct"},"content":"                        \"\\t  %s\\n\" +","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"lctxct"},"content":"                        \"\\tNow you have %d %s in the list\",","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"lctxct"},"content":"                getTask(), taskCount, (taskCount \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"lctxct"},"content":"     * Gets formatted task for printing.","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"lctxct"},"content":"     * @return formatted task for printing.","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"lctxct"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"lctxct"},"content":"        return String.format(\"[%s][%s] %s\", getTypeIcon(), getStatusIcon(), description);","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"lctxct"},"content":"     * Gets formatted task to be stored in file.","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"lctxct"},"content":"     * @return formatted task to be stored in file.","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"lctxct"},"content":"    public String getTaskForFile() {","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"lctxct"},"content":"        return String.format(\"%s | %b | %s\", getTypeIcon(), isDone, description);","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":74,"author":{"gitId":"lctxct"},"content":"     * Sets status of task. Mark {@param isDone} as {@code true} when task is complete, and","lastModifiedDate":"2023-09-27"},{"lineNumber":75,"author":{"gitId":"lctxct"},"content":"     * {@code false} otherwise.","lastModifiedDate":"2023-09-27"},{"lineNumber":76,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":77,"author":{"gitId":"lctxct"},"content":"     * @param isDone Boolean value to set the task completion status.","lastModifiedDate":"2023-09-27"},{"lineNumber":78,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":79,"author":{"gitId":"lctxct"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"lctxct"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lctxct":82}},{"path":"src/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package duke.tasklist;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"import duke.deadline.Deadline;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"import duke.event.Event;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"import duke.todo.Todo;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"public class TaskList {","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"    private ArrayList\u003cTask\u003e taskItems;","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"     * Constructs a TaskList. Populates TaskList with a given ArrayList of tasks.","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"     * @param tasks list of tasks to add into task list.","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"        taskItems \u003d tasks;","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"     * Marks item in task as complete. Returns message confirming that task has been","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"     * marked as complete.","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"     * @param line index of task to be marked as complete as a String.","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"     * @return formatted message declaring that the task has been marked as complete.","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"lctxct"},"content":"    public String markItem(String line) {","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"lctxct"},"content":"        int markIdx \u003d Integer.parseInt(line);","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"lctxct"},"content":"        taskItems.get(markIdx).setIsDone(true);","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"lctxct"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"lctxct"},"content":"                + taskItems.get(markIdx).getTask());","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"lctxct"},"content":"     * Marks item as incomplete. Returns message confirming that task has been marked as","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"lctxct"},"content":"     * incomplete.","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"lctxct"},"content":"     * @param line index of task to be marked as incomplete as a String.","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"lctxct"},"content":"     * @return formatted message declaring that the task has been marked as incomplete.","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"lctxct"},"content":"    public String unmarkItem(String line) {","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"lctxct"},"content":"        int markIdx \u003d Integer.parseInt(line);","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"lctxct"},"content":"        taskItems.get(markIdx).setIsDone(false);","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"lctxct"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as undone: \\n\" +","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"lctxct"},"content":"                taskItems.get(markIdx).getTask());","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"lctxct"},"content":"     * Handler for creating a new Todo.","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"lctxct"},"content":"     * @param description description of todo.","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"lctxct"},"content":"     * @return new Todo.","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"lctxct"},"content":"     * @throws DukeException when description of todo is empty.","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"lctxct"},"content":"    public String handleCreateTodo(String description) throws DukeException {","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"lctxct"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"lctxct"},"content":"            throw new DukeException(\"The description of a todo cannot be empty\");","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"lctxct"},"content":"        if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"lctxct"},"content":"            throw new DukeException(\"The description of a todo cannot be empty\");","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"lctxct"},"content":"        taskItems.add(new Todo(description));","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"lctxct"},"content":"        return taskItems.get(taskItems.size()-1).getTaskAdded(taskItems.size());","lastModifiedDate":"2023-09-25"},{"lineNumber":80,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":81,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":82,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":83,"author":{"gitId":"lctxct"},"content":"     * Handler for creating a new Deadline.","lastModifiedDate":"2023-09-27"},{"lineNumber":84,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":85,"author":{"gitId":"lctxct"},"content":"     * @param line containing description and deadline, with the deadline in the form","lastModifiedDate":"2023-09-27"},{"lineNumber":86,"author":{"gitId":"lctxct"},"content":"     *             {@code /by deadline}.","lastModifiedDate":"2023-09-27"},{"lineNumber":87,"author":{"gitId":"lctxct"},"content":"     * @return new Deadline.","lastModifiedDate":"2023-09-27"},{"lineNumber":88,"author":{"gitId":"lctxct"},"content":"     * @throws DukeException when description is empty or when deadline is unspecified.","lastModifiedDate":"2023-09-27"},{"lineNumber":89,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":90,"author":{"gitId":"lctxct"},"content":"    public String handleCreateDeadline(String line) throws DukeException {","lastModifiedDate":"2023-09-25"},{"lineNumber":91,"author":{"gitId":"lctxct"},"content":"        int byIdx \u003d line.indexOf(\"/by\");","lastModifiedDate":"2023-09-25"},{"lineNumber":92,"author":{"gitId":"lctxct"},"content":"        if (byIdx \u003d\u003d -1) {","lastModifiedDate":"2023-09-25"},{"lineNumber":93,"author":{"gitId":"lctxct"},"content":"            throw new DukeException(\"The /by of a deadline must be specified\");","lastModifiedDate":"2023-09-25"},{"lineNumber":94,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":95,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":96,"author":{"gitId":"lctxct"},"content":"        // Extract task description and deadline from user input","lastModifiedDate":"2023-09-25"},{"lineNumber":97,"author":{"gitId":"lctxct"},"content":"        if (byIdx \u003d\u003d 0) {","lastModifiedDate":"2023-09-25"},{"lineNumber":98,"author":{"gitId":"lctxct"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty\");","lastModifiedDate":"2023-09-25"},{"lineNumber":99,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":100,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":101,"author":{"gitId":"lctxct"},"content":"        String description \u003d line.substring(0,byIdx-1);","lastModifiedDate":"2023-09-25"},{"lineNumber":102,"author":{"gitId":"lctxct"},"content":"        if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-25"},{"lineNumber":103,"author":{"gitId":"lctxct"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty\");","lastModifiedDate":"2023-09-25"},{"lineNumber":104,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":105,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":106,"author":{"gitId":"lctxct"},"content":"        int deadlineIdx \u003d byIdx+ \"/by \".length();","lastModifiedDate":"2023-09-25"},{"lineNumber":107,"author":{"gitId":"lctxct"},"content":"        if (deadlineIdx \u003e\u003d line.length()) {","lastModifiedDate":"2023-09-25"},{"lineNumber":108,"author":{"gitId":"lctxct"},"content":"            throw new DukeException(\"The /by of a deadline cannot be empty\");","lastModifiedDate":"2023-09-25"},{"lineNumber":109,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":110,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":111,"author":{"gitId":"lctxct"},"content":"        LocalDate deadline \u003d LocalDate.parse(line.substring(deadlineIdx));","lastModifiedDate":"2023-09-25"},{"lineNumber":112,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":113,"author":{"gitId":"lctxct"},"content":"        taskItems.add(new Deadline(description, deadline));","lastModifiedDate":"2023-09-25"},{"lineNumber":114,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":115,"author":{"gitId":"lctxct"},"content":"        return taskItems.get(taskItems.size()-1).getTaskAdded(taskItems.size());","lastModifiedDate":"2023-09-25"},{"lineNumber":116,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":117,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":118,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":119,"author":{"gitId":"lctxct"},"content":"     * Handler for creating a new event.","lastModifiedDate":"2023-09-27"},{"lineNumber":120,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":121,"author":{"gitId":"lctxct"},"content":"     * @param line containing a description, and the start and end times of the deadline in","lastModifiedDate":"2023-09-27"},{"lineNumber":122,"author":{"gitId":"lctxct"},"content":"     *             the form {@code /from start /to end}.","lastModifiedDate":"2023-09-27"},{"lineNumber":123,"author":{"gitId":"lctxct"},"content":"     * @return new Event.","lastModifiedDate":"2023-09-27"},{"lineNumber":124,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":125,"author":{"gitId":"lctxct"},"content":"    public String handleCreateEvent(String line) {","lastModifiedDate":"2023-09-25"},{"lineNumber":126,"author":{"gitId":"lctxct"},"content":"        int fromIdx \u003d line.indexOf(\"/from\");","lastModifiedDate":"2023-09-25"},{"lineNumber":127,"author":{"gitId":"lctxct"},"content":"        int toIdx \u003d line.indexOf(\"/to\");","lastModifiedDate":"2023-09-25"},{"lineNumber":128,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":129,"author":{"gitId":"lctxct"},"content":"        // Extract task description, start time and end time from user input","lastModifiedDate":"2023-09-25"},{"lineNumber":130,"author":{"gitId":"lctxct"},"content":"        String description \u003d line.substring(0, fromIdx-1);","lastModifiedDate":"2023-09-25"},{"lineNumber":131,"author":{"gitId":"lctxct"},"content":"        String start \u003d line.substring(fromIdx+ \"/from \".length(), toIdx-1);","lastModifiedDate":"2023-09-25"},{"lineNumber":132,"author":{"gitId":"lctxct"},"content":"        String end \u003d line.substring(toIdx+ \"/to \".length());","lastModifiedDate":"2023-09-25"},{"lineNumber":133,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":134,"author":{"gitId":"lctxct"},"content":"        taskItems.add(new Event(description, start, end));","lastModifiedDate":"2023-09-25"},{"lineNumber":135,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":136,"author":{"gitId":"lctxct"},"content":"        return taskItems.get(taskItems.size()-1).getTaskAdded(taskItems.size());","lastModifiedDate":"2023-09-25"},{"lineNumber":137,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":138,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":139,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":140,"author":{"gitId":"lctxct"},"content":"     * Handler for deleting a task.","lastModifiedDate":"2023-09-27"},{"lineNumber":141,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":142,"author":{"gitId":"lctxct"},"content":"     * @param line index of task to delete as a String.","lastModifiedDate":"2023-09-27"},{"lineNumber":143,"author":{"gitId":"lctxct"},"content":"     * @return message confirming task has been deleted.","lastModifiedDate":"2023-09-27"},{"lineNumber":144,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":145,"author":{"gitId":"lctxct"},"content":"    public String handleDeleteTask(String line) {","lastModifiedDate":"2023-09-25"},{"lineNumber":146,"author":{"gitId":"lctxct"},"content":"        int deleteIdx \u003d Integer.parseInt(line);","lastModifiedDate":"2023-09-25"},{"lineNumber":147,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":148,"author":{"gitId":"lctxct"},"content":"        String deleteMessage \u003d taskItems.get(deleteIdx).getTaskDeleted(taskItems.size()-1);","lastModifiedDate":"2023-09-25"},{"lineNumber":149,"author":{"gitId":"lctxct"},"content":"        taskItems.remove(deleteIdx);","lastModifiedDate":"2023-09-25"},{"lineNumber":150,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":151,"author":{"gitId":"lctxct"},"content":"        return deleteMessage;","lastModifiedDate":"2023-09-25"},{"lineNumber":152,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":153,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":154,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":155,"author":{"gitId":"lctxct"},"content":"     * Handler to find a task containing a specific keyword.","lastModifiedDate":"2023-09-27"},{"lineNumber":156,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":157,"author":{"gitId":"lctxct"},"content":"     * @param keyword used to locate tasks containing keyword in list.","lastModifiedDate":"2023-09-27"},{"lineNumber":158,"author":{"gitId":"lctxct"},"content":"     * @return formatted list of tasks containing the keyword.","lastModifiedDate":"2023-09-27"},{"lineNumber":159,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":160,"author":{"gitId":"lctxct"},"content":"    public String handleFindTask(String keyword) {","lastModifiedDate":"2023-09-25"},{"lineNumber":161,"author":{"gitId":"lctxct"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-25"},{"lineNumber":162,"author":{"gitId":"lctxct"},"content":"        for (int i \u003d 0; i \u003c taskItems.size(); i++) {","lastModifiedDate":"2023-09-25"},{"lineNumber":163,"author":{"gitId":"lctxct"},"content":"            if (taskItems.get(i).getTask().contains(keyword)) {","lastModifiedDate":"2023-09-25"},{"lineNumber":164,"author":{"gitId":"lctxct"},"content":"                result +\u003d String.format(\"%d. %s\\n\\t\", i+1, taskItems.get(i).getTask()) ;","lastModifiedDate":"2023-09-25"},{"lineNumber":165,"author":{"gitId":"lctxct"},"content":"            }","lastModifiedDate":"2023-09-25"},{"lineNumber":166,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":167,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":168,"author":{"gitId":"lctxct"},"content":"        return result.trim();","lastModifiedDate":"2023-09-25"},{"lineNumber":169,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":170,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":171,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":172,"author":{"gitId":"lctxct"},"content":"     * Handler to get list of tasks when list command is entered.","lastModifiedDate":"2023-09-27"},{"lineNumber":173,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":174,"author":{"gitId":"lctxct"},"content":"     * @return String containing a formatted list of all tasks.","lastModifiedDate":"2023-09-27"},{"lineNumber":175,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":176,"author":{"gitId":"lctxct"},"content":"    public String handleGetList() {","lastModifiedDate":"2023-09-25"},{"lineNumber":177,"author":{"gitId":"lctxct"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-25"},{"lineNumber":178,"author":{"gitId":"lctxct"},"content":"        for (int i \u003d 0; i \u003c taskItems.size(); i++) {","lastModifiedDate":"2023-09-25"},{"lineNumber":179,"author":{"gitId":"lctxct"},"content":"            result +\u003d String.format(\"%d. %s\\n\\t\", i+1, taskItems.get(i).getTask()) ;","lastModifiedDate":"2023-09-25"},{"lineNumber":180,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":181,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":182,"author":{"gitId":"lctxct"},"content":"        return result.trim();","lastModifiedDate":"2023-09-25"},{"lineNumber":183,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":184,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":185,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":186,"author":{"gitId":"lctxct"},"content":"     * Handler to obtain a list of tasks to be saved into file as a formatted String.","lastModifiedDate":"2023-09-27"},{"lineNumber":187,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":188,"author":{"gitId":"lctxct"},"content":"     * @return formatted list of tasks to be saved into a save file.","lastModifiedDate":"2023-09-27"},{"lineNumber":189,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":190,"author":{"gitId":"lctxct"},"content":"    public String handleWriteList() {","lastModifiedDate":"2023-09-25"},{"lineNumber":191,"author":{"gitId":"lctxct"},"content":"        String tasksToWrite \u003d \"\";","lastModifiedDate":"2023-09-25"},{"lineNumber":192,"author":{"gitId":"lctxct"},"content":"        for (Task task : taskItems) {","lastModifiedDate":"2023-09-25"},{"lineNumber":193,"author":{"gitId":"lctxct"},"content":"            tasksToWrite +\u003d task.getTaskForFile() + \u0027\\n\u0027;","lastModifiedDate":"2023-09-25"},{"lineNumber":194,"author":{"gitId":"lctxct"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":195,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":196,"author":{"gitId":"lctxct"},"content":"        return tasksToWrite;","lastModifiedDate":"2023-09-25"},{"lineNumber":197,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":198,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"lctxct":198}},{"path":"src/duke/todo/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package duke.todo;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"     * Constructs a new Todo.","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"     * @param description contains description of Todo.","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"        super(description);","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"        return \"T\";","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lctxct":21}},{"path":"src/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"package duke.ui;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":" * Reads in user input and displays output.","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"lctxct"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"lctxct"},"content":"public class Ui {","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"    private final Scanner in;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"lctxct"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"lctxct"},"content":"    private static final String BOB \u003d \"\\t   ___    ___  ___ \\n\"","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"lctxct"},"content":"            + \"\\t  / __\\\\  /___\\\\/ __\\\\\\n\"","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"lctxct"},"content":"            + \"\\t /__\\\\// //  //__\\\\/\\\\\\n\"","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"lctxct"},"content":"            + \"\\t/ \\\\/  \\\\/ \\\\_// \\\\/  \\\\\\n\"","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"lctxct"},"content":"            + \"\\t\\\\_____/\\\\___/\\\\_____/\\n\";","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"lctxct"},"content":"     * Constructs a new Ui.","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"lctxct"},"content":"    public Ui() {","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"lctxct"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"lctxct"},"content":"     * Prepends tab character to {@param line} and prints.","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"lctxct"},"content":"     * @param line contents to print.","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"lctxct"},"content":"    public void println(String line) {","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"lctxct"},"content":"        System.out.println(\"\\t\" + line);","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"lctxct"},"content":"     * Prints a line separator for aesthetic.","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"lctxct"},"content":"    public void printLine() {","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"lctxct"},"content":"        println(LINE);","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"lctxct"},"content":"     * Prints greeting for when the application is first started.","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"lctxct"},"content":"    public void printWelcome() {","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"lctxct"},"content":"        printLine();","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"lctxct"},"content":"        println(\"Hello! I\u0027m\\n\" + BOB);","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"lctxct"},"content":"        println(\"What can I do for you?\");","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"lctxct"},"content":"        printLine();","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"lctxct"},"content":"     * Prints farewell when user exits the application.","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"lctxct"},"content":"    public void printFarewell() {","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"lctxct"},"content":"        println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"lctxct"},"content":"        printLine();","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"lctxct"},"content":"     * Prints output of command.","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"lctxct"},"content":"     * @param result output of command.","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"lctxct"},"content":"    public void printCommandResult(String result) {","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"lctxct"},"content":"        println(result);","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":71,"author":{"gitId":"lctxct"},"content":"     * Prints error message for when application is unable to load Duke save file.","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":73,"author":{"gitId":"lctxct"},"content":"    public void printLoadingError() {","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"lctxct"},"content":"        println(\"Unable to find file. Defaulting to empty list...\");","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"lctxct"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"lctxct"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":78,"author":{"gitId":"lctxct"},"content":"     * Reads in user input.","lastModifiedDate":"2023-09-27"},{"lineNumber":79,"author":{"gitId":"lctxct"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":80,"author":{"gitId":"lctxct"},"content":"     * @return Returns read line of user input.","lastModifiedDate":"2023-09-27"},{"lineNumber":81,"author":{"gitId":"lctxct"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":82,"author":{"gitId":"lctxct"},"content":"    public String getCommand() {","lastModifiedDate":"2023-09-25"},{"lineNumber":83,"author":{"gitId":"lctxct"},"content":"        return in.nextLine();","lastModifiedDate":"2023-09-25"},{"lineNumber":84,"author":{"gitId":"lctxct"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":85,"author":{"gitId":"lctxct"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"lctxct":85}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lctxct"},"content":"todo borrow book","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lctxct"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lctxct"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lctxct"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lctxct"},"content":"list","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lctxct"},"content":"bye","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lctxct":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"lctxct"},"content":"javac  -cp ..\\src\\duke -Xlint:none -d ..\\bin ..\\src\\duke\\*.java","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lctxct":1,"-":20}}]
