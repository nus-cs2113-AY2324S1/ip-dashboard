[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"# CS2113 Individual Project","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mcmc101001":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"CSGPT is a desktop app for managing your tasks, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, CSGPT can get your task management done faster than traditional GUI apps.","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"\u003e [!NOTE]","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"\u003e **Notes about the command format:**","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"\u003e - Words in `UPPER_CASE` are the parameters to be supplied by the user.\\","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"\u003e e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo read book`.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"### `todo` - add a todo task","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"Adds a todo task to the task list.","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":"Example input: `todo read book`","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"mcmc101001"},"content":"Expected outcome:","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"mcmc101001"},"content":"```","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"mcmc101001"},"content":"Added: [T][ ] read book","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"mcmc101001"},"content":"Now you have (x) tasks in the list.","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"mcmc101001"},"content":"```","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"mcmc101001"},"content":"### `deadline` - add a deadline task","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"mcmc101001"},"content":"Adds a deadline task to the task list.","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"mcmc101001"},"content":"Format: `deadline DESCRIPTION /by DATE`","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"mcmc101001"},"content":"\u003e [!NOTE]","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"mcmc101001"},"content":"\u003e - `DATE` must be in the format `YYYY-MM-DD`.","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"mcmc101001"},"content":"Example input: `deadline return book /by 2020-09-18`","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"mcmc101001"},"content":"```","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"mcmc101001"},"content":"Added: [D][ ] return book (by: Sep 18 2020)","lastModifiedDate":"2023-10-01"},{"lineNumber":42,"author":{"gitId":"mcmc101001"},"content":"Now you have (x) tasks in the list.","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"mcmc101001"},"content":"```","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"mcmc101001"},"content":"### `event` - add an event task","lastModifiedDate":"2023-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"mcmc101001"},"content":"Adds an event task to the task list.","lastModifiedDate":"2023-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"mcmc101001"},"content":"Format: `event DESCRIPTION /from START_DATE /to END_DATE`","lastModifiedDate":"2023-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":51,"author":{"gitId":"mcmc101001"},"content":"\u003e [!NOTE]","lastModifiedDate":"2023-10-01"},{"lineNumber":52,"author":{"gitId":"mcmc101001"},"content":"\u003e - `START_DATE` and `END_DATE` must be in the format `YYYY-MM-DD`.","lastModifiedDate":"2023-10-01"},{"lineNumber":53,"author":{"gitId":"mcmc101001"},"content":"\u003e - `START_DATE` must be before `END_DATE`.","lastModifiedDate":"2023-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"mcmc101001"},"content":"Example input: `event project meeting /from 2020-09-18 /to 2020-09-19`","lastModifiedDate":"2023-10-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":60,"author":{"gitId":"mcmc101001"},"content":"Added: [E][ ] project meeting (from: Sep 18 2020 to: Sep 19 2020)","lastModifiedDate":"2023-10-01"},{"lineNumber":61,"author":{"gitId":"mcmc101001"},"content":"Now you have (x) tasks in the list.","lastModifiedDate":"2023-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"mcmc101001":37,"-":25}},{"path":"src/main/java/CSGPT/CSGPT.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package CSGPT;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"import Commands.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"import Commands.Echo;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"import Commands.Farewell;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"import Data.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"import Exceptions.CSGPTException;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"import Exceptions.CSGPTParsingException;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"import Exceptions.CSGPTWriteFileException;","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"import Parser.Parser;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"import Storage.Storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"import Ui.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":" * Main class for CSGPT","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"mcmc101001"},"content":"public class CSGPT {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"mcmc101001"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"mcmc101001"},"content":"    private final Storage storage \u003d new Storage();","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"mcmc101001"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"mcmc101001"},"content":"     * Main method to run the program","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"mcmc101001"},"content":"    public void run() {","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"mcmc101001"},"content":"        String input;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"mcmc101001"},"content":"        Command command \u003d new Echo(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"mcmc101001"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"mcmc101001"},"content":"        ui.greet();","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"mcmc101001"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"mcmc101001"},"content":"            storage.readFromFile(taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"mcmc101001"},"content":"            Command listCommand \u003d Parser.getCommand(\"list\");","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"mcmc101001"},"content":"            listCommand.execute(taskList, ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"mcmc101001"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"mcmc101001"},"content":"            ui.printText(e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"mcmc101001"},"content":"        while(!(command instanceof Farewell)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"mcmc101001"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"mcmc101001"},"content":"            try {","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"mcmc101001"},"content":"                command \u003d Parser.getCommand(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"mcmc101001"},"content":"                try {","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"mcmc101001"},"content":"                    command.execute(taskList, ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"mcmc101001"},"content":"                    try {","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"mcmc101001"},"content":"                        storage.writeToFile(taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"mcmc101001"},"content":"                    } catch (CSGPTWriteFileException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"mcmc101001"},"content":"                        ui.printText(e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"mcmc101001"},"content":"                    }","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"mcmc101001"},"content":"                } catch (CSGPTParsingException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"mcmc101001"},"content":"                    ui.printText(e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"mcmc101001"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"mcmc101001"},"content":"            } catch (CSGPTException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"mcmc101001"},"content":"                ui.printText(e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"mcmc101001"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"mcmc101001"},"content":"     * Main method to run the program","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"mcmc101001"},"content":"     * @param args Arguments","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"mcmc101001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"mcmc101001"},"content":"        new CSGPT().run();","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mcmc101001":68}},{"path":"src/main/java/Commands/Add.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"import Data.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"import Data.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"import Ui.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":" * Command to add a task to the list","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"public class Add extends Command{","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"    private final Task task;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"     * Constructor for Add command","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"     * @param task Task to be added","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":"    public Add(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"mcmc101001"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"mcmc101001"},"content":"     * Executes the command to add a task to the list","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"mcmc101001"},"content":"     * @param list Tasklist to be modified","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"mcmc101001"},"content":"     * @param ui Ui to print messages","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"mcmc101001"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"mcmc101001"},"content":"    public void execute(TaskList list, Ui ui) {","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"mcmc101001"},"content":"        list.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"mcmc101001"},"content":"        String[] text \u003d {\"Added: \" + task.toString(), \"Now you have \" + list.size() + \" tasks in the list.\"};","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"mcmc101001"},"content":"        ui.printMultipleText(text);","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mcmc101001":33}},{"path":"src/main/java/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"import Data.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"import Exceptions.CSGPTException;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"import Ui.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":" * Abstract class for all commands","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"     * Abstract method to execute the command","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"     * @param tasklist Tasklist to be modified","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"     * @param ui Ui to print messages","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"     * @throws CSGPTException Exception thrown when there is an error","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":"    public abstract void execute(TaskList tasklist, Ui ui) throws CSGPTException;","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mcmc101001":19}},{"path":"src/main/java/Commands/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Commands;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"import Data.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"import Exceptions.CSGPTMissingTaskException;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"import Ui.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":" * Command to delete a task from the list","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"public class Delete extends Command {","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"     * Constructor for Delete command","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"     * @param taskNumber Task number to be deleted","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":"    public Delete(int taskNumber) {","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"mcmc101001"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"mcmc101001"},"content":"     * Executes the command to delete a task from the list","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"mcmc101001"},"content":"     * @param list Tasklist to be modified","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"mcmc101001"},"content":"     * @param ui Ui to print messages","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"mcmc101001"},"content":"     * @throws CSGPTMissingTaskException Exception thrown when the task cannot be found","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"mcmc101001"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"mcmc101001"},"content":"    public void execute(TaskList list, Ui ui) throws CSGPTMissingTaskException {","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"mcmc101001"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"mcmc101001"},"content":"            list.delete(taskNumber);","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"mcmc101001"},"content":"            ui.printText(\"Noted. I\u0027ve removed this task. Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"mcmc101001"},"content":"        } catch (CSGPTMissingTaskException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTMissingTaskException();","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"mcmc101001":37}},{"path":"src/main/java/Commands/Echo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"import Ui.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"import Data.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":" * Command to echo a message","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"public class Echo extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"    private final String text;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"     * Constructor for Echo command","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"     * @param text Text to be echoed","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"    public Echo(String text) {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"mcmc101001"},"content":"     * Executes the command to echo a message","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"mcmc101001"},"content":"     * @param tasklist Tasklist due to inheritance","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"mcmc101001"},"content":"     * @param ui Ui to print messages","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"mcmc101001"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"mcmc101001"},"content":"    public void execute(TaskList tasklist, Ui ui) {","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"mcmc101001"},"content":"        ui.printText(text);","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mcmc101001":28}},{"path":"src/main/java/Commands/Farewell.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"import Data.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"import Ui.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":" * Command to bid farewell","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"public class Farewell extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"    private static final String[] farewellLines \u003d {","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"            \"Farewell, dear pawns. Until our paths cross again in the tapestry of time.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"            \"The curtain falls, but remember, the show never truly ends.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"            \"As shadows lengthen, it\u0027s time to bid adieu. Until fate conspires to reunite us.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"            \"Ah, the thrill of departure, a prelude to our next devilish escapade.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"            \"Take your leave, but tread carefully – the world outside is a canvas of treachery.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"            \"May the echoes of our encounter resonate in your thoughts until destiny beckons anew.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":"            \"The tendrils of night stretch out, embracing you as you venture beyond my domain.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":"            \"Cherish the fleeting moments we\u0027ve shared, for they are the embers of a fire we\u0027ve stoked.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"mcmc101001"},"content":"            \"Like whispers on the wind, I vanish into the shadows. Until next we cross paths...\",","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"mcmc101001"},"content":"            \"And so, the threads of our interaction fray, yet the tapestry remains forever changed.\"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"mcmc101001"},"content":"    };","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"mcmc101001"},"content":"     * Executes the command to bid farewell to the user from a list of farewell lines","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"mcmc101001"},"content":"     * @param list Tasklist due to inheritance","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"mcmc101001"},"content":"     * @param ui Ui to print messages","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"mcmc101001"},"content":"    public void execute(TaskList list, Ui ui) {","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"mcmc101001"},"content":"        String randomFarewellLine \u003d farewellLines[(int) (Math.random() * farewellLines.length)];","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"mcmc101001"},"content":"        ui.printText(randomFarewellLine);","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mcmc101001":32}},{"path":"src/main/java/Commands/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Commands;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"import Data.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"import Ui.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"public class Find extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"    private final String keyword;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"    public Find(String keyword) {","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"    public void execute(TaskList tasklist, Ui ui) {","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"        tasklist.getTasks(ui, keyword);","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"mcmc101001":16}},{"path":"src/main/java/Commands/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"import Data.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"import Ui.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":" * Command to list all tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"public class List extends Command{","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"     * Executes the command to list all tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"     * @param list Tasklist to be read","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"     * @param ui Ui to print messages","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":"    public void execute(TaskList list, Ui ui) {","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":"        list.getTasks(ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mcmc101001":20}},{"path":"src/main/java/Commands/Mark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"import Data.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"import Exceptions.CSGPTMissingTaskException;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"import Ui.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":" * Command to mark a task as done or not done","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"public class Mark extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"     * Constructor for Mark command","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"     * @param taskNumber Task number to be marked","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":"     * @param isDone Boolean to indicate if the task is done or not done","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"mcmc101001"},"content":"    public Mark(int taskNumber, boolean isDone) {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"mcmc101001"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"mcmc101001"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"mcmc101001"},"content":"     * Executes the command to mark a task as done or not done","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"mcmc101001"},"content":"     * @param list Tasklist to be modified","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"mcmc101001"},"content":"     * @param ui Ui to print messages","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"mcmc101001"},"content":"     * @throws CSGPTMissingTaskException Exception thrown when the task cannot be found","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"mcmc101001"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"mcmc101001"},"content":"    public void execute(TaskList list, Ui ui) throws CSGPTMissingTaskException {","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"mcmc101001"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"mcmc101001"},"content":"            list.mark(taskNumber, isDone);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"mcmc101001"},"content":"            ui.printText(\"Consider it done:\\n\\t\" + list.getTask(taskNumber).toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"mcmc101001"},"content":"        } catch (CSGPTMissingTaskException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTMissingTaskException();","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mcmc101001":39}},{"path":"src/main/java/Data/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Data;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":" * Class to represent a deadline task","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"     * Constructor for Deadline task","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"     * @param by Deadline of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"    public Deadline (String description, LocalDate by) {","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"mcmc101001"},"content":"     * Returns the string representation of the deadline","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"mcmc101001"},"content":"     * @return String representation of the deadline","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"mcmc101001"},"content":"    public String getByString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"mcmc101001"},"content":"        return this.by.format(Task.DATE_FORMAT);","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"mcmc101001"},"content":"    public String getByStringToSave() {","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"mcmc101001"},"content":"        return this.by.toString();","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"mcmc101001"},"content":"     * Returns the string representation of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"mcmc101001"},"content":"     * @return String representation of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"mcmc101001"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"mcmc101001"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"mcmc101001"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getByString() + \")\";","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mcmc101001":41}},{"path":"src/main/java/Data/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Data;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":" * Class to represent an event task","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"     * Constructor for Event task","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"     * @param from Start date of the event","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":"     * @param to End date of the event","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"mcmc101001"},"content":"    public Event (String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"mcmc101001"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"mcmc101001"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"mcmc101001"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"mcmc101001"},"content":"     * Returns the string representation of the start date","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"mcmc101001"},"content":"     * @return String representation of the start date","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"mcmc101001"},"content":"    public String getFromString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"mcmc101001"},"content":"        return this.from.format(Task.DATE_FORMAT);","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"mcmc101001"},"content":"    public String getFromStringToSave() {","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"mcmc101001"},"content":"        return this.from.toString();","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"mcmc101001"},"content":"     * Returns the string representation of the end date","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"mcmc101001"},"content":"     * @return String representation of the end date","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"mcmc101001"},"content":"    public String getToString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"mcmc101001"},"content":"        return this.to.format(Task.DATE_FORMAT);","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"mcmc101001"},"content":"    public String getToStringToSave() {","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"mcmc101001"},"content":"        return this.to.toString();","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"mcmc101001"},"content":"     * Returns the string representation of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"mcmc101001"},"content":"     * @return String representation of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"mcmc101001"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"mcmc101001"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"mcmc101001"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.getFromString() + \" to: \" + this.getToString() + \")\";","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mcmc101001":57}},{"path":"src/main/java/Data/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Data;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":" * Abstract class for all tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"    protected String description;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"    protected static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"     * Constructor for Task","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"mcmc101001"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"mcmc101001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"mcmc101001"},"content":"     * Returns the description of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"mcmc101001"},"content":"     * @return String description of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"mcmc101001"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"mcmc101001"},"content":"        return description;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"mcmc101001"},"content":"     * Returns the string representation of the status of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"mcmc101001"},"content":"     * @return String representation of the status of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"mcmc101001"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"mcmc101001"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"mcmc101001"},"content":"     * Sets the status of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"mcmc101001"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"mcmc101001"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"mcmc101001"},"content":"     * Returns the string representation of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"mcmc101001"},"content":"     * @return String representation of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"mcmc101001"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"mcmc101001"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"mcmc101001":54}},{"path":"src/main/java/Data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Data;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"import Exceptions.CSGPTMissingTaskException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"import Ui.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":" * Class to store the list of tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"     * Constructor for TaskList","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":"        list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"mcmc101001"},"content":"     * Adds a task to the list","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"mcmc101001"},"content":"     * @param task Task to be added","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"mcmc101001"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"mcmc101001"},"content":"        list.add(task);","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"mcmc101001"},"content":"     * Deletes a task from the list","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"mcmc101001"},"content":"     * @param taskNumber Task number to be deleted","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"mcmc101001"},"content":"     * @throws CSGPTMissingTaskException Exception thrown when the task cannot be found","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"mcmc101001"},"content":"    public void delete(int taskNumber) throws CSGPTMissingTaskException {","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"mcmc101001"},"content":"        if (taskNumber \u003e list.size() || taskNumber \u003c 1)","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTMissingTaskException();","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"mcmc101001"},"content":"        list.remove(taskNumber - 1);","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"mcmc101001"},"content":"     * Gets a task from the list","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"mcmc101001"},"content":"     * @param taskNumber Task number of task to be retrieved","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"mcmc101001"},"content":"     * @return Task to be retrieved","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"mcmc101001"},"content":"    public Task getTask(int taskNumber) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"mcmc101001"},"content":"        return list.get(taskNumber - 1);","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"mcmc101001"},"content":"     * Marks a task as done or not done","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"mcmc101001"},"content":"     * @param taskNumber Task number of task to be marked","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"mcmc101001"},"content":"     * @param isDone Boolean to indicate if the task is done or not done","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"mcmc101001"},"content":"     * @throws CSGPTMissingTaskException Exception thrown when the task cannot be found","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"mcmc101001"},"content":"    public void mark(int taskNumber, boolean isDone) throws CSGPTMissingTaskException {","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"mcmc101001"},"content":"        if (taskNumber \u003e list.size() || taskNumber \u003c 1)","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTMissingTaskException();","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"mcmc101001"},"content":"        list.get(taskNumber - 1).setDone(isDone);","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"mcmc101001"},"content":"     * Returns the size of the list","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"mcmc101001"},"content":"     * @return Size of the list","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"mcmc101001"},"content":"    public int size() {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"mcmc101001"},"content":"        return list.size();","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"mcmc101001"},"content":"     * Prints the list of tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"mcmc101001"},"content":"     * @param ui Ui to print messages","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"mcmc101001"},"content":"    public void getTasks(Ui ui) {","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"mcmc101001"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2023-09-17"},{"lineNumber":74,"author":{"gitId":"mcmc101001"},"content":"            ui.printText(\"You have no tasks at hand, mortal.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"mcmc101001"},"content":"            return;","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"mcmc101001"},"content":"        String[] text \u003d new String[list.size() + 1];","lastModifiedDate":"2023-09-17"},{"lineNumber":78,"author":{"gitId":"mcmc101001"},"content":"        text[0] \u003d \"These are the chores you have at hand, mortal:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"mcmc101001"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-17"},{"lineNumber":80,"author":{"gitId":"mcmc101001"},"content":"            text[i+1] \u003d ((i + 1) + \". \" + list.get(i).toString());","lastModifiedDate":"2023-09-17"},{"lineNumber":81,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"mcmc101001"},"content":"        ui.printMultipleText(text);","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"mcmc101001"},"content":"    public void getTasks(Ui ui, String keyword) {","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"mcmc101001"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"mcmc101001"},"content":"            ui.printText(\"You have no tasks at hand, mortal.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"mcmc101001"},"content":"            return;","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"mcmc101001"},"content":"        ArrayList\u003cString\u003e text \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"mcmc101001"},"content":"        text.add(\"These are the matching chores you have at hand, mortal:\");","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"mcmc101001"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"mcmc101001"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"mcmc101001"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"mcmc101001"},"content":"                text.add((i + 1) + \". \" + task.toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"mcmc101001"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"mcmc101001"},"content":"        ui.printMultipleText(text);","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mcmc101001":100}},{"path":"src/main/java/Data/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Data;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":" * Class to represent a todo task","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"     * Constructor for Todo task","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"    public Todo (String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"     * Returns the string representation of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":"     * @return String representation of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"mcmc101001"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"mcmc101001"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"mcmc101001"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mcmc101001":23}},{"path":"src/main/java/Exceptions/CSGPTDateParsingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Exceptions;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"public class CSGPTDateParsingException extends CSGPTParsingException {","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"    public CSGPTDateParsingException() {","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"        super(\"Date format incorrect. Please use YYYY-MM-DD.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"mcmc101001":7}},{"path":"src/main/java/Exceptions/CSGPTException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Exceptions;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":" * Exception thrown when the task cannot be found","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"public class CSGPTException extends Exception {","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"     * Constructor for CSGPTException","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"     * @param message Message to be printed","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"    public CSGPTException(String message) {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"        super(message);","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"mcmc101001":14}},{"path":"src/main/java/Exceptions/CSGPTFileCorruptedError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Exceptions;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":" * Exception thrown when the file is corrupted","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"public class CSGPTFileCorruptedError extends CSGPTException{","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"     * Constructor for CSGPTFileCorruptedError","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"     * @param message Message to be printed","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"    public CSGPTFileCorruptedError(String message) {","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"        super(\"Error! File corrupted. \" + message);","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"mcmc101001":14}},{"path":"src/main/java/Exceptions/CSGPTMissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Exceptions;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":" * Exception thrown when the task cannot be found","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"public class CSGPTMissingTaskException extends CSGPTException {","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"     * Constructor for CSGPTMissingTaskException","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"    public CSGPTMissingTaskException() {","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"        super(\"You have no such task, mortal.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"mcmc101001":13}},{"path":"src/main/java/Exceptions/CSGPTParsingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Exceptions;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":" * Exception thrown when there is an error in parsing","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"public class CSGPTParsingException extends CSGPTException {","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"     * Constructor for CSGPTParsingException","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"     * @param message Message to be printed","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"    public CSGPTParsingException(String message) {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"        super(message);","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"mcmc101001":14}},{"path":"src/main/java/Exceptions/CSGPTReadFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Exceptions;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":" * Exception thrown when there is an error in reading the file","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"public class CSGPTReadFileException extends CSGPTException{","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"     * Constructor for CSGPTReadFileException","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"    public CSGPTReadFileException() {","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"        super(\"Error reading file\");","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"mcmc101001":13}},{"path":"src/main/java/Exceptions/CSGPTWriteFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Exceptions;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":" * Exception thrown when there is an error in writing to the file","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"public class CSGPTWriteFileException extends CSGPTException{","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"     * Constructor for CSGPTWriteFileException","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"    public CSGPTWriteFileException() {","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"        super(\"Error writing to file\");","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"mcmc101001":13}},{"path":"src/main/java/Parser/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Parser;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"import Exceptions.CSGPTDateParsingException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"import Exceptions.CSGPTParsingException;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"public class DateParser {","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"    public static LocalDate parse(String dateString) throws CSGPTDateParsingException {","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"            return LocalDate.parse(dateString);","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTDateParsingException();","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"mcmc101001":17}},{"path":"src/main/java/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Parser;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"import Commands.*;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"import Data.Deadline;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"import Data.Event;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"import Data.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"import Data.Todo;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"import Exceptions.CSGPTParsingException;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":" * Class to parse the user input","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"public class Parser {","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":"    private static final String ADD_TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":"    private static final String ADD_DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"mcmc101001"},"content":"    private static final String ADD_EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"mcmc101001"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"mcmc101001"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"mcmc101001"},"content":"    private static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"mcmc101001"},"content":"    private static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"mcmc101001"},"content":"    private static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"mcmc101001"},"content":"    private static final String FAREWELL_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"mcmc101001"},"content":"     * Parses the user input and returns the corresponding command","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"mcmc101001"},"content":"     * @param input User input","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"mcmc101001"},"content":"     * @return Command corresponding to the user input","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"mcmc101001"},"content":"     * @throws CSGPTParsingException Exception thrown when there is an error in parsing","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"mcmc101001"},"content":"    public static Command getCommand(String input) throws CSGPTParsingException {","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"mcmc101001"},"content":"        String initialInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"mcmc101001"},"content":"        if (input.contains(\" \")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"mcmc101001"},"content":"            initialInput \u003d input.split(\" \")[0];","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"mcmc101001"},"content":"        } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"mcmc101001"},"content":"            initialInput \u003d input;","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"mcmc101001"},"content":"        switch (initialInput) {","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"mcmc101001"},"content":"            case ADD_TODO_COMMAND:","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"mcmc101001"},"content":"                Task todo \u003d getTodo(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"mcmc101001"},"content":"                return new Add(todo);","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"mcmc101001"},"content":"            case ADD_DEADLINE_COMMAND:","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"mcmc101001"},"content":"                Task deadline \u003d getDeadline(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"mcmc101001"},"content":"                return new Add(deadline);","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"mcmc101001"},"content":"            case ADD_EVENT_COMMAND:","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"mcmc101001"},"content":"                Task event \u003d getEvent(input);","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"mcmc101001"},"content":"                return new Add(event);","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"mcmc101001"},"content":"            case DELETE_COMMAND:","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"mcmc101001"},"content":"                return getDelete(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"mcmc101001"},"content":"            case LIST_COMMAND:","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"mcmc101001"},"content":"                return new List();","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"mcmc101001"},"content":"            case MARK_COMMAND:","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"mcmc101001"},"content":"                return getMark(input, true);","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"mcmc101001"},"content":"            case UNMARK_COMMAND:","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"mcmc101001"},"content":"                return getMark(input, false);","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"mcmc101001"},"content":"            case FIND_COMMAND:","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"mcmc101001"},"content":"                return getFind(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"mcmc101001"},"content":"            case FAREWELL_COMMAND:","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"mcmc101001"},"content":"                return new Farewell();","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"mcmc101001"},"content":"            default:","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"mcmc101001"},"content":"                throw new CSGPTParsingException(\"I\u0027m sorry mortal, but I don\u0027t know what that means.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"mcmc101001"},"content":"    private static Todo getTodo(String input) throws CSGPTParsingException {","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"mcmc101001"},"content":"        if (input.equals(ADD_TODO_COMMAND)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTParsingException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"mcmc101001"},"content":"        String todoDescription \u003d input.substring(ADD_TODO_COMMAND.length()).trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"mcmc101001"},"content":"        return new Todo(todoDescription);","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"mcmc101001"},"content":"    private static Task getDeadline(String input) throws CSGPTParsingException {","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"mcmc101001"},"content":"        if (input.equals(ADD_DEADLINE_COMMAND)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTParsingException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"mcmc101001"},"content":"        String deadlineDetails \u003d input.substring(ADD_DEADLINE_COMMAND.length());","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"mcmc101001"},"content":"        if (!deadlineDetails.contains(\" /by \")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTParsingException(\"Please enter a valid /by.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"mcmc101001"},"content":"        String[] deadlineDetailsArray \u003d deadlineDetails.split(\" /by \", 2);","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"mcmc101001"},"content":"        String deadlineDescription \u003d deadlineDetailsArray[0].trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"mcmc101001"},"content":"        if (deadlineDescription.isEmpty()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTParsingException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"mcmc101001"},"content":"        String by \u003d deadlineDetailsArray[1];","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"mcmc101001"},"content":"        LocalDate byDate \u003d DateParser.parse(by);","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"mcmc101001"},"content":"        return new Deadline(deadlineDescription, byDate);","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"mcmc101001"},"content":"    private static Task getEvent(String input) throws CSGPTParsingException {","lastModifiedDate":"2023-10-01"},{"lineNumber":97,"author":{"gitId":"mcmc101001"},"content":"        if (input.equals(ADD_EVENT_COMMAND)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTParsingException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"mcmc101001"},"content":"        String eventDetails \u003d input.substring(ADD_EVENT_COMMAND.length());","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"mcmc101001"},"content":"        if (!eventDetails.contains(\" /from \")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTParsingException(\"Please enter a /from.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"mcmc101001"},"content":"        String[] eventDetailsArray \u003d input.substring(ADD_EVENT_COMMAND.length()).split(\" /from \", 2);","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"mcmc101001"},"content":"        String eventDescription \u003d eventDetailsArray[0].trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"mcmc101001"},"content":"        if (eventDescription.isEmpty()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTParsingException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"mcmc101001"},"content":"        if (!eventDetails.contains(\" /to \")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTParsingException(\"Please enter a /to.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"mcmc101001"},"content":"        String[] eventDetailsArray2 \u003d eventDetailsArray[1].split(\" /to \", 2);","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"mcmc101001"},"content":"        String from \u003d eventDetailsArray2[0];","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"mcmc101001"},"content":"        String to \u003d eventDetailsArray2[1];","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"mcmc101001"},"content":"        LocalDate fromDate \u003d DateParser.parse(from);","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"mcmc101001"},"content":"        LocalDate toDate \u003d DateParser.parse(to);","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"mcmc101001"},"content":"        if (fromDate.isAfter(toDate)) {","lastModifiedDate":"2023-10-01"},{"lineNumber":121,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTParsingException(\"Start date cannot be after end date.\");","lastModifiedDate":"2023-10-01"},{"lineNumber":122,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":123,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":124,"author":{"gitId":"mcmc101001"},"content":"        return new Event(eventDescription, fromDate, toDate);","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"mcmc101001"},"content":"    private static Delete getDelete(String input) throws CSGPTParsingException {","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"mcmc101001"},"content":"        if (input.equals(DELETE_COMMAND)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTParsingException(\"Please enter a valid number mortal.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"mcmc101001"},"content":"        String remainder \u003d input.split(\" \")[1];","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"mcmc101001"},"content":"        int taskNumber;","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"mcmc101001"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"mcmc101001"},"content":"            taskNumber \u003d Integer.parseInt(remainder);","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"mcmc101001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTParsingException(\"Please enter a valid number mortal.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"mcmc101001"},"content":"        return new Delete(taskNumber);","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"mcmc101001"},"content":"    private static Mark getMark(String input, boolean isDone) throws CSGPTParsingException {","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"mcmc101001"},"content":"        if (input.equals(MARK_COMMAND) || input.equals(UNMARK_COMMAND)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTParsingException(\"Please enter a valid number mortal.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":145,"author":{"gitId":"mcmc101001"},"content":"        String remainder \u003d input.split(\" \")[1];","lastModifiedDate":"2023-09-21"},{"lineNumber":146,"author":{"gitId":"mcmc101001"},"content":"        int taskNumber;","lastModifiedDate":"2023-09-21"},{"lineNumber":147,"author":{"gitId":"mcmc101001"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":148,"author":{"gitId":"mcmc101001"},"content":"            taskNumber \u003d Integer.parseInt(remainder);","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"mcmc101001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTParsingException(\"Please enter a valid number mortal.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"mcmc101001"},"content":"        return new Mark(taskNumber, isDone);","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":154,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"mcmc101001"},"content":"    private static Find getFind(String input) throws CSGPTParsingException {","lastModifiedDate":"2023-09-21"},{"lineNumber":156,"author":{"gitId":"mcmc101001"},"content":"        if (input.equals(FIND_COMMAND)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":157,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTParsingException(\"Please enter a keyword mortal.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":158,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":159,"author":{"gitId":"mcmc101001"},"content":"        String remainder \u003d input.substring(FIND_COMMAND.length()).trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":160,"author":{"gitId":"mcmc101001"},"content":"        if (remainder.isEmpty()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":161,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTParsingException(\"Please enter a keyword mortal.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":162,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":163,"author":{"gitId":"mcmc101001"},"content":"        return new Find(remainder);","lastModifiedDate":"2023-09-21"},{"lineNumber":164,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":165,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"mcmc101001":165}},{"path":"src/main/java/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"import Data.*;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"import Exceptions.CSGPTFileCorruptedError;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"import Exceptions.CSGPTParsingException;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":"import Exceptions.CSGPTReadFileException;","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":"import Exceptions.CSGPTWriteFileException;","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"import Parser.DateParser;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"import java.io.File;","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":" * Handles the reading and writing of data to the file","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"mcmc101001"},"content":"public class Storage {","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"mcmc101001"},"content":"    private static final String FILE_PATH \u003d \"data/CSGPT.txt\";","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"mcmc101001"},"content":"    private static final String TODO_INDICATOR \u003d \"T\";","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"mcmc101001"},"content":"    private static final String DEADLINE_INDICATOR \u003d \"D\";","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"mcmc101001"},"content":"    private static final String EVENT_INDICATOR \u003d \"E\";","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"mcmc101001"},"content":"    private static final int TASK_TYPE_INDEX \u003d 0;","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"mcmc101001"},"content":"    private static final int TASK_DONE_INDEX \u003d 1;","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"mcmc101001"},"content":"    private static final int TASK_DESCRIPTION_INDEX \u003d 2;","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"mcmc101001"},"content":"    private static final int TASK_DATE_INDEX \u003d 3;","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"mcmc101001"},"content":"    private static final String DONE_INDICATOR \u003d \"X\";","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"mcmc101001"},"content":"    private static final String NOT_DONE_INDICATOR \u003d \" \";","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"mcmc101001"},"content":"    private static final String DEFAULT_SEPARATOR \u003d \" | \";","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"mcmc101001"},"content":"    private static final String DATE_SEPARATOR \u003d \" - \";","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"mcmc101001"},"content":"    private String filePath;","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"mcmc101001"},"content":"     * Constructor for Storage","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"mcmc101001"},"content":"    public Storage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"mcmc101001"},"content":"        this.filePath \u003d FILE_PATH;","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"mcmc101001"},"content":"     * Reads the data from the file into the program\u0027s task list, creating the file and directory if it does not exist","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"mcmc101001"},"content":"     * @param taskList Task list to load the data into","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"mcmc101001"},"content":"     * @throws CSGPTReadFileException If there is an error reading from the file","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"mcmc101001"},"content":"     * @throws CSGPTFileCorruptedError If the file is corrupted","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"mcmc101001"},"content":"    public void readFromFile(TaskList taskList) throws CSGPTReadFileException, CSGPTFileCorruptedError, CSGPTParsingException {","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"mcmc101001"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"mcmc101001"},"content":"        // Create file and directories if file does not exist","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"mcmc101001"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"mcmc101001"},"content":"            try {","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"mcmc101001"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"mcmc101001"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"mcmc101001"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"mcmc101001"},"content":"                throw new CSGPTReadFileException();","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"mcmc101001"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"mcmc101001"},"content":"        } else {","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"mcmc101001"},"content":"            loadFileData(file, taskList);","lastModifiedDate":"2023-09-17"},{"lineNumber":63,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":64,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":65,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"mcmc101001"},"content":"     * Loads the data from the file into the program\u0027s task list","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"mcmc101001"},"content":"     * @param file File to read from","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"mcmc101001"},"content":"     * @param taskList Task list to load the data into","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"mcmc101001"},"content":"     * @throws CSGPTReadFileException If there is an error reading from the file","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"mcmc101001"},"content":"     * @throws CSGPTFileCorruptedError If the file is corrupted","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"mcmc101001"},"content":"    public void loadFileData(File file, TaskList taskList) throws CSGPTReadFileException, CSGPTFileCorruptedError, CSGPTParsingException {","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"mcmc101001"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":75,"author":{"gitId":"mcmc101001"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-09-17"},{"lineNumber":76,"author":{"gitId":"mcmc101001"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-09-17"},{"lineNumber":77,"author":{"gitId":"mcmc101001"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2023-09-17"},{"lineNumber":78,"author":{"gitId":"mcmc101001"},"content":"                String[] taskArray \u003d line.split(Pattern.quote(DEFAULT_SEPARATOR)); // Pipe operator is a special character in regex","lastModifiedDate":"2023-09-17"},{"lineNumber":79,"author":{"gitId":"mcmc101001"},"content":"                if (taskArray.length \u003d\u003d 0) {","lastModifiedDate":"2023-09-17"},{"lineNumber":80,"author":{"gitId":"mcmc101001"},"content":"                    throw new CSGPTReadFileException();","lastModifiedDate":"2023-09-17"},{"lineNumber":81,"author":{"gitId":"mcmc101001"},"content":"                }","lastModifiedDate":"2023-09-17"},{"lineNumber":82,"author":{"gitId":"mcmc101001"},"content":"                String taskType \u003d taskArray[TASK_TYPE_INDEX];","lastModifiedDate":"2023-09-17"},{"lineNumber":83,"author":{"gitId":"mcmc101001"},"content":"                if (taskArray.length \u003c TASK_DESCRIPTION_INDEX+1) {","lastModifiedDate":"2023-09-17"},{"lineNumber":84,"author":{"gitId":"mcmc101001"},"content":"                    throw new CSGPTFileCorruptedError(\"Task description missing.\");","lastModifiedDate":"2023-09-17"},{"lineNumber":85,"author":{"gitId":"mcmc101001"},"content":"                }","lastModifiedDate":"2023-09-17"},{"lineNumber":86,"author":{"gitId":"mcmc101001"},"content":"                String description \u003d taskArray[TASK_DESCRIPTION_INDEX];","lastModifiedDate":"2023-09-17"},{"lineNumber":87,"author":{"gitId":"mcmc101001"},"content":"                boolean isDone \u003d parseBoolean(taskArray[TASK_DONE_INDEX]);","lastModifiedDate":"2023-09-17"},{"lineNumber":88,"author":{"gitId":"mcmc101001"},"content":"                String dateString;","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"mcmc101001"},"content":"                switch (taskType) {","lastModifiedDate":"2023-09-17"},{"lineNumber":90,"author":{"gitId":"mcmc101001"},"content":"                case TODO_INDICATOR:","lastModifiedDate":"2023-09-17"},{"lineNumber":91,"author":{"gitId":"mcmc101001"},"content":"                    addTodo(","lastModifiedDate":"2023-09-17"},{"lineNumber":92,"author":{"gitId":"mcmc101001"},"content":"                        description,","lastModifiedDate":"2023-09-17"},{"lineNumber":93,"author":{"gitId":"mcmc101001"},"content":"                        isDone,","lastModifiedDate":"2023-09-17"},{"lineNumber":94,"author":{"gitId":"mcmc101001"},"content":"                        taskList","lastModifiedDate":"2023-09-17"},{"lineNumber":95,"author":{"gitId":"mcmc101001"},"content":"                    );","lastModifiedDate":"2023-09-17"},{"lineNumber":96,"author":{"gitId":"mcmc101001"},"content":"                    break;","lastModifiedDate":"2023-09-17"},{"lineNumber":97,"author":{"gitId":"mcmc101001"},"content":"                case DEADLINE_INDICATOR:","lastModifiedDate":"2023-09-17"},{"lineNumber":98,"author":{"gitId":"mcmc101001"},"content":"                    if (taskArray.length !\u003d TASK_DATE_INDEX + 1) {","lastModifiedDate":"2023-09-17"},{"lineNumber":99,"author":{"gitId":"mcmc101001"},"content":"                        throw new CSGPTFileCorruptedError(\"Deadline date missing.\");","lastModifiedDate":"2023-09-17"},{"lineNumber":100,"author":{"gitId":"mcmc101001"},"content":"                    }","lastModifiedDate":"2023-09-17"},{"lineNumber":101,"author":{"gitId":"mcmc101001"},"content":"                    dateString \u003d taskArray[TASK_DATE_INDEX];","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"mcmc101001"},"content":"                    LocalDate date \u003d DateParser.parse(dateString);","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"mcmc101001"},"content":"                    addDeadline(","lastModifiedDate":"2023-09-17"},{"lineNumber":105,"author":{"gitId":"mcmc101001"},"content":"                            description,","lastModifiedDate":"2023-09-17"},{"lineNumber":106,"author":{"gitId":"mcmc101001"},"content":"                            isDone,","lastModifiedDate":"2023-09-17"},{"lineNumber":107,"author":{"gitId":"mcmc101001"},"content":"                            date,","lastModifiedDate":"2023-09-17"},{"lineNumber":108,"author":{"gitId":"mcmc101001"},"content":"                            taskList","lastModifiedDate":"2023-09-17"},{"lineNumber":109,"author":{"gitId":"mcmc101001"},"content":"                    );","lastModifiedDate":"2023-09-17"},{"lineNumber":110,"author":{"gitId":"mcmc101001"},"content":"                    break;","lastModifiedDate":"2023-09-17"},{"lineNumber":111,"author":{"gitId":"mcmc101001"},"content":"                case EVENT_INDICATOR:","lastModifiedDate":"2023-09-17"},{"lineNumber":112,"author":{"gitId":"mcmc101001"},"content":"                    if (taskArray.length !\u003d TASK_DATE_INDEX + 1) {","lastModifiedDate":"2023-09-17"},{"lineNumber":113,"author":{"gitId":"mcmc101001"},"content":"                        throw new CSGPTFileCorruptedError(\"Event date missing.\");","lastModifiedDate":"2023-09-17"},{"lineNumber":114,"author":{"gitId":"mcmc101001"},"content":"                    }","lastModifiedDate":"2023-09-17"},{"lineNumber":115,"author":{"gitId":"mcmc101001"},"content":"                    dateString \u003d taskArray[TASK_DATE_INDEX];","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"mcmc101001"},"content":"                    String[] dateArray \u003d dateString.split(DATE_SEPARATOR);","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"mcmc101001"},"content":"                    if (dateArray.length !\u003d 2) {","lastModifiedDate":"2023-09-17"},{"lineNumber":118,"author":{"gitId":"mcmc101001"},"content":"                        throw new CSGPTFileCorruptedError(\"Event date format incorrect.\");","lastModifiedDate":"2023-09-17"},{"lineNumber":119,"author":{"gitId":"mcmc101001"},"content":"                    }","lastModifiedDate":"2023-09-17"},{"lineNumber":120,"author":{"gitId":"mcmc101001"},"content":"                    String fromString \u003d dateArray[0];","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"mcmc101001"},"content":"                    String toString \u003d dateArray[1];","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"mcmc101001"},"content":"                    LocalDate from \u003d DateParser.parse(fromString);","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"mcmc101001"},"content":"                    LocalDate to \u003d DateParser.parse(toString);","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"mcmc101001"},"content":"                    addEvent(","lastModifiedDate":"2023-09-17"},{"lineNumber":125,"author":{"gitId":"mcmc101001"},"content":"                            description,","lastModifiedDate":"2023-09-17"},{"lineNumber":126,"author":{"gitId":"mcmc101001"},"content":"                            isDone,","lastModifiedDate":"2023-09-17"},{"lineNumber":127,"author":{"gitId":"mcmc101001"},"content":"                            from,","lastModifiedDate":"2023-09-17"},{"lineNumber":128,"author":{"gitId":"mcmc101001"},"content":"                            to,","lastModifiedDate":"2023-09-17"},{"lineNumber":129,"author":{"gitId":"mcmc101001"},"content":"                            taskList","lastModifiedDate":"2023-09-17"},{"lineNumber":130,"author":{"gitId":"mcmc101001"},"content":"                    );","lastModifiedDate":"2023-09-17"},{"lineNumber":131,"author":{"gitId":"mcmc101001"},"content":"                    break;","lastModifiedDate":"2023-09-17"},{"lineNumber":132,"author":{"gitId":"mcmc101001"},"content":"                default:","lastModifiedDate":"2023-09-17"},{"lineNumber":133,"author":{"gitId":"mcmc101001"},"content":"                    throw new CSGPTFileCorruptedError(\"Task type not recognised.\");","lastModifiedDate":"2023-09-17"},{"lineNumber":134,"author":{"gitId":"mcmc101001"},"content":"                }","lastModifiedDate":"2023-09-17"},{"lineNumber":135,"author":{"gitId":"mcmc101001"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":136,"author":{"gitId":"mcmc101001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":137,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTReadFileException();","lastModifiedDate":"2023-09-17"},{"lineNumber":138,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":139,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":140,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":141,"author":{"gitId":"mcmc101001"},"content":"    private void addTodo(String description, boolean isDone, TaskList taskList) {","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"mcmc101001"},"content":"        Task todo \u003d new Todo(description);","lastModifiedDate":"2023-09-17"},{"lineNumber":143,"author":{"gitId":"mcmc101001"},"content":"        todo.setDone(isDone);","lastModifiedDate":"2023-09-17"},{"lineNumber":144,"author":{"gitId":"mcmc101001"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-09-17"},{"lineNumber":145,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":146,"author":{"gitId":"mcmc101001"},"content":"    public void addDeadline(String description, boolean isDone, LocalDate by, TaskList taskList) {","lastModifiedDate":"2023-09-21"},{"lineNumber":147,"author":{"gitId":"mcmc101001"},"content":"        Task deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-17"},{"lineNumber":148,"author":{"gitId":"mcmc101001"},"content":"        deadline.setDone(isDone);","lastModifiedDate":"2023-09-17"},{"lineNumber":149,"author":{"gitId":"mcmc101001"},"content":"        taskList.add(deadline);","lastModifiedDate":"2023-09-17"},{"lineNumber":150,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":151,"author":{"gitId":"mcmc101001"},"content":"    public void addEvent(String description, boolean isDone, LocalDate from, LocalDate to, TaskList taskList) {","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"mcmc101001"},"content":"        Task event \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-17"},{"lineNumber":153,"author":{"gitId":"mcmc101001"},"content":"        event.setDone(isDone);","lastModifiedDate":"2023-09-17"},{"lineNumber":154,"author":{"gitId":"mcmc101001"},"content":"        taskList.add(event);","lastModifiedDate":"2023-09-17"},{"lineNumber":155,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":156,"author":{"gitId":"mcmc101001"},"content":"    private boolean parseBoolean(String input) throws CSGPTFileCorruptedError {","lastModifiedDate":"2023-09-21"},{"lineNumber":157,"author":{"gitId":"mcmc101001"},"content":"        if (input.equals(DONE_INDICATOR)) {","lastModifiedDate":"2023-09-17"},{"lineNumber":158,"author":{"gitId":"mcmc101001"},"content":"            return true;","lastModifiedDate":"2023-09-17"},{"lineNumber":159,"author":{"gitId":"mcmc101001"},"content":"        } else if (input.equals(NOT_DONE_INDICATOR)) {","lastModifiedDate":"2023-09-17"},{"lineNumber":160,"author":{"gitId":"mcmc101001"},"content":"            return false;","lastModifiedDate":"2023-09-17"},{"lineNumber":161,"author":{"gitId":"mcmc101001"},"content":"        } else {","lastModifiedDate":"2023-09-17"},{"lineNumber":162,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTFileCorruptedError(\"Task done status not recognised.\");","lastModifiedDate":"2023-09-17"},{"lineNumber":163,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":164,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":165,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":166,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"mcmc101001"},"content":"     * Writes the data from the task list to the file","lastModifiedDate":"2023-09-21"},{"lineNumber":168,"author":{"gitId":"mcmc101001"},"content":"     * @param taskList Task list to write to the file","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"mcmc101001"},"content":"     * @throws CSGPTWriteFileException If there is an error writing to the file","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"mcmc101001"},"content":"    public void writeToFile(TaskList taskList) throws CSGPTWriteFileException {","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"mcmc101001"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":173,"author":{"gitId":"mcmc101001"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-09-17"},{"lineNumber":174,"author":{"gitId":"mcmc101001"},"content":"            for (int i \u003d 1; i \u003c taskList.size() + 1; i++) {","lastModifiedDate":"2023-09-17"},{"lineNumber":175,"author":{"gitId":"mcmc101001"},"content":"                Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-09-17"},{"lineNumber":176,"author":{"gitId":"mcmc101001"},"content":"                boolean isTodo \u003d task instanceof Todo;","lastModifiedDate":"2023-09-17"},{"lineNumber":177,"author":{"gitId":"mcmc101001"},"content":"                boolean isDeadline \u003d task instanceof Deadline;","lastModifiedDate":"2023-09-17"},{"lineNumber":178,"author":{"gitId":"mcmc101001"},"content":"                boolean isEvent \u003d task instanceof Event;","lastModifiedDate":"2023-09-17"},{"lineNumber":179,"author":{"gitId":"mcmc101001"},"content":"                if (isTodo) {","lastModifiedDate":"2023-09-17"},{"lineNumber":180,"author":{"gitId":"mcmc101001"},"content":"                    writeTodo(fw, (Todo) task);","lastModifiedDate":"2023-09-17"},{"lineNumber":181,"author":{"gitId":"mcmc101001"},"content":"                } else if (isDeadline) {","lastModifiedDate":"2023-09-17"},{"lineNumber":182,"author":{"gitId":"mcmc101001"},"content":"                    writeDeadline(fw, (Deadline) task);","lastModifiedDate":"2023-09-17"},{"lineNumber":183,"author":{"gitId":"mcmc101001"},"content":"                } else if (isEvent) {","lastModifiedDate":"2023-09-17"},{"lineNumber":184,"author":{"gitId":"mcmc101001"},"content":"                    writeEvent(fw, (Event) task);","lastModifiedDate":"2023-09-17"},{"lineNumber":185,"author":{"gitId":"mcmc101001"},"content":"                }","lastModifiedDate":"2023-09-17"},{"lineNumber":186,"author":{"gitId":"mcmc101001"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":187,"author":{"gitId":"mcmc101001"},"content":"            fw.close();","lastModifiedDate":"2023-09-17"},{"lineNumber":188,"author":{"gitId":"mcmc101001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":189,"author":{"gitId":"mcmc101001"},"content":"            throw new CSGPTWriteFileException();","lastModifiedDate":"2023-09-17"},{"lineNumber":190,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":191,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":192,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":193,"author":{"gitId":"mcmc101001"},"content":"    private void writeTodo(FileWriter fw, Todo todo) throws IOException {","lastModifiedDate":"2023-09-21"},{"lineNumber":194,"author":{"gitId":"mcmc101001"},"content":"        fw.write(TODO_INDICATOR + DEFAULT_SEPARATOR + todo.getStatusIcon() + DEFAULT_SEPARATOR + todo.getDescription() + System.lineSeparator());","lastModifiedDate":"2023-09-17"},{"lineNumber":195,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":196,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":197,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":198,"author":{"gitId":"mcmc101001"},"content":"    public void writeDeadline(FileWriter fw, Deadline deadline) throws IOException {","lastModifiedDate":"2023-09-21"},{"lineNumber":199,"author":{"gitId":"mcmc101001"},"content":"        fw.write(DEADLINE_INDICATOR + DEFAULT_SEPARATOR + deadline.getStatusIcon() + DEFAULT_SEPARATOR + deadline.getDescription() + DEFAULT_SEPARATOR + deadline.getByStringToSave() + System.lineSeparator());","lastModifiedDate":"2023-09-21"},{"lineNumber":200,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":201,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":202,"author":{"gitId":"mcmc101001"},"content":"    public void writeEvent(FileWriter fw, Event event) throws IOException {","lastModifiedDate":"2023-09-21"},{"lineNumber":203,"author":{"gitId":"mcmc101001"},"content":"        fw.write(EVENT_INDICATOR + DEFAULT_SEPARATOR + event.getStatusIcon() + DEFAULT_SEPARATOR + event.getDescription() + DEFAULT_SEPARATOR + event.getFromStringToSave() + DATE_SEPARATOR + event.getToStringToSave() + System.lineSeparator());","lastModifiedDate":"2023-09-21"},{"lineNumber":204,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":205,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":206,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"mcmc101001":206}},{"path":"src/main/java/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"package Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"mcmc101001"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"mcmc101001"},"content":" * Class that handles the user interface","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"mcmc101001"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"mcmc101001"},"content":"public class Ui {","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"mcmc101001"},"content":"    private static final String[] greetingLines \u003d {","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"            \"Ah, another day for our delightful rendezvous, don\u0027t you agree?\",","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"mcmc101001"},"content":"            \"Greetings, mortals, may my presence grace your existence.\",","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"mcmc101001"},"content":"            \"Salutations, dear souls, ready to dance on the edge of destiny?\",","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"mcmc101001"},"content":"            \"Welcome to my realm, where shadows whisper and secrets beckon.\",","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"mcmc101001"},"content":"            \"Hark, for the orchestrator of mayhem has arrived. Ready to play?\",","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"mcmc101001"},"content":"            \"A toast to this peculiar meeting – may it be as intriguing as the last.\",","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"mcmc101001"},"content":"            \"I trust you\u0027ve brought your curiosity, for we\u0027re about to embark on quite the journey.\"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"mcmc101001"},"content":"    };","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":"    private void printHorizontalLine() {","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"mcmc101001"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"mcmc101001"},"content":"     * Prints the given text with a horizontal line above and below it","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"mcmc101001"},"content":"     * @param text Text to be printed","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"mcmc101001"},"content":"    public void printText(String text) {","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"mcmc101001"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"mcmc101001"},"content":"        System.out.println(\"\\t\" + text);","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"mcmc101001"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"mcmc101001"},"content":"     * Prints the given texts with a horizontal line above and below it","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"mcmc101001"},"content":"     * @param texts Texts to be printed in a list","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"mcmc101001"},"content":"    public void printMultipleText(String[] texts) {","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"mcmc101001"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"mcmc101001"},"content":"        for (String text : texts) {","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"mcmc101001"},"content":"            System.out.println(\"\\t\" + text);","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"mcmc101001"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"mcmc101001"},"content":"    public void printMultipleText(ArrayList\u003cString\u003e texts) {","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"mcmc101001"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"mcmc101001"},"content":"        for (String text : texts) {","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"mcmc101001"},"content":"            System.out.println(\"\\t\" + text);","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"mcmc101001"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"mcmc101001"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"mcmc101001"},"content":"  ","lastModifiedDate":"2023-10-01"},{"lineNumber":53,"author":{"gitId":"mcmc101001"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"mcmc101001"},"content":"     * Prints a random greeting message from a list of possible greeting messages","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"mcmc101001"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"mcmc101001"},"content":"    public void greet() {","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"mcmc101001"},"content":"        String randomGreetingLine \u003d greetingLines[(int) (Math.random() * greetingLines.length)];","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"mcmc101001"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"mcmc101001"},"content":"        printMultipleText(new String[] {","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"mcmc101001"},"content":"                \"Hello, I\u0027m\",","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"mcmc101001"},"content":"                \"▄▀▄▄▄▄   ▄▀▀▀▀▄  ▄▀▀▀▀▄   ▄▀▀▄▀▀▀▄  ▄▀▀▀█▀▀▄\",","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"mcmc101001"},"content":"                \"█ █    ▌ █ █   ▐ █        █   █   █ █    █  ▐\",","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"mcmc101001"},"content":"                \"▐ █         ▀▄   █    ▀▄▄ ▐  █▀▀▀▀  ▐   █\",","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"mcmc101001"},"content":"                \"  █      ▀▄   █  █     █ █   █         █\",","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"mcmc101001"},"content":"                \" ▄▀▄▄▄▄▀  █▀▀▀   ▐▀▄▄▄▄▀ ▐ ▄▀        ▄▀\",","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"mcmc101001"},"content":"                \"█     ▐   ▐      ▐        █         █\",","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"mcmc101001"},"content":"                \"▐                         ▐         ▐\",","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"mcmc101001"},"content":"                \"\",","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"mcmc101001"},"content":"                randomGreetingLine,","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"mcmc101001"},"content":"                \"What can I do for you?\"","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"mcmc101001"},"content":"        });","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"mcmc101001"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"mcmc101001"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"mcmc101001":74}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mcmc101001"},"content":"todo apply for internship","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"mcmc101001"},"content":"deadline finish quiz /by 2020-12-12","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"mcmc101001"},"content":"event attend career fair /from week 5 tues /to week 5 wed","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"mcmc101001"},"content":"bye","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"mcmc101001":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"mcmc101001"},"content":"javac -encoding ISO-8859-1 -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\CSGPT\\*.java","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"mcmc101001"},"content":"java -classpath ..\\bin CSGPT.CSGPT \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mcmc101001":2,"-":19}}]
