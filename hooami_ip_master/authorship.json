[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"# chat0pt.Duke project template","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"3. After that, locate the `src/main/java/chat0pt.Duke.java` file, right-click it, and choose `Run chat0pt.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hooami":2,"-":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"Chat0PT is a **desktop command-line application to keep track of a user\u0027s tasks**","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"* [Features](#features)","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"  * [List all tasks `list`](#list-all-tasks-list)","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"  * [Add a Todo task `todo`](#add-a-todo-task-todo)","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"  * [Add a Deadline task `deadline`](#add-a-deadline-task-deadline)","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"  * [Add a Event task `event`](#add-a-event-task-event)","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"  * [Deleting a task `delete`](#deleting-a-task-delete)","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"  * [Marking a task as done `done`](#marking-a-task-as-done-done)","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"  * [Marking a task as not done `unmark`](#marking-a-task-as-not-done-unmark)","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"  * [Searching for tasks by name `find`](#searching-for-tasks-by-name-find)","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"  * [Terminating the program](#terminating-the-program)","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"## Quick Start ","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"1. Ensure that you have Java `11` installed on your computer.","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"hooami"},"content":"2. Download the latest `ip.jar` from [here](https://github.com/hooami/ip/releases)","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"hooami"},"content":"3. Copy the file to the folder you want to use as the home folder for Chat0PT.","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"hooami"},"content":"4. Open a command terminal, cd to your JAR file location and use `java -jar ip.jar` to run the application.","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"hooami"},"content":"5. Type the command in the terminal and press Enter to execute it. Refer to [Features](#features) below for the details of each command.","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"hooami"},"content":"\u003e **Note**  ","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"hooami"},"content":"\u003e - Words in UPPER_CASE are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"hooami"},"content":"e.g. in `delete NUMBER`, `NUMBER` is a parameter which can be as `delete 1`","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"hooami"},"content":"\u003e - Extraneous parameters for commands that do not take in parameters (such as `list`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"hooami"},"content":"e.g. if the command specifies `list abc`, it will be interpreted as `list`.","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"hooami"},"content":"### List all tasks `list`","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"hooami"},"content":"Lists all currently active tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"hooami"},"content":"Format: `list`","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"hooami"},"content":"### Add a Todo task `todo`","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"hooami"},"content":"Creates a Todo task and adds it to the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"hooami"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"hooami"},"content":"Example:","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"hooami"},"content":"- `todo homework today`","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"hooami"},"content":"- `CS2113 IP`","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"hooami"},"content":"### Add a Deadline task `deadline`","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"hooami"},"content":"Creates a Deadline task and adds it to the list","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"hooami"},"content":"Format: `deadline DESCRIPTION /by DATETIME`","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"hooami"},"content":"- `DATETIME` must be in the format `YYYY-MM-DD HHMM`","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"hooami"},"content":"Example:","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"hooami"},"content":"- `deadline homework /by 2023-10-03 0700`","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"hooami"},"content":"### Add a Event task `event`","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"hooami"},"content":"Creates a Event task and adds it to the list","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"hooami"},"content":"Format: `event DESCRIPTION /from FROM /to TO`","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"hooami"},"content":"Example:","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"hooami"},"content":"- `event Christmas /from 25 Dec /to 26 Dec`","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"hooami"},"content":"### Deleting a task `delete`","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"hooami"},"content":"Deletes an existing task","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"hooami"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"hooami"},"content":"- `INDEX` must exist in the list and it has to be a number.","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"hooami"},"content":"Example:","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"hooami"},"content":"- `delete 1` to delete the first task in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"hooami"},"content":"### Marking a task as done `done`","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"hooami"},"content":"Marks an existing task as done","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"hooami"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"hooami"},"content":"- `INDEX` must exist in the list and it has to be a number.","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":77,"author":{"gitId":"hooami"},"content":"Example:","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"hooami"},"content":"- `mark 2` to mark the second task in the list as done","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"hooami"},"content":"  - If task is already marked, the command would have no effect   ","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":81,"author":{"gitId":"hooami"},"content":"### Marking a task as not done `unmark`","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"hooami"},"content":"Marks an existing task as not done","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":84,"author":{"gitId":"hooami"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"hooami"},"content":"- `INDEX` must exist in the list and it has to be a number.","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"hooami"},"content":"Example:","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"hooami"},"content":"- `unmark 2` to unmark the second task in the list as done","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"hooami"},"content":"  - If task is already unmarked, the command would have no effect","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"hooami"},"content":"### Searching for tasks by name `find`","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"hooami"},"content":"Find tasks based on a given keyword","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"hooami"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"hooami"},"content":"Example:","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"hooami"},"content":"- `find homework` to find tasks containing the word homework.","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"hooami"},"content":"- `find CS2113 project` to find tasks containing the sentence `CS2113 project`","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"hooami"},"content":"### Terminating the program","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"hooami"},"content":"Ends the program","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"hooami"},"content":"Format: `bye`","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"hooami"},"content":"## Command Summary","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":107,"author":{"gitId":"hooami"},"content":"| Action   | Format, Examples                                                                            |","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"hooami"},"content":"|----------|---------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"hooami"},"content":"| list     | `list`                                                                                      |","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"hooami"},"content":"| todo     | `todo DESCRIPTION` `todo homework today`                                                    |","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"hooami"},"content":"| deadline | `deadline /by DATETIME` `deadline homework /by 2023-10-03 0700`                             |","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"hooami"},"content":"| event    | `event DESCRIPTION /from FROM /to TO` `event Christmas /from 25 Dec /to 26 Dec`             |","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"hooami"},"content":"| delete   | `delete INDEX` `delete 1`                                                                   |","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"hooami"},"content":"| mark     | `mark INDEX` `mark 2`                                                                       |","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"hooami"},"content":"| unmark   | `unmark INDEX` `unmark 2`                                                                   |","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"hooami"},"content":"| find     | `find KEYWORD` `find homework`                                                              |","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"hooami"},"content":"| bye      | `bye`                                                                                       |","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"-":16,"hooami":101}},{"path":"src/main/java/chat0pt/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"import chat0pt.commands.Command;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"import chat0pt.helper.DukeException;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"import chat0pt.tasks.TaskList;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"import chat0pt.storage.Storage;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"import chat0pt.ui.Ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"import chat0pt.parser.Parser;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":" * Start of the bot Chat0PT","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"public class Duke {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"    private static Ui ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"    private static Storage storage;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"hooami"},"content":"     * Bot constructor to instantiate the Ui, Storage and TaskList objects, including loading the saved tasks from the file.","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"hooami"},"content":"    public Duke() {","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"hooami"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"hooami"},"content":"        storage \u003d new Storage(ui);","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"hooami"},"content":"        tasks \u003d new TaskList(ui, storage.onStart());","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"hooami"},"content":"     * Bot would accept input 1 command at a time until the command \u0027bye\u0027 is given.","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"hooami"},"content":"    public void run() {","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"hooami"},"content":"        ui.welcomeMessage();","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"hooami"},"content":"        boolean exitProgram \u003d false;","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"hooami"},"content":"        while (!exitProgram) {","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"hooami"},"content":"            try {","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"hooami"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"hooami"},"content":"                Command c \u003d new Parser().parse(fullCommand);","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"hooami"},"content":"                c.runCommand(ui, tasks);","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"hooami"},"content":"                exitProgram \u003d c.getProgramStatus();","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"hooami"},"content":"                storage.writeFile(tasks.returnTaskList());","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"hooami"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"hooami"},"content":"                String[] errormsg \u003d {e.getMessage()};","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"hooami"},"content":"                ui.print(errormsg);","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"hooami"},"content":"        ui.goodbyeMessage();","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"hooami"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"hooami"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"hooami"},"content":"        duke.run();","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"hooami":53}},{"path":"src/main/java/chat0pt/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"import chat0pt.helper.DukeException;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"import chat0pt.storage.Storage;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"import chat0pt.tasks.TaskList;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"import chat0pt.ui.Ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"    private String type;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"    private String[] tokens;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"     * Constructor for the AddCommand function","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"     * @param type   Type of command (Todo, Event, Deadline)","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"     * @param tokens User input after splitting by space","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"    public AddCommand(String type, String[] tokens) {","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"hooami"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"hooami"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"hooami"},"content":"     * Determines which action to take based on the command type","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"hooami"},"content":"     * @param ui  Takes in Ui for printing","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"hooami"},"content":"     * @param tasks Current TaskList","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"hooami"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"hooami"},"content":"    public void runCommand(Ui ui, TaskList tasks) {","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"hooami"},"content":"        switch (type) {","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"hooami"},"content":"        case \"todo\":","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"hooami"},"content":"            tasks.addTodo(tokens);","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"hooami"},"content":"            break;","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"hooami"},"content":"        case \"deadline\":","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"hooami"},"content":"            tasks.addDeadline(tokens);","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"hooami"},"content":"            break;","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"hooami"},"content":"        case \"event\":","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"hooami"},"content":"            tasks.addEvent(tokens);","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"hooami"},"content":"            break;","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"hooami"},"content":"        default:","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"hooami"},"content":"            ui.unsupportedCommand();","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"hooami":45}},{"path":"src/main/java/chat0pt/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"import chat0pt.helper.DukeException;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"import chat0pt.tasks.TaskList;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"import chat0pt.ui.Ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"public abstract class Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"    protected boolean endProgram \u003d false;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"    public abstract void runCommand(Ui ui, TaskList tasks) throws DukeException;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"    public boolean getProgramStatus() {","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"        return endProgram;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"hooami":15}},{"path":"src/main/java/chat0pt/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"import chat0pt.helper.DukeException;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"import chat0pt.parser.Parser;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"import chat0pt.storage.Storage;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"import chat0pt.tasks.TaskList;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"import chat0pt.ui.Ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"    private String[] commandString;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"    public DeleteCommand(String[] commandString) {","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"     * Used when the user trys to delete a task","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"     * @param ui Used for printing message","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"hooami"},"content":"     * @param tasks Current Tasklist","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"hooami"},"content":"     * @throws DukeException When an invalid number is encountered.","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"hooami"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"hooami"},"content":"    public void runCommand(Ui ui, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"hooami"},"content":"        int taskNumber \u003d Parser.validNumberInput(commandString);","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"hooami"},"content":"        if (taskNumber \u003e\u003d 0) {","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"hooami"},"content":"            tasks.deleteTask(taskNumber);","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"hooami"},"content":"        } else {","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"hooami"},"content":"            ui.invalidDelete();","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"hooami":31}},{"path":"src/main/java/chat0pt/commands/EndCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"import chat0pt.tasks.TaskList;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"import chat0pt.ui.Ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"public class EndCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"     * Executed when the user enters \u0027Bye\u0027","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"     * @param ui Used for printing","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"     * @param tasks Current tasklist (not used here)","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"    public void runCommand(Ui ui, TaskList tasks){","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"        endProgram \u003d true;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"hooami":16}},{"path":"src/main/java/chat0pt/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"import chat0pt.storage.Storage;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"import chat0pt.tasks.Task;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"import chat0pt.tasks.TaskList;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"import chat0pt.ui.Ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"    private String[] commandString;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"    public FindCommand(String[] commandString){","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"    public void runCommand(Ui ui, TaskList tasks) {","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTasks(commandString);","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"hooami"},"content":"        if (foundTasks.isEmpty()){","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"hooami"},"content":"            ui.failedFind();","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"hooami"},"content":"        } else {","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"hooami"},"content":"            ui.listHandler(foundTasks);","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"hooami":25}},{"path":"src/main/java/chat0pt/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"import chat0pt.helper.DukeException;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"import chat0pt.storage.Storage;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"import chat0pt.tasks.TaskList;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"import chat0pt.ui.Ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"    public void runCommand(Ui ui, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"        ui.unsupportedCommand();","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"hooami":13}},{"path":"src/main/java/chat0pt/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"import chat0pt.helper.DukeException;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"import chat0pt.storage.Storage;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"import chat0pt.tasks.TaskList;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"import chat0pt.ui.Ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"     * Lists all tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"     * @param ui Used for printing","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"     * @param tasks Current Task List","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"    public void runCommand(Ui ui, TaskList tasks) {","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"        ui.listHandler(tasks.returnTaskList());","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"hooami":18}},{"path":"src/main/java/chat0pt/commands/MarkerCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"import chat0pt.helper.DukeException;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"import chat0pt.parser.Parser;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"import chat0pt.storage.Storage;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"import chat0pt.tasks.TaskList;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"import chat0pt.ui.Ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"public class MarkerCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"    private String[] commandString;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"    private boolean marker; // True indicates to mark, False indicates to unmark","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"    public MarkerCommand(String[] commandString, boolean marker) {","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"        this.marker \u003d marker;","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"hooami"},"content":"     * Used for marking/unmarking a task","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"hooami"},"content":"     * @param ui Used for printing","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"hooami"},"content":"     * @param tasks Current tasklist","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"hooami"},"content":"     * @throws DukeException When a bot-specific error is encountered.","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"hooami"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"hooami"},"content":"    public void runCommand(Ui ui, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"hooami"},"content":"        int taskNumber \u003d Parser.validNumberInput(commandString);","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"hooami"},"content":"        if (taskNumber \u003e\u003d 0) {","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"hooami"},"content":"            tasks.marker(taskNumber, marker);","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"hooami"},"content":"        } else {","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"hooami"},"content":"            ui.invalidMark();","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"hooami":33}},{"path":"src/main/java/chat0pt/helper/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.helper;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"     * Generic Constructor for the DukeException class","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"     * @param error Type of error for DukeException","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"        super(error);","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"hooami":11}},{"path":"src/main/java/chat0pt/helper/FormatCheck.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.helper;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"public class FormatCheck {","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"     * Checks if the deadline command has been properly entered","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"     * @param tokens Takes in the user input that has been split by space","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"     * @return Returns true if the user input for the deadline command is in the right format","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"    public static boolean deadlineFormat(String[] tokens) {","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"        int position \u003d 0;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"        boolean byExists \u003d false;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"        for (String str : tokens) {","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"            if (str.equals(\"/by\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"                position +\u003d 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"                byExists \u003d true;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"            position +\u003d 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"hooami"},"content":"        return byExists \u0026\u0026 (position \u003c\u003d tokens.length);","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"hooami"},"content":"     * Checks if the event command has been properly entered","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"hooami"},"content":"     * @param tokens Takes in the user input that has been split by space","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"hooami"},"content":"     * @return Returns true if the user input for the event command is in the right format","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"hooami"},"content":"    public static boolean eventFormat(String[] tokens) {","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"hooami"},"content":"        int fromPosition \u003d 0;","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"hooami"},"content":"        int toPosition \u003d 0;","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"hooami"},"content":"        int position \u003d 0;","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"hooami"},"content":"        boolean fromExists \u003d false;","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"hooami"},"content":"        boolean toExists \u003d false;","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"hooami"},"content":"        for (String str : tokens) {","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"hooami"},"content":"            if (str.equals(\"/from\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"hooami"},"content":"                fromPosition \u003d position + 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"hooami"},"content":"                fromExists \u003d true;","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"hooami"},"content":"            } else if (str.equals(\"/to\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"hooami"},"content":"                toPosition \u003d position;","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"hooami"},"content":"                toExists \u003d true;","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"hooami"},"content":"            position +\u003d 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"hooami"},"content":"        return fromExists \u0026\u0026 toExists \u0026\u0026 fromPosition !\u003d toPosition \u0026\u0026 toPosition + 1 \u003c\u003d tokens.length;","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"hooami":47}},{"path":"src/main/java/chat0pt/helper/FormatString.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.helper;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"public class FormatString {","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"     * Method to modify the user input into the correct format to add to the TaskList","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"     * @param mode Determines what type of format to return based on the command","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"     * @param tokens Takes in the user input that has been split by space","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"     * @return Returns a String[] in the proper format to add to the TaskList","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"    public static String[] format(String mode, String[] tokens) {","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"        int position \u003d 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"        StringJoiner formattedString \u003d new StringJoiner(\" \");","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"        String[] stringsToReturn;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"        switch (mode) {","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"            for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"hooami"},"content":"                formattedString.add(tokens[i]);","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"hooami"},"content":"            stringsToReturn \u003d new String[]{formattedString.toString()};","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"hooami"},"content":"            break;","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"hooami"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"hooami"},"content":"            stringsToReturn \u003d new String[2];","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"hooami"},"content":"            for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"hooami"},"content":"                if (tokens[i].equals(\"/by\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"hooami"},"content":"                    position \u003d i + 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"hooami"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"hooami"},"content":"                } else {","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"hooami"},"content":"                    formattedString.add(tokens[i]);","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"hooami"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"hooami"},"content":"            stringsToReturn[0] \u003d formattedString.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"hooami"},"content":"            formattedString \u003d new StringJoiner(\" \");","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"hooami"},"content":"            for (int i \u003d position; i \u003c tokens.length; i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"hooami"},"content":"                formattedString.add(tokens[i]);","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"hooami"},"content":"            stringsToReturn[1] \u003d formattedString.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"hooami"},"content":"            break;","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"hooami"},"content":"        case \"event\":","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"hooami"},"content":"            stringsToReturn \u003d new String[3];","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"hooami"},"content":"            for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"hooami"},"content":"                if (tokens[i].equals(\"/from\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"hooami"},"content":"                    position \u003d i + 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"hooami"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"hooami"},"content":"                } else {","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"hooami"},"content":"                    formattedString.add(tokens[i]);","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"hooami"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"hooami"},"content":"            stringsToReturn[0] \u003d formattedString.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"hooami"},"content":"            formattedString \u003d new StringJoiner(\" \");","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"hooami"},"content":"            for (int i \u003d position; i \u003c tokens.length; i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"hooami"},"content":"                if (tokens[i].equals(\"/to\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"hooami"},"content":"                    position \u003d i + 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"hooami"},"content":"                    break;","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"hooami"},"content":"                } else {","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"hooami"},"content":"                    formattedString.add(tokens[i]);","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"hooami"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"hooami"},"content":"            stringsToReturn[1] \u003d formattedString.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"hooami"},"content":"            formattedString \u003d new StringJoiner(\" \");","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"hooami"},"content":"            for (int i \u003d position; i \u003c tokens.length; i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"hooami"},"content":"                formattedString.add(tokens[i]);","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"hooami"},"content":"            stringsToReturn[2] \u003d formattedString.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"hooami"},"content":"            break;","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"hooami"},"content":"        default:","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"hooami"},"content":"            return null;","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"hooami"},"content":"        return stringsToReturn;","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"hooami":72}},{"path":"src/main/java/chat0pt/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.parser;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"import chat0pt.Duke;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"import chat0pt.commands.*;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"import chat0pt.helper.DukeException;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"public class Parser {","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"    private static final String pattern \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"    private static String[] splitString(String input) {","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"        return input.split(\" \");","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"hooami"},"content":"     * Command parser to determine which command to execute.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"hooami"},"content":"     * @param command Takes in the user input and splits it","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"hooami"},"content":"     * @return Returns a command object based on what command is to be executed","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"hooami"},"content":"     * @throws DukeException","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"hooami"},"content":"    public Command parse(String command) throws DukeException {","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"hooami"},"content":"        String[] separatedString \u003d splitString(command);","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"hooami"},"content":"        String userCommand \u003d separatedString[0].toLowerCase();","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"hooami"},"content":"        switch (userCommand) {","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"hooami"},"content":"        case \"mark\":","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"hooami"},"content":"            return new MarkerCommand(separatedString, true);","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"hooami"},"content":"        case \"unmark\":","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"hooami"},"content":"            return new MarkerCommand(separatedString, false);","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"hooami"},"content":"        case \"list\":","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"hooami"},"content":"            return new ListCommand();","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"hooami"},"content":"        case \"delete\":","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"hooami"},"content":"            return new DeleteCommand(separatedString);","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"hooami"},"content":"        case \"bye\":","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"hooami"},"content":"            return new EndCommand();","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"hooami"},"content":"        case \"find\":","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"hooami"},"content":"            return new FindCommand(separatedString);","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"hooami"},"content":"        case \"todo\":","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"hooami"},"content":"        case \"event\":","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"hooami"},"content":"        case \"deadline\":","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"hooami"},"content":"            return new AddCommand(userCommand, separatedString);","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"hooami"},"content":"        default:","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"hooami"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"hooami"},"content":"    public static int numberParser(String input) throws DukeException {","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"hooami"},"content":"        int key;","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"hooami"},"content":"        try {","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"hooami"},"content":"            key \u003d Integer.parseInt(input);","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"hooami"},"content":"            key -\u003d 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"hooami"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"hooami"},"content":"            throw new DukeException(\"Your number input is invalid :(\");","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"hooami"},"content":"        return key;","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"hooami"},"content":"    public static int validNumberInput(String[] tokens) throws DukeException {","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"hooami"},"content":"        int key \u003d -1;","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"hooami"},"content":"        if (tokens.length \u003d\u003d 2) {","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"hooami"},"content":"            key \u003d numberParser(tokens[1]);","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"hooami"},"content":"        } else {","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"hooami"},"content":"            throw new DukeException(\"Your mark/unmark command has to be in the format: mark/unmark \u003cnumber\u003e\");","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"hooami"},"content":"        return key;","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"hooami"},"content":"    public static LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"hooami"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"hooami"},"content":"        try {","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"hooami"},"content":"            LocalDateTime datetime \u003d LocalDateTime.parse(input, format);","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"hooami"},"content":"            return datetime;","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"hooami"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"hooami"},"content":"            return null;","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"hooami":81}},{"path":"src/main/java/chat0pt/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.storage;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"import chat0pt.parser.Parser;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"import chat0pt.tasks.Deadline;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"import chat0pt.tasks.Event;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"import chat0pt.tasks.Task;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"import chat0pt.tasks.Todo;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"import chat0pt.ui.Ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"import java.io.*;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"public class Storage {","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"    private static String FILEPATH \u003d \"./chat0pt.txt\";","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"    private static final File FILE \u003d new File(FILEPATH);","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"    private static Ui ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"hooami"},"content":"    public Storage(Ui ui) {","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"hooami"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"hooami"},"content":"     * Reads file if it already exists, otherwise creates a new file.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"hooami"},"content":"     * @return Tasks ArrayList after parsing the file, if not return an empty ArrayList","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"hooami"},"content":"    public ArrayList\u003cTask\u003e onStart() {","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"hooami"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"hooami"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"hooami"},"content":"            if (FILE.exists()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"hooami"},"content":"                tasks \u003d readFile();","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"hooami"},"content":"            } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"hooami"},"content":"                FILE.createNewFile();","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"hooami"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"hooami"},"content":"            ui.failedFile();","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"hooami"},"content":"        return tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"hooami"},"content":"     * Reads the file and adds tasks.","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"hooami"},"content":"     * @return Returns the tasklist after parsing the file","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"hooami"},"content":"     * @throws IOException","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"hooami"},"content":"    private static ArrayList\u003cTask\u003e readFile() throws IOException {","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"hooami"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"hooami"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(FILEPATH));","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"hooami"},"content":"        String line;","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"hooami"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"hooami"},"content":"            String[] tokens \u003d line.split(\"#\");","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"hooami"},"content":"            switch (tokens[0]) {","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"hooami"},"content":"            case \"T\":","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"hooami"},"content":"                if (tokens.length \u003d\u003d 3) {","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"hooami"},"content":"                    boolean marked \u003d Boolean.parseBoolean(tokens[1]);","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"hooami"},"content":"                    String todoString \u003d tokens[2];","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"hooami"},"content":"                    Task todoTask \u003d new Todo(todoString);","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"hooami"},"content":"                    todoTask.setMarked(marked);","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"hooami"},"content":"                    tasks.add(todoTask);","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"hooami"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"hooami"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"hooami"},"content":"            case \"D\":","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"hooami"},"content":"                if (tokens.length \u003d\u003d 4) {","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"hooami"},"content":"                    boolean marked \u003d Boolean.parseBoolean(tokens[1]);","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"hooami"},"content":"                    String deadlineString \u003d tokens[2];","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"hooami"},"content":"                    String byString \u003d tokens[3];","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"hooami"},"content":"                    LocalDateTime deadlineBy \u003d Parser.parseDateTime(byString);","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"hooami"},"content":"                    Task deadlineTask \u003d new Deadline(deadlineString, deadlineBy);","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"hooami"},"content":"                    deadlineTask.setMarked(marked);","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"hooami"},"content":"                    tasks.add(deadlineTask);","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"hooami"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"hooami"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"hooami"},"content":"            case \"E\":","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"hooami"},"content":"                if (tokens.length \u003d\u003d 5) {","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"hooami"},"content":"                    boolean marked \u003d Boolean.parseBoolean(tokens[1]);","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"hooami"},"content":"                    String eventString \u003d tokens[2];","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"hooami"},"content":"                    String fromString \u003d tokens[3];","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"hooami"},"content":"                    String toString \u003d tokens[4];","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"hooami"},"content":"                    Task eventTask \u003d new Event(eventString, fromString, toString);","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"hooami"},"content":"                    eventTask.setMarked(marked);","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"hooami"},"content":"                    tasks.add(eventTask);","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"hooami"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"hooami"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"hooami"},"content":"            default:","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"hooami"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"hooami"},"content":"        return tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"hooami"},"content":"     * Writes file after every action","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"hooami"},"content":"     * @param tasks Current tasklist","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"hooami"},"content":"    public void writeFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"hooami"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"hooami"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"hooami"},"content":"            BufferedWriter writer \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"hooami"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"hooami"},"content":"                writer.write(t.toFile() + \"\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"hooami"},"content":"            writer.close();","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"hooami"},"content":"            fileWriter.close();","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"hooami"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"hooami"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"hooami":111}},{"path":"src/main/java/chat0pt/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.tasks;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"    private static final DateTimeFormatter DATEFORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"    private static final DateTimeFormatter ORIGINALFORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"     * Constructor for deadline","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"     * @param task Name of the task","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"     * @param By Deadline of the task","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"    public Deadline(String tasks, LocalDateTime By) {","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"hooami"},"content":"        super(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"hooami"},"content":"        this.by \u003d By;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"hooami"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"hooami"},"content":"        return this.by.format(DATEFORMAT);","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"hooami"},"content":"    public void setBy(LocalDateTime by) {","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"hooami"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"hooami"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"hooami"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"hooami"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + getBy() + \")\";","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"hooami"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"hooami"},"content":"    public String toFile() {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"hooami"},"content":"        return \"D#\" + super.toFile() + \"#\" + this.by.format(ORIGINALFORMAT);","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"hooami":41}},{"path":"src/main/java/chat0pt/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.tasks;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"    private final String from;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"    private final String to;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"     * Constructor for event","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"     * @param task Name of the task","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"     * @param from Start of event","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"     * @param to End of event","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"    public Event(String task, String from, String to) {","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"        super(task);","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"hooami"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"hooami"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"hooami"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + from + \" to:\" + to + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"hooami"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"hooami"},"content":"    public String toFile() {","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"hooami"},"content":"        return \"E#\" + super.toFile() + \"#\" + from + \"#\" + to;","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"hooami":28}},{"path":"src/main/java/chat0pt/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.tasks;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"public class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"    private final String task;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"    private boolean isMarked;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"     * Constructor for each task containing task name and whether it has been marked","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"     * @param task Task Name","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"    public Task(String task) {","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"    public String getTask() {","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"        return task;","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"hooami"},"content":"    public boolean isMarked() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"hooami"},"content":"        return isMarked;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"hooami"},"content":"    public void setMarked(boolean marked) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"hooami"},"content":"        isMarked \u003d marked;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"hooami"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"hooami"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"hooami"},"content":"        String toReturn \u003d \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"hooami"},"content":"        if (isMarked) {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"hooami"},"content":"            toReturn +\u003d \"[X] \";","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"hooami"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"hooami"},"content":"            toReturn +\u003d \"[ ] \";","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"hooami"},"content":"        return toReturn + task;","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"hooami"},"content":"    public String toFile() {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"hooami"},"content":"        String toReturn \u003d \"\";","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"hooami"},"content":"        if (isMarked) {","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"hooami"},"content":"            toReturn +\u003d \"true#\";","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"hooami"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"hooami"},"content":"            toReturn +\u003d \"false#\";","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"hooami"},"content":"        return toReturn + task;","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"hooami":50}},{"path":"src/main/java/chat0pt/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.tasks;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"import chat0pt.helper.DukeException;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"import chat0pt.helper.FormatCheck;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"import chat0pt.helper.FormatString;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"import chat0pt.parser.Parser;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"import chat0pt.ui.Ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"public class TaskList {","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"     * Constructor for the TaskList function","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"hooami"},"content":"     * @param ui Used for printing messages","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"hooami"},"content":"     * @param tasks TaskList","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"hooami"},"content":"    public TaskList(Ui ui, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"hooami"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"hooami"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"hooami"},"content":"     * Adds a todo task","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"hooami"},"content":"     * @param tokens User input that has been split by space","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"hooami"},"content":"    public void addTodo(String[] tokens) {","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"hooami"},"content":"        try {","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"hooami"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"hooami"},"content":"                ui.invalidMessage(\"todo\");","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"hooami"},"content":"                return;","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"hooami"},"content":"            String[] todo \u003d FormatString.format(\"todo\", tokens);","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"hooami"},"content":"            if (todo !\u003d null) {","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"hooami"},"content":"                Todo task \u003d new Todo(todo[0]);","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"hooami"},"content":"                tasks.add(task);","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"hooami"},"content":"                ui.successfulTask(task, tasks.size());","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"hooami"},"content":"            } else {","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"hooami"},"content":"                throw new DukeException(\"Failed to add todo\");","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"hooami"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException ex) {","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"hooami"},"content":"            ui.invalidMessage(\"todo\");","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"hooami"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"hooami"},"content":"            String[] toPrint \u003d {e.toString()};","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"hooami"},"content":"            ui.print(toPrint);","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"hooami"},"content":"     * Adds a deadline task","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"hooami"},"content":"     * @param tokens User input that has been split by space","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"hooami"},"content":"    public void addDeadline(String[] tokens) {","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"hooami"},"content":"        try {","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"hooami"},"content":"            if (!FormatCheck.deadlineFormat(tokens)) { // Checks if deadline is in the proper format","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"hooami"},"content":"                ui.invalidMessage(\"deadline\");","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"hooami"},"content":"                return;","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"hooami"},"content":"            String[] deadline \u003d FormatString.format(\"deadline\", tokens);","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"hooami"},"content":"            LocalDateTime deadlineTime \u003d Parser.parseDateTime(deadline[1]);","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"hooami"},"content":"            if (deadline.length \u003d\u003d 2 \u0026\u0026 deadlineTime !\u003d null) {","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"hooami"},"content":"                Deadline task \u003d new Deadline(deadline[0], deadlineTime);","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"hooami"},"content":"                tasks.add(task);","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"hooami"},"content":"                ui.successfulTask(task, tasks.size());","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"hooami"},"content":"            } else {","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"hooami"},"content":"                throw new DukeException(\"Failed to add deadline! Ensure that your command is in the format deadline \u003cevent\u003e /by \u003cdate and time in format YYYY-MM-DD HHMM\u003e\");","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"hooami"},"content":"        } catch (IndexOutOfBoundsException ioe) {","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"hooami"},"content":"            ui.invalidMessage(\"deadline\");","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"hooami"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"hooami"},"content":"            String[] toPrint \u003d {e.toString()};","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"hooami"},"content":"            ui.print(toPrint);","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"hooami"},"content":"     * Adds an event task","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"hooami"},"content":"     * @param tokens User input that has been split by space","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"hooami"},"content":"    public void addEvent(String[] tokens) {","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"hooami"},"content":"        try {","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"hooami"},"content":"            if (!FormatCheck.eventFormat(tokens)) { // Check if event is in the right format","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"hooami"},"content":"                ui.invalidMessage(\"event\");","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"hooami"},"content":"                return;","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"hooami"},"content":"            String[] event \u003d FormatString.format(\"event\", tokens);","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"hooami"},"content":"            if (event !\u003d null) {","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"hooami"},"content":"                Event task \u003d new Event(event[0], event[1], event[2]);","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"hooami"},"content":"                tasks.add(task);","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"hooami"},"content":"                ui.successfulTask(task, tasks.size());","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"hooami"},"content":"            } else {","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"hooami"},"content":"                throw new DukeException(\"Failed to add event\");","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"hooami"},"content":"        } catch (IndexOutOfBoundsException ioe) {","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"hooami"},"content":"            ui.invalidMessage(\"event\");","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"hooami"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"hooami"},"content":"            String[] toPrint \u003d {e.toString()};","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"hooami"},"content":"            ui.print(toPrint);","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"hooami"},"content":"     * Deletes task","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"hooami"},"content":"     * @param taskNumber Task number to delete","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"hooami"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"hooami"},"content":"        if (taskNumber \u003c tasks.size()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"hooami"},"content":"            Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"hooami"},"content":"            tasks.remove(taskNumber);","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"hooami"},"content":"            ui.deleteMessage(task, tasks.size());","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"hooami"},"content":"        } else {","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"hooami"},"content":"            ui.invalidDelete();","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"hooami"},"content":"     * Method to mark task","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"hooami"},"content":"     * @param taskNumber Task number to mark","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"hooami"},"content":"     * @param mark Task would be marked if true, otherwise task would be unmarked","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"hooami"},"content":"    public void marker(int taskNumber, boolean mark) {","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"hooami"},"content":"        if (taskNumber \u003c tasks.size()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"hooami"},"content":"            Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"hooami"},"content":"            task.setMarked(mark);","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"hooami"},"content":"            ui.mark(task, mark);","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"hooami"},"content":"        } else {","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"hooami"},"content":"            ui.invalidMark();","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"hooami"},"content":"     * Returns the entire tasklist","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"hooami"},"content":"     * @return TaskList","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"hooami"},"content":"    public ArrayList\u003cTask\u003e findTasks(String[] input) {","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"hooami"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"hooami"},"content":"        if (input.length \u003c 2) {","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"hooami"},"content":"            return foundTasks;","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"hooami"},"content":"        StringJoiner searchString \u003d new StringJoiner(\" \");","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"hooami"},"content":"        for (int i \u003d 1; i \u003c input.length; i++){","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"hooami"},"content":"            searchString.add(input[i]);","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"hooami"},"content":"        String search \u003d searchString.toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"hooami"},"content":"        for (Task t : tasks){","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"hooami"},"content":"            if (t.getTask().contains(search)){","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"hooami"},"content":"                foundTasks.add(t);","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"hooami"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":157,"author":{"gitId":"hooami"},"content":"        return foundTasks;","lastModifiedDate":"2023-10-03"},{"lineNumber":158,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":159,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"hooami"},"content":"    public ArrayList\u003cTask\u003e returnTaskList() {","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"hooami"},"content":"        return tasks;","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"hooami":163}},{"path":"src/main/java/chat0pt/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.tasks;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"     * Constructor for Todo","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"     * @param addtask Name of task to add","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":"    public Todo(String addtask) {","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":"        super(addtask);","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"    public String toString() {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"    public String toFile() {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"hooami"},"content":"        return \"T#\" + super.toFile();","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"hooami":21}},{"path":"src/main/java/chat0pt/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"package chat0pt.ui;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"import chat0pt.tasks.Task;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"hooami"},"content":" * The Ui class handles the formatting and printing of the output and the reading of user input.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"hooami"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"hooami"},"content":"public class Ui {","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"hooami"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"hooami"},"content":"    private final String LINE \u003d \"_______________________________________________________________________\";","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"hooami"},"content":"     * Constructor for the Ui class","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"hooami"},"content":"    public Ui() {","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"hooami"},"content":"     * Prints output that it receives from other methods and wraps it with the start and end lines.","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"hooami"},"content":"     * @param toPrint Takes in a String[] and prints it line by line","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"hooami"},"content":"    public void print(String[] toPrint) {","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"hooami"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"hooami"},"content":"        for (String str : toPrint) {","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"hooami"},"content":"            System.out.println(str);","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"hooami"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"hooami"},"content":"     * Prints the welcome message","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"hooami"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"hooami"},"content":"        String[] welcome \u003d {\"Hello! I\u0027m Chat0PT!\", \"What can I do for you?\"};","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"hooami"},"content":"        print(welcome);","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"hooami"},"content":"     * Prints the goodbye message","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"hooami"},"content":"    public void goodbyeMessage() {","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"hooami"},"content":"        String[] goodbye \u003d {\"Bye. Hope to see you again soon!\"};","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"hooami"},"content":"        print(goodbye);","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"hooami"},"content":"     * Prints an invalid task message.","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"hooami"},"content":"     * @param action Type of task that was trying to be added","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"hooami"},"content":"    public void invalidMessage(String action) {","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"hooami"},"content":"        print(new String[]{\"☹ OOPS!!! The description of a \" + action + \" cannot be empty or the format is incorrect.\"});","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"hooami"},"content":"     * Executes when a task is successfully added to the ArrayList","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"hooami"},"content":"     * @param t Task to add","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"hooami"},"content":"     * @param arrayListSize Current size of the ArrayList","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"hooami"},"content":"    public void successfulTask(Task t, int arrayListSize) {","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"hooami"},"content":"        String[] successPrint \u003d {\"Got it. I\u0027ve added this task:\", t.toString(), \"Now you have \" + arrayListSize + \" tasks in your list.\"};","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"hooami"},"content":"        print(successPrint);","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"hooami"},"content":"     * Prints when the user enters an invalid command","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"hooami"},"content":"    public void unsupportedCommand() {","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"hooami"},"content":"        String[] unsupported \u003d {\"Sorry! I do not support this command at this point. I can only add Deadline, Event and Todo!\"};","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"hooami"},"content":"        print(unsupported);","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"hooami"},"content":"     * Prints when the user enters an invalid number or no number when trying to delete a task","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"hooami"},"content":"    public void invalidDelete() {","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"hooami"},"content":"        String[] message \u003d {\"☹ Unable to delete task! Check if the format or task number is correct.\"};","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"hooami"},"content":"        print(message);","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"hooami"},"content":"     * Delete Message","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"hooami"},"content":"     * @param t Task that was removed","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"hooami"},"content":"     * @param size Remaining number of tasks in the ArrayList","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"hooami"},"content":"    public void deleteMessage(Task t, int size) {","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"hooami"},"content":"        size -\u003d 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"hooami"},"content":"        String[] message \u003d {\"Noted. I\u0027ve removed this task: \", t.toString(), \"Now you have \" + size + \" tasks in the list.\"};","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"hooami"},"content":"        print(message);","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"hooami"},"content":"     * Invalid message when a user enters an invalid number to mark.","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"hooami"},"content":"    public void invalidMark() {","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"hooami"},"content":"        String[] message \u003d {\"Please check your mark input. It can only be a number and it has to exist in the list.\"};","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"hooami"},"content":"        print(message);","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"hooami"},"content":"     * Successful mark message","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"hooami"},"content":"     * @param t Task that was marked or not marked","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"hooami"},"content":"     * @param toMark If true, the task has been marked as done, else if false, the task has been marked as not done","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"hooami"},"content":"    public void mark(Task t, boolean toMark) {","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"hooami"},"content":"        String[] message \u003d {\"\", t.toString()};","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"hooami"},"content":"        if (toMark) {","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"hooami"},"content":"            message[0] \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"hooami"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"hooami"},"content":"            message[0] \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"hooami"},"content":"        print(message);","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"hooami"},"content":"     * Standardised ArrayList printing format (used for list and find commands)","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"hooami"},"content":"     * @param tasks The tasklist for the program to print","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"hooami"},"content":"    public void listHandler(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"hooami"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"hooami"},"content":"        String[] taskStrings \u003d new String[tasks.size() + 1];","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"hooami"},"content":"        taskStrings[0] \u003d \"Here are the tasks/matching tasks in your list: \";","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"hooami"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"hooami"},"content":"            taskStrings[count] \u003d count + \". \" + t.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"hooami"},"content":"            count++;","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"hooami"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"hooami"},"content":"        print(taskStrings);","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"hooami"},"content":"     * Prints when the program is unable to access the file","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"hooami"},"content":"    public void failedFile() {","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"hooami"},"content":"        String[] message \u003d {\"Failed to access file. This session of Chat0PT would not be saved\"};","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"hooami"},"content":"        print(message);","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"hooami"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"hooami"},"content":"     * Reads user input.","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"hooami"},"content":"     * @return Returns the input line","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"hooami"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"hooami"},"content":"    public void failedFind(){","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"hooami"},"content":"        String[] message \u003d {\"We are unable to find any results. Try using list to see all tasks instead or ensure your command is in the format find \u003ckeyword\u003e.\"};","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"hooami"},"content":"        print(message);","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"hooami"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"hooami"},"content":"    public String readCommand() {","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"hooami"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"hooami"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"hooami"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"hooami":154}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hooami"},"content":"list","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"hooami"},"content":"todo This chat0pt.commands.Task","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"hooami"},"content":"deadline NewTask /by 3 Jan","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"hooami"},"content":"event work /from 3pm /to 5pm","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"hooami"},"content":"list","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"hooami"},"content":"mark 2","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"hooami"},"content":"list","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"hooami":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"hooami"},"content":"java -classpath ..\\bin chat0pt.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"hooami":1}}]
