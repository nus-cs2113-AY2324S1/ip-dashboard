[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"plugins {","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"repositories {","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"dependencies {","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"  implementation \u0027com.google.code.gson:gson:2.10.1\u0027","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"sourceSets {","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"    main {","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"        java {","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"            srcDirs \u003d [\u0027src/main/java\u0027]","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"jar {","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"    archiveFileName \u003d \"ip.jar\"","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"    from configurations.runtimeClasspath.collect {","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"        it.isDirectory() ? it : zipTree(it)","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"    from(\u0027lib\u0027) {","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"        include \u0027*.jar\u0027","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"    manifest {","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"        attributes \u0027Main-Class\u0027: \u0027Duke\u0027","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"    ","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"MrOPPA1":35}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"### Local Data Saving","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"All the data that produced by the program is going to save in the \u0027AppData\\LocalLow\\EggyByte\\iP\\\u0027 under the current user folder.","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"In this way, previous data can be used and no need for duplicated input.","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"### Error Handling","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"All errors are handled with a customized type \u0027TipsException\u0027, which enables user to get both the description of the error and the possible solution.It\u0027s easy to solve errors by following the tips.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"### Cross Platform","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"User of any platform that supports jar file can use it.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"### High Stability","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"We have tested it for many extreme situation and fix numerous potential problems.Users can enjoy themselves using this jar.","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"## Usage","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"### `Arguments` - Optional words that customize ","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"### Input: ","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"Mode:","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"keyword (arguments)","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"Example:","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"todo Read Books","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"### Outcome:","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"Mode:","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"    [time][log level]","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"     content","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"Example:","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"    [23:44:19][INFO]","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"     Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"       [E][X] return books (from: Mar 12, 2019 13:34, to: Feb 13, 2024 22:12)","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"### Format","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"MrOPPA1"},"content":"#### Basic Rules","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"MrOPPA1"},"content":"1. Use \u0027/\u0027 to split each arguments.","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"MrOPPA1"},"content":"1. Remember to comply with each format rules for the specific class.","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"MrOPPA1"},"content":"\u003e [!IMPORTANT]","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"MrOPPA1"},"content":"\u003e Crucial information necessary for users to succeed.","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"MrOPPA1"},"content":"1. When meet with format problems, please check your input.If you don\u0027t know how to write a standard command, just modify the example input.","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"#### Classes","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"##### String","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"No any restriction.Just remind don\u0027t input \u0027/\u0027, which will make misunderstanding.","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"##### DateTime","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"Only following format is supported:","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"MrOPPA1"},"content":"yyyy-M-d HHmm","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"MrOPPA1"},"content":"yyyy-M-d H:m","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"MrOPPA1"},"content":"M-d-yyyy HHmm","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"MrOPPA1"},"content":"M-d-yyyy H:m","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"MrOPPA1"},"content":"MMM d, yyyy HH:mm","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"MrOPPA1"},"content":"1. yyyy stands for year, which must be 4 characters.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"MrOPPA1"},"content":"```2020```","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"MrOPPA1"},"content":"2. M stands for month, which can be 1 or 2 characters.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"MrOPPA1"},"content":"```1```","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"MrOPPA1"},"content":"```11```","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"MrOPPA1"},"content":"3. MMM stands for month in English, which must be 3 characters.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"MrOPPA1"},"content":"```Oct```","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"MrOPPA1"},"content":"```Apr```","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"MrOPPA1"},"content":"4. d stands for day, which can be 1 or 2 characters.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"MrOPPA1"},"content":"```5```","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"MrOPPA1"},"content":"```28```","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"MrOPPA1"},"content":"5. H stands for hour, which can be 1 or 2 characters.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"MrOPPA1"},"content":"```3```","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"MrOPPA1"},"content":"```18```","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"MrOPPA1"},"content":"6. HH stands for hour, which must be 2 characters.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"MrOPPA1"},"content":"```03```","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"MrOPPA1"},"content":"```18```","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"MrOPPA1"},"content":"7. m stands for minute, which can be 1 or 2 characters.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"MrOPPA1"},"content":"```6```","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"MrOPPA1"},"content":"```55```","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"MrOPPA1"},"content":"8. mm stands for minute, which must be 2 characters.  ","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"MrOPPA1"},"content":"```06```","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"MrOPPA1"},"content":"```55```","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"MrOPPA1"},"content":"### Valid Keywords and Arguments:","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"MrOPPA1"},"content":"#### Todo","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"MrOPPA1"},"content":"- Keywords: todo","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"MrOPPA1"},"content":"- Arguments:","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"MrOPPA1"},"content":"    - Length: 1","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"MrOPPA1"},"content":"    - Contents: [description]","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"MrOPPA1"},"content":"        - description: (String) used for describe the todo.","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"MrOPPA1"},"content":"- Example Input:","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"MrOPPA1"},"content":"todo Read Books","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"MrOPPA1"},"content":"- Example Outcome:","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"MrOPPA1"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"MrOPPA1"},"content":"    [01:03:03][INFO]","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"MrOPPA1"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"MrOPPA1"},"content":"       [T][ ] Read Books","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"MrOPPA1"},"content":"     Now you have 3 tasks in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"MrOPPA1"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":118,"author":{"gitId":"MrOPPA1"},"content":"#### Deadline","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"MrOPPA1"},"content":"- Keywords: deadline","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"MrOPPA1"},"content":"- Arguments:","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"MrOPPA1"},"content":"    - Length: 2","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"MrOPPA1"},"content":"    - Contents: [description, by]","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"MrOPPA1"},"content":"        - description: (String) used for describe the deadline.","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"MrOPPA1"},"content":"        - by: (DateTime) the end of the deadline.","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"MrOPPA1"},"content":"- Example Input:","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"MrOPPA1"},"content":"deadline Read Books /by 1928-10-1 13:2","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"MrOPPA1"},"content":"- Example Outcome:","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"MrOPPA1"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"MrOPPA1"},"content":"    [01:06:02][INFO]","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"MrOPPA1"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"MrOPPA1"},"content":"       [D][ ] Read Books (by: Oct 1, 1928 13:02)","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"MrOPPA1"},"content":"     Now you have 4 tasks in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"MrOPPA1"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"MrOPPA1"},"content":"#### Event","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"MrOPPA1"},"content":"- Keywords: event","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"MrOPPA1"},"content":"- Arguments:","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"MrOPPA1"},"content":"    - Length: 3","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"MrOPPA1"},"content":"    - Contents: [description, from, to]","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"MrOPPA1"},"content":"        - description: (String) used for describe the event.","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"MrOPPA1"},"content":"        - from: (DateTime) the begin of the event.","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"MrOPPA1"},"content":"        - to: (DateTime) the end of the event.","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"MrOPPA1"},"content":"- Example Input:","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"MrOPPA1"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"MrOPPA1"},"content":"event Read Bookss /from 1925-10-1 13:2 /to 1928-10-1 13:2","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"MrOPPA1"},"content":"- Example Outcome:","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":153,"author":{"gitId":"MrOPPA1"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"MrOPPA1"},"content":"    [01:06:02][INFO]","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"MrOPPA1"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"MrOPPA1"},"content":"       [D][ ] Read Books (by: Oct 1, 1928 13:02)","lastModifiedDate":"2023-10-06"},{"lineNumber":157,"author":{"gitId":"MrOPPA1"},"content":"     Now you have 4 tasks in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"MrOPPA1"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-10-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"MrOPPA1":139,"-":20}},{"path":"docs/RunTest.cmd","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"cd text-ui-test","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"runtest.bat","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"MrOPPA1":2}},{"path":"docs/UploadCommand.cmd","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"rem customize the tag name and message here","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"set TAG_NAME\u003dA-JavaDoc","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"set MESSAGE\u003d\"Add JavaDoc comments\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"rem create a branch","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"git branch branch-%TAG_NAME%","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"git switch branch-%TAG_NAME%","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"rem commit all changes","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"git add .","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"git commit -m %MESSAGE%","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"git push origin branch-%TAG_NAME%","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"rem delete the tag if there exist","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"git tag -d %TAG_NAME%","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"git push origin --delete %TAG_NAME%","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"rem create the tag with certain branch","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"git tag %TAG_NAME% branch-%TAG_NAME%","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"git push origin %TAG_NAME%","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"MrOPPA1":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.command.Command;","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.command.CommandResult;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.RunningState;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.util.Parser;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.util.DataManager;","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.util.Logger;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":" * The main class of the program.","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    private static RunningState runningState \u003d new RunningState(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"    private static Boolean debugMode \u003d false;","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"    private static String savePath \u003d \"Tasks.json\";","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"        initialize();","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"        runCommandLoopUntilByeCommand();","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"     * Used for initialization.","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"    private static void initialize() {","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"            Command.setRunningState(runningState);","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"            Logger.debugMode \u003d Parser.debugMode \u003d debugMode;","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"            DataManager.setRelativePath(savePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"            String dataJson \u003d DataManager.readData();","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"            ArrayList\u003cTask\u003e data \u003d DataManager.convertFromJsonToTaskList(dataJson);","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"            if (data !\u003d null) {","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"                runningState.tasks \u003d data;","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"            }","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"            Logger.showGreeting();","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"            Logger.showLog(exception, true);","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"     * Read the user command and execute it, until the user issues the bye","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"     * command.","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"    private static void runCommandLoopUntilByeCommand() {","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"MrOPPA1"},"content":"        do {","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"MrOPPA1"},"content":"            try {","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"MrOPPA1"},"content":"                String userCommandText \u003d scanner.nextLine();","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"MrOPPA1"},"content":"                Command command \u003d new Parser().parseCommand(userCommandText);","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"MrOPPA1"},"content":"                CommandResult commandResult \u003d command.execute();","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"MrOPPA1"},"content":"                switch (commandResult.state) {","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"MrOPPA1"},"content":"                    case success: {","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"MrOPPA1"},"content":"                        Logger.showLog(commandResult.result, true);","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"                        break;","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"                    }","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"                    case fail: {","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"                        // Logger.showLog(commandResult.result, Logger.LogLevel.ERROR, true);","lastModifiedDate":"2023-09-28"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"                        // break;","lastModifiedDate":"2023-09-24"},{"lineNumber":64,"author":{"gitId":"MrOPPA1"},"content":"                        throw commandResult.exception;","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"MrOPPA1"},"content":"                    }","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"MrOPPA1"},"content":"                }","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"MrOPPA1"},"content":"            } catch (Exception exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"MrOPPA1"},"content":"                Logger.showLog(exception, true);","lastModifiedDate":"2023-09-28"},{"lineNumber":69,"author":{"gitId":"MrOPPA1"},"content":"            }","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"MrOPPA1"},"content":"        } while (runningState.isRunning());","lastModifiedDate":"2023-09-28"},{"lineNumber":71,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":72,"author":{"gitId":"MrOPPA1"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":73,"author":{"gitId":"MrOPPA1"},"content":"            DataManager.saveData(DataManager.convertToJson(runningState.tasks));","lastModifiedDate":"2023-09-28"},{"lineNumber":74,"author":{"gitId":"MrOPPA1"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2023-09-28"},{"lineNumber":75,"author":{"gitId":"MrOPPA1"},"content":"            Logger.showLog(exception, true);","lastModifiedDate":"2023-09-28"},{"lineNumber":76,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":77,"author":{"gitId":"MrOPPA1"},"content":"        scanner.close();","lastModifiedDate":"2023-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"MrOPPA1":75,"-":4}},{"path":"src/main/java/eggybyte/ip/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"// package eggybyte.ip;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"// import eggybyte.ip.data.task.Task;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"// import eggybyte.ip.command.Command;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"// import eggybyte.ip.command.CommandResult;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"// import eggybyte.ip.data.RunningState;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"// import eggybyte.ip.util.Parser;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"// import eggybyte.ip.util.DataManager;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"// import eggybyte.ip.util.Logger;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"// import java.util.ArrayList;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"// import java.util.Scanner;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"// public class Main {","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"// private static RunningState runningState \u003d new RunningState(new","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"// ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"// private static Boolean debugMode \u003d false;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"// private static String savePath \u003d \"Tasks.json\";","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"// public static void main(String[] args) {","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"// initialize();","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"// runCommandLoopUntilByeCommand();","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"// }","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"// private static void initialize() {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"// try {","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"// Command.setRunningState(runningState);","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"// Logger.debugMode \u003d Parser.debugMode \u003d debugMode;","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"// DataManager.setRelativePath(savePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"// String dataJson \u003d DataManager.readData();","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"// ArrayList\u003cTask\u003e data \u003d DataManager.convertFromJsonToTaskList(dataJson);","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"// if (data !\u003d null) {","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"// runningState.tasks \u003d data;","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"// }","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"// Logger.showGreeting();","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"// } catch (Exception exception) {","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"// Logger.showLog(exception, true);","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"// }","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"// }","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"// /**","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"// * Reads the user command and executes it, until the user issues the bye","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"// * command.","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"// */","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"// private static void runCommandLoopUntilByeCommand() {","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"// Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"// do {","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"// try {","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"// String userCommandText \u003d scanner.nextLine();","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"MrOPPA1"},"content":"// Command command \u003d new Parser().parseCommand(userCommandText);","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"MrOPPA1"},"content":"// CommandResult commandResult \u003d command.execute();","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"MrOPPA1"},"content":"// switch (commandResult.state) {","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"MrOPPA1"},"content":"// case success: {","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"MrOPPA1"},"content":"// Logger.showLog(commandResult.result, true);","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"MrOPPA1"},"content":"// break;","lastModifiedDate":"2023-09-24"},{"lineNumber":57,"author":{"gitId":"MrOPPA1"},"content":"// }","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"MrOPPA1"},"content":"// case fail: {","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"// // Logger.showLog(commandResult.result, Logger.LogLevel.ERROR, true);","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"// // break;","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"// throw commandResult.exception;","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"// }","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"// }","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"MrOPPA1"},"content":"// } catch (Exception exception) {","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"MrOPPA1"},"content":"// Logger.showLog(exception, true);","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"MrOPPA1"},"content":"// }","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"MrOPPA1"},"content":"// } while (runningState.isRunning());","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":69,"author":{"gitId":"MrOPPA1"},"content":"// try {","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"MrOPPA1"},"content":"// DataManager.saveData(DataManager.convertToJson(runningState.tasks));","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"MrOPPA1"},"content":"// } catch (Exception exception) {","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"MrOPPA1"},"content":"// Logger.showLog(exception, true);","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"MrOPPA1"},"content":"// }","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"MrOPPA1"},"content":"// scanner.close();","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"MrOPPA1"},"content":"// }","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"MrOPPA1"},"content":"// }","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"MrOPPA1":76}},{"path":"src/main/java/eggybyte/ip/command/ActivatedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.command;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.Date;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.task.*;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":" * Commands for Searching Activated Tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":" * ","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":" * @see #COMMAND_WORD","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"public class ActivatedCommand extends Command {","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    public static final String COMMAND_WORD \u003d \"activated\";","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"    private static final int validArgumentAmount \u003d 1;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"    private final Date date;","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new Command.","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"     * @param arguments The specified arguments will be used for creating command,","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"     *                  it will automatically check whethere the arguments are","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     *                  valid.","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"     * @see #validArgumentAmount","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"    public ActivatedCommand(String[] arguments) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"        super(COMMAND_WORD, validArgumentAmount);","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"        checkArguments(arguments);","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"        date \u003d new Date(arguments[0]);","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"    public String customFunction() {","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"        for (Task task : runningState.tasks) {","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"                if (((Deadline) task).by.compareDate(date) !\u003d -1) {","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"                    filteredTasks.add(task);","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"                }","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"                if (((Event) task).from.compareDate(date) !\u003d 1 \u0026\u0026 ((Event) task).to.compareDate(date) !\u003d -1) {","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"                    filteredTasks.add(task);","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"                }","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"MrOPPA1"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"MrOPPA1"},"content":"            return \"There are no activated tasks!\";","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"MrOPPA1"},"content":"        String result \u003d taskToString(filteredTasks, 0);","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"MrOPPA1"},"content":"        for (int i \u003d 1; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"            result +\u003d \"\\n\" + taskToString(filteredTasks, i);","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"        return result;","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"MrOPPA1"},"content":"     * Convert task to string","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"MrOPPA1"},"content":"     * @param tasks To make clear which tasks is going to be converted.","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"MrOPPA1"},"content":"     * @param index To make clear which element of the tasks is going to be","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"MrOPPA1"},"content":"     *              converted, and the index is to be shown in the front.","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"MrOPPA1"},"content":"     * @see #validArgumentAmount","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"MrOPPA1"},"content":"    private String taskToString(ArrayList\u003cTask\u003e tasks, int index) {","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"MrOPPA1"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"MrOPPA1"},"content":"        return \" \" + (index + 1) + \".\" + task.toString();","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult getCommandResult(String content) {","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"MrOPPA1"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"MrOPPA1"},"content":"                \"Here are the tasks that are still activated on \" + date.toString() + \":\\n\" + content);","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"MrOPPA1":85}},{"path":"src/main/java/eggybyte/ip/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.command;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.task.Task;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":" * Commands for Adding Tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":" * ","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":" * @see #COMMAND_WORD","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    protected Task task;","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new Command.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"     * @param arguments The specified arguments will be used for creating command,","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"     *                  it will automatically check whethere the arguments are","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"     *                  valid.","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"     * @see #validArgumentAmount","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"    public AddCommand(String type, int validArgumentAmount) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"        super(type, validArgumentAmount);","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"    public String customFunction() {","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"        runningState.tasks.add(task);","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"        return task.toString();","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult getCommandResult(String content) {","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"        return new CommandResult(\"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"                + content","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"                + \"\\nNow you have \" + runningState.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"MrOPPA1":42}},{"path":"src/main/java/eggybyte/ip/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.command;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":" * Commands for Terminating the Program.","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":" * ","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":" * @see #COMMAND_WORD","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    protected static final int validArgumentAmount \u003d 0;","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new Command.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"     * @param arguments The specified arguments will be used for creating command,","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"     *                  it will automatically check whethere the arguments are","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"     *                  valid.","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"     * @see #validArgumentAmount","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"    public ByeCommand(String[] arguments) throws Exception {","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"        super(COMMAND_WORD, validArgumentAmount);","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"        checkArguments(arguments);","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"    public String customFunction() {","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"        runningState.exit();","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"        return \"\";","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult getCommandResult(String content) {","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"        return new CommandResult(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"MrOPPA1":41}},{"path":"src/main/java/eggybyte/ip/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.command;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.RunningState;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":" * Basic Command Class.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"public class Command {","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"    protected static RunningState runningState;","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"    protected final String type;","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"    protected final int validArgumentAmount;","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new Command.","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"     * @param arguments The specified arguments will be used for creating command,","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"     *                  it will automatically check whethere the arguments are","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"     *                  valid.","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"    public Command(String type, int validArgumentAmount) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"        this.validArgumentAmount \u003d validArgumentAmount;","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"     * Executes the command.","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"     * ","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"     * @return Command result that contains a description and maybe an exception.","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"        try {","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"            return getCommandResult(customFunction());","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"            return new CommandResult(exception);","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"     * Running State setter to make clear which state the command is executing for.","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"    public static void setRunningState(RunningState runningState) {","lastModifiedDate":"2023-09-24"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"        Command.runningState \u003d runningState;","lastModifiedDate":"2023-09-24"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"     * To combine the result after execution and give the user a standard","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"MrOPPA1"},"content":"     * description.It must be implemented by child classes for customized use,","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"MrOPPA1"},"content":"     * otherwise it may throw a tips exception.","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"MrOPPA1"},"content":"     * ","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"MrOPPA1"},"content":"     * @return A Command Result with a standard description or an unexpected","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"MrOPPA1"},"content":"     *         exception.","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult getCommandResult(String content) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"        throw new TipsException(\"This method is to be implemented by child classes.\",","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"                \"This is an internal error, please contact the programmer for further fix.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":64,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":65,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"MrOPPA1"},"content":"     * A function that do specified things in each child command class.It must be","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"MrOPPA1"},"content":"     * implemented by child classes for customized use,otherwise it may throw a tips","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"MrOPPA1"},"content":"     * exception.","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"MrOPPA1"},"content":"     * ","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"MrOPPA1"},"content":"     * @return A String that is raw to indicate the result, which maybe modified by","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"MrOPPA1"},"content":"     *         the method getCommandResult().","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"MrOPPA1"},"content":"    protected String customFunction() throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"MrOPPA1"},"content":"        throw new TipsException(\"This method is to be implemented by child classes.\",","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"MrOPPA1"},"content":"                \"This is an internal error, please contact the programmer for further fix.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":80,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":81,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"MrOPPA1"},"content":"     * A function that used for checking the arguments\u0027 amount, to make sure no","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"MrOPPA1"},"content":"     * exception about using an exceeded array element may happen while constructing","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"MrOPPA1"},"content":"     * a new command.","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"MrOPPA1"},"content":"     * ","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"MrOPPA1"},"content":"    protected void checkArguments(String[] arguments) throws TipsException {","lastModifiedDate":"2023-09-24"},{"lineNumber":91,"author":{"gitId":"MrOPPA1"},"content":"        String helpMessage \u003d \"The valid argument amount of \u0027\" + type + \"\u0027 command is \" + validArgumentAmount","lastModifiedDate":"2023-09-24"},{"lineNumber":92,"author":{"gitId":"MrOPPA1"},"content":"                + \", and you can check what each argument means in the user guide.\";","lastModifiedDate":"2023-09-24"},{"lineNumber":93,"author":{"gitId":"MrOPPA1"},"content":"        if (arguments.length \u003c validArgumentAmount) {","lastModifiedDate":"2023-09-24"},{"lineNumber":94,"author":{"gitId":"MrOPPA1"},"content":"            throw new TipsException(\"Not enough arguments input!\", helpMessage);","lastModifiedDate":"2023-09-24"},{"lineNumber":95,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":96,"author":{"gitId":"MrOPPA1"},"content":"        if (arguments.length \u003e validArgumentAmount) {","lastModifiedDate":"2023-09-24"},{"lineNumber":97,"author":{"gitId":"MrOPPA1"},"content":"            throw new TipsException(\"Too many arguments input!\", helpMessage);","lastModifiedDate":"2023-09-24"},{"lineNumber":98,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":99,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":100,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"MrOPPA1":100}},{"path":"src/main/java/eggybyte/ip/command/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.command;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":" * The Result after the Execution of the Command.","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"public class CommandResult {","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"     * The feedback message to be shown to the user.","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"     * Contains the execution result and exception if something unexpected happens.","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"     * State indicates whether the command is successfully executed.","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    public final String result;","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    public final Exception exception;","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"    public enum State {","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"        success, fail","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"    public final State state;","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     * Creating a new Command Result in a simplified way.","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"     * It\u0027s used when the command is successfully executed.","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult(String result) {","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"        this(State.success, result, null);","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"     * Creating a new Command Result in a simplified way.","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"     * It\u0027s used when something unexpected happens while the command is executed.","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult(Exception exception) {","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"        this(State.success, exception.toString(), exception);","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"     * Creating a new Command Result with full arguments.","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"     * It\u0027s used for a complete constuction.","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult(State state, String result, Exception exception) {","lastModifiedDate":"2023-09-24"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"        this.result \u003d result;","lastModifiedDate":"2023-09-24"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"        this.state \u003d state;","lastModifiedDate":"2023-09-24"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"        this.exception \u003d exception;","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"MrOPPA1":49}},{"path":"src/main/java/eggybyte/ip/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.command;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.task.Deadline;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":" * Commands for Adding Deadling Tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":" * ","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":" * @see #COMMAND_WORD","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"public class DeadlineCommand extends AddCommand {","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    protected static final int validArgumentAmount \u003d 2;","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new Command.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"     * @param arguments The specified arguments will be used for creating command,","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"     *                  it will automatically check whethere the arguments are","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"     *                  valid.","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"     * @see #validArgumentAmount","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"    public DeadlineCommand(String[] arguments) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"        super(COMMAND_WORD, validArgumentAmount);","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"        checkArguments(arguments);","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"        task \u003d new Deadline(arguments[0], arguments[1]);","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"MrOPPA1":31}},{"path":"src/main/java/eggybyte/ip/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.command;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":" * Commands for Deleting Existing Tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":" * ","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":" * @see #COMMAND_WORD","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"    protected static final int validArgumentAmount \u003d 1;","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    private int index;","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"     * Creates a new Command.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"     * @param arguments The specified arguments will be used for creating command,","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"     *                  it will automatically check whethere the arguments are","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"     *                  valid.","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"     * @see #validArgumentAmount","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"    public DeleteCommand(String[] arguments) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"        super(COMMAND_WORD, validArgumentAmount);","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"        checkArguments(arguments);","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"        index \u003d Integer.parseInt(arguments[0]);","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"    public String customFunction() throws TipsException {","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"        if (index - 1 \u003e\u003d runningState.tasks.size()) {","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"            throw new TipsException(\"Exceeded index!\", \"The index \" + index + \" has exceeded the range of the list!\"","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"                    + \"\\nTry enter a valid index that is not bigger than the length of the list.\");","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"        index -\u003d 1;","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"        String result \u003d runningState.tasks.get(index).toString();","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"        runningState.tasks.remove(index);","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"        return result;","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult getCommandResult(String content) {","lastModifiedDate":"2023-09-24"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"        return new CommandResult(\"Noted. I\u0027ve removed this task:\\n  \"","lastModifiedDate":"2023-09-24"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"                + content","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"                + \"\\nNow you have \" + runningState.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-24"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"MrOPPA1":50}},{"path":"src/main/java/eggybyte/ip/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.command;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.task.Event;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":" * Commands for Adding Event Tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":" * ","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":" * @see #COMMAND_WORD","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"public class EventCommand extends AddCommand {","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    protected static final int validArgumentAmount \u003d 3;","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new Command.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"     * @param arguments The specified arguments will be used for creating command,","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"     *                  it will automatically check whethere the arguments are","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"     *                  valid.","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"     * @see #validArgumentAmount","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"    public EventCommand(String[] arguments) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"        super(COMMAND_WORD, validArgumentAmount);","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"        checkArguments(arguments);","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"        task \u003d new Event(arguments[0], arguments[1], arguments[2]);","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"MrOPPA1":31}},{"path":"src/main/java/eggybyte/ip/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.command;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.task.*;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":" * Commands for Finding Specific Tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":" * ","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":" * @see #COMMAND_WORD","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    private static final int validArgumentAmount \u003d 1;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"    private final String partialDescription;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new Command.","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"     * @param arguments The specified arguments will be used for creating command,","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"     *                  it will automatically check whethere the arguments are","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"     *                  valid.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     * @see #validArgumentAmount","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"    public FindCommand(String[] arguments) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"        super(COMMAND_WORD, validArgumentAmount);","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"        checkArguments(arguments);","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"        partialDescription \u003d arguments[0];","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"    public String customFunction() {","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"        for (Task task : runningState.tasks) {","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"            if (task.description.contains(partialDescription)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"            return \" There are no tasks with such partial description!\";","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"        String result \u003d taskToString(filteredTasks, 0);","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"        for (int i \u003d 1; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"MrOPPA1"},"content":"            result +\u003d \"\\n\" + taskToString(filteredTasks, i);","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"MrOPPA1"},"content":"        return result;","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"MrOPPA1"},"content":"     * Convert task to string","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"     * @param tasks To make clear which tasks is going to be converted.","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"     * @param index To make clear which element of the tasks is going to be","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"     *              converted, and the index is to be shown in the front.","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"     * @see #validArgumentAmount","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"MrOPPA1"},"content":"    private String taskToString(ArrayList\u003cTask\u003e tasks, int index) {","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"MrOPPA1"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"MrOPPA1"},"content":"        return \" \" + (index + 1) + \".\" + task.toString();","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult getCommandResult(String content) {","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"MrOPPA1"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"MrOPPA1"},"content":"                \"Here are the tasks that have partial description with \u0027\" + partialDescription + \"\u0027:\\n\" + content);","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"MrOPPA1":77}},{"path":"src/main/java/eggybyte/ip/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.command;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":" * Commands for Listing All Existing Tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":" * ","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":" * @see #COMMAND_WORD","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"    protected static final int validArgumentAmount \u003d 0;","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new Command.","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"     * @param arguments The specified arguments will be used for creating command,","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"     *                  it will automatically check whethere the arguments are","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"     *                  valid.","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"     * @see #validArgumentAmount","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"    public ListCommand(String[] arguments) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"        super(COMMAND_WORD, validArgumentAmount);","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"        checkArguments(arguments);","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"    public String customFunction() {","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"        if (runningState.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"            return \"The list is empty!\";","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"        String result \u003d taskToString(0);","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"        for (int i \u003d 1; i \u003c runningState.tasks.size(); i++) {","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"            result +\u003d \"\\n\" + taskToString(i);","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"        return result;","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"     * Convert task to string","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"     * @param tasks To make clear which tasks is going to be converted.","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"     * @param index To make clear which element of the tasks is going to be","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"     *              converted, and the index is to be shown in the front.","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"MrOPPA1"},"content":"     * @see #validArgumentAmount","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"MrOPPA1"},"content":"    private String taskToString(int index) {","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"MrOPPA1"},"content":"        Task task \u003d runningState.tasks.get(index);","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"MrOPPA1"},"content":"        return \" \" + (index + 1) + \".\" + task.toString();","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult getCommandResult(String content) {","lastModifiedDate":"2023-09-24"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"        return new CommandResult(","lastModifiedDate":"2023-09-28"},{"lineNumber":64,"author":{"gitId":"MrOPPA1"},"content":"                \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"MrOPPA1"},"content":"                        + content);","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":67,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"MrOPPA1":67}},{"path":"src/main/java/eggybyte/ip/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.command;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.task.Todo;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":" * Command for Marking an Existing Task as Done.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":" *","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":" * @see #COMMAND_WORD","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    protected static final int validArgumentAmount \u003d 1;","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    private final int index;","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new Command.","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"     * @param arguments The specified arguments will be used for creating command,","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"     *                  it will automatically check whethere the arguments are","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"     *                  valid.","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"     * @see #validArgumentAmount","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"    public MarkCommand(String[] arguments) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"        super(COMMAND_WORD, validArgumentAmount);","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"        checkArguments(arguments);","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"        index \u003d Integer.parseInt(arguments[0]) - 1;","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"    public String customFunction() {","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"        Task task \u003d runningState.tasks.get(index);","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"            ((Todo) task).isDone \u003d true;","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"        return task.toString();","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult getCommandResult(String content) {","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"        return new CommandResult(","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"                \"Nice! I\u0027ve marked this task as done:\\n  \"","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"                        + content);","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"MrOPPA1":50}},{"path":"src/main/java/eggybyte/ip/command/RepeatCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.command;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":" * [OBSOLETE]","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":" * Command for Reapeating Undefined Commands.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"public class RepeatCommand extends Command {","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"    public static final String COMMAND_WORD \u003d \"repeat\";","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"    protected static final int validArgumentAmount \u003d 0;","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    private String input;","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new Command.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"     * @param arguments The specified arguments will be used for creating command,","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"     *                  it will automatically check whethere the arguments are","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"     *                  valid.","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"     * @see #validArgumentAmount","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"    public RepeatCommand(String input, String[] arguments) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"        super(COMMAND_WORD, validArgumentAmount);","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"        checkArguments(arguments);","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"    public String customFunction() {","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"        return \"\";","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult getCommandResult(String content) {","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"        return new CommandResult(\" \" + input);","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"MrOPPA1":41}},{"path":"src/main/java/eggybyte/ip/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.command;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":" * Commands for Adding General Tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":" * ","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":" * @see #COMMAND_WORD","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"public class TaskCommand extends AddCommand {","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"    public static final String COMMAND_WORD \u003d \"task\";","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    protected static final int validArgumentAmount \u003d 0;","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new Command.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"     * @param arguments The specified arguments will be used for creating command,","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"     *                  it will automatically check whethere the arguments are","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"     *                  valid.","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"     * @see #validArgumentAmount","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"    public TaskCommand(String description, String[] arguments) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"        super(COMMAND_WORD, validArgumentAmount);","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"        // checkArguments(arguments);","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"        task \u003d new Task(description);","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"    public String customFunction() {","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"        runningState.tasks.add(task);","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"        return task.toString();","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"MrOPPA1":37}},{"path":"src/main/java/eggybyte/ip/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.command;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.task.Todo;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":" * Commands for Adding Todo Tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":" * ","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":" * @see #COMMAND_WORD","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"public class TodoCommand extends AddCommand {","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    protected static final int validArgumentAmount \u003d 1;","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new Command.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"     * @param arguments The specified arguments will be used for creating command,","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"     *                  it will automatically check whethere the arguments are","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"     *                  valid.","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"     * @see #validArgumentAmount","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"    public TodoCommand(String[] arguments) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"        super(COMMAND_WORD, validArgumentAmount);","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"        checkArguments(arguments);","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"        task \u003d new Todo(arguments[0]);","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"MrOPPA1":31}},{"path":"src/main/java/eggybyte/ip/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.command;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.task.Todo;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":" * Command for Marking an Existing Task as Done.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":" *","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":" * @see #COMMAND_WORD","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    protected static final int validArgumentAmount \u003d 1;","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    private final int index;","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new Command.","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"     * @param arguments The specifieds arguments will be used for creating command,","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"     *                  it will automatically check whethere the arguments are","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"     *                  valid.","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"     * @see #validArgumentAmount","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"    public UnmarkCommand(String[] arguments) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"        super(COMMAND_WORD, validArgumentAmount);","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"        checkArguments(arguments);","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"        index \u003d Integer.parseInt(arguments[0]) - 1;","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"    public String customFunction() {","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"        Task task \u003d runningState.tasks.get(index);","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"            ((Todo) task).isDone \u003d false;","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"        return task.toString();","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult getCommandResult(String content) {","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"        return new CommandResult(","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"                \"OK, I\u0027ve marked this task as not done yet:\\n  \"","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"                        + content);","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"MrOPPA1":50}},{"path":"src/main/java/eggybyte/ip/data/Date.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.data;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.util.Logger;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"import com.google.gson.annotations.SerializedName;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":" * Customized class for showing date and parsing supported string to date.","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"public class Date {","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    transient LocalDate date;","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"    @SerializedName(\"rawData\")","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"    public String standardString;","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"    private static DateTimeFormatter[] formatters \u003d new DateTimeFormatter[] {","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d\"),","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"M-d-yyyy\"),","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"MMM d, yyyy\", Locale.ENGLISH), };","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"    private static DateTimeFormatter toStringFormatter \u003d formatters[formatters.length - 1];","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"     * Modifying an existing date with a rawData String.","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"     * @param rawData A String that needs to comply with a supported format and","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"     *                indicates a correct date that will be recorded by this Date","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"     *                instance.","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"    public void setRawData(String rawData) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"            try {","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"                date \u003d LocalDate.parse(rawData, formatter);","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"                standardString \u003d this.toString();","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"                return;","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"            } catch (Exception exception) {","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"        throw new TipsException(\"Unable to parse date time!\",","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"                \"Please check the date time string you have input, and make sure you are using the supported format!\");","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new date.","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"MrOPPA1"},"content":"     * @param rawData A String that needs to comply with a supported format and","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"MrOPPA1"},"content":"     *                indicates a correct date that will be recorded by this Date","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"MrOPPA1"},"content":"     *                instance.","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"    public Date(String rawData) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"        setRawData(rawData);","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"MrOPPA1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"MrOPPA1"},"content":"        return date.format(toStringFormatter);","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"MrOPPA1":67}},{"path":"src/main/java/eggybyte/ip/data/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.data;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.util.Logger;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"import com.google.gson.annotations.SerializedName;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":" * Customized class for showing date time and parsing supported string to date","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":" * time.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"public class DateTime {","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"    transient LocalDateTime dateTime;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"    @SerializedName(\"rawData\")","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"    public String standardString;","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"    private static DateTimeFormatter[] formatters \u003d new DateTimeFormatter[] {","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\"),","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d H:m\"),","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"M-d-yyyy HHmm\"),","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"M-d-yyyy H:m\"),","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"MMM d, yyyy HH:mm\", Locale.ENGLISH), };","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"    private static DateTimeFormatter toStringFormatter \u003d formatters[formatters.length - 1];","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"     * Modifying an existing date time with a rawData String.","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"     * @param rawData A String that needs to comply with a supported format and","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"     *                indicates a correct time that will be recorded by this Date","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"     *                instance.","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"    public void setRawData(String rawData) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"            try {","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"                dateTime \u003d LocalDateTime.parse(rawData, formatter);","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"                standardString \u003d this.toString();","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"                return;","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"            } catch (Exception exception) {","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"        throw new TipsException(\"Unable to parse date time!\",","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"                \"Please check the date time string you have input, and make sure you are using the supported format!\");","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new date time.","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"MrOPPA1"},"content":"     * @param rawData A String that needs to comply with a supported format and","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"MrOPPA1"},"content":"     *                indicates a correct time that will be recorded by this Date","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"MrOPPA1"},"content":"     *                instance time.","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"    public DateTime(String rawData) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"MrOPPA1"},"content":"        setRawData(rawData);","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"MrOPPA1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"MrOPPA1"},"content":"        return dateTime.format(toStringFormatter);","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"MrOPPA1"},"content":"     * Compare the dates of this DateTime and another DateTime.","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"MrOPPA1"},"content":"     * @param dateTime The other DateTime that is used to compare.","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"MrOPPA1"},"content":"     * @return If the date of current instance is earlier,it returns -1.","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"MrOPPA1"},"content":"     *         If the date of current instance is later,it returns 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"MrOPPA1"},"content":"     *         Otherwise(when they\u0027re at exactly the same date) it returns 0.","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"MrOPPA1"},"content":"    public int compareDate(DateTime dateTime) {","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"MrOPPA1"},"content":"        LocalDate date1 \u003d this.dateTime.toLocalDate(), date2 \u003d dateTime.dateTime.toLocalDate();","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"MrOPPA1"},"content":"        if (date1.isBefore(date2)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"MrOPPA1"},"content":"            return 1;","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"MrOPPA1"},"content":"        if (date1.isAfter(date2)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"MrOPPA1"},"content":"            return -1;","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"MrOPPA1"},"content":"        return 0;","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"MrOPPA1"},"content":"     * Compare the dates of this DateTime and another Date.","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"MrOPPA1"},"content":"     * @param date The other Date that is used to compare.","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"MrOPPA1"},"content":"     * @return If the date of current instance is earlier,it returns -1.","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"MrOPPA1"},"content":"     *         If the date of current instance is later,it returns 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"MrOPPA1"},"content":"     *         Otherwise(when they\u0027re at exactly the same date) it returns 0.","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"MrOPPA1"},"content":"    public int compareDate(Date date) {","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"MrOPPA1"},"content":"        LocalDate date1 \u003d this.dateTime.toLocalDate(), date2 \u003d date.date;","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"MrOPPA1"},"content":"        if (date1.isBefore(date2)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"MrOPPA1"},"content":"            return -1;","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"MrOPPA1"},"content":"        if (date1.isAfter(date2)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"MrOPPA1"},"content":"            return 1;","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"MrOPPA1"},"content":"        return 0;","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"MrOPPA1":109}},{"path":"src/main/java/eggybyte/ip/data/RunningState.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.data;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.task.Task;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":" * A class used for recording a state, contaning \u0027tasks\u0027 for a list of task that","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":" * is going to be operated, and \u0027running\u0027 to indicate the status of the program.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"public class RunningState {","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    public ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"    private Boolean running;","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    public RunningState(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"        this.running \u003d true;","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"     * Terminate the current program.","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"     * However, you may switch to another running state for further operation.","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"    public void exit() {","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"        running \u003d false;","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"     * Running getter as it\u0027s a private variable.","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"    public Boolean isRunning() {","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"        return running;","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"MrOPPA1":35}},{"path":"src/main/java/eggybyte/ip/data/exception/TipsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.data.exception;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":" * Any excption will be throw in this type, which contains information about","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":" * this exception and the possible solution.","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"public class TipsException extends Exception {","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"    public String error, tips;","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"     * Creating a new Tips Exception.","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    public TipsException(String error, String tips) {","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"        this.error \u003d error;","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"        this.tips \u003d tips;","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"        return \"Error: \" + error","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"                + \"\\nTips: \" + tips;","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"MrOPPA1":23}},{"path":"src/main/java/eggybyte/ip/data/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.data.task;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.DateTime;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":" * A child class of Todo that has a new variable \u0027by\u0027 to show the end of the","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":" * task.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"public class Deadline extends Todo {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"    protected final static String type \u003d \"D\";","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"    public final DateTime by;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"     * Creating a new Event.","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"    public Deadline(String description, String by) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"        super(description, type);","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"        this.by \u003d new DateTime(by);","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"        return super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"MrOPPA1":27}},{"path":"src/main/java/eggybyte/ip/data/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.data.task;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.DateTime;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":" * A child class of Todo that has 2 new variables \u0027from\u0027 and \u0027to\u0027 to show the","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":" * duration that the task is going to last.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"public class Event extends Todo {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"    protected final static String type \u003d \"E\";","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"    public DateTime from, to;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"     * Creating a new Event.","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"    public Event(String description, String from, String to) throws TipsException {","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"        super(description, type);","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"        this.from \u003d new DateTime(from);","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"        this.to \u003d new DateTime(to);","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"        return super.toString() + \" (from: \" + from + \", to: \" + to + \")\";","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"MrOPPA1":27}},{"path":"src/main/java/eggybyte/ip/data/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.data.task;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":" * The base class for all tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"public class Task {","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"    public final String description;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"     * Creating a new Task.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"        return description;","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"MrOPPA1":20}},{"path":"src/main/java/eggybyte/ip/data/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.data.task;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":" * A child class of Task that has a new variable \u0027isDone\u0027 to show whether the","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":" * task is done.","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"    protected final String type;","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"    public boolean isDone;","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"     * Creating a new Task.","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"        this(description, \"T\");","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"     * Creating a new Task.","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"     * It\u0027s used for child classes to avoid implemented duplicated function.","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"    public Todo(String description, String type) {","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"        super(description);","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"        String status \u003d null;","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"            status \u003d \"X\";","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"            status \u003d \" \";","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"        return \"[\" + type + \"][\" + status + \"] \" + description;","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"MrOPPA1":38}},{"path":"src/main/java/eggybyte/ip/util/DataManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.util;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"import com.google.gson.JsonDeserializationContext;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"import com.google.gson.JsonDeserializer;","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"import com.google.gson.JsonObject;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"import com.google.gson.JsonParseException;","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.DateTime;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.task.*;","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.util.Logger.LogLevel;","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"import java.io.File;","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":" * A util used for managing the data of the program, using the io stream to","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":" * save and read the data at a local address.","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"public class DataManager {","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"    private static String absolutePath;","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"    private static String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"     * Set the relative path to make clear which exact address the data file is","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"     * going to save and read.Using relative path may make the program easier to","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"     * modify when you need to change the absolute saving path.","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"     * ","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"     * @param relativePath The address containing the name of the data file under","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"     *                     the data folder, ignoring the address of the data folder.","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"     * @throws IOException","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"    public static void setRelativePath(String relativePath) throws IOException {","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"        String dataFolderPath \u003d home + \"\\\\AppData\\\\LocalLow\\\\EggyByte\\\\iP\\\\\";","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"        // Logger.customPrint(dataFolderPath);","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"        Files.createDirectories(Paths.get(dataFolderPath));","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"        absolutePath \u003d dataFolderPath + relativePath;","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"MrOPPA1"},"content":"        // Logger.customPrint(absolutePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"MrOPPA1"},"content":"     * Read the data from the path that has been previously set.","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"MrOPPA1"},"content":"     * ","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"MrOPPA1"},"content":"     * @throws IOException","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"    public static String readData() throws IOException {","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"        File file \u003d new File(absolutePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"        // No existing file","lastModifiedDate":"2023-09-28"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"        if (file.createNewFile()) {","lastModifiedDate":"2023-09-28"},{"lineNumber":64,"author":{"gitId":"MrOPPA1"},"content":"            return \"\";","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"MrOPPA1"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"MrOPPA1"},"content":"        String result \u003d \"\", line;","lastModifiedDate":"2023-09-28"},{"lineNumber":69,"author":{"gitId":"MrOPPA1"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"MrOPPA1"},"content":"            result +\u003d line + \"\\n\";","lastModifiedDate":"2023-09-28"},{"lineNumber":71,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":72,"author":{"gitId":"MrOPPA1"},"content":"        reader.close();","lastModifiedDate":"2023-09-28"},{"lineNumber":73,"author":{"gitId":"MrOPPA1"},"content":"        return result.trim();","lastModifiedDate":"2023-09-28"},{"lineNumber":74,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":75,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":76,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"MrOPPA1"},"content":"     * Save the data to a file at the path that has been previously set.","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"MrOPPA1"},"content":"     * ","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"MrOPPA1"},"content":"     * @param content The serialized data json that is going to be saved.","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"MrOPPA1"},"content":"     * @throws IOException","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"MrOPPA1"},"content":"    public static void saveData(String content) throws Exception {","lastModifiedDate":"2023-09-28"},{"lineNumber":83,"author":{"gitId":"MrOPPA1"},"content":"        File file \u003d new File(absolutePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":84,"author":{"gitId":"MrOPPA1"},"content":"        file.createNewFile();","lastModifiedDate":"2023-09-28"},{"lineNumber":85,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":86,"author":{"gitId":"MrOPPA1"},"content":"        FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2023-09-28"},{"lineNumber":87,"author":{"gitId":"MrOPPA1"},"content":"        writer.write(content);","lastModifiedDate":"2023-09-28"},{"lineNumber":88,"author":{"gitId":"MrOPPA1"},"content":"        writer.close();","lastModifiedDate":"2023-09-28"},{"lineNumber":89,"author":{"gitId":"MrOPPA1"},"content":"        Logger.showLog(\"Your data has been saved at the path:\\n  \" + absolutePath, LogLevel.IMPORTANT, false);","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":91,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":92,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"MrOPPA1"},"content":"     * Convert a json String to a CustomType that is set by the user.","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"MrOPPA1"},"content":"     * ","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"MrOPPA1"},"content":"     * @param content A valid json String indicates a CustomType instance.","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"MrOPPA1"},"content":"    public static \u003cCustomType\u003e CustomType convertFromJson(String json) {","lastModifiedDate":"2023-09-28"},{"lineNumber":98,"author":{"gitId":"MrOPPA1"},"content":"        Type type \u003d new TypeToken\u003cCustomType\u003e() {","lastModifiedDate":"2023-09-28"},{"lineNumber":99,"author":{"gitId":"MrOPPA1"},"content":"        }.getType();","lastModifiedDate":"2023-09-28"},{"lineNumber":100,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":101,"author":{"gitId":"MrOPPA1"},"content":"        Gson gson \u003d new Gson();","lastModifiedDate":"2023-09-28"},{"lineNumber":102,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":103,"author":{"gitId":"MrOPPA1"},"content":"        return gson.fromJson(json, type);","lastModifiedDate":"2023-09-28"},{"lineNumber":104,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":105,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":106,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"MrOPPA1"},"content":"     * Convert a json String to an ArrayList\u003cTask\u003e.","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"MrOPPA1"},"content":"     * ","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"MrOPPA1"},"content":"     * @param content A valid json String indicates an ArrayList\u003cTask\u003e.","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"MrOPPA1"},"content":"    public static ArrayList\u003cTask\u003e convertFromJsonToTaskList(String json) {","lastModifiedDate":"2023-09-28"},{"lineNumber":112,"author":{"gitId":"MrOPPA1"},"content":"        Type type \u003d new TypeToken\u003cArrayList\u003cTask\u003e\u003e() {","lastModifiedDate":"2023-09-28"},{"lineNumber":113,"author":{"gitId":"MrOPPA1"},"content":"        }.getType();","lastModifiedDate":"2023-09-28"},{"lineNumber":114,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":115,"author":{"gitId":"MrOPPA1"},"content":"        Gson gson \u003d new GsonBuilder()","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"MrOPPA1"},"content":"                .registerTypeAdapter(Task.class, new TaskAdapter())","lastModifiedDate":"2023-10-05"},{"lineNumber":117,"author":{"gitId":"MrOPPA1"},"content":"                .registerTypeAdapter(DateTime.class, new DateTimeAdapter())","lastModifiedDate":"2023-10-05"},{"lineNumber":118,"author":{"gitId":"MrOPPA1"},"content":"                .create();","lastModifiedDate":"2023-10-05"},{"lineNumber":119,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":120,"author":{"gitId":"MrOPPA1"},"content":"        return gson.fromJson(json, type);","lastModifiedDate":"2023-09-28"},{"lineNumber":121,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":122,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":123,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":124,"author":{"gitId":"MrOPPA1"},"content":"     * Serialize any object to json.","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"MrOPPA1"},"content":"     * ","lastModifiedDate":"2023-10-05"},{"lineNumber":126,"author":{"gitId":"MrOPPA1"},"content":"     * @param object Any variable that you want to serialize.","lastModifiedDate":"2023-10-05"},{"lineNumber":127,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"MrOPPA1"},"content":"    public static String convertToJson(Object object) {","lastModifiedDate":"2023-09-28"},{"lineNumber":129,"author":{"gitId":"MrOPPA1"},"content":"        Gson gson \u003d new Gson();","lastModifiedDate":"2023-09-28"},{"lineNumber":130,"author":{"gitId":"MrOPPA1"},"content":"        return gson.toJson(object);","lastModifiedDate":"2023-09-28"},{"lineNumber":131,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":132,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":133,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":134,"author":{"gitId":"MrOPPA1"},"content":"     * Used for deserializing Task with a custom rule.","lastModifiedDate":"2023-10-05"},{"lineNumber":135,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":136,"author":{"gitId":"MrOPPA1"},"content":"    private static class TaskAdapter implements JsonDeserializer\u003cTask\u003e {","lastModifiedDate":"2023-09-28"},{"lineNumber":137,"author":{"gitId":"MrOPPA1"},"content":"        @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":138,"author":{"gitId":"MrOPPA1"},"content":"        public Task deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)","lastModifiedDate":"2023-09-28"},{"lineNumber":139,"author":{"gitId":"MrOPPA1"},"content":"                throws JsonParseException {","lastModifiedDate":"2023-09-28"},{"lineNumber":140,"author":{"gitId":"MrOPPA1"},"content":"            JsonObject jsonObject \u003d json.getAsJsonObject();","lastModifiedDate":"2023-09-28"},{"lineNumber":141,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":142,"author":{"gitId":"MrOPPA1"},"content":"            String type \u003d jsonObject.get(\"type\").getAsString();","lastModifiedDate":"2023-09-28"},{"lineNumber":143,"author":{"gitId":"MrOPPA1"},"content":"            switch (type) {","lastModifiedDate":"2023-09-28"},{"lineNumber":144,"author":{"gitId":"MrOPPA1"},"content":"                case \"T\":","lastModifiedDate":"2023-09-28"},{"lineNumber":145,"author":{"gitId":"MrOPPA1"},"content":"                    return context.deserialize(jsonObject, Todo.class);","lastModifiedDate":"2023-09-28"},{"lineNumber":146,"author":{"gitId":"MrOPPA1"},"content":"                case \"D\":","lastModifiedDate":"2023-09-28"},{"lineNumber":147,"author":{"gitId":"MrOPPA1"},"content":"                    return context.deserialize(jsonObject, Deadline.class);","lastModifiedDate":"2023-09-28"},{"lineNumber":148,"author":{"gitId":"MrOPPA1"},"content":"                case \"E\":","lastModifiedDate":"2023-09-28"},{"lineNumber":149,"author":{"gitId":"MrOPPA1"},"content":"                    return context.deserialize(jsonObject, Event.class);","lastModifiedDate":"2023-09-28"},{"lineNumber":150,"author":{"gitId":"MrOPPA1"},"content":"                default:","lastModifiedDate":"2023-09-28"},{"lineNumber":151,"author":{"gitId":"MrOPPA1"},"content":"                    throw new JsonParseException(\"Unknown task type: \" + type);","lastModifiedDate":"2023-09-28"},{"lineNumber":152,"author":{"gitId":"MrOPPA1"},"content":"            }","lastModifiedDate":"2023-09-28"},{"lineNumber":153,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":154,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":155,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":156,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":157,"author":{"gitId":"MrOPPA1"},"content":"     * Used for deserializing DateTime with a custom rule.","lastModifiedDate":"2023-10-05"},{"lineNumber":158,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":159,"author":{"gitId":"MrOPPA1"},"content":"    private static class DateTimeAdapter implements JsonDeserializer\u003cDateTime\u003e {","lastModifiedDate":"2023-10-05"},{"lineNumber":160,"author":{"gitId":"MrOPPA1"},"content":"        @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":161,"author":{"gitId":"MrOPPA1"},"content":"        public DateTime deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) {","lastModifiedDate":"2023-10-05"},{"lineNumber":162,"author":{"gitId":"MrOPPA1"},"content":"            JsonObject jsonObject \u003d json.getAsJsonObject();","lastModifiedDate":"2023-10-05"},{"lineNumber":163,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":164,"author":{"gitId":"MrOPPA1"},"content":"            String rawData \u003d jsonObject.get(\"rawData\").getAsString();","lastModifiedDate":"2023-10-05"},{"lineNumber":165,"author":{"gitId":"MrOPPA1"},"content":"            try {","lastModifiedDate":"2023-10-05"},{"lineNumber":166,"author":{"gitId":"MrOPPA1"},"content":"                return new DateTime(rawData);","lastModifiedDate":"2023-10-05"},{"lineNumber":167,"author":{"gitId":"MrOPPA1"},"content":"            } catch (TipsException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":168,"author":{"gitId":"MrOPPA1"},"content":"                Logger.showLog(e.toString(), LogLevel.DEBUG, false);","lastModifiedDate":"2023-10-05"},{"lineNumber":169,"author":{"gitId":"MrOPPA1"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":170,"author":{"gitId":"MrOPPA1"},"content":"            return null;","lastModifiedDate":"2023-10-05"},{"lineNumber":171,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":172,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":173,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"MrOPPA1":173}},{"path":"src/main/java/eggybyte/ip/util/Logger.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.util;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.data.exception.TipsException;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":" * An util used for showing log with a more standard way.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"public class Logger {","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"    public static Boolean debugMode \u003d true;","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"     * Simply show greeting.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    public static void showGreeting() {","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"        showLog(\" Hello! I\u0027m EggyByte!\\n What can I do for you?\", true);","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"    public enum LogLevel {","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"        DEBUG, WARNING, INFO, ERROR, FATAL, IMPORTANT","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     * Simply showing an object and choose whether to show 2 lines to clamp it.","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"     * ","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"     * @param object   The object you want to show.","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"     * @param showLine Indicate whether to show lines.","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"    public static void showLog(Object object, Boolean showLine) {","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"        LogLevel logLevel \u003d debugMode ? LogLevel.DEBUG : LogLevel.INFO;","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"        String content \u003d object.toString();","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"        if (object instanceof Exception) {","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"            logLevel \u003d LogLevel.ERROR;","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"            content \u003d ((Exception) object).getMessage();","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"        if (object instanceof TipsException) {","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"            logLevel \u003d LogLevel.ERROR;","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"            content \u003d object.toString();","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"        showLog(content, logLevel, showLine);","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"     * Showing a message and choose whether to show 2 lines to clamp it, and also","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"     * need to choose the LogLevel of this information.","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"     * ","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"     * @param content  The message you want to show.","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"     * @param logLevel The essence level of your message.","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"     * @param showLine Indicate whether to show lines.","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"MrOPPA1"},"content":"    public static void showLog(String content, LogLevel logLevel, Boolean showLine) {","lastModifiedDate":"2023-09-24"},{"lineNumber":53,"author":{"gitId":"MrOPPA1"},"content":"        if (showLine) {","lastModifiedDate":"2023-09-24"},{"lineNumber":54,"author":{"gitId":"MrOPPA1"},"content":"            customPrint(\"____________________________________________________________\");","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":56,"author":{"gitId":"MrOPPA1"},"content":"        customPrint(","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"MrOPPA1"},"content":"                \"[\" + LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"HH:mm:ss\")) +","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"MrOPPA1"},"content":"                        \"][\" + logLevel + \"]\");","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"        String[] lines \u003d content.split(\"\\n\");","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"            customPrint(\" \" + line);","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"        if (showLine) {","lastModifiedDate":"2023-09-24"},{"lineNumber":64,"author":{"gitId":"MrOPPA1"},"content":"            customPrint(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":66,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":67,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":68,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"MrOPPA1"},"content":"     * Printing with a tab in front of the content to make it more easy to","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"MrOPPA1"},"content":"     * distinguish the different lines and meaning.","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"MrOPPA1"},"content":"    public static void customPrint(String content) {","lastModifiedDate":"2023-09-28"},{"lineNumber":73,"author":{"gitId":"MrOPPA1"},"content":"        System.out.println(\"    \" + content);","lastModifiedDate":"2023-09-28"},{"lineNumber":74,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":75,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":76,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"MrOPPA1"},"content":"     * Printing all elements in an array.","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"MrOPPA1"},"content":"     * It\u0027s usually used in debuging.","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"MrOPPA1"},"content":"    public static \u003cType\u003e void printArray(Type[] array) {","lastModifiedDate":"2023-09-24"},{"lineNumber":81,"author":{"gitId":"MrOPPA1"},"content":"        int length \u003d array.length;","lastModifiedDate":"2023-09-24"},{"lineNumber":82,"author":{"gitId":"MrOPPA1"},"content":"        String result \u003d \"Array Length : \" + length + \"\\n[\";","lastModifiedDate":"2023-09-24"},{"lineNumber":83,"author":{"gitId":"MrOPPA1"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2023-09-24"},{"lineNumber":84,"author":{"gitId":"MrOPPA1"},"content":"            result +\u003d array[i].toString() + (i \u003c length - 1 ? \", \" : \"\");","lastModifiedDate":"2023-09-24"},{"lineNumber":85,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":86,"author":{"gitId":"MrOPPA1"},"content":"        result +\u003d \"]\";","lastModifiedDate":"2023-09-24"},{"lineNumber":87,"author":{"gitId":"MrOPPA1"},"content":"        showLog(result, false);","lastModifiedDate":"2023-09-24"},{"lineNumber":88,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":89,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"MrOPPA1":89}},{"path":"src/main/java/eggybyte/ip/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package eggybyte.ip.util;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import eggybyte.ip.command.*;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":" * An util used for parsing the input to a valid command and executing it.","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"public class Parser {","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"    public static Boolean debugMode \u003d false;","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"     * Parse user\u0027s input into command for execution.","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"     * @param userInput The full input of user.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"     * @return The command based on the user input.","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"     * @throws Exception","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"    public Command parseCommand(String userInput) throws Exception {","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"        String[] words \u003d userInput.trim().split(\" \", 2); // split the input into command and arguments","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"        if (words.length \u003d\u003d 0) {","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"            throw new Exception(\"Empty input is invalid!\");","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"        final String commandWord \u003d words[0];","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"        final String argumentString \u003d userInput.replaceFirst(commandWord, \"\").trim();","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"        final String[] arguments \u003d getArguments(argumentString);","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"        if (debugMode) {","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"            Logger.printArray(arguments);","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"        try {","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"            switch (commandWord) {","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"                case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"                    return new TodoCommand(arguments);","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"                case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"                    return new DeadlineCommand(arguments);","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"                case EventCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"                    return new EventCommand(arguments);","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"                case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"                    return new DeleteCommand(arguments);","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"                case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"                    return new MarkCommand(arguments);","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"                case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"                    return new UnmarkCommand(arguments);","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"                case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"                    return new ListCommand(arguments);","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"                case ActivatedCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"                    return new ActivatedCommand(arguments);","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"                case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"                    return new FindCommand(arguments);","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"MrOPPA1"},"content":"                case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-24"},{"lineNumber":52,"author":{"gitId":"MrOPPA1"},"content":"                    return new ByeCommand(arguments);","lastModifiedDate":"2023-09-24"},{"lineNumber":53,"author":{"gitId":"MrOPPA1"},"content":"                default:","lastModifiedDate":"2023-09-24"},{"lineNumber":54,"author":{"gitId":"MrOPPA1"},"content":"                    throw new Exception(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"MrOPPA1"},"content":"            }","lastModifiedDate":"2023-09-24"},{"lineNumber":56,"author":{"gitId":"MrOPPA1"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2023-09-24"},{"lineNumber":57,"author":{"gitId":"MrOPPA1"},"content":"            throw exception;","lastModifiedDate":"2023-09-24"},{"lineNumber":58,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"     * Parse arguments in the context of the argumentString.","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-09-24"},{"lineNumber":64,"author":{"gitId":"MrOPPA1"},"content":"     * @param argumentString The remaining string that doesn\u0027t contain the command","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"MrOPPA1"},"content":"     *                       word.","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"MrOPPA1"},"content":"     * @return A String[] that contains all the argument that is split by \u0027/\u0027.","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":68,"author":{"gitId":"MrOPPA1"},"content":"    private String[] getArguments(String argumentString) {","lastModifiedDate":"2023-09-24"},{"lineNumber":69,"author":{"gitId":"MrOPPA1"},"content":"        if (argumentString.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-24"},{"lineNumber":70,"author":{"gitId":"MrOPPA1"},"content":"            return new String[0];","lastModifiedDate":"2023-09-24"},{"lineNumber":71,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":72,"author":{"gitId":"MrOPPA1"},"content":"        String[] parts \u003d argumentString.split(\"/\");","lastModifiedDate":"2023-09-24"},{"lineNumber":73,"author":{"gitId":"MrOPPA1"},"content":"        parts[0] \u003d parts[0].trim();","lastModifiedDate":"2023-09-24"},{"lineNumber":74,"author":{"gitId":"MrOPPA1"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2023-09-24"},{"lineNumber":75,"author":{"gitId":"MrOPPA1"},"content":"            parts[i] \u003d parts[i].replaceFirst(parts[i].split(\" \")[0], \"\").trim();","lastModifiedDate":"2023-09-24"},{"lineNumber":76,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":77,"author":{"gitId":"MrOPPA1"},"content":"        return parts;","lastModifiedDate":"2023-09-24"},{"lineNumber":78,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":79,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"MrOPPA1":79}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"todo borrow book","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"list","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"mark 1","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"list","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"mark 2","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"mark 3","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"todo test yes!","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"unmark 1","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"delete 3","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"delete 999","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"list","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"bye","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"MrOPPA1":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"REM set the classpath to include directories and JAR files","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"set CLASSPATH\u003d..\\src\\main\\java;..\\lib\\*","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"javac -cp %CLASSPATH% -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"@REM FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"MrOPPA1":5,"-":19}}]
