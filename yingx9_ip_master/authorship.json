[{"path":"src/main/java/magpie/exceptions/MagpieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yingx9"},"content":"package magpie.exceptions;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":3,"author":{"gitId":"yingx9"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"yingx9"},"content":" * \u003cb\u003eMagpieException\u003c/b\u003e class is an Exception class for Magpie-related errors.\u003cbr\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"yingx9"},"content":" * Contains \u003ccode\u003eerrorMessage\u003c/code\u003e to let users know the error. \u003ci\u003eE.g missing arguments\u003c/i\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"yingx9"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"yingx9"},"content":"public class MagpieException extends Exception {","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"yingx9"},"content":"    private String errorMessage;","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"yingx9"},"content":"     * Constructor for \u003ccode\u003eerrorMessage\u003c/code\u003e.","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"yingx9"},"content":"     * @param errorMessage errorMessage to be printed to user.","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"yingx9"},"content":"    public MagpieException(String errorMessage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"yingx9"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"yingx9"},"content":"     * Returns error message to be printed to user.","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"yingx9"},"content":"     * @return Error Message of exception.","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"yingx9"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"yingx9"},"content":"        return errorMessage;","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"yingx9"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"yingx9":33}},{"path":"src/main/java/magpie/files/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yingx9"},"content":"package magpie.files;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"yingx9"},"content":"import magpie.exceptions.MagpieException;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"yingx9"},"content":"import magpie.task.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"yingx9"},"content":"import java.io.File;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"yingx9"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"yingx9"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"yingx9"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"yingx9"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"yingx9"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"yingx9"},"content":" * \u003cb\u003eStorage\u003c/b\u003e class is responsible for loading tasks from the file and saving tasks in the file.\u003cbr\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"yingx9"},"content":" * Contains methods to related to file operations such as reading, writing, and saving files.","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"yingx9"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"yingx9"},"content":"public class Storage {","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"yingx9"},"content":"    private static String filePath;","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"yingx9"},"content":"    private File taskFile;","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"yingx9"},"content":"    private Scanner scanFile;","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"yingx9"},"content":"    private static String taskFileContents \u003d \"\";","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"yingx9"},"content":"    private String taskLine;","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"yingx9"},"content":"    private String[] splitTaskLines;","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"yingx9"},"content":"     * Checks if data/data.txt path exists and creates directory if it doesn\u0027t exist.","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"yingx9"},"content":"    public void createDirectory() {","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"yingx9"},"content":"        String directoryPath \u003d System.getProperty(\"user.dir\") + \"/data\";","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"yingx9"},"content":"        filePath \u003d directoryPath + \"/data.txt\";","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"yingx9"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"yingx9"},"content":"        if (!directory.exists()){","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"yingx9"},"content":"            directory.mkdir();","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":40,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":41,"author":{"gitId":"yingx9"},"content":"     * Constructor that calls \u003ccode\u003ecreateDirectory\u003c/code\u003e and initializes \u003ccode\u003etaskFile\u003c/code\u003e for file handling.","lastModifiedDate":"2023-09-23"},{"lineNumber":42,"author":{"gitId":"yingx9"},"content":"     * Creates a new \u003ccode\u003edata.txt\u003c/code\u003e file if not present.","lastModifiedDate":"2023-09-23"},{"lineNumber":43,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":44,"author":{"gitId":"yingx9"},"content":"    public Storage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"yingx9"},"content":"        createDirectory();","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"yingx9"},"content":"        taskFile \u003d new File(filePath);","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"yingx9"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"yingx9"},"content":"            boolean isCreated \u003d taskFile.createNewFile();","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"yingx9"},"content":"            if (isCreated) {","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"yingx9"},"content":"                System.out.println(\"Created new data file for tasks :)\");","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"yingx9"},"content":"                System.out.println(\"file created \" + taskFile.getCanonicalPath());","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"yingx9"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"yingx9"},"content":"            else {","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"yingx9"},"content":"                System.out.println(\"Data file found! Now loading...\");","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"yingx9"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"yingx9"},"content":"        catch (IOException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"Hmmmm...an IOException occurred. Check that data directory exists or try again!\");","lastModifiedDate":"2023-09-23"},{"lineNumber":64,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":70,"author":{"gitId":"yingx9"},"content":"     * Matches type of task in \u003ccode\u003eTaskLine\u003c/code\u003e to a \u003ccode\u003eSwitch case\u003c/code\u003e.","lastModifiedDate":"2023-09-23"},{"lineNumber":71,"author":{"gitId":"yingx9"},"content":"     * Pass required \u003ccode\u003eTask\u003c/code\u003e arguments and call its respective \u003ccode\u003eadd\u003c/code\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":72,"author":{"gitId":"yingx9"},"content":"     * methods to load task into list.","lastModifiedDate":"2023-09-23"},{"lineNumber":73,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":74,"author":{"gitId":"yingx9"},"content":"     * @throws MagpieException if data file contains invalid task lines.","lastModifiedDate":"2023-09-23"},{"lineNumber":75,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":76,"author":{"gitId":"yingx9"},"content":"    public void addTaskLine() throws MagpieException {","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"yingx9"},"content":"        boolean isMark \u003d !(splitTaskLines[1].trim().equals(\"0\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":78,"author":{"gitId":"yingx9"},"content":"        switch(splitTaskLines[0].trim()) {","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"yingx9"},"content":"        case \"T\":","lastModifiedDate":"2023-09-16"},{"lineNumber":80,"author":{"gitId":"yingx9"},"content":"            TaskList.addTodo(isMark, splitTaskLines[2]);","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"yingx9"},"content":"            break;","lastModifiedDate":"2023-09-16"},{"lineNumber":82,"author":{"gitId":"yingx9"},"content":"        case \"D\":","lastModifiedDate":"2023-09-16"},{"lineNumber":83,"author":{"gitId":"yingx9"},"content":"            TaskList.addDeadline(isMark, splitTaskLines[2], splitTaskLines[3]);","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"yingx9"},"content":"            break;","lastModifiedDate":"2023-09-16"},{"lineNumber":85,"author":{"gitId":"yingx9"},"content":"        case \"E\":","lastModifiedDate":"2023-09-16"},{"lineNumber":86,"author":{"gitId":"yingx9"},"content":"            TaskList.addEvent(isMark, splitTaskLines[2], splitTaskLines[3], splitTaskLines[4]);","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"yingx9"},"content":"            break;","lastModifiedDate":"2023-09-16"},{"lineNumber":88,"author":{"gitId":"yingx9"},"content":"        default:","lastModifiedDate":"2023-09-16"},{"lineNumber":89,"author":{"gitId":"yingx9"},"content":"            throw new MagpieException(\"Error: Could not read task from file\");","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":91,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":92,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":93,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":94,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":95,"author":{"gitId":"yingx9"},"content":"     * Reads data file line by line using a \u003ccode\u003eScanner\u003c/code\u003e object. For each line, retrieve","lastModifiedDate":"2023-09-23"},{"lineNumber":96,"author":{"gitId":"yingx9"},"content":"     * Task Details by splitting using \"|\" and call \u003ccode\u003eaddTaskLine\u003c/code\u003e to load task.","lastModifiedDate":"2023-09-23"},{"lineNumber":97,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":98,"author":{"gitId":"yingx9"},"content":"     * @param taskManager taskManager TaskList object for task operations.","lastModifiedDate":"2023-09-23"},{"lineNumber":99,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":100,"author":{"gitId":"yingx9"},"content":"    public void loadFile(TaskList taskManager) {","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":102,"author":{"gitId":"yingx9"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":103,"author":{"gitId":"yingx9"},"content":"            scanFile \u003d new Scanner(taskFile);","lastModifiedDate":"2023-09-16"},{"lineNumber":104,"author":{"gitId":"yingx9"},"content":"            while(scanFile.hasNext()){","lastModifiedDate":"2023-09-16"},{"lineNumber":105,"author":{"gitId":"yingx9"},"content":"                taskLine \u003d scanFile.nextLine();","lastModifiedDate":"2023-09-16"},{"lineNumber":106,"author":{"gitId":"yingx9"},"content":"                splitTaskLines \u003d taskLine.split(\"\\\\|\");","lastModifiedDate":"2023-09-16"},{"lineNumber":107,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":108,"author":{"gitId":"yingx9"},"content":"                addTaskLine();","lastModifiedDate":"2023-09-16"},{"lineNumber":109,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":110,"author":{"gitId":"yingx9"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":111,"author":{"gitId":"yingx9"},"content":"            scanFile.close();","lastModifiedDate":"2023-09-16"},{"lineNumber":112,"author":{"gitId":"yingx9"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":113,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"Uh oh!! File not found!\");","lastModifiedDate":"2023-09-16"},{"lineNumber":114,"author":{"gitId":"yingx9"},"content":"        } catch (ArrayIndexOutOfBoundsException e ){","lastModifiedDate":"2023-09-16"},{"lineNumber":115,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"Uh oh!! Looks like your data file\u0027s corrupted!\");","lastModifiedDate":"2023-09-16"},{"lineNumber":116,"author":{"gitId":"yingx9"},"content":"        } catch (MagpieException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"yingx9"},"content":"            System.out.println(e.getErrorMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":119,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":120,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":121,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":122,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":123,"author":{"gitId":"yingx9"},"content":"     * Appends details of a new \u003ccode\u003eTask\u003c/code\u003e to \u003ccode\u003etaskFileContents\u003c/code\u003e.","lastModifiedDate":"2023-09-23"},{"lineNumber":124,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":125,"author":{"gitId":"yingx9"},"content":"     * @param newTask Task to be appended.","lastModifiedDate":"2023-09-23"},{"lineNumber":126,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":127,"author":{"gitId":"yingx9"},"content":"    public static void appendTaskToFile(String newTask) {","lastModifiedDate":"2023-09-16"},{"lineNumber":128,"author":{"gitId":"yingx9"},"content":"        taskFileContents +\u003d newTask + System.lineSeparator();","lastModifiedDate":"2023-09-16"},{"lineNumber":129,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":130,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":131,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":132,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":133,"author":{"gitId":"yingx9"},"content":"     * Deletes details of a \u003ccode\u003eTask\u003c/code\u003e from \u003ccode\u003etaskFileContents\u003c/code\u003e.","lastModifiedDate":"2023-09-23"},{"lineNumber":134,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":135,"author":{"gitId":"yingx9"},"content":"     * @param taskToDelete Task to be deleted.","lastModifiedDate":"2023-09-23"},{"lineNumber":136,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":137,"author":{"gitId":"yingx9"},"content":"    public static void deleteTaskFromFile(String taskToDelete) {","lastModifiedDate":"2023-09-16"},{"lineNumber":138,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":139,"author":{"gitId":"yingx9"},"content":"        taskFileContents \u003d taskFileContents.replace(taskToDelete + \"\\r\\n\", \"\");","lastModifiedDate":"2023-09-16"},{"lineNumber":140,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":141,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":142,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":143,"author":{"gitId":"yingx9"},"content":"     * Updates details of a \u003ccode\u003eTask\u003c/code\u003e in \u003ccode\u003etaskFileContents\u003c/code\u003e,","lastModifiedDate":"2023-09-23"},{"lineNumber":144,"author":{"gitId":"yingx9"},"content":"     * typically to update mark or unmark status.","lastModifiedDate":"2023-09-23"},{"lineNumber":145,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":146,"author":{"gitId":"yingx9"},"content":"     * @param oldLine Line to be replaced.","lastModifiedDate":"2023-09-23"},{"lineNumber":147,"author":{"gitId":"yingx9"},"content":"     * @param newLine New Line to replace old Line.","lastModifiedDate":"2023-09-23"},{"lineNumber":148,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":149,"author":{"gitId":"yingx9"},"content":"    public static void updateTaskInFile(String oldLine, String newLine) {","lastModifiedDate":"2023-09-16"},{"lineNumber":150,"author":{"gitId":"yingx9"},"content":"        taskFileContents \u003d taskFileContents.replace(oldLine, newLine);","lastModifiedDate":"2023-09-16"},{"lineNumber":151,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":152,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":153,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":154,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":155,"author":{"gitId":"yingx9"},"content":"     * Writes \u003ccode\u003edata.txt\u003c/code\u003e with contents of \u003ccode\u003etaskFileContents\u003c/code\u003e to save all task details onto","lastModifiedDate":"2023-09-23"},{"lineNumber":156,"author":{"gitId":"yingx9"},"content":"     * hard disk.","lastModifiedDate":"2023-09-23"},{"lineNumber":157,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":158,"author":{"gitId":"yingx9"},"content":"     * @throws IOException if file writing was unsuccessful.","lastModifiedDate":"2023-09-23"},{"lineNumber":159,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":160,"author":{"gitId":"yingx9"},"content":"    public void saveToFile() throws IOException {","lastModifiedDate":"2023-09-16"},{"lineNumber":161,"author":{"gitId":"yingx9"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-16"},{"lineNumber":162,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":163,"author":{"gitId":"yingx9"},"content":"        writer.append(taskFileContents);","lastModifiedDate":"2023-09-16"},{"lineNumber":164,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":165,"author":{"gitId":"yingx9"},"content":"        writer.flush();","lastModifiedDate":"2023-09-16"},{"lineNumber":166,"author":{"gitId":"yingx9"},"content":"        writer.close();","lastModifiedDate":"2023-09-16"},{"lineNumber":167,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":168,"author":{"gitId":"yingx9"},"content":"}","lastModifiedDate":"2023-09-16"},{"lineNumber":169,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":170,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"yingx9":170}},{"path":"src/main/java/magpie/input/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yingx9"},"content":"package magpie.input;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"yingx9"},"content":"import magpie.exceptions.MagpieException;","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"yingx9"},"content":"import magpie.task.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"yingx9"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"yingx9"},"content":" * \u003cb\u003eParser\u003c/b\u003e class is responsible for parsing user input such as extracting out arguments and","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"yingx9"},"content":" * calling \u003ccode\u003eInputValidator\u003c/code\u003e methods to validate input and","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"yingx9"},"content":" * \u003ccode\u003eTaskList\u003c/code\u003e methods to execute parsed commands.","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"yingx9"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"yingx9"},"content":"public class Parser {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"yingx9"},"content":"    protected static String command;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"yingx9"},"content":"    protected static String arguments;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"yingx9"},"content":"    protected static String[] splitInputs;","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"yingx9"},"content":"     * Constructor for \u003ccode\u003esplitInputs\u003c/code\u003e, \u003ccode\u003ecommand\u003c/code\u003e and \u003ccode\u003earguments\u003c/code\u003e.","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"yingx9"},"content":"     * @param input Input given by user.","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"yingx9"},"content":"    public Parser(String input) {","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"yingx9"},"content":"        splitInputs \u003d input.split(\" \");","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"yingx9"},"content":"        command \u003d splitInputs[0].toLowerCase();","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"yingx9"},"content":"        arguments \u003d input.substring(command.length());","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"yingx9"},"content":"     * Checks if given String can be parsed into an Integer and parses if validation is successful.","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"yingx9"},"content":"     * @param input \u003ccode\u003eString\u003c/code\u003e input to be parsed into \u003ccode\u003eint\u003c/code\u003e.","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"yingx9"},"content":"     * @return Parsed Integer if successful, otherwise \u003ccode\u003e-1\u003c/code\u003e.","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"yingx9"},"content":"    public int parseInt(String input) {","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"yingx9"},"content":"        boolean canParse \u003d InputValidator.isValidInt(input);","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"yingx9"},"content":"        if (canParse) {","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"yingx9"},"content":"            return Integer.parseInt(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"yingx9"},"content":"        } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"yingx9"},"content":"            return -1;","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"yingx9"},"content":"     * Checks if user input is valid to add a \u003ccode\u003eTodo\u003c/code\u003e Task,","lastModifiedDate":"2023-09-23"},{"lineNumber":47,"author":{"gitId":"yingx9"},"content":"     * and adds a new \u003ccode\u003eTodo\u003c/code\u003e Task if valid.","lastModifiedDate":"2023-09-23"},{"lineNumber":48,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":49,"author":{"gitId":"yingx9"},"content":"     * @param taskManager taskManager TaskList object for task operations.","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"yingx9"},"content":"     * @throws MagpieException if user input is missing description.","lastModifiedDate":"2023-09-23"},{"lineNumber":51,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":52,"author":{"gitId":"yingx9"},"content":"    public void manageTodo(TaskList taskManager) throws MagpieException {","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"yingx9"},"content":"        InputValidator.validateTodo();","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"yingx9"},"content":"        TaskList.addTodo(false, arguments);","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":60,"author":{"gitId":"yingx9"},"content":"     * Checks if user input is valid to add a \u003ccode\u003eDeadline\u003c/code\u003e Task, and adds a new Deadline task if valid.","lastModifiedDate":"2023-09-23"},{"lineNumber":61,"author":{"gitId":"yingx9"},"content":"     * Retrieves arguments and passes them into \u003ccode\u003eaddDeadline\u003c/code\u003e method.","lastModifiedDate":"2023-09-23"},{"lineNumber":62,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":63,"author":{"gitId":"yingx9"},"content":"     * @param taskManager taskManager TaskList object for task operations.","lastModifiedDate":"2023-09-23"},{"lineNumber":64,"author":{"gitId":"yingx9"},"content":"     * @throws MagpieException if user input is missing \u003ccode\u003edescription\u003c/code\u003e or a \u003ccode\u003e/by \u003c/code\u003e deadline.","lastModifiedDate":"2023-09-23"},{"lineNumber":65,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":66,"author":{"gitId":"yingx9"},"content":"    public void manageDeadline(TaskList taskManager) throws MagpieException {","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"yingx9"},"content":"        InputValidator.validateDeadline();","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"yingx9"},"content":"        int byIndex \u003d arguments.indexOf(\"/by\");","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"yingx9"},"content":"        String by \u003d arguments.substring(byIndex + 3);","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"yingx9"},"content":"        String description \u003d arguments.substring(0, byIndex);","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"yingx9"},"content":"        TaskList.addDeadline(false, description, by);","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":78,"author":{"gitId":"yingx9"},"content":"     * Checks if user input is valid to add a \u003ccode\u003eEvent\u003c/code\u003e Task, and adds a new Event task if valid.","lastModifiedDate":"2023-09-23"},{"lineNumber":79,"author":{"gitId":"yingx9"},"content":"     * Retrieves arguments and passes them into \u003ccode\u003eaddEvent\u003c/code\u003e method.","lastModifiedDate":"2023-09-23"},{"lineNumber":80,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":81,"author":{"gitId":"yingx9"},"content":"     * @param taskManager taskManager TaskList object for task operations.","lastModifiedDate":"2023-09-23"},{"lineNumber":82,"author":{"gitId":"yingx9"},"content":"     * @throws MagpieException if user input is missing \u003ccode\u003edescription\u003c/code\u003e,\u003ccode\u003e/from\u003c/code\u003e, or","lastModifiedDate":"2023-09-23"},{"lineNumber":83,"author":{"gitId":"yingx9"},"content":"     * \u003ccode\u003e/to\u003c/code\u003e.","lastModifiedDate":"2023-09-23"},{"lineNumber":84,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":85,"author":{"gitId":"yingx9"},"content":"    public void manageEvent(TaskList taskManager) throws MagpieException {","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"yingx9"},"content":"        InputValidator.validateEvent();","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"yingx9"},"content":"        int fromIndex \u003d arguments.indexOf(\"/from\");","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"yingx9"},"content":"        int toIndex \u003d arguments.indexOf(\"/to\");","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"yingx9"},"content":"        String from \u003d arguments.substring(fromIndex + 5, toIndex);","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"yingx9"},"content":"        String to \u003d arguments.substring(toIndex + 3);","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"yingx9"},"content":"        String eventName \u003d arguments.substring(0, fromIndex);","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"yingx9"},"content":"        TaskList.addEvent(false, eventName, from, to);","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":99,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":100,"author":{"gitId":"yingx9"},"content":"     * Checks if user input contains a target index and parses index if valid.","lastModifiedDate":"2023-09-23"},{"lineNumber":101,"author":{"gitId":"yingx9"},"content":"     * Pass parsed index into \u003ccode\u003emarkTask\u003c/code\u003e method to perform mark or unmark operation.","lastModifiedDate":"2023-09-23"},{"lineNumber":102,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":103,"author":{"gitId":"yingx9"},"content":"     * @param taskManager taskManager TaskList object for task operations.","lastModifiedDate":"2023-09-23"},{"lineNumber":104,"author":{"gitId":"yingx9"},"content":"     * @throws MagpieException if index is missing or invalid.","lastModifiedDate":"2023-09-23"},{"lineNumber":105,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":106,"author":{"gitId":"yingx9"},"content":"    public void markOrUnmarkTask(TaskList taskManager, boolean isMark) throws MagpieException {","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"yingx9"},"content":"        InputValidator.validateTargetIsPresent();","lastModifiedDate":"2023-09-23"},{"lineNumber":110,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"yingx9"},"content":"        int index \u003d parseInt(splitInputs[1]);","lastModifiedDate":"2023-09-16"},{"lineNumber":112,"author":{"gitId":"yingx9"},"content":"        if (index \u003e\u003d 0) {","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"yingx9"},"content":"            TaskList.markTask(index - 1, isMark);","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":116,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":119,"author":{"gitId":"yingx9"},"content":"     * Checks if user input contains a target index and parses index if valid.","lastModifiedDate":"2023-09-23"},{"lineNumber":120,"author":{"gitId":"yingx9"},"content":"     * Pass parsed index into \u003ccode\u003edeleteTask\u003c/code\u003e method to delete selected task.","lastModifiedDate":"2023-09-23"},{"lineNumber":121,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":122,"author":{"gitId":"yingx9"},"content":"     * @param taskManager taskManager TaskList object for task operations.","lastModifiedDate":"2023-09-23"},{"lineNumber":123,"author":{"gitId":"yingx9"},"content":"     * @throws MagpieException if index is missing or invalid.","lastModifiedDate":"2023-09-23"},{"lineNumber":124,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":125,"author":{"gitId":"yingx9"},"content":"    public void deleteTask(TaskList taskManager) throws MagpieException {","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"yingx9"},"content":"        InputValidator.validateTargetIsPresent();","lastModifiedDate":"2023-09-23"},{"lineNumber":127,"author":{"gitId":"yingx9"},"content":"        int index \u003d parseInt(splitInputs[1]);","lastModifiedDate":"2023-09-16"},{"lineNumber":128,"author":{"gitId":"yingx9"},"content":"        if (index \u003e\u003d 0) {","lastModifiedDate":"2023-09-16"},{"lineNumber":129,"author":{"gitId":"yingx9"},"content":"            TaskList.deleteTask(index - 1);","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":131,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":132,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":133,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":134,"author":{"gitId":"yingx9"},"content":"     * Checks if user input contains a target keyword.","lastModifiedDate":"2023-09-23"},{"lineNumber":135,"author":{"gitId":"yingx9"},"content":"     * Pass target keyword into \u003ccode\u003efindTask\u003c/code\u003e method to find tasks containing keyword.","lastModifiedDate":"2023-09-23"},{"lineNumber":136,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":137,"author":{"gitId":"yingx9"},"content":"     * @param taskManager taskManager TaskList object for task operations.","lastModifiedDate":"2023-09-23"},{"lineNumber":138,"author":{"gitId":"yingx9"},"content":"     * @throws MagpieException if target keyword is missing.","lastModifiedDate":"2023-09-23"},{"lineNumber":139,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":140,"author":{"gitId":"yingx9"},"content":"    public void findTask(TaskList taskManager) throws MagpieException {","lastModifiedDate":"2023-09-23"},{"lineNumber":141,"author":{"gitId":"yingx9"},"content":"        InputValidator.validateTargetIsPresent();","lastModifiedDate":"2023-09-23"},{"lineNumber":142,"author":{"gitId":"yingx9"},"content":"        String keyword \u003d splitInputs[1];","lastModifiedDate":"2023-09-23"},{"lineNumber":143,"author":{"gitId":"yingx9"},"content":"        TaskList.findTask(keyword);","lastModifiedDate":"2023-09-23"},{"lineNumber":144,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":145,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":146,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":147,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":148,"author":{"gitId":"yingx9"},"content":"     * Process \u003ccode\u003ecommand\u003c/code\u003e by matching it to a \u003ccode\u003eSwitch case\u003c/code\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":149,"author":{"gitId":"yingx9"},"content":"     * and calling its respective methods to execute command.","lastModifiedDate":"2023-09-23"},{"lineNumber":150,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":151,"author":{"gitId":"yingx9"},"content":"     * @param taskManager taskManager TaskList object for task operations.","lastModifiedDate":"2023-09-23"},{"lineNumber":152,"author":{"gitId":"yingx9"},"content":"     * @throws MagpieException if command does not match any of the cases.","lastModifiedDate":"2023-09-23"},{"lineNumber":153,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":154,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":155,"author":{"gitId":"yingx9"},"content":"    public void processCommand(TaskList taskManager) throws MagpieException {","lastModifiedDate":"2023-09-22"},{"lineNumber":156,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":157,"author":{"gitId":"yingx9"},"content":"        switch (command) {","lastModifiedDate":"2023-09-09"},{"lineNumber":158,"author":{"gitId":"yingx9"},"content":"        case \"list\":","lastModifiedDate":"2023-09-09"},{"lineNumber":159,"author":{"gitId":"yingx9"},"content":"            TaskList.listTasks();","lastModifiedDate":"2023-09-22"},{"lineNumber":160,"author":{"gitId":"yingx9"},"content":"            break;","lastModifiedDate":"2023-09-09"},{"lineNumber":161,"author":{"gitId":"yingx9"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-09"},{"lineNumber":162,"author":{"gitId":"yingx9"},"content":"            manageTodo(taskManager);","lastModifiedDate":"2023-09-09"},{"lineNumber":163,"author":{"gitId":"yingx9"},"content":"            break;","lastModifiedDate":"2023-09-09"},{"lineNumber":164,"author":{"gitId":"yingx9"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-09"},{"lineNumber":165,"author":{"gitId":"yingx9"},"content":"            manageDeadline(taskManager);","lastModifiedDate":"2023-09-09"},{"lineNumber":166,"author":{"gitId":"yingx9"},"content":"            break;","lastModifiedDate":"2023-09-09"},{"lineNumber":167,"author":{"gitId":"yingx9"},"content":"        case \"event\":","lastModifiedDate":"2023-09-09"},{"lineNumber":168,"author":{"gitId":"yingx9"},"content":"            manageEvent(taskManager);","lastModifiedDate":"2023-09-09"},{"lineNumber":169,"author":{"gitId":"yingx9"},"content":"            break;","lastModifiedDate":"2023-09-09"},{"lineNumber":170,"author":{"gitId":"yingx9"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-09"},{"lineNumber":171,"author":{"gitId":"yingx9"},"content":"            markOrUnmarkTask(taskManager, true);","lastModifiedDate":"2023-09-09"},{"lineNumber":172,"author":{"gitId":"yingx9"},"content":"            break;","lastModifiedDate":"2023-09-09"},{"lineNumber":173,"author":{"gitId":"yingx9"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-09"},{"lineNumber":174,"author":{"gitId":"yingx9"},"content":"            markOrUnmarkTask(taskManager, false);","lastModifiedDate":"2023-09-09"},{"lineNumber":175,"author":{"gitId":"yingx9"},"content":"            break;","lastModifiedDate":"2023-09-09"},{"lineNumber":176,"author":{"gitId":"yingx9"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-16"},{"lineNumber":177,"author":{"gitId":"yingx9"},"content":"            deleteTask(taskManager);","lastModifiedDate":"2023-09-16"},{"lineNumber":178,"author":{"gitId":"yingx9"},"content":"            break;","lastModifiedDate":"2023-09-16"},{"lineNumber":179,"author":{"gitId":"yingx9"},"content":"        case \"find\":","lastModifiedDate":"2023-09-23"},{"lineNumber":180,"author":{"gitId":"yingx9"},"content":"            findTask(taskManager);","lastModifiedDate":"2023-09-23"},{"lineNumber":181,"author":{"gitId":"yingx9"},"content":"            break;","lastModifiedDate":"2023-09-23"},{"lineNumber":182,"author":{"gitId":"yingx9"},"content":"        default:","lastModifiedDate":"2023-09-09"},{"lineNumber":183,"author":{"gitId":"yingx9"},"content":"            throw new MagpieException(\"Please enter a valid command!\");","lastModifiedDate":"2023-09-23"},{"lineNumber":184,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":185,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":186,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":187,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":188,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":189,"author":{"gitId":"yingx9"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"yingx9":189}},{"path":"src/main/java/magpie/input/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yingx9"},"content":"package magpie.input;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"yingx9"},"content":"import magpie.exceptions.MagpieException;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"yingx9"},"content":"import magpie.task.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"yingx9"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"yingx9"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"yingx9"},"content":" * \u003cb\u003eUi\u003c/b\u003e class is responsible for initializing a \u003ccode\u003escanner\u003c/code\u003e list to get user input.\u003cbr\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"yingx9"},"content":" * Contains methods to print messages such as logo and bye, and parse input by calling \u003ccode\u003eParser\u003c/code\u003e methods.","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"yingx9"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"yingx9"},"content":"public class Ui {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"yingx9"},"content":"    private static final String LINE \u003d \"\\n____________________________________________________________\";","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"yingx9"},"content":"    private static Scanner scanInput;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"yingx9"},"content":"     * Constructor to initialize \u003ccode\u003eScanner\u003c/code\u003e for user input.","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"yingx9"},"content":"    public Ui() {","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"yingx9"},"content":"        scanInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"yingx9"},"content":"     * Reads user input until \u003ccode\u003ebye\u003c/code\u003e is given and initializes a \u003ccode\u003eParser\u003c/code\u003e to process each input.","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"yingx9"},"content":"     * Prints error messages if \u003ccode\u003eMagpieException\u003c/code\u003e is caught.","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"yingx9"},"content":"     * @param taskManager TaskList object for task operations.","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"yingx9"},"content":"    public static void processUserInput(TaskList taskManager) {","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"yingx9"},"content":"        String input \u003d \"\";","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"yingx9"},"content":"        input \u003d scanInput.nextLine();","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"yingx9"},"content":"        while (!input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"yingx9"},"content":"            Parser userInput \u003d new Parser(input);","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"yingx9"},"content":"            try{","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"yingx9"},"content":"                userInput.processCommand(taskManager);","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"yingx9"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"yingx9"},"content":"            catch (MagpieException e){","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"yingx9"},"content":"                System.out.println(e.getErrorMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"yingx9"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"yingx9"},"content":"            input \u003d scanInput.nextLine();","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":51,"author":{"gitId":"yingx9"},"content":"     * Displays MAGPIE logo on execution.","lastModifiedDate":"2023-09-23"},{"lineNumber":52,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":53,"author":{"gitId":"yingx9"},"content":"    public static void printLogo() {","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"yingx9"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"yingx9"},"content":"        System.out.println(\" __  __          _____ _____ _____ ______ \");","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"yingx9"},"content":"        System.out.println(\"|  \\\\/  |   /\\\\   / ____|  __ \\\\_   _|  ____|\");","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"yingx9"},"content":"        System.out.println(\"| \\\\  / |  /  \\\\ | |  __| |__) || | | |__   \");","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"yingx9"},"content":"        System.out.println(\"| |\\\\/| | / /\\\\ \\\\| | |_ |  ___/ | | |  __|  \");","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"yingx9"},"content":"        System.out.println(\"| |  | |/ ____ \\\\ |__| | |    _| |_| |____ \");","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"yingx9"},"content":"        System.out.println(\"|_|  |_/_/    \\\\_\\\\_____|_|   |_____|______|\");","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"yingx9"},"content":"        System.out.println(\"\\nHello! I\u0027m Magpie :)\");","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"yingx9"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"yingx9"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":67,"author":{"gitId":"yingx9"},"content":"     * Displays BYE message when program exits.","lastModifiedDate":"2023-09-23"},{"lineNumber":68,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":69,"author":{"gitId":"yingx9"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"yingx9"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"yingx9"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"yingx9"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"yingx9"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"yingx9":74}},{"path":"src/main/java/magpie/input/inputValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yingx9"},"content":"package magpie.input;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"yingx9"},"content":"import magpie.exceptions.MagpieException;","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"yingx9"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"yingx9"},"content":" * \u003cb\u003eInputValidator\u003c/b\u003e class is responsible for validating parsed user input for each command e.g adding Deadline.\u003cbr\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"yingx9"},"content":" * Ensures that the necessary arguments are present \u003ci\u003e(e.g /by)\u003c/i\u003e and \u003ccode\u003eint\u003c/code\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"yingx9"},"content":" * can be parsed from \u003ccode\u003eString\u003c/code\u003e.\u003cbr\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"yingx9"},"content":" * Throws \u003ccode\u003eMagpieException\u003c/code\u003e if validation fails.","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"yingx9"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"yingx9"},"content":"public class InputValidator {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"yingx9"},"content":"     * Validates user input for adding a \u003ccode\u003eTodo\u003c/code\u003e Task by checking number of arguments.","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"yingx9"},"content":"     * @throws MagpieException if splitInputs.length \u003c\u003d 1.","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"yingx9"},"content":"    public static void validateTodo() throws MagpieException {","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"yingx9"},"content":"        if (Parser.splitInputs.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"yingx9"},"content":"            throw new MagpieException(\"Please provide a description for your task!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"yingx9"},"content":"     * Validates user input for adding a \u003ccode\u003eDeadline\u003c/code\u003e Task by checking number of arguments and if \"/by\" was","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"yingx9"},"content":"     * given.","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"yingx9"},"content":"     * @throws MagpieException if splitInputs.length \u003c\u003d 3 or if \"/by\" is missing.","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"yingx9"},"content":"    public static void validateDeadline() throws MagpieException {","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"yingx9"},"content":"        if (Parser.splitInputs.length \u003c\u003d 3) {","lastModifiedDate":"2023-09-23"},{"lineNumber":34,"author":{"gitId":"yingx9"},"content":"            throw new MagpieException(\"Looks like you\u0027re missing an argument. Specify a description and /by deadline!\");","lastModifiedDate":"2023-09-23"},{"lineNumber":35,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-23"},{"lineNumber":36,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":37,"author":{"gitId":"yingx9"},"content":"        boolean hasBy \u003d Parser.arguments.contains(\"/by\");","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"yingx9"},"content":"        if (!hasBy) {","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"yingx9"},"content":"            throw new MagpieException(\"Please specify a deadline using /by!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":45,"author":{"gitId":"yingx9"},"content":"     * Validates user input for adding a \u003ccode\u003eEvent\u003c/code\u003e Task by checking number of arguments,","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"yingx9"},"content":"     * and if \"/from\" and \"/to\" was given.","lastModifiedDate":"2023-09-23"},{"lineNumber":47,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":48,"author":{"gitId":"yingx9"},"content":"     * @throws MagpieException if splitInputs.length \u003c\u003d 5 or if \"/from\" or \"/to\" is missing.","lastModifiedDate":"2023-09-23"},{"lineNumber":49,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":51,"author":{"gitId":"yingx9"},"content":"    public static void validateEvent() throws MagpieException {","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":53,"author":{"gitId":"yingx9"},"content":"        if (Parser.splitInputs.length \u003c\u003d 5) {","lastModifiedDate":"2023-09-23"},{"lineNumber":54,"author":{"gitId":"yingx9"},"content":"            throw new MagpieException(\"Looks like you\u0027re missing an argument. Specify a description, from and to!\");","lastModifiedDate":"2023-09-23"},{"lineNumber":55,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-23"},{"lineNumber":56,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":57,"author":{"gitId":"yingx9"},"content":"        boolean hasFrom \u003d Parser.arguments.contains(\"/from\");","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"yingx9"},"content":"        boolean hasTo \u003d Parser.arguments.contains(\"/to\");","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"yingx9"},"content":"        if(!hasFrom \u0026\u0026 !hasTo){","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"yingx9"},"content":"            throw new MagpieException(\"Please specify starting and ending times using /from and /to!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"yingx9"},"content":"        else if (!hasFrom) {","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"yingx9"},"content":"            throw new MagpieException(\"Please specify a starting time using /from!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"yingx9"},"content":"        else if (!hasTo) {","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"yingx9"},"content":"            throw new MagpieException(\"Please specify a ending time using /to!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":74,"author":{"gitId":"yingx9"},"content":"     * Validate user input contains exactly one target by checking if number of arguments is 2.","lastModifiedDate":"2023-09-23"},{"lineNumber":75,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":76,"author":{"gitId":"yingx9"},"content":"     * @throws MagpieException if splitInputs.length !\u003d 2","lastModifiedDate":"2023-09-23"},{"lineNumber":77,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":78,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":79,"author":{"gitId":"yingx9"},"content":"    public static void validateTargetIsPresent() throws MagpieException {","lastModifiedDate":"2023-09-23"},{"lineNumber":80,"author":{"gitId":"yingx9"},"content":"        if (Parser.splitInputs.length !\u003d 2) {","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"yingx9"},"content":"            throw new MagpieException(\"Please provide one target! e.g delete 2 or find book\");","lastModifiedDate":"2023-09-23"},{"lineNumber":82,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":86,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":87,"author":{"gitId":"yingx9"},"content":"     * Validate if given String can be parsed into an Integer.","lastModifiedDate":"2023-09-23"},{"lineNumber":88,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":89,"author":{"gitId":"yingx9"},"content":"     * @param input \u003ccode\u003eString\u003c/code\u003e input to be validated.","lastModifiedDate":"2023-09-23"},{"lineNumber":90,"author":{"gitId":"yingx9"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if input can be parsed, otherwise \u003ccode\u003efalse\u003c/code\u003e.","lastModifiedDate":"2023-09-23"},{"lineNumber":91,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":92,"author":{"gitId":"yingx9"},"content":"    public static boolean isValidInt(String input) {","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"yingx9"},"content":"        int number \u003d -1;","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"yingx9"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"yingx9"},"content":"            number \u003d Integer.parseInt(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"yingx9"},"content":"            return true;","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"yingx9"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"yingx9"},"content":"            System.out.println(input + \" is not a valid integer!\");","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"yingx9"},"content":"            return false;","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":104,"author":{"gitId":"yingx9"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"yingx9":104}},{"path":"src/main/java/magpie/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yingx9"},"content":"package magpie.task;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"yingx9"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":3,"author":{"gitId":"yingx9"},"content":" * Represents a \u003cb\u003eDeadline\u003c/b\u003e Task with \u003ccode\u003edescription\u003c/code\u003e and deadline \u003ccode\u003e/by\u003c/code\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"yingx9"},"content":" * \u003ci\u003eExample: return book /by 2pm\u003c/i\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"yingx9"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"yingx9"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"yingx9"},"content":"    protected String by;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"yingx9"},"content":"     * Constructor for \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003eisDone\u003c/code\u003e, and \u003ccode\u003eby\u003c/code\u003e.","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"yingx9"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"yingx9"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"yingx9"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"yingx9"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"yingx9"},"content":"    @Override","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"yingx9"},"content":"    public String getTextToWrite() {","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"yingx9"},"content":"        return \"D | \" + parseBooleanToInt(isDone) + \" | \" + description + \" | \" + by;","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"yingx9"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"yingx9"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"yingx9"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"yingx9"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"yingx9"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"yingx9":37}},{"path":"src/main/java/magpie/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yingx9"},"content":"package magpie.task;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"yingx9"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":3,"author":{"gitId":"yingx9"},"content":" * Represents an \u003cb\u003eEvent\u003c/b\u003e Task with \u003ccode\u003edescription\u003c/code\u003e and specified timings using \u003ccode\u003e/from\u003c/code\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"yingx9"},"content":" * and \u003ccode\u003e/to\u003c/code\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"yingx9"},"content":" * \u003ci\u003eExample: Math exam /from 2pm /to 4pm\u003c/i\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"yingx9"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"yingx9"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"yingx9"},"content":"    protected String from;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"yingx9"},"content":"    protected String to;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"yingx9"},"content":"     * Constructor for \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003eisDone\u003c/code\u003e, \u003ccode\u003efrom\u003c/code\u003e, and \u003ccode\u003eto\u003c/code\u003e.","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"yingx9"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"yingx9"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"yingx9"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"yingx9"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"yingx9"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"yingx9"},"content":"    @Override","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"yingx9"},"content":"    public String getTextToWrite() {","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"yingx9"},"content":"        return \"E | \" + parseBooleanToInt(isDone) + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"yingx9"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"yingx9"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"yingx9"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"yingx9"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"yingx9"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"yingx9":38}},{"path":"src/main/java/magpie/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yingx9"},"content":"package magpie.task;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"yingx9"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"yingx9"},"content":" * Represents a \u003cb\u003eTask\u003c/b\u003e containing \u003ccode\u003edescription\u003c/code\u003e and completion status with \u003ccode\u003eisDone\u003c/code\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"yingx9"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"yingx9"},"content":"public class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yingx9"},"content":"    protected String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"yingx9"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yingx9"},"content":"    protected String textToWrite;","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"yingx9"},"content":"     * Constructor for \u003ccode\u003edescription\u003c/code\u003e and \u003ccode\u003eisDone\u003c/code\u003e.","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"yingx9"},"content":"     * @param description description of Task object.","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"yingx9"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"yingx9"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"yingx9"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"yingx9"},"content":"     * Returns status icon \"X\" if task is marked. \u003cbr\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"yingx9"},"content":"     * If the task is not marked, a blank \" \" is returned.","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"yingx9"},"content":"     * @return Status Icon \"X\" or \" \".","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"yingx9"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"yingx9"},"content":"        String done \u003d \" \";","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yingx9"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"yingx9"},"content":"            done \u003d \"X\";","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"yingx9"},"content":"        return done;","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":40,"author":{"gitId":"yingx9"},"content":"     * Sets isDone to indicate Task is marked or not marked.","lastModifiedDate":"2023-09-23"},{"lineNumber":41,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":42,"author":{"gitId":"yingx9"},"content":"     * @param done Boolean value to indicate marked or unmarked.","lastModifiedDate":"2023-09-23"},{"lineNumber":43,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":44,"author":{"gitId":"yingx9"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"yingx9"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"yingx9"},"content":"     * Parse \u003ccode\u003etrue\u003c/code\u003e to Integer value \u003ccode\u003e1\u003c/code\u003e.","lastModifiedDate":"2023-09-23"},{"lineNumber":51,"author":{"gitId":"yingx9"},"content":"     * Parse \u003ccode\u003efalse\u003c/code\u003e to Integer value \u003ccode\u003e0\u003c/code\u003e.","lastModifiedDate":"2023-09-23"},{"lineNumber":52,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":53,"author":{"gitId":"yingx9"},"content":"     * @param input Boolean value to be parsed into an Integer.","lastModifiedDate":"2023-09-23"},{"lineNumber":54,"author":{"gitId":"yingx9"},"content":"     * @return Parsed Integer value.","lastModifiedDate":"2023-09-23"},{"lineNumber":55,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":56,"author":{"gitId":"yingx9"},"content":"    public static int parseBooleanToInt(boolean input) {","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"yingx9"},"content":"        if (input){","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"yingx9"},"content":"            return 1;","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"yingx9"},"content":"        else{","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"yingx9"},"content":"            return 0;","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":67,"author":{"gitId":"yingx9"},"content":"     * Returns formatted line containing details of Task object to be written to data file.","lastModifiedDate":"2023-09-23"},{"lineNumber":68,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":69,"author":{"gitId":"yingx9"},"content":"     * @return Line to be written to data file.","lastModifiedDate":"2023-09-23"},{"lineNumber":70,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":71,"author":{"gitId":"yingx9"},"content":"    public String getTextToWrite() {","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"yingx9"},"content":"        return this.textToWrite;","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":74,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":75,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":76,"author":{"gitId":"yingx9"},"content":"     * Returns formatted line containing Task Status Icon and Description to be printed to User.","lastModifiedDate":"2023-09-23"},{"lineNumber":77,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":78,"author":{"gitId":"yingx9"},"content":"     * @return Line to be printed.","lastModifiedDate":"2023-09-23"},{"lineNumber":79,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":80,"author":{"gitId":"yingx9"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"yingx9"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"yingx9"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yingx9":85}},{"path":"src/main/java/magpie/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yingx9"},"content":"package magpie.task;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"yingx9"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"yingx9"},"content":"import magpie.files.Storage;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"yingx9"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"yingx9"},"content":" * \u003cb\u003eTaskList\u003c/b\u003e class is responsible for initializing a \u003ccode\u003etasks\u003c/code\u003e list to track Task objects.\u003cbr\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"yingx9"},"content":" * Contains methods to manage Tasks such as \u003ccode\u003elist\u003c/code\u003e, \u003ccode\u003eadd\u003c/code\u003e, \u003ccode\u003edelete\u003c/code\u003e,","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"yingx9"},"content":" * \u003ccode\u003efind\u003c/code\u003e, and \u003ccode\u003emark\u003c/code\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"yingx9"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"yingx9"},"content":"public class TaskList {","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"yingx9"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"yingx9"},"content":"    private static int taskCount;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"yingx9"},"content":"     * Constructor for \u003ccode\u003etaskCount\u003c/code\u003e and to initialize \u003ccode\u003eArrayList\u003c/code\u003e for \u003ccode\u003etasks\u003c/code\u003e.","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"yingx9"},"content":"    public TaskList()  {","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"yingx9"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"yingx9"},"content":"        taskCount \u003d 0;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"yingx9"},"content":"     * Displays list of current \u003ccode\u003eTask\u003c/code\u003e objects in \u003ccode\u003etasks\u003c/code\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"yingx9"},"content":"    public static void listTasks() {","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"yingx9"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"You have no tasks in your list :)\");","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"yingx9"},"content":"        } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"yingx9"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"yingx9"},"content":"                Task item \u003d tasks.get(i);","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"yingx9"},"content":"                System.out.println(i + 1 + \". \" + item.toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"yingx9"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":45,"author":{"gitId":"yingx9"},"content":"     * Displays valid indexes (if any) for the user when \u003ccode\u003eIndexOutOfBoundsException\u003c/code\u003e is caught.","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":47,"author":{"gitId":"yingx9"},"content":"    public static void displayIndexError() {","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"yingx9"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"yingx9"},"content":"            System.out.print(\"Wow! Looks like you have no tasks to manage. Add one first!\\n\");","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"yingx9"},"content":"        } else {","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"yingx9"},"content":"            System.out.print(\"Your input was not a valid index! Please choose from 1 to \" + taskCount + \"\\n\");","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":55,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":56,"author":{"gitId":"yingx9"},"content":"     * Initializes a new \u003ccode\u003eTodo\u003c/code\u003e object with given parameters.","lastModifiedDate":"2023-09-23"},{"lineNumber":57,"author":{"gitId":"yingx9"},"content":"     * Pass new \u003ccode\u003eTodo\u003c/code\u003e object to \u003ccode\u003eaddTask\u003c/code\u003e method.","lastModifiedDate":"2023-09-23"},{"lineNumber":58,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":59,"author":{"gitId":"yingx9"},"content":"     * @param isMark true or false value indicating mark or unmark.","lastModifiedDate":"2023-09-23"},{"lineNumber":60,"author":{"gitId":"yingx9"},"content":"     * @param description description of task.","lastModifiedDate":"2023-09-23"},{"lineNumber":61,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":62,"author":{"gitId":"yingx9"},"content":"    public static void addTodo(boolean isMark, String description) {","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"yingx9"},"content":"        Task newTask \u003d new Todo(description);","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"yingx9"},"content":"        newTask.setDone(isMark);","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"yingx9"},"content":"        addTask(newTask);","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":70,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":71,"author":{"gitId":"yingx9"},"content":"     * Initializes a new \u003ccode\u003eDeadline\u003c/code\u003e object with given parameters.","lastModifiedDate":"2023-09-23"},{"lineNumber":72,"author":{"gitId":"yingx9"},"content":"     * Pass new \u003ccode\u003eDeadline\u003c/code\u003e object to \u003ccode\u003eaddTask\u003c/code\u003e method.","lastModifiedDate":"2023-09-23"},{"lineNumber":73,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":74,"author":{"gitId":"yingx9"},"content":"     * @param isMark true or false value indicating mark or unmark.","lastModifiedDate":"2023-09-23"},{"lineNumber":75,"author":{"gitId":"yingx9"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-09-23"},{"lineNumber":76,"author":{"gitId":"yingx9"},"content":"     * @param by By deadline of task.","lastModifiedDate":"2023-09-23"},{"lineNumber":77,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":78,"author":{"gitId":"yingx9"},"content":"    public static void addDeadline(boolean isMark, String description, String by) {","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"yingx9"},"content":"        Task newTask \u003d new Deadline(description, by.trim());","lastModifiedDate":"2023-09-16"},{"lineNumber":80,"author":{"gitId":"yingx9"},"content":"        newTask.setDone(isMark);","lastModifiedDate":"2023-09-16"},{"lineNumber":81,"author":{"gitId":"yingx9"},"content":"        addTask(newTask);","lastModifiedDate":"2023-09-16"},{"lineNumber":82,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":83,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":85,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":86,"author":{"gitId":"yingx9"},"content":"     * Initializes a new \u003ccode\u003eEvent\u003c/code\u003e object with given parameters.","lastModifiedDate":"2023-09-23"},{"lineNumber":87,"author":{"gitId":"yingx9"},"content":"     * Pass new \u003ccode\u003eEvent\u003c/code\u003e object to \u003ccode\u003eaddTask\u003c/code\u003e method.","lastModifiedDate":"2023-09-23"},{"lineNumber":88,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":89,"author":{"gitId":"yingx9"},"content":"     * @param isMark true or false value indicating mark or unmark.","lastModifiedDate":"2023-09-23"},{"lineNumber":90,"author":{"gitId":"yingx9"},"content":"     * @param description Description of event.","lastModifiedDate":"2023-09-23"},{"lineNumber":91,"author":{"gitId":"yingx9"},"content":"     * @param from Starting time of event.","lastModifiedDate":"2023-09-23"},{"lineNumber":92,"author":{"gitId":"yingx9"},"content":"     * @param to Ending time of event.","lastModifiedDate":"2023-09-23"},{"lineNumber":93,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":94,"author":{"gitId":"yingx9"},"content":"    public static void addEvent(boolean isMark, String description, String from, String to) {","lastModifiedDate":"2023-09-16"},{"lineNumber":95,"author":{"gitId":"yingx9"},"content":"        Task newTask \u003d new Event(description, from.trim(), to.trim());","lastModifiedDate":"2023-09-16"},{"lineNumber":96,"author":{"gitId":"yingx9"},"content":"        newTask.setDone(isMark);","lastModifiedDate":"2023-09-16"},{"lineNumber":97,"author":{"gitId":"yingx9"},"content":"        addTask(newTask);","lastModifiedDate":"2023-09-16"},{"lineNumber":98,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":99,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":100,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":101,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":102,"author":{"gitId":"yingx9"},"content":"     * Adds a \u003ccode\u003eTask\u003c/code\u003e object to \u003ccode\u003etasks\u003c/code\u003e list and prints success message.","lastModifiedDate":"2023-09-23"},{"lineNumber":103,"author":{"gitId":"yingx9"},"content":"     * Calls \u003ccode\u003eStorage\u003c/code\u003e method to append task details to file.","lastModifiedDate":"2023-09-23"},{"lineNumber":104,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":105,"author":{"gitId":"yingx9"},"content":"     * @param t Task object to be added to list.","lastModifiedDate":"2023-09-23"},{"lineNumber":106,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":107,"author":{"gitId":"yingx9"},"content":"    public static void addTask(Task t) {","lastModifiedDate":"2023-09-16"},{"lineNumber":108,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"yingx9"},"content":"        tasks.add(t);","lastModifiedDate":"2023-09-16"},{"lineNumber":110,"author":{"gitId":"yingx9"},"content":"        taskCount++;","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"yingx9"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"yingx9"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"yingx9"},"content":"        System.out.println(\"  \" + t.toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"yingx9"},"content":"        System.out.println(\"Now you have \" + taskCount + \" task(s) in the list.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"yingx9"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"yingx9"},"content":"        Storage.appendTaskToFile(t.getTextToWrite());","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":120,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":121,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":122,"author":{"gitId":"yingx9"},"content":"     * Deletes a \u003ccode\u003eTask\u003c/code\u003e object from \u003ccode\u003etasks\u003c/code\u003e list and prints success message.","lastModifiedDate":"2023-09-23"},{"lineNumber":123,"author":{"gitId":"yingx9"},"content":"     * Calls \u003ccode\u003eStorage\u003c/code\u003e method to delete task details from file.","lastModifiedDate":"2023-09-23"},{"lineNumber":124,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":125,"author":{"gitId":"yingx9"},"content":"     * @param index Index of task to be deleted.","lastModifiedDate":"2023-09-23"},{"lineNumber":126,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":127,"author":{"gitId":"yingx9"},"content":"    public static void deleteTask(int index) {","lastModifiedDate":"2023-09-16"},{"lineNumber":128,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":129,"author":{"gitId":"yingx9"},"content":"        try{","lastModifiedDate":"2023-09-16"},{"lineNumber":130,"author":{"gitId":"yingx9"},"content":"            Task t \u003d tasks.get(index);","lastModifiedDate":"2023-09-16"},{"lineNumber":131,"author":{"gitId":"yingx9"},"content":"            tasks.remove(index);","lastModifiedDate":"2023-09-16"},{"lineNumber":132,"author":{"gitId":"yingx9"},"content":"            taskCount--;","lastModifiedDate":"2023-09-16"},{"lineNumber":133,"author":{"gitId":"yingx9"},"content":"            Storage.deleteTaskFromFile(t.getTextToWrite());","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-16"},{"lineNumber":135,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2023-09-16"},{"lineNumber":136,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"  \" + t);","lastModifiedDate":"2023-09-16"},{"lineNumber":137,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"Now you have \" + taskCount + \" task(s) in the list.\");","lastModifiedDate":"2023-09-16"},{"lineNumber":138,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-16"},{"lineNumber":139,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":140,"author":{"gitId":"yingx9"},"content":"        catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":141,"author":{"gitId":"yingx9"},"content":"            displayIndexError();","lastModifiedDate":"2023-09-16"},{"lineNumber":142,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":143,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":144,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":145,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":146,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":147,"author":{"gitId":"yingx9"},"content":"     * Finds a \u003ccode\u003eTask\u003c/code\u003e object from \u003ccode\u003etasks\u003c/code\u003e list and prints found task details (if any).","lastModifiedDate":"2023-09-23"},{"lineNumber":148,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":149,"author":{"gitId":"yingx9"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2023-09-23"},{"lineNumber":150,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":151,"author":{"gitId":"yingx9"},"content":"    public static void findTask(String keyword) {","lastModifiedDate":"2023-09-23"},{"lineNumber":152,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":153,"author":{"gitId":"yingx9"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-23"},{"lineNumber":154,"author":{"gitId":"yingx9"},"content":"        System.out.println(\"Finding tasks with keyword: \" + keyword + \".....\\n\");","lastModifiedDate":"2023-09-23"},{"lineNumber":155,"author":{"gitId":"yingx9"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-09-23"},{"lineNumber":156,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":157,"author":{"gitId":"yingx9"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++ ) {","lastModifiedDate":"2023-09-23"},{"lineNumber":158,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":159,"author":{"gitId":"yingx9"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2023-09-23"},{"lineNumber":160,"author":{"gitId":"yingx9"},"content":"            String taskDescription \u003d t.description;","lastModifiedDate":"2023-09-23"},{"lineNumber":161,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":162,"author":{"gitId":"yingx9"},"content":"            if (taskDescription.contains(keyword)) {","lastModifiedDate":"2023-09-23"},{"lineNumber":163,"author":{"gitId":"yingx9"},"content":"                System.out.println((count+1) + \". \" + t.toString());","lastModifiedDate":"2023-09-23"},{"lineNumber":164,"author":{"gitId":"yingx9"},"content":"                count++;","lastModifiedDate":"2023-09-23"},{"lineNumber":165,"author":{"gitId":"yingx9"},"content":"            }","lastModifiedDate":"2023-09-23"},{"lineNumber":166,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-23"},{"lineNumber":167,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":168,"author":{"gitId":"yingx9"},"content":"        if (count \u003d\u003d 0){","lastModifiedDate":"2023-09-23"},{"lineNumber":169,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"No task(s) were found with keyword: \" + keyword + \"\\n\");","lastModifiedDate":"2023-09-23"},{"lineNumber":170,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-23"},{"lineNumber":171,"author":{"gitId":"yingx9"},"content":"        else{","lastModifiedDate":"2023-09-23"},{"lineNumber":172,"author":{"gitId":"yingx9"},"content":"            System.out.println(count + \" task(s) were found with keyword: \" + keyword + \"\\n\");","lastModifiedDate":"2023-09-23"},{"lineNumber":173,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-23"},{"lineNumber":174,"author":{"gitId":"yingx9"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-23"},{"lineNumber":175,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":176,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":177,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":178,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":179,"author":{"gitId":"yingx9"},"content":"     * Mark or Unmark a \u003ccode\u003eTask\u003c/code\u003e object in \u003ccode\u003etasks\u003c/code\u003e list based on boolean value given.","lastModifiedDate":"2023-09-23"},{"lineNumber":180,"author":{"gitId":"yingx9"},"content":"     * Prints success message if there were no errors.","lastModifiedDate":"2023-09-23"},{"lineNumber":181,"author":{"gitId":"yingx9"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":182,"author":{"gitId":"yingx9"},"content":"     * @param index Index of task.","lastModifiedDate":"2023-09-23"},{"lineNumber":183,"author":{"gitId":"yingx9"},"content":"     * @param isDone true to indicate a Mark operation, false to indicate Unmark operation.","lastModifiedDate":"2023-09-23"},{"lineNumber":184,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":185,"author":{"gitId":"yingx9"},"content":"    public static void markTask(int index, boolean isDone) {","lastModifiedDate":"2023-09-16"},{"lineNumber":186,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":187,"author":{"gitId":"yingx9"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":188,"author":{"gitId":"yingx9"},"content":"            Task item \u003d tasks.get(index);","lastModifiedDate":"2023-09-16"},{"lineNumber":189,"author":{"gitId":"yingx9"},"content":"            String oldLine \u003d item.getTextToWrite();","lastModifiedDate":"2023-09-16"},{"lineNumber":190,"author":{"gitId":"yingx9"},"content":"            item.setDone(isDone);","lastModifiedDate":"2023-09-09"},{"lineNumber":191,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":192,"author":{"gitId":"yingx9"},"content":"            if (isDone) {","lastModifiedDate":"2023-09-09"},{"lineNumber":193,"author":{"gitId":"yingx9"},"content":"                System.out.print(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":194,"author":{"gitId":"yingx9"},"content":"            } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":195,"author":{"gitId":"yingx9"},"content":"                System.out.print(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":196,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":197,"author":{"gitId":"yingx9"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":198,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"  \" + item);","lastModifiedDate":"2023-09-09"},{"lineNumber":199,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":200,"author":{"gitId":"yingx9"},"content":"            Storage.updateTaskInFile(oldLine, item.getTextToWrite());","lastModifiedDate":"2023-09-22"},{"lineNumber":201,"author":{"gitId":"yingx9"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":202,"author":{"gitId":"yingx9"},"content":"            displayIndexError();","lastModifiedDate":"2023-09-16"},{"lineNumber":203,"author":{"gitId":"yingx9"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":204,"author":{"gitId":"yingx9"},"content":"            displayIndexError();","lastModifiedDate":"2023-09-16"},{"lineNumber":205,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":206,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":207,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":208,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":209,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":210,"author":{"gitId":"yingx9"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"yingx9":210}},{"path":"src/main/java/magpie/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yingx9"},"content":"package magpie.task;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"yingx9"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"yingx9"},"content":" * Represents a \u003cb\u003eTodo\u003c/b\u003e Task with \u003ccode\u003edescription\u003c/code\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"yingx9"},"content":" * \u003ci\u003eExample: return book\u003c/i\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"yingx9"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"yingx9"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"yingx9"},"content":"     * Constructor for \u003ccode\u003edescription\u003c/code\u003e and \u003ccode\u003eisDone\u003c/code\u003e.","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"yingx9"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"yingx9"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"yingx9"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"yingx9"},"content":"    @Override","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"yingx9"},"content":"    public String getTextToWrite() {","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"yingx9"},"content":"        return \"T | \" + parseBooleanToInt(isDone) + \" | \" + description;","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"yingx9"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"yingx9"},"content":"    @Override","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"yingx9"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"yingx9"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"yingx9"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"yingx9":34}},{"path":"src/main/java/main/Magpie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yingx9"},"content":"package main;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"yingx9"},"content":"import magpie.files.Storage;","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"yingx9"},"content":"import magpie.input.Ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"yingx9"},"content":"import magpie.task.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"yingx9"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yingx9"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"yingx9"},"content":" * The main class of Magpie which initializes Storage, TaskList, and Ui objects.","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"yingx9"},"content":" * Loads data file to populate TaskList (if any).","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"yingx9"},"content":" * Runs and exits process when user is done.","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"yingx9"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"yingx9"},"content":"public class Magpie {","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yingx9"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"yingx9"},"content":"    private TaskList taskManager;","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"yingx9"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"yingx9"},"content":"     * Constructs Storage, TaskList, and Ui objects to prepare for execution and calls \u003ccode\u003eloadFile\u003c/code\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"yingx9"},"content":"     * to load tasks from data file.","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"yingx9"},"content":"    public Magpie() {","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"yingx9"},"content":"        taskManager \u003d new TaskList();","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"yingx9"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"yingx9"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"yingx9"},"content":"        storage.loadFile(taskManager);","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"yingx9"},"content":"     * Prints farewell message to user and writes current tasks in TaskList to data file.\u003cbr\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"yingx9"},"content":"    public void exit() {","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"yingx9"},"content":"        ui.printByeMessage();","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"yingx9"},"content":"        try{","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"yingx9"},"content":"            storage.saveToFile();","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"yingx9"},"content":"        catch (IOException e){","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"yingx9"},"content":"            System.out.println(\"Opps. File writing error!\");","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"yingx9"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":43,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":44,"author":{"gitId":"yingx9"},"content":"     * Prints \u003ccode\u003eMagpie\u003c/code\u003e Logo to welcome user and get user input.","lastModifiedDate":"2023-09-23"},{"lineNumber":45,"author":{"gitId":"yingx9"},"content":"     * Calls exit when user enters \"bye\".","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":47,"author":{"gitId":"yingx9"},"content":"    public void run() {","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"yingx9"},"content":"        ui.printLogo();","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"yingx9"},"content":"        ui.processUserInput(taskManager);","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"yingx9"},"content":"        exit();","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"yingx9"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"yingx9"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":55,"author":{"gitId":"yingx9"},"content":"     * Main method that calls Magpie Constructor and begins program execution.","lastModifiedDate":"2023-09-23"},{"lineNumber":56,"author":{"gitId":"yingx9"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":57,"author":{"gitId":"yingx9"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"yingx9"},"content":"        new Magpie().run();","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"yingx9"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"yingx9":61}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yingx9"},"content":"todo borrow book","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"yingx9"},"content":"list","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"yingx9"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"yingx9"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"yingx9"},"content":"mark 1","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"yingx9"},"content":"unmark 1","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"yingx9"},"content":"list","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"yingx9"},"content":"unmark 1","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"yingx9"},"content":"mark 2","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"yingx9"},"content":"unmark 2","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"yingx9"},"content":"mark 3","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"yingx9"},"content":"list","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"yingx9"},"content":"unmark 3","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"yingx9"},"content":"list","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"yingx9":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yingx9"},"content":"java -classpath ..\\bin Magpie \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"yingx9":1}}]
