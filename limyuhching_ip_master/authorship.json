[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"# Wenny Task Manager User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"Wenny is your friendly task manager that helps you keep track of your endless numbers of to do tasks, deadlines and events.  ","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"Notes about the command format:","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"1. Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"e.g. in todo DESCRIPTION, DESCRIPTION is a parameter which can be used as `todo Homework`.","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"2. Extraneous parameters for commands that do not take in parameters (such as list and bye) will be ignored.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"e.g. if the command specifies `list 123`, it will be interpreted as list.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"## List current tasks `list`","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"List all current tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"Format: `list`","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"## Exit the program `bye`","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"Exit the program.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"Format: `bye`","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"## Add a to-do task `todo`","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"Add to-do task into the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"Format: `list DESCRIPTION`","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"Example:","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"- `todo complete week 7 tasks`","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"- `todo sleep`","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"## Add a deadline task `deadline`","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"Add a task with a deadline.","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"Format: `deadline DESCRIPTION /by DEADLINE`","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"Example:","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"- `deadline complete week 8 tasks /by 12 Oct`.","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"## Add an event task `event`","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"Add an event into the task list.","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"Format: `event DESCRIPTION /from START_TIME /to END_TIME`.","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"Example:","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"- `event IA interview /from 7 Oct 2pm /to 7 Oct 4pm`.","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"## Mark a task as done `mark`","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"Mark a task on the task list as done.","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"Format: `mark TASK_NUMBER`.","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"Example:","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"- `mark 1`","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"## Mark a task as undone `unmark`","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"Mark a task on the task list as undone.","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"Format: `unmark TASK_NUMBER`.","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"Example:","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"- `unmark 1`.","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"limyuhching"},"content":"## Delete a task `delete`","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"Delete a task from the task list.","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"limyuhching"},"content":"Format: `delete TASK_NUMBER`.","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"limyuhching"},"content":"Example:","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"limyuhching"},"content":"- `delete 1`.","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"limyuhching"},"content":"## Find the tasks that matches a certain keyword `find`","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"limyuhching"},"content":"Find the tasks that matches a certain keyword .","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"limyuhching"},"content":"Format: `find KEYWORD`.","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"limyuhching"},"content":"Example:","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"limyuhching"},"content":"- `find John`.","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"limyuhching":67,"-":13}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":" * Execute commands from the user.","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"public class Command {","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"    private String command;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"    private String arg;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"    private boolean isExit;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"     * Constructor of a Command","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"     * @param command Command to be executed","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"     * @param arg Arguments of the given command","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"    public Command(String command, String arg) {","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"        this.arg \u003d arg;","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"    public void setExit(boolean exit) {","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"        isExit \u003d exit;","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"        return isExit;","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"     * Execute the command given by the user","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"     * Each command is handled by its corresponding method in {@code TaskList}. If there","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"     * is any changes to the list of tasks, it will be saved into the file through {@code Storage}.","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"     * Relevant information will be shown to the user through corresponding methods in {@code Ui}.","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"     * A custom exceptions will be thrown if an invalid command is received or an invalid argument of","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"     * the respective command.","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"     * @param taskList TaskList object that contains a list of Tasks","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"     * @param ui User interface object that handles the printing of information","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"     * @param storage Storage object that saves the updated list into filepath","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"     * @throws DukeException Custom Exception with customer error message","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException{","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"        switch(this.command) {","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"        case \"bye\":","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"            setExit(true);","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"            ui.showByeMessage();","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"        case \"list\":","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"            ui.showTasks(taskList);","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"        case \"mark\":","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"            try {","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"                taskList.markTask(this.arg, true);","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"                ui.showMark(taskList, this.arg, true);","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"                ui.showError(e);","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"        case \"unmark\":","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"            try {","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"                taskList.markTask(this.arg, false);","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"                ui.showMark(taskList, this.arg, false);","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"limyuhching"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"                ui.showError(e);","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"limyuhching"},"content":"        case \"todo\":","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"limyuhching"},"content":"            try {","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"limyuhching"},"content":"                taskList.addTodo(this.arg);","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"limyuhching"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"limyuhching"},"content":"                ui.showAddTask(taskList);","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"limyuhching"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"limyuhching"},"content":"                ui.showError(e);","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"limyuhching"},"content":"        case \"deadline\":","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"limyuhching"},"content":"            try {","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"limyuhching"},"content":"                taskList.addDeadline(this.arg);","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"limyuhching"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"limyuhching"},"content":"                ui.showAddTask(taskList);","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"limyuhching"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"limyuhching"},"content":"                ui.showError(e);","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"limyuhching"},"content":"        case \"event\":","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"limyuhching"},"content":"            try {","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"limyuhching"},"content":"                taskList.addEvent(this.arg);","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"limyuhching"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"limyuhching"},"content":"                ui.showAddTask(taskList);","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"limyuhching"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"limyuhching"},"content":"                ui.showError(e);","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"limyuhching"},"content":"        case \"delete\":","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"limyuhching"},"content":"            try {","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"limyuhching"},"content":"                Task removedTask \u003d taskList.deleteTask(this.arg);","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"limyuhching"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"limyuhching"},"content":"                ui.showDeleteTask(taskList, removedTask);","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"limyuhching"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"limyuhching"},"content":"                ui.showError(e);","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"limyuhching"},"content":"        case \"find\":","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"limyuhching"},"content":"            try {","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"limyuhching"},"content":"                ArrayList\u003cTask\u003e matchingTasks \u003d taskList.find(this.arg);","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"limyuhching"},"content":"                ui.showFind(matchingTasks);","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"limyuhching"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"limyuhching"},"content":"                ui.showError(e);","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"limyuhching"},"content":"        default: // Unknown command exception","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"limyuhching"},"content":"            throw new DukeException(\"Invalid input, please try again\");","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"limyuhching":119}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"    String by;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"        super(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"        return by;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"     * Returns the format of the task to be printed out to user","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"     * @return String representation of the task","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"     * Returns the format of the task to be saved into a file","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"     * @return String representation of the task","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"    public String toSave() {","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"        return \"D | \" + super.toSave() + \" | \" + by;","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"limyuhching":31}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":" * This is the main program of Duke.","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":" * Duke is a chatbot for user track tasks such as todos, deadlines and events.","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":" * User can add tasks, mark tasks as done, delete tasks or find tasks based on a keyword.","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":" * These tasks are automatically saved in a file in ./data/data.txt whenever an operation","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":" * on the TaskList is made. This file will be loaded on future start up of the chatbot","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":" *","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"    private Storage storage;","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"     * Constructor of Duke. Initialise User interface, Storage and TaskList instances.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"     * @param filePath Path to the file where tasks are to be loaded from and saved to.","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"        ui.showLoadingFile();","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"            ui.showFileLoaded();","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"            ui.showError(e);","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"     * To start up the chatbot.","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"     * A greetings will be printed on the command line interface and the chatbot will","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"     * await instructions from the user. The chatbot will run until an exit command is received.","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"     * Any exception during the operation will produce an error message to notify the user","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"    public void run() {","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"       Parser parser \u003d new Parser();","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"       ui.showStartMessage();","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"       boolean isExit \u003d false;","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"       while (!isExit) {","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"           try {","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"               String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"               Command c \u003d parser.parse(fullCommand);","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"               c.execute(taskList, ui, storage);","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"               isExit \u003d c.isExit();","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"           } catch (DukeException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"               ui.showError(e);","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"           }","lastModifiedDate":"2023-09-30"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"       }","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"       System.exit(0);","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"        new Duke(\"./data/data.txt\").run();","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"limyuhching":58,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":" * Custom Exception for Duke","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"    String errorMessage;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"     * Format error message for printing to command line interface.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"     * @return Return the error message of the specific exception in String format.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"    public String toString() {","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"        return errorMessage;","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"limyuhching":19}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"public class Event extends Task {","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"    String from;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"    String to;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"        super(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"        setFrom(from);","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"        setTo(to);","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"    public String getFrom() {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"        return from;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"    public String getTo() {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"        return to;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"    public void setTo(String to) {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"     * Returns the format of the task to be printed out to user","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"     * @return String representation of the task","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \", to: \" + to + \")\";","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"     * Returns the format of the task to be saved into a file","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"     * @return String representation of the task","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"    public String toSave() {","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"        return \"E | \" + super.toSave() + \" | \" + from + \" | \" + to;","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"limyuhching":45}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":" * Parser object that handles splitting of command line arguments given by the user.","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"public class Parser {","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"    public Parser() {","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"     * Split user input into command and argument of the command.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"     * @param fullCommand User input.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"     * @return Return a Command object for execution of the command.","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"    public Command parse(String fullCommand) {","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"        String[] substr \u003d fullCommand.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"        if (substr.length \u003d\u003d 1) {","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"            return new Command(substr[0], \"\");","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"        return new Command(substr[0], substr[1]);","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"limyuhching":22}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"import java.io.File;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":" * Storage object that handles loading and saving of tasks into specified file","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"public class Storage {","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"    private String filePath;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"         this.filePath \u003d filePath;","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"     * This method attempts to load pre-existing tasks from the file specified by","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"     * the filepath. It will read the text file line by line and extract the information","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"     * based on a format specified by the program.","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"     * @return A TaskList object that contains the tasks loaded from the file.","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"     * @throws DukeException If the file cannot be found or is corrupted.","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"                String[] lineTokens \u003d line.split(\"\\\\|\", 3);","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"                String taskType \u003d lineTokens[0].trim();","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"                String completionStatus \u003d lineTokens[1].trim();","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"                String description \u003d lineTokens[2].trim();","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"                switch (taskType) {","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"                case \"T\":","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"                    ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"                    allTasks.add(todo);","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"                    if (completionStatus.equals(\"1\")) {","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"                        todo.setDone(true);","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"                    }","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"                    break;","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"                case \"D\":","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"                    String[] deadlineTokens \u003d description.split(\"\\\\|\");","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"                    description \u003d deadlineTokens[0].trim();","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"                    String by \u003d deadlineTokens[1].trim();","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"                    Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"                    allTasks.add(deadline);","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"                    if (completionStatus.equals(\"1\")) {","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"                        deadline.setDone(true);","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"                    }","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"                    break;","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"                case \"E\":","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"                    String[] eventTokens \u003d description.split(\"\\\\|\");","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"                    description \u003d eventTokens[0].trim();","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"                    String from \u003d eventTokens[1].trim();","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"                    String to \u003d eventTokens[2].trim();","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"                    Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"                    allTasks.add(event);","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"                    if (completionStatus.equals(\"1\")) {","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"                        event.setDone(true);","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"                    }","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"                    break;","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"                default:","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"limyuhching"},"content":"                    System.out.println(\"\\tUnknown task encountered. Skipping.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"                    break;","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"limyuhching"},"content":"                }","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"limyuhching"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"limyuhching"},"content":"            throw new DukeException(\"Failed to load file: file not found.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"limyuhching"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"limyuhching"},"content":"            throw new DukeException(\"Failed to load file: file is corrupted.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"limyuhching"},"content":"        return allTasks;","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"limyuhching"},"content":"     * This method save the tasks in TaskList into the file specified by filepath.","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"limyuhching"},"content":"     * If the file specified by the filepath does not exist, it will create a new file as","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"limyuhching"},"content":"     * specified by the filepath.","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"limyuhching"},"content":"     * @param taskList TaskList object that contains the tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"limyuhching"},"content":"     * @throws DukeException If there is an error during the saving process due to corrupted","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"limyuhching"},"content":"     *                       data or invalid input.","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"limyuhching"},"content":"    public void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"limyuhching"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"limyuhching"},"content":"            createFile();","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"limyuhching"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"limyuhching"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"limyuhching"},"content":"                fw.write(task.toSave() + \"\\n\");","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"limyuhching"},"content":"            fw.close();","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"limyuhching"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"limyuhching"},"content":"            throw new DukeException(\"An error has occurred while saving\");","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"limyuhching"},"content":"     * This method create the file specified by the filepath.","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"limyuhching"},"content":"     * @throws DukeException If it fails to create the specified file.","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"limyuhching"},"content":"    public void createFile() throws DukeException {","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"limyuhching"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"limyuhching"},"content":"            if (f.exists()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"limyuhching"},"content":"                return;","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"limyuhching"},"content":"            if (!f.getParentFile().exists()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"limyuhching"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"limyuhching"},"content":"            f.createNewFile();","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"limyuhching"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"limyuhching"},"content":"            throw new DukeException(\"Cannot create file; reason: \" + e.getMessage());","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"limyuhching":122}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"public class Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"    private String description;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"        setDescription(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"        setDone(false);","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"        return description;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"        return isDone;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"     * Returns the format of the task to be printed out to user","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"     * @return String representation of the task","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"    public String toString() {","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"        return (isDone ? \"[X]\" : \"[ ]\") + \" \" + description;","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"     * Returns the format of the task to be saved into a file","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"     * @return String representation of the task","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"    public String toSave() {","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"limyuhching":40}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":" * A list of tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"public class TaskList {","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"    public TaskList() {","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"        return tasks;","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"    public void remove(Task task){","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"        this.tasks.remove(task);","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"     * This method attempts to add a Todo task into the TaskList.","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"     * It will check whether the description of the task is empty before","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"     * creating a ToDo object and add it into the TaskList.","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"     * @param description Details regarding the todo task.","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"     * @throws DukeException If the description of the todo task is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"    public void addTodo(String description) throws DukeException {","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"        if (description.isBlank()) { // Check if description is empty","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"            throw new DukeException(\"Description of a todo cannot be empty\");","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"        tasks.add(new ToDo(description));","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"     * This method attempts to add a deadline task into the TaskList.","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"     * It will check whether the description of the task is empty before","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"     * extracting the deadline of the task. It will then create a new Deadline","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"     * object and add it into the TaskList.","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"     * @param description Details regarding the deadline task.","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"     * @throws DukeException If the description of the deadline task is empty","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"     *                       or when the /by keyword is not provided.","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"    public void addDeadline(String description) throws DukeException {","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"            String[] deadlineTokens \u003d description.split(\"/by\");","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"            description \u003d deadlineTokens[0].trim();","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"            String by \u003d deadlineTokens[1].trim();","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"            if (description.isBlank() | by.isBlank()) { // Check if description is empty","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"                throw new DukeException(\"Wrong format! Expected format: deadline DESCRIPTION /by TIME\");","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"            Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"            tasks.add(deadline);","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"            throw new DukeException(\"Wrong format! Expected format: deadline DESCRIPTION /by TIME\");","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"limyuhching"},"content":"     * This method attempts to add an event task to the TaskList.","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"limyuhching"},"content":"     * It will check whether the description of the task is empty before extracting","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"limyuhching"},"content":"     * the dates/time for from when the event start to when the event ends. It then","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"limyuhching"},"content":"     * creates a Event object and add it into the TaskList.","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"limyuhching"},"content":"     * @param description Details regarding the Event task.","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"limyuhching"},"content":"     * @throws DukeException If the description of the Event task is empty","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"limyuhching"},"content":"     *                       or when the /from and /to keywords are the provided.","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"limyuhching"},"content":"    public void addEvent(String description) throws DukeException {","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"limyuhching"},"content":"            String[] eventTokens \u003d description.split(\"/from\");","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"limyuhching"},"content":"            description \u003d eventTokens[0].trim();","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"limyuhching"},"content":"            String[] fromAndToTokens \u003d eventTokens[1].split(\"/to\");","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"limyuhching"},"content":"            String from \u003d fromAndToTokens[0].trim();","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"limyuhching"},"content":"            String to \u003d fromAndToTokens[1].trim();","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"limyuhching"},"content":"            if (description.isBlank() | from.isBlank() | to.isBlank()) { // Check if format is correct","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"limyuhching"},"content":"                throw new DukeException(\"Wrong format! Expected format: \"","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"limyuhching"},"content":"                                         + \"event DESCRIPTION /from START_TIME /to END_TIME\");","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"limyuhching"},"content":"            Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"limyuhching"},"content":"            tasks.add(event);","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"limyuhching"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"limyuhching"},"content":"            throw new DukeException(\"Wrong format! Expected format: event DESCRIPTION /from START_TIME /to END_TIME\");","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"limyuhching"},"content":"     * This method attempts to mark a task in the TaskList","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"limyuhching"},"content":"     * It will check whether the task index provided by the user is valid before marking the task as","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"limyuhching"},"content":"     * the respective isDone argument.","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"limyuhching"},"content":"     * @param taskID Index of the task to be marked.","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"limyuhching"},"content":"     * @param isDone True to mark the task as done and False to mark the task as undone.","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"limyuhching"},"content":"     * @throws DukeException if task index is not found or task index in not an int.","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"limyuhching"},"content":"    public void markTask(String taskID, boolean isDone) throws DukeException {","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"limyuhching"},"content":"            int index \u003d Integer.parseInt(taskID);","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"limyuhching"},"content":"            tasks.get(index-1).setDone(isDone);","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"limyuhching"},"content":"        } catch (NullPointerException | NumberFormatException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"limyuhching"},"content":"            throw new DukeException(\"Oops! An integer taskID is expected\");","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"limyuhching"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"limyuhching"},"content":"            throw new DukeException(\"Oops! Task \" + taskID + \" does not exist\");","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"limyuhching"},"content":"     * This method attempts to delete a task based on the task index from the TaskList","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"limyuhching"},"content":"     * It will check whether the task index provided by the user exist before deleting the task.","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"limyuhching"},"content":"     * @param taskID Index of task to be deleted.","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"limyuhching"},"content":"     * @return The removed task to be printed by Ui.","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"limyuhching"},"content":"     * @throws DukeException If task index is not an integer or task index does not exist.","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"limyuhching"},"content":"    public Task deleteTask(String taskID) throws DukeException {","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"limyuhching"},"content":"            int index \u003d Integer.parseInt(taskID);","lastModifiedDate":"2023-10-04"},{"lineNumber":129,"author":{"gitId":"limyuhching"},"content":"            Task removedTask \u003d tasks.get(index-1);","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"limyuhching"},"content":"            tasks.remove(index-1);","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"limyuhching"},"content":"            return removedTask;","lastModifiedDate":"2023-10-04"},{"lineNumber":132,"author":{"gitId":"limyuhching"},"content":"        } catch (NullPointerException | NumberFormatException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"limyuhching"},"content":"            throw new DukeException(\"Oops! An integer taskID is expected\");","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"limyuhching"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"limyuhching"},"content":"            throw new DukeException(\"Oops! Task \" + taskID + \" does not exist\");","lastModifiedDate":"2023-10-04"},{"lineNumber":136,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":137,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":138,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"limyuhching"},"content":"     * This method attempts to find the tasks with descriptions that matches the keyword provided","lastModifiedDate":"2023-10-04"},{"lineNumber":141,"author":{"gitId":"limyuhching"},"content":"     * It first check if the keyword provided is valid before going through the TaskList. For every","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"limyuhching"},"content":"     * task, it splits the description into substrings and compare word by word with the keyword.","lastModifiedDate":"2023-10-04"},{"lineNumber":143,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"limyuhching"},"content":"     * @param keyword Keyword to be searched for.","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"limyuhching"},"content":"     * @return A list of tasks that matches the keyword for Ui object to print.","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"limyuhching"},"content":"     * @throws DukeException If keyword is not a word or null.","lastModifiedDate":"2023-10-04"},{"lineNumber":147,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"limyuhching"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) throws DukeException {","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"limyuhching"},"content":"        if (keyword.isBlank()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"limyuhching"},"content":"            throw new DukeException(\"Keyword cannot be empty\");","lastModifiedDate":"2023-10-04"},{"lineNumber":151,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"limyuhching"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"limyuhching"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"limyuhching"},"content":"            String[] substrs \u003d task.getDescription().split(\"\\\\s+\");","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"limyuhching"},"content":"            for (String substr : substrs) {","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"limyuhching"},"content":"                if (substr.equals(keyword)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"limyuhching"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"limyuhching"},"content":"                    break;","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"limyuhching"},"content":"                }","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":162,"author":{"gitId":"limyuhching"},"content":"        return matchingTasks;","lastModifiedDate":"2023-10-04"},{"lineNumber":163,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":164,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"limyuhching":164}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"        super(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"     * Returns the format of the task to be printed out to user","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"     * @return String representation of the task","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"     * Returns the format of the task to be saved into a file","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"     * @return String representation of the task","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"    public String toSave() {","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"        return \"T | \" + super.toSave();","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"limyuhching":23}},{"path":"src/main/java/Type.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"public enum Type {","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"limyuhching":3}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":" * User interface object that handles the format and content of various outputs to the user","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":" * through command line interface.","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"public class Ui {","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"    private static final String LINE_DIVIDER \u003d \"\\t---------------------------------------\";","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"    protected Scanner scanner;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"    public Ui(){","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"    public void showLoadingFile() {","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"        System.out.println(\"\\tLoading file......\");","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"    public void showFileLoaded() {","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"        System.out.println(\"\\tFile has been successfully loaded\");","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"    public void showStartMessage() {","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"        String intro \u003d \"\\tHello! I\u0027m Wenny!\\n\\tHow may I help you?\";","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"        System.out.println(intro);","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"    public void showByeMessage() {","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"    public void showTasks(TaskList tasklist) {","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tasklist.getTasks();","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"\\tYou do not have any task in the list.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"        } else {","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"                System.out.print(\"\\t\");","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"                System.out.print(i + 1 + \".\");","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"                System.out.println(tasks.get(i));","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"    public void showAddTask(TaskList taskList) {","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"        System.out.println(\"\\t\" + tasks.get(tasks.size()-1));","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"        System.out.println(\"\\tNow you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"    public void showDeleteTask(TaskList taskList, Task removedTask) {","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"limyuhching"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"        System.out.println(\"\\t\" + removedTask);","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"limyuhching"},"content":"        System.out.println(\"\\tNow you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"limyuhching"},"content":"    public void showMark(TaskList taskList, String taskID, boolean isDone) {","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"limyuhching"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"limyuhching"},"content":"        int index \u003d Integer.parseInt(taskID);","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"limyuhching"},"content":"        if (isDone) {","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"limyuhching"},"content":"        } else {","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"\\tNice! I\u0027ve marked this task as undone:\");","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"limyuhching"},"content":"        System.out.println(\"\\t\" + tasks.get(index-1));","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"limyuhching"},"content":"    public void showLine() {","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"limyuhching"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"limyuhching"},"content":"    public void showError(Exception e) {","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"limyuhching"},"content":"        System.out.println(\"\\t\" + e);","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"limyuhching"},"content":"    public String readCommand() {","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"limyuhching"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"limyuhching"},"content":"    public void showFind(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"limyuhching"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"\\tKeyword does not match any task in the list.\");","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"limyuhching"},"content":"        } else {","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"limyuhching"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"limyuhching"},"content":"                System.out.print(\"\\t\");","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"limyuhching"},"content":"                System.out.print(i + 1 + \".\");","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"limyuhching"},"content":"                System.out.println(matchingTasks.get(i));","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"limyuhching"},"content":"        showLine();","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"limyuhching":114}}]
