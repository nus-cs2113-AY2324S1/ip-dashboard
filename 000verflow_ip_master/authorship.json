[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"000verflow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"000verflow"},"content":"    protected String by;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"000verflow"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"000verflow"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"000verflow"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"000verflow"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"000verflow"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"000verflow"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"000verflow"},"content":"        return by;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"000verflow"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"000verflow"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"000verflow"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"000verflow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"000verflow":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"000verflow"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"000verflow"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"000verflow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"000verflow"},"content":"    public static String CHATBOTNAME\u003d\"Andrew Tate\";","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"000verflow"},"content":"    public static ArrayList\u003cTask\u003e TASKS \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"000verflow"},"content":"    public static String LINE_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"000verflow"},"content":"    public static int FIRST_INDEX\u003d0;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"000verflow"},"content":"    public static int SECOND_INDEX\u003d1;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"000verflow"},"content":"    public static String ASCII_ART \u003d","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⠁⠀⠀⣸⣷⣦⡉⢿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⡆⠀⠀⢺⣿⣿⣿⣿⣄⢻⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠐⠸⠀⠘⣿⣿⣿⣿⣿⣧⢿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠇⠀⡀⠁⠀⠁⠈⠘⠉⠉⠉⠉⠈⢿⣿⣿⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀⠀⢷⡀⠀⠀⠀⠘⣆⠀⠀⠀⠰⣾⣿⣿⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡀⠀⠀⠻⣾⣶⠀⠀⠉⢴⣿⡏⢹⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠘⠁⠀⢄⠨⣄⠻⢡⣾⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⣇⠀⠀⠀⠀⠀⠶⠃⢠⣾⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠻⡷⠀⢀⡀⣤⣤⡖⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⠀⠀⠈⠻⢿⣿⣦⣿⢣⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠋⠀⠙⢿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠁⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⣿⣿⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⡆⠰⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⡄⠹⠀⠀⠀⠀⠀⢶⣄⠀⠀⠀⠹⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⣿⠟⠀⠀⠀⠀⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⢿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⠀⠀⠀⠀⢸\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠁⠀⠠⠞⣻⡗⠶⣶⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠋⠀⠀⠀⠀⢀\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"000verflow"},"content":"            \"⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠄⠒⠚⣿⣧⡹⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"000verflow"},"content":"            \"⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⢸⣦⠀⢀⡉⢿⣷⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⣿⣿\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"000verflow"},"content":"            \"⣿⣿⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠀⠘⣿⣇⢸⣷⣦⡝⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣟\";","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"000verflow"},"content":"    /* Pretty prints a remark after adding any tasks */","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"000verflow"},"content":"    public static void printRemark(Task task){","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"000verflow"},"content":"        System.out.println(\"Got it. I\u0027ve add this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"000verflow"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"000verflow"},"content":"        System.out.println(\"Now you have \" + TASKS.size() + \" tasks in the list\");","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"000verflow"},"content":"    /* Pretty prints the error when exception is caught */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"000verflow"},"content":"    public static void printErrorPrompt(Exception e){","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"000verflow"},"content":"        System.out.println(\"Error: Invalid index or insufficient arguments provided!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"000verflow"},"content":"    public static void addTodoInList(String[] arguments){","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"000verflow"},"content":"        try{","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"000verflow"},"content":"            String taskDescription \u003d String.join(\" \", arguments);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"000verflow"},"content":"            ToDo newToDo \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"000verflow"},"content":"            TASKS.add(newToDo);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"000verflow"},"content":"            printRemark(newToDo);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"000verflow"},"content":"        }catch (Exception e){","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"000verflow"},"content":"            printErrorPrompt(e);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"000verflow"},"content":"    public static void addDeadlineInList(String[] arguments){","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"000verflow"},"content":"        try{","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"000verflow"},"content":"            String argumentsString \u003d String.join(\" \", arguments);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"000verflow"},"content":"            String[] argumentList \u003d argumentsString.split(\" /by \");","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"000verflow"},"content":"            String deadlineDescription \u003d argumentList[FIRST_INDEX];","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"000verflow"},"content":"            String deadlineEndTime \u003d argumentList[SECOND_INDEX];","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"000verflow"},"content":"            Deadline newDeadline \u003d new Deadline(deadlineDescription, deadlineEndTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"000verflow"},"content":"            TASKS.add(newDeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"000verflow"},"content":"            printRemark(newDeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"000verflow"},"content":"        } catch (Exception e){","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"000verflow"},"content":"            printErrorPrompt(e);","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":75,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":76,"author":{"gitId":"000verflow"},"content":"    public static void addEventInList(String[] arguments){","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"000verflow"},"content":"        try{","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"000verflow"},"content":"            String argumentsString \u003d String.join(\" \", arguments);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"000verflow"},"content":"            String[] argumentList \u003d argumentsString.split(\" /from \");","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"000verflow"},"content":"            String eventDescription \u003d argumentList[FIRST_INDEX];","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"000verflow"},"content":"            argumentList \u003d argumentList[SECOND_INDEX].split(\" /to \");","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"000verflow"},"content":"            String eventStartTime \u003d argumentList[FIRST_INDEX];","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"000verflow"},"content":"            String eventEndTime \u003d argumentList[SECOND_INDEX];","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"000verflow"},"content":"            Event newEvent \u003d new Event(eventDescription, eventStartTime, eventEndTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"000verflow"},"content":"            TASKS.add(newEvent);","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"000verflow"},"content":"            printRemark(newEvent);","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"000verflow"},"content":"        } catch (Exception e){","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"000verflow"},"content":"            printErrorPrompt(e);","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"000verflow"},"content":"    /* Marks the task from {@code arguments} as complete */","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"000verflow"},"content":"    public static void markTaskComplete(String[] arguments){","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"000verflow"},"content":"        try{","lastModifiedDate":"2023-08-19"},{"lineNumber":96,"author":{"gitId":"000verflow"},"content":"            int taskIndex \u003d Integer.parseInt(arguments[FIRST_INDEX]);","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"000verflow"},"content":"            Task taskToMark \u003d TASKS.get(taskIndex-1);","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"000verflow"},"content":"            taskToMark.markAsDone();","lastModifiedDate":"2023-08-19"},{"lineNumber":99,"author":{"gitId":"000verflow"},"content":"            System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"000verflow"},"content":"            System.out.println(\"Marked this task as done:\");","lastModifiedDate":"2023-08-19"},{"lineNumber":101,"author":{"gitId":"000verflow"},"content":"            System.out.println(taskToMark);","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"000verflow"},"content":"            System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":104,"author":{"gitId":"000verflow"},"content":"        }catch(Exception e){","lastModifiedDate":"2023-08-19"},{"lineNumber":105,"author":{"gitId":"000verflow"},"content":"            printErrorPrompt(e);","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":108,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":109,"author":{"gitId":"000verflow"},"content":"    /* Marks the task from {@code arguments} as incomplete */","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"000verflow"},"content":"    public static void unmarkTaskIncomplete(String[] arguments){","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"000verflow"},"content":"        try{","lastModifiedDate":"2023-08-19"},{"lineNumber":112,"author":{"gitId":"000verflow"},"content":"            int taskIndex \u003d Integer.parseInt(arguments[FIRST_INDEX]);","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"000verflow"},"content":"            Task taskToUnmark \u003d TASKS.get(taskIndex-1);","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"000verflow"},"content":"            taskToUnmark.markAsUndone();","lastModifiedDate":"2023-08-19"},{"lineNumber":115,"author":{"gitId":"000verflow"},"content":"            System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"000verflow"},"content":"            System.out.println(\"Marked this task as undone:\");","lastModifiedDate":"2023-08-19"},{"lineNumber":117,"author":{"gitId":"000verflow"},"content":"            System.out.println(taskToUnmark);","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"000verflow"},"content":"            System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":120,"author":{"gitId":"000verflow"},"content":"        }catch(Exception e){","lastModifiedDate":"2023-08-19"},{"lineNumber":121,"author":{"gitId":"000verflow"},"content":"            printErrorPrompt(e);","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":123,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"000verflow"},"content":"    public static void printTaskList(){","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"000verflow"},"content":"        for (int i \u003d 0; i \u003c TASKS.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"000verflow"},"content":"            Task task \u003d TASKS.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"000verflow"},"content":"            System.out.println(i+1 + \".\" + task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"000verflow"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"000verflow"},"content":"        Scanner myScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"000verflow"},"content":"        System.out.println(ASCII_ART);","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"000verflow"},"content":"        System.out.println(\"Hello! I\u0027m the top G \" + CHATBOTNAME);","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"000verflow"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"000verflow"},"content":"        whileLoop:","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"000verflow"},"content":"        while (true){","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"000verflow"},"content":"            System.out.print(\"\u003e \");","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"000verflow"},"content":"            String commandGiven \u003d myScanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"000verflow"},"content":"            String[] arguments \u003d commandGiven.split(\"\\\\s+\"); // split by space","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"000verflow"},"content":"            String actionCommand \u003d arguments[FIRST_INDEX];","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"000verflow"},"content":"            actionCommand \u003d actionCommand.toLowerCase(); // make sure all same case to account for typing error","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"000verflow"},"content":"            switch (actionCommand) {","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"000verflow"},"content":"                case \"todo\":","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"000verflow"},"content":"                    // passing subarray of arguments without the 1st","lastModifiedDate":"2023-09-07"},{"lineNumber":153,"author":{"gitId":"000verflow"},"content":"                    addTodoInList(Arrays.copyOfRange(arguments, SECOND_INDEX, arguments.length));","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"000verflow"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"000verflow"},"content":"                case \"deadline\":","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"000verflow"},"content":"                    addDeadlineInList(Arrays.copyOfRange(arguments, SECOND_INDEX, arguments.length));","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"000verflow"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"000verflow"},"content":"                case \"event\":","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"000verflow"},"content":"                    addEventInList(Arrays.copyOfRange(arguments, SECOND_INDEX, arguments.length));","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"000verflow"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"000verflow"},"content":"                case \"bye\":","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"000verflow"},"content":"                    break whileLoop; // exit from while loop, as switch/case has its own break","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"000verflow"},"content":"                case \"list\":","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"000verflow"},"content":"                    printTaskList();","lastModifiedDate":"2023-09-07"},{"lineNumber":169,"author":{"gitId":"000verflow"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"000verflow"},"content":"                case \"mark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"000verflow"},"content":"                    markTaskComplete(Arrays.copyOfRange(arguments, SECOND_INDEX, arguments.length));","lastModifiedDate":"2023-09-07"},{"lineNumber":173,"author":{"gitId":"000verflow"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"000verflow"},"content":"                case \"unmark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"000verflow"},"content":"                    unmarkTaskIncomplete(Arrays.copyOfRange(arguments, SECOND_INDEX, arguments.length));","lastModifiedDate":"2023-09-07"},{"lineNumber":177,"author":{"gitId":"000verflow"},"content":"                    break;","lastModifiedDate":"2023-08-19"},{"lineNumber":178,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":179,"author":{"gitId":"000verflow"},"content":"                default:","lastModifiedDate":"2023-08-19"},{"lineNumber":180,"author":{"gitId":"000verflow"},"content":"                    System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"000verflow"},"content":"                    System.out.println(\"Invalid command\");","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"000verflow"},"content":"                    System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"000verflow"},"content":"                    break;","lastModifiedDate":"2023-08-19"},{"lineNumber":184,"author":{"gitId":"000verflow"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":185,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":186,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"000verflow"},"content":"        System.out.println(\"Bye, hope to see you again soon!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":188,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":191,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-18"},{"lineNumber":192,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-18"}],"authorContributionMap":{"000verflow":189,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"000verflow"},"content":"public class Event extends Task{","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"000verflow"},"content":"    protected String start;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"000verflow"},"content":"    protected String end;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"000verflow"},"content":"    public Event(String description, String start, String end){","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"000verflow"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"000verflow"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"000verflow"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"000verflow"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"000verflow"},"content":"    public String toString(){","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"000verflow"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",super.toString(), start, end);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"000verflow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"000verflow":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"000verflow"},"content":"public class Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"000verflow"},"content":"    protected String description;","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"000verflow"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"000verflow"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"000verflow"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"000verflow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"000verflow"},"content":"    public void markAsDone(){","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"000verflow"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"000verflow"},"content":"    public void markAsUndone(){","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"000verflow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"000verflow"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"000verflow"},"content":"    public String toString(){","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"000verflow"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description; // mark done task with X","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"000verflow"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"000verflow":23}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"000verflow"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"000verflow"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"000verflow"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"000verflow"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"000verflow"},"content":"    public String toString(){","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"000verflow"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"000verflow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"000verflow":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"000verflow"},"content":"asdf","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"000verflow"},"content":"todo borrow book","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"000verflow"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"000verflow"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"000verflow"},"content":"list","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"000verflow"},"content":"bye","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"000verflow":6}}]
