[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"000verflow"},"content":"T | 1 | read book","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"000verflow"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"000verflow"},"content":"E | 0 | project meeting | Aug 6th 2pm | 4pm","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"000verflow"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"000verflow":4}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"000verflow"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"000verflow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"000verflow"},"content":"    protected String by;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"000verflow"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"000verflow"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"000verflow"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"000verflow"},"content":"        this.taskType \u003d \"D\";","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"000verflow"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"000verflow"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"000verflow"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"000verflow"},"content":"        return by;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"000verflow"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"000verflow"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"000verflow"},"content":"        return String.format(\"[%s]%s (by: %s)\", this.taskType ,super.toString(), by);","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"000verflow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"000verflow":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"000verflow"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"000verflow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"000verflow"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"000verflow"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"000verflow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"000verflow"},"content":"import java.io.File;","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"000verflow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"000verflow"},"content":"    public static String CHATBOTNAME \u003d \"Andrew Tate\";","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"000verflow"},"content":"    public static ArrayList\u003cTask\u003e TASKS \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"000verflow"},"content":"    public static String LINE_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"000verflow"},"content":"    public static int FIRST_INDEX\u003d0;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"000verflow"},"content":"    public static int SECOND_INDEX\u003d1;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"000verflow"},"content":"    public static int THIRD_INDEX\u003d2;","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"000verflow"},"content":"    public static int FOURTH_INDEX\u003d3;","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"000verflow"},"content":"    public static int FIFTH_INDEX\u003d4;","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"000verflow"},"content":"    public static String DATAPATH \u003d \".\\\\data\\\\duke.txt\";","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"000verflow"},"content":"    /* Pretty prints a remark after adding any tasks */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"000verflow"},"content":"    public static void printRemark(Task task, String remark){","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"000verflow"},"content":"        System.out.println(remark);","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"000verflow"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"000verflow"},"content":"        System.out.println(\"Now you have \" + TASKS.size() + \" tasks in the list\");","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"000verflow"},"content":"    public static void addTodoInList(String[] arguments) throws DukeException{","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"000verflow"},"content":"        if (arguments.length \u003d\u003d 0){ // empty argument","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"000verflow"},"content":"            throw new DukeException(\"The description of a todo cannot be empty!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"000verflow"},"content":"        String taskDescription \u003d String.join(\" \", arguments);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"000verflow"},"content":"        ToDo newToDo \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"000verflow"},"content":"        TASKS.add(newToDo);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"000verflow"},"content":"        printRemark(newToDo, \"Done, I\u0027ve added this task: \");","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"000verflow"},"content":"    public static void addDeadlineInList(String[] arguments) throws DukeException{","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"000verflow"},"content":"        try{","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"000verflow"},"content":"            String argumentsString \u003d String.join(\" \", arguments);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"000verflow"},"content":"            String[] argumentsList \u003d argumentsString.split(\" /by \");","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"000verflow"},"content":"            String deadlineDescription \u003d argumentsList[FIRST_INDEX];","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"000verflow"},"content":"            String deadlineEndTime \u003d argumentsList[SECOND_INDEX];","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"000verflow"},"content":"            Deadline newDeadline \u003d new Deadline(deadlineDescription, deadlineEndTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"000verflow"},"content":"            TASKS.add(newDeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"000verflow"},"content":"            printRemark(newDeadline, \"Done, I\u0027ve added this task: \");","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"000verflow"},"content":"        } catch(ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"000verflow"},"content":"            throw new DukeException(\"Insufficient arguments provided, try this (deadline submission /by date)\");","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":55,"author":{"gitId":"000verflow"},"content":"    public static void addEventInList(String[] arguments) throws DukeException{","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"000verflow"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"000verflow"},"content":"            String argumentsString \u003d String.join(\" \", arguments);","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"000verflow"},"content":"            String[] argumentsList \u003d argumentsString.split(\" /from \");","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"000verflow"},"content":"            String eventDescription \u003d argumentsList[FIRST_INDEX];","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"000verflow"},"content":"            argumentsList \u003d argumentsList[SECOND_INDEX].split(\" /to \");","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"000verflow"},"content":"            String eventStartTime \u003d argumentsList[FIRST_INDEX];","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"000verflow"},"content":"            String eventEndTime \u003d argumentsList[SECOND_INDEX];","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"000verflow"},"content":"            Event newEvent \u003d new Event(eventDescription, eventStartTime, eventEndTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"000verflow"},"content":"            TASKS.add(newEvent);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"000verflow"},"content":"            printRemark(newEvent, \"Done, I\u0027ve added this task: \");","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"000verflow"},"content":"        } catch(ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"000verflow"},"content":"            throw new DukeException(\"Insufficient arguments provided, try this (event tiktok hackathon /from date /to date)\");","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"000verflow"},"content":"    /* Marks the task from {@code arguments} as complete */","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"000verflow"},"content":"    public static void markTaskComplete(String[] arguments) throws DukeException{","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"000verflow"},"content":"        try{","lastModifiedDate":"2023-08-19"},{"lineNumber":74,"author":{"gitId":"000verflow"},"content":"            int taskIndex \u003d Integer.parseInt(arguments[FIRST_INDEX]);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"000verflow"},"content":"            Task taskToMark \u003d TASKS.get(taskIndex-1);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"000verflow"},"content":"            taskToMark.markAsDone();","lastModifiedDate":"2023-08-19"},{"lineNumber":77,"author":{"gitId":"000verflow"},"content":"            System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"000verflow"},"content":"            System.out.println(\"Marked this task as done:\");","lastModifiedDate":"2023-08-19"},{"lineNumber":79,"author":{"gitId":"000verflow"},"content":"            System.out.println(taskToMark);","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"000verflow"},"content":"            System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"000verflow"},"content":"        } catch(IndexOutOfBoundsException indexEx){","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"000verflow"},"content":"            throw new DukeException(\"Invalid index bro...\");","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"000verflow"},"content":"        } catch(NumberFormatException numEx){","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"000verflow"},"content":"            throw new DukeException(\"That\u0027s not an index bro..\");","lastModifiedDate":"2023-09-16"},{"lineNumber":85,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":87,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":88,"author":{"gitId":"000verflow"},"content":"    /* Marks the task from {@code arguments} as incomplete */","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"000verflow"},"content":"    public static void unmarkTaskIncomplete(String[] arguments) throws DukeException{","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"000verflow"},"content":"        try{","lastModifiedDate":"2023-08-19"},{"lineNumber":91,"author":{"gitId":"000verflow"},"content":"            int taskIndex \u003d Integer.parseInt(arguments[FIRST_INDEX]);","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"000verflow"},"content":"            Task taskToUnmark \u003d TASKS.get(taskIndex-1);","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"000verflow"},"content":"            taskToUnmark.markAsUndone();","lastModifiedDate":"2023-08-19"},{"lineNumber":94,"author":{"gitId":"000verflow"},"content":"            System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"000verflow"},"content":"            System.out.println(\"Marked this task as undone:\");","lastModifiedDate":"2023-08-19"},{"lineNumber":96,"author":{"gitId":"000verflow"},"content":"            System.out.println(taskToUnmark);","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"000verflow"},"content":"            System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"000verflow"},"content":"        } catch(IndexOutOfBoundsException indexEx){","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"000verflow"},"content":"            throw new DukeException(\"Invalid index bro...\");","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"000verflow"},"content":"        } catch(NumberFormatException numEx){","lastModifiedDate":"2023-09-16"},{"lineNumber":101,"author":{"gitId":"000verflow"},"content":"            throw new DukeException(\"That\u0027s not an index bro..\");","lastModifiedDate":"2023-09-16"},{"lineNumber":102,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":103,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":104,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":105,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":106,"author":{"gitId":"000verflow"},"content":"    public static void deleteTaskInList(String[] arguments) throws DukeException{","lastModifiedDate":"2023-09-16"},{"lineNumber":107,"author":{"gitId":"000verflow"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":108,"author":{"gitId":"000verflow"},"content":"            int taskIndex \u003d Integer.parseInt(arguments[FIRST_INDEX]);","lastModifiedDate":"2023-09-16"},{"lineNumber":109,"author":{"gitId":"000verflow"},"content":"            Task taskToDelete \u003d TASKS.get(taskIndex-1);","lastModifiedDate":"2023-09-16"},{"lineNumber":110,"author":{"gitId":"000verflow"},"content":"            TASKS.remove(taskToDelete);","lastModifiedDate":"2023-09-16"},{"lineNumber":111,"author":{"gitId":"000verflow"},"content":"            printRemark(taskToDelete, \"Done, I\u0027ve deleted this task: \");","lastModifiedDate":"2023-09-16"},{"lineNumber":112,"author":{"gitId":"000verflow"},"content":"        } catch(IndexOutOfBoundsException indexEx){","lastModifiedDate":"2023-09-16"},{"lineNumber":113,"author":{"gitId":"000verflow"},"content":"            throw new DukeException(\"Invalid index bro...\");","lastModifiedDate":"2023-09-16"},{"lineNumber":114,"author":{"gitId":"000verflow"},"content":"        } catch(NumberFormatException numEx){","lastModifiedDate":"2023-09-16"},{"lineNumber":115,"author":{"gitId":"000verflow"},"content":"            throw new DukeException(\"That\u0027s not an index bro..\");","lastModifiedDate":"2023-09-16"},{"lineNumber":116,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":117,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"000verflow"},"content":"    public static void printTaskList(){","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"000verflow"},"content":"        for (int i \u003d 0; i \u003c TASKS.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"000verflow"},"content":"            Task task \u003d TASKS.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"000verflow"},"content":"            System.out.println(i+1 + \".\" + task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"000verflow"},"content":"    public static void loadHistoricalData() throws IOException, DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":129,"author":{"gitId":"000verflow"},"content":"        File dataFile \u003d new File(DATAPATH);","lastModifiedDate":"2023-09-16"},{"lineNumber":130,"author":{"gitId":"000verflow"},"content":"        if (dataFile.createNewFile()){","lastModifiedDate":"2023-09-16"},{"lineNumber":131,"author":{"gitId":"000verflow"},"content":"            System.out.println(\"Data file not found @ \" + DATAPATH + \"\\nCreating new data file @ \" + DATAPATH);","lastModifiedDate":"2023-09-16"},{"lineNumber":132,"author":{"gitId":"000verflow"},"content":"        }else{","lastModifiedDate":"2023-09-16"},{"lineNumber":133,"author":{"gitId":"000verflow"},"content":"            Scanner dataScanner \u003d new Scanner(dataFile);","lastModifiedDate":"2023-09-16"},{"lineNumber":134,"author":{"gitId":"000verflow"},"content":"            while(dataScanner.hasNext()){","lastModifiedDate":"2023-09-16"},{"lineNumber":135,"author":{"gitId":"000verflow"},"content":"                String dataLine \u003d  dataScanner.nextLine();","lastModifiedDate":"2023-09-16"},{"lineNumber":136,"author":{"gitId":"000verflow"},"content":"                String[] splitLineArguments \u003d dataLine.split(\" \\\\| \");","lastModifiedDate":"2023-09-16"},{"lineNumber":137,"author":{"gitId":"000verflow"},"content":"                switch (splitLineArguments[FIRST_INDEX]) {","lastModifiedDate":"2023-09-16"},{"lineNumber":138,"author":{"gitId":"000verflow"},"content":"                case \"T\":","lastModifiedDate":"2023-09-16"},{"lineNumber":139,"author":{"gitId":"000verflow"},"content":"                    ToDo newTodo \u003d new ToDo(splitLineArguments[THIRD_INDEX]);","lastModifiedDate":"2023-09-16"},{"lineNumber":140,"author":{"gitId":"000verflow"},"content":"                    TASKS.add(newTodo);","lastModifiedDate":"2023-09-16"},{"lineNumber":141,"author":{"gitId":"000verflow"},"content":"                    if (splitLineArguments[SECOND_INDEX].equals(\"1\")){","lastModifiedDate":"2023-09-16"},{"lineNumber":142,"author":{"gitId":"000verflow"},"content":"                        newTodo.markAsDone();","lastModifiedDate":"2023-09-16"},{"lineNumber":143,"author":{"gitId":"000verflow"},"content":"                    }","lastModifiedDate":"2023-09-16"},{"lineNumber":144,"author":{"gitId":"000verflow"},"content":"                    break;","lastModifiedDate":"2023-09-16"},{"lineNumber":145,"author":{"gitId":"000verflow"},"content":"                case \"D\":","lastModifiedDate":"2023-09-16"},{"lineNumber":146,"author":{"gitId":"000verflow"},"content":"                    Deadline newDeadline \u003d new Deadline(splitLineArguments[THIRD_INDEX],","lastModifiedDate":"2023-09-16"},{"lineNumber":147,"author":{"gitId":"000verflow"},"content":"                            splitLineArguments[FOURTH_INDEX]);","lastModifiedDate":"2023-09-16"},{"lineNumber":148,"author":{"gitId":"000verflow"},"content":"                    TASKS.add(newDeadline);","lastModifiedDate":"2023-09-16"},{"lineNumber":149,"author":{"gitId":"000verflow"},"content":"                    if (splitLineArguments[SECOND_INDEX].equals(\"1\")){","lastModifiedDate":"2023-09-16"},{"lineNumber":150,"author":{"gitId":"000verflow"},"content":"                        newDeadline.markAsDone();","lastModifiedDate":"2023-09-16"},{"lineNumber":151,"author":{"gitId":"000verflow"},"content":"                    }","lastModifiedDate":"2023-09-16"},{"lineNumber":152,"author":{"gitId":"000verflow"},"content":"                    break;","lastModifiedDate":"2023-09-16"},{"lineNumber":153,"author":{"gitId":"000verflow"},"content":"                case \"E\":","lastModifiedDate":"2023-09-16"},{"lineNumber":154,"author":{"gitId":"000verflow"},"content":"                    Event newEvent \u003d new Event(splitLineArguments[THIRD_INDEX], splitLineArguments[FOURTH_INDEX],","lastModifiedDate":"2023-09-16"},{"lineNumber":155,"author":{"gitId":"000verflow"},"content":"                            splitLineArguments[FIFTH_INDEX]);","lastModifiedDate":"2023-09-16"},{"lineNumber":156,"author":{"gitId":"000verflow"},"content":"                    TASKS.add(newEvent);","lastModifiedDate":"2023-09-16"},{"lineNumber":157,"author":{"gitId":"000verflow"},"content":"                    if (splitLineArguments[SECOND_INDEX].equals(\"1\")){","lastModifiedDate":"2023-09-16"},{"lineNumber":158,"author":{"gitId":"000verflow"},"content":"                        newEvent.markAsDone();","lastModifiedDate":"2023-09-16"},{"lineNumber":159,"author":{"gitId":"000verflow"},"content":"                    }","lastModifiedDate":"2023-09-16"},{"lineNumber":160,"author":{"gitId":"000verflow"},"content":"                    break;","lastModifiedDate":"2023-09-16"},{"lineNumber":161,"author":{"gitId":"000verflow"},"content":"                default:","lastModifiedDate":"2023-09-16"},{"lineNumber":162,"author":{"gitId":"000verflow"},"content":"                    throw new DukeException(\"Corrupt data bro..\");","lastModifiedDate":"2023-09-16"},{"lineNumber":163,"author":{"gitId":"000verflow"},"content":"                }","lastModifiedDate":"2023-09-16"},{"lineNumber":164,"author":{"gitId":"000verflow"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":165,"author":{"gitId":"000verflow"},"content":"            System.out.println(\"Loaded historical data successfully.\");","lastModifiedDate":"2023-09-16"},{"lineNumber":166,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":167,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":168,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":169,"author":{"gitId":"000verflow"},"content":"    public static void refreshSavedList() throws IOException, DukeException{","lastModifiedDate":"2023-09-16"},{"lineNumber":170,"author":{"gitId":"000verflow"},"content":"        FileWriter fw \u003d new FileWriter(DATAPATH);","lastModifiedDate":"2023-09-16"},{"lineNumber":171,"author":{"gitId":"000verflow"},"content":"        for (Task taskToSave : TASKS){","lastModifiedDate":"2023-09-16"},{"lineNumber":172,"author":{"gitId":"000verflow"},"content":"            String taskSaveFormat \u003d String.format(\"%s | %d | \" , taskToSave.getTaskType(),","lastModifiedDate":"2023-09-16"},{"lineNumber":173,"author":{"gitId":"000verflow"},"content":"                    taskToSave.getCompletionStatus() ? 1:0);","lastModifiedDate":"2023-09-16"},{"lineNumber":174,"author":{"gitId":"000verflow"},"content":"            if (taskToSave.getTaskType().equals(\"T\")){","lastModifiedDate":"2023-09-16"},{"lineNumber":175,"author":{"gitId":"000verflow"},"content":"                ToDo todoToSave \u003d (ToDo) taskToSave;","lastModifiedDate":"2023-09-16"},{"lineNumber":176,"author":{"gitId":"000verflow"},"content":"                taskSaveFormat \u003d  String.format(\"%s%s\\n\",taskSaveFormat,todoToSave.description);","lastModifiedDate":"2023-09-16"},{"lineNumber":177,"author":{"gitId":"000verflow"},"content":"            } else if (taskToSave.getTaskType().equals(\"D\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":178,"author":{"gitId":"000verflow"},"content":"                Deadline deadlineToSave \u003d (Deadline) taskToSave;","lastModifiedDate":"2023-09-16"},{"lineNumber":179,"author":{"gitId":"000verflow"},"content":"                taskSaveFormat \u003d String.format(\"%s%s | %s\\n\",taskSaveFormat,deadlineToSave.description,","lastModifiedDate":"2023-09-16"},{"lineNumber":180,"author":{"gitId":"000verflow"},"content":"                        deadlineToSave.getBy());","lastModifiedDate":"2023-09-16"},{"lineNumber":181,"author":{"gitId":"000verflow"},"content":"            } else {","lastModifiedDate":"2023-09-16"},{"lineNumber":182,"author":{"gitId":"000verflow"},"content":"                Event eventToSave \u003d (Event) taskToSave;","lastModifiedDate":"2023-09-16"},{"lineNumber":183,"author":{"gitId":"000verflow"},"content":"                taskSaveFormat \u003d String.format(\"%s%s | %s | %s\\n\", taskSaveFormat, eventToSave.description,","lastModifiedDate":"2023-09-16"},{"lineNumber":184,"author":{"gitId":"000verflow"},"content":"                        eventToSave.getStart(), eventToSave.getEnd());","lastModifiedDate":"2023-09-16"},{"lineNumber":185,"author":{"gitId":"000verflow"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":186,"author":{"gitId":"000verflow"},"content":"            fw.write(taskSaveFormat);","lastModifiedDate":"2023-09-16"},{"lineNumber":187,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":188,"author":{"gitId":"000verflow"},"content":"        fw.close();","lastModifiedDate":"2023-09-16"},{"lineNumber":189,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":190,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":191,"author":{"gitId":"000verflow"},"content":"    public static void handleCommandInLoop(String[] arguments, String actionCommand) throws DukeException{","lastModifiedDate":"2023-09-16"},{"lineNumber":192,"author":{"gitId":"000verflow"},"content":"        switch (actionCommand) {","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"000verflow"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"000verflow"},"content":"            // passing subarray of arguments without the 1st, same for other commands as well","lastModifiedDate":"2023-09-10"},{"lineNumber":195,"author":{"gitId":"000verflow"},"content":"            addTodoInList(Arrays.copyOfRange(arguments, SECOND_INDEX, arguments.length));","lastModifiedDate":"2023-09-07"},{"lineNumber":196,"author":{"gitId":"000verflow"},"content":"            return;","lastModifiedDate":"2023-09-10"},{"lineNumber":197,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"000verflow"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"000verflow"},"content":"            addDeadlineInList(Arrays.copyOfRange(arguments, SECOND_INDEX, arguments.length));","lastModifiedDate":"2023-09-07"},{"lineNumber":200,"author":{"gitId":"000verflow"},"content":"            return;","lastModifiedDate":"2023-09-10"},{"lineNumber":201,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"000verflow"},"content":"        case \"event\":","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"000verflow"},"content":"            addEventInList(Arrays.copyOfRange(arguments, SECOND_INDEX, arguments.length));","lastModifiedDate":"2023-09-07"},{"lineNumber":204,"author":{"gitId":"000verflow"},"content":"            return;","lastModifiedDate":"2023-09-10"},{"lineNumber":205,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"000verflow"},"content":"        case \"list\":","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"000verflow"},"content":"            printTaskList();","lastModifiedDate":"2023-09-07"},{"lineNumber":208,"author":{"gitId":"000verflow"},"content":"            return;","lastModifiedDate":"2023-09-10"},{"lineNumber":209,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"000verflow"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"000verflow"},"content":"            markTaskComplete(Arrays.copyOfRange(arguments, SECOND_INDEX, arguments.length));","lastModifiedDate":"2023-09-07"},{"lineNumber":212,"author":{"gitId":"000verflow"},"content":"            return;","lastModifiedDate":"2023-09-10"},{"lineNumber":213,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"000verflow"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"000verflow"},"content":"            unmarkTaskIncomplete(Arrays.copyOfRange(arguments, SECOND_INDEX, arguments.length));","lastModifiedDate":"2023-09-07"},{"lineNumber":216,"author":{"gitId":"000verflow"},"content":"            return;","lastModifiedDate":"2023-09-10"},{"lineNumber":217,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":218,"author":{"gitId":"000verflow"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-16"},{"lineNumber":219,"author":{"gitId":"000verflow"},"content":"            deleteTaskInList(Arrays.copyOfRange(arguments, SECOND_INDEX, arguments.length));","lastModifiedDate":"2023-09-16"},{"lineNumber":220,"author":{"gitId":"000verflow"},"content":"            return;","lastModifiedDate":"2023-09-16"},{"lineNumber":221,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":222,"author":{"gitId":"000verflow"},"content":"        default: // unknown command exception","lastModifiedDate":"2023-09-10"},{"lineNumber":223,"author":{"gitId":"000verflow"},"content":"            throw new DukeException(\"I don\u0027t know what that means...\");","lastModifiedDate":"2023-09-10"},{"lineNumber":224,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":225,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":226,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":227,"author":{"gitId":"000verflow"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-09-10"},{"lineNumber":228,"author":{"gitId":"000verflow"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":229,"author":{"gitId":"000verflow"},"content":"            loadHistoricalData();","lastModifiedDate":"2023-09-16"},{"lineNumber":230,"author":{"gitId":"000verflow"},"content":"        } catch (IOException IOEx){","lastModifiedDate":"2023-09-16"},{"lineNumber":231,"author":{"gitId":"000verflow"},"content":"            System.out.println(\"Unable to create file @ \" + DATAPATH);","lastModifiedDate":"2023-09-16"},{"lineNumber":232,"author":{"gitId":"000verflow"},"content":"            return;","lastModifiedDate":"2023-09-16"},{"lineNumber":233,"author":{"gitId":"000verflow"},"content":"        } catch (DukeException DukeEx){","lastModifiedDate":"2023-09-16"},{"lineNumber":234,"author":{"gitId":"000verflow"},"content":"            System.out.println(DukeEx);","lastModifiedDate":"2023-09-16"},{"lineNumber":235,"author":{"gitId":"000verflow"},"content":"            return;","lastModifiedDate":"2023-09-16"},{"lineNumber":236,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":237,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":238,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"000verflow"},"content":"        System.out.println(\"Hello! I\u0027m the top G \" + CHATBOTNAME);","lastModifiedDate":"2023-09-10"},{"lineNumber":240,"author":{"gitId":"000verflow"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-10"},{"lineNumber":241,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":242,"author":{"gitId":"000verflow"},"content":"        Scanner myScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-10"},{"lineNumber":243,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":244,"author":{"gitId":"000verflow"},"content":"        while (true) {","lastModifiedDate":"2023-09-10"},{"lineNumber":245,"author":{"gitId":"000verflow"},"content":"            System.out.print(\"\u003e \");","lastModifiedDate":"2023-09-10"},{"lineNumber":246,"author":{"gitId":"000verflow"},"content":"            String commandGiven \u003d myScanner.nextLine();","lastModifiedDate":"2023-09-10"},{"lineNumber":247,"author":{"gitId":"000verflow"},"content":"            String[] arguments \u003d commandGiven.split(\"\\\\s+\"); // split by space","lastModifiedDate":"2023-09-10"},{"lineNumber":248,"author":{"gitId":"000verflow"},"content":"            String actionCommand \u003d arguments[FIRST_INDEX];","lastModifiedDate":"2023-09-10"},{"lineNumber":249,"author":{"gitId":"000verflow"},"content":"            actionCommand \u003d actionCommand.toLowerCase(); // make sure all same case to account for typing error","lastModifiedDate":"2023-09-10"},{"lineNumber":250,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":251,"author":{"gitId":"000verflow"},"content":"            if (actionCommand.equals(\"bye\")){","lastModifiedDate":"2023-09-10"},{"lineNumber":252,"author":{"gitId":"000verflow"},"content":"                break;","lastModifiedDate":"2023-08-19"},{"lineNumber":253,"author":{"gitId":"000verflow"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":254,"author":{"gitId":"000verflow"},"content":"            try {","lastModifiedDate":"2023-09-10"},{"lineNumber":255,"author":{"gitId":"000verflow"},"content":"                handleCommandInLoop(arguments, actionCommand); // calls respective functions based on command","lastModifiedDate":"2023-09-16"},{"lineNumber":256,"author":{"gitId":"000verflow"},"content":"                refreshSavedList(); // update saved file with the new task list","lastModifiedDate":"2023-09-16"},{"lineNumber":257,"author":{"gitId":"000verflow"},"content":"            } catch (DukeException dukeEx) { // Invalid command/not supported","lastModifiedDate":"2023-09-10"},{"lineNumber":258,"author":{"gitId":"000verflow"},"content":"                System.out.println(dukeEx);","lastModifiedDate":"2023-09-16"},{"lineNumber":259,"author":{"gitId":"000verflow"},"content":"            } catch (IOException IOEx) {","lastModifiedDate":"2023-09-16"},{"lineNumber":260,"author":{"gitId":"000verflow"},"content":"                System.out.println(\"Unable to create file @ \" + DATAPATH);","lastModifiedDate":"2023-09-16"},{"lineNumber":261,"author":{"gitId":"000verflow"},"content":"                return;","lastModifiedDate":"2023-09-16"},{"lineNumber":262,"author":{"gitId":"000verflow"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":263,"author":{"gitId":"000verflow"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":264,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":265,"author":{"gitId":"000verflow"},"content":"        System.out.println(\"Bye, hope to see you again soon!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":266,"author":{"gitId":"000verflow"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":269,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-18"},{"lineNumber":270,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-18"}],"authorContributionMap":{"000verflow":267,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"000verflow"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"000verflow"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"000verflow"},"content":"    protected String errorMessage;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"000verflow"},"content":"    protected static String LINE_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"000verflow"},"content":"    public DukeException(String errorMessage){","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"000verflow"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"000verflow"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"000verflow"},"content":"    public String toString(){","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"000verflow"},"content":"        return String.format(\"%s\\n%s\\n%s\",LINE_DIVIDER, errorMessage, LINE_DIVIDER );","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"000verflow"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"000verflow":13}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"000verflow"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"000verflow"},"content":"public class Event extends Task{","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"000verflow"},"content":"    protected String start;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"000verflow"},"content":"    protected String end;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"000verflow"},"content":"    public Event(String description, String start, String end){","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"000verflow"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"000verflow"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"000verflow"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"000verflow"},"content":"        this.taskType \u003d \"E\";","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"000verflow"},"content":"    public String getStart(){","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"000verflow"},"content":"        return this.start;","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"000verflow"},"content":"    public String getEnd(){","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"000verflow"},"content":"        return this.end;","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"000verflow"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"000verflow"},"content":"    public String toString(){","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"000verflow"},"content":"        return String.format(\"[%s]%s (from: %s to: %s)\", this.taskType, super.toString(), start, end);","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"000verflow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"000verflow":26}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"000verflow"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"000verflow"},"content":"public class Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"000verflow"},"content":"    protected String description;","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"000verflow"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"000verflow"},"content":"    protected String taskType;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"000verflow"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"000verflow"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"000verflow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"000verflow"},"content":"    public void markAsDone(){","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"000verflow"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"000verflow"},"content":"    public void markAsUndone(){","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"000verflow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"000verflow"},"content":"    public boolean getCompletionStatus(){","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"000verflow"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"000verflow"},"content":"    public String getTaskType(){","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"000verflow"},"content":"        return this.taskType;","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"000verflow"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"000verflow"},"content":"    public String toString(){","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"000verflow"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description; // mark done task with X","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"000verflow"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"000verflow":34}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"000verflow"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"000verflow"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"000verflow"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"000verflow"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"000verflow"},"content":"        this.taskType \u003d \"T\";","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"000verflow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"000verflow"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"000verflow"},"content":"    public String toString(){","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"000verflow"},"content":"        return String.format(\"[%s]%s\", this.taskType, super.toString());","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"000verflow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"000verflow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"000verflow":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"000verflow"},"content":"asdf","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"000verflow"},"content":"mark 1","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"000verflow"},"content":"unmark 1","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"000verflow"},"content":"todo","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"000verflow"},"content":"deadline 1234","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"000verflow"},"content":"event 1234 /from","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"000verflow"},"content":"todo borrow book","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"000verflow"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"000verflow"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"000verflow"},"content":"mark 1","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"000verflow"},"content":"list","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"000verflow"},"content":"unmark 1","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"000verflow"},"content":"list","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"000verflow"},"content":"bye","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"000verflow":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"000verflow"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"000verflow":1,"-":20}}]
